{
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "token": {
          "originalName": "token",
          "camelCase": {
            "unsafeName": "token",
            "safeName": "token"
          },
          "snakeCase": {
            "unsafeName": "token",
            "safeName": "token"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOKEN",
            "safeName": "TOKEN"
          },
          "pascalCase": {
            "unsafeName": "Token",
            "safeName": "Token"
          }
        },
        "docs": "Authorization header, we support the bearer authentication scheme (see: RFC 6750)",
        "type": "bearer"
      }
    ]
  },
  "selfHosted": false,
  "types": {
    "ActionBlockEditableAttributes": {
      "name": {
        "typeId": "ActionBlockEditableAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ActionBlockEditableAttributes",
          "camelCase": {
            "unsafeName": "actionBlockEditableAttributes",
            "safeName": "actionBlockEditableAttributes"
          },
          "snakeCase": {
            "unsafeName": "action_block_editable_attributes",
            "safeName": "action_block_editable_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "ACTION_BLOCK_EDITABLE_ATTRIBUTES",
            "safeName": "ACTION_BLOCK_EDITABLE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ActionBlockEditableAttributes",
            "safeName": "ActionBlockEditableAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockEditableAttributes_example_autogenerated": {}
        }
      }
    },
    "ActionBlockEditable": {
      "name": {
        "typeId": "ActionBlockEditable",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ActionBlockEditable",
          "camelCase": {
            "unsafeName": "actionBlockEditable",
            "safeName": "actionBlockEditable"
          },
          "snakeCase": {
            "unsafeName": "action_block_editable",
            "safeName": "action_block_editable"
          },
          "screamingSnakeCase": {
            "unsafeName": "ACTION_BLOCK_EDITABLE",
            "safeName": "ACTION_BLOCK_EDITABLE"
          },
          "pascalCase": {
            "unsafeName": "ActionBlockEditable",
            "safeName": "ActionBlockEditable"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a more descriptive name for the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockEditableName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this action represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockEditableDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ActionBlockEditableAttributes",
                    "camelCase": {
                      "unsafeName": "actionBlockEditableAttributes",
                      "safeName": "actionBlockEditableAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "action_block_editable_attributes",
                      "safeName": "action_block_editable_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ACTION_BLOCK_EDITABLE_ATTRIBUTES",
                      "safeName": "ACTION_BLOCK_EDITABLE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ActionBlockEditableAttributes",
                      "safeName": "ActionBlockEditableAttributes"
                    }
                  },
                  "typeId": "ActionBlockEditableAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockEditableAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockEditable_example_autogenerated": {}
        }
      }
    },
    "ActionBlockReadAttributes": {
      "name": {
        "typeId": "ActionBlockReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ActionBlockReadAttributes",
          "camelCase": {
            "unsafeName": "actionBlockReadAttributes",
            "safeName": "actionBlockReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "action_block_read_attributes",
            "safeName": "action_block_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "ACTION_BLOCK_READ_ATTRIBUTES",
            "safeName": "ACTION_BLOCK_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ActionBlockReadAttributes",
            "safeName": "ActionBlockReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ActionBlockRead": {
      "name": {
        "typeId": "ActionBlockRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ActionBlockRead",
          "camelCase": {
            "unsafeName": "actionBlockRead",
            "safeName": "actionBlockRead"
          },
          "snakeCase": {
            "unsafeName": "action_block_read",
            "safeName": "action_block_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "ACTION_BLOCK_READ",
            "safeName": "ACTION_BLOCK_READ"
          },
          "pascalCase": {
            "unsafeName": "ActionBlockRead",
            "safeName": "ActionBlockRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a more descriptive name for the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this action represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ActionBlockReadAttributes",
                    "camelCase": {
                      "unsafeName": "actionBlockReadAttributes",
                      "safeName": "actionBlockReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "action_block_read_attributes",
                      "safeName": "action_block_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ACTION_BLOCK_READ_ATTRIBUTES",
                      "safeName": "ACTION_BLOCK_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ActionBlockReadAttributes",
                      "safeName": "ActionBlockReadAttributes"
                    }
                  },
                  "typeId": "ActionBlockReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "action key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ActionBlockReadKey_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ActionBlockRead_example_autogenerated": {
            "id": "foo"
          }
        }
      }
    },
    "AddRolePermissions": {
      "name": {
        "typeId": "AddRolePermissions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AddRolePermissions",
          "camelCase": {
            "unsafeName": "addRolePermissions",
            "safeName": "addRolePermissions"
          },
          "snakeCase": {
            "unsafeName": "add_role_permissions",
            "safeName": "add_role_permissions"
          },
          "screamingSnakeCase": {
            "unsafeName": "ADD_ROLE_PERMISSIONS",
            "safeName": "ADD_ROLE_PERMISSIONS"
          },
          "pascalCase": {
            "unsafeName": "AddRolePermissions",
            "safeName": "AddRolePermissions"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of permissions to assign to the role. If a permission is already granted to the role it is skipped. Each permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AddRolePermissionsPermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "AddRolePermissions_example_0": {
            "permissions": [
              "document:write"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "AttributeBlockEditable": {
      "name": {
        "typeId": "AttributeBlockEditable",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AttributeBlockEditable",
          "camelCase": {
            "unsafeName": "attributeBlockEditable",
            "safeName": "attributeBlockEditable"
          },
          "snakeCase": {
            "unsafeName": "attribute_block_editable",
            "safeName": "attribute_block_editable"
          },
          "screamingSnakeCase": {
            "unsafeName": "ATTRIBUTE_BLOCK_EDITABLE",
            "safeName": "ATTRIBUTE_BLOCK_EDITABLE"
          },
          "pascalCase": {
            "unsafeName": "AttributeBlockEditable",
            "safeName": "AttributeBlockEditable"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AttributeType",
                "camelCase": {
                  "unsafeName": "attributeType",
                  "safeName": "attributeType"
                },
                "snakeCase": {
                  "unsafeName": "attribute_type",
                  "safeName": "attribute_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_TYPE",
                  "safeName": "ATTRIBUTE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "AttributeType",
                  "safeName": "AttributeType"
                }
              },
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what data this attribute will store",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockEditableDescription_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AttributeBlockEditable_example_autogenerated": {
            "type": "bool"
          }
        }
      }
    },
    "AttributeBlockRead": {
      "name": {
        "typeId": "AttributeBlockRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AttributeBlockRead",
          "camelCase": {
            "unsafeName": "attributeBlockRead",
            "safeName": "attributeBlockRead"
          },
          "snakeCase": {
            "unsafeName": "attribute_block_read",
            "safeName": "attribute_block_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "ATTRIBUTE_BLOCK_READ",
            "safeName": "ATTRIBUTE_BLOCK_READ"
          },
          "pascalCase": {
            "unsafeName": "AttributeBlockRead",
            "safeName": "AttributeBlockRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AttributeType",
                "camelCase": {
                  "unsafeName": "attributeType",
                  "safeName": "attributeType"
                },
                "snakeCase": {
                  "unsafeName": "attribute_type",
                  "safeName": "attribute_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_TYPE",
                  "safeName": "ATTRIBUTE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "AttributeType",
                  "safeName": "AttributeType"
                }
              },
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what data this attribute will store",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the attribute",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "action key",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AttributeBlockReadKey_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AttributeBlockRead_example_autogenerated": {
            "type": "bool",
            "id": "foo"
          }
        }
      }
    },
    "AttributeType": {
      "name": {
        "typeId": "AttributeType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AttributeType",
          "camelCase": {
            "unsafeName": "attributeType",
            "safeName": "attributeType"
          },
          "snakeCase": {
            "unsafeName": "attribute_type",
            "safeName": "attribute_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "ATTRIBUTE_TYPE",
            "safeName": "ATTRIBUTE_TYPE"
          },
          "pascalCase": {
            "unsafeName": "AttributeType",
            "safeName": "AttributeType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "bool",
                "camelCase": {
                  "unsafeName": "bool",
                  "safeName": "bool"
                },
                "snakeCase": {
                  "unsafeName": "bool",
                  "safeName": "bool"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BOOL",
                  "safeName": "BOOL"
                },
                "pascalCase": {
                  "unsafeName": "Bool",
                  "safeName": "Bool"
                }
              },
              "wireValue": "bool"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "number",
                "camelCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "snakeCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUMBER",
                  "safeName": "NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "Number",
                  "safeName": "Number"
                }
              },
              "wireValue": "number"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "string",
                "camelCase": {
                  "unsafeName": "string",
                  "safeName": "string_"
                },
                "snakeCase": {
                  "unsafeName": "string",
                  "safeName": "string_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STRING",
                  "safeName": "STRING"
                },
                "pascalCase": {
                  "unsafeName": "String",
                  "safeName": "String"
                }
              },
              "wireValue": "string"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "time",
                "camelCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "snakeCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME",
                  "safeName": "TIME"
                },
                "pascalCase": {
                  "unsafeName": "Time",
                  "safeName": "Time"
                }
              },
              "wireValue": "time"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "array",
                "camelCase": {
                  "unsafeName": "array",
                  "safeName": "array"
                },
                "snakeCase": {
                  "unsafeName": "array",
                  "safeName": "array"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ARRAY",
                  "safeName": "ARRAY"
                },
                "pascalCase": {
                  "unsafeName": "Array",
                  "safeName": "Array"
                }
              },
              "wireValue": "array"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "json",
                "camelCase": {
                  "unsafeName": "json",
                  "safeName": "json"
                },
                "snakeCase": {
                  "unsafeName": "json",
                  "safeName": "json"
                },
                "screamingSnakeCase": {
                  "unsafeName": "JSON",
                  "safeName": "JSON"
                },
                "pascalCase": {
                  "unsafeName": "Json",
                  "safeName": "Json"
                }
              },
              "wireValue": "json"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "supported attribute primitives",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AttributeType_example_autogenerated": "bool"
        }
      }
    },
    "BulkRoleAssignmentReport": {
      "name": {
        "typeId": "BulkRoleAssignmentReport",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "BulkRoleAssignmentReport",
          "camelCase": {
            "unsafeName": "bulkRoleAssignmentReport",
            "safeName": "bulkRoleAssignmentReport"
          },
          "snakeCase": {
            "unsafeName": "bulk_role_assignment_report",
            "safeName": "bulk_role_assignment_report"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_ROLE_ASSIGNMENT_REPORT",
            "safeName": "BULK_ROLE_ASSIGNMENT_REPORT"
          },
          "pascalCase": {
            "unsafeName": "BulkRoleAssignmentReport",
            "safeName": "BulkRoleAssignmentReport"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "assignments_created",
                "camelCase": {
                  "unsafeName": "assignmentsCreated",
                  "safeName": "assignmentsCreated"
                },
                "snakeCase": {
                  "unsafeName": "assignments_created",
                  "safeName": "assignments_created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSIGNMENTS_CREATED",
                  "safeName": "ASSIGNMENTS_CREATED"
                },
                "pascalCase": {
                  "unsafeName": "AssignmentsCreated",
                  "safeName": "AssignmentsCreated"
                }
              },
              "wireValue": "assignments_created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BulkRoleAssignmentReportAssignmentsCreated_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BulkRoleAssignmentReport_example_autogenerated": {}
        }
      }
    },
    "BulkRoleUnAssignmentReport": {
      "name": {
        "typeId": "BulkRoleUnAssignmentReport",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "BulkRoleUnAssignmentReport",
          "camelCase": {
            "unsafeName": "bulkRoleUnAssignmentReport",
            "safeName": "bulkRoleUnAssignmentReport"
          },
          "snakeCase": {
            "unsafeName": "bulk_role_un_assignment_report",
            "safeName": "bulk_role_un_assignment_report"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_ROLE_UN_ASSIGNMENT_REPORT",
            "safeName": "BULK_ROLE_UN_ASSIGNMENT_REPORT"
          },
          "pascalCase": {
            "unsafeName": "BulkRoleUnAssignmentReport",
            "safeName": "BulkRoleUnAssignmentReport"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "assignments_removed",
                "camelCase": {
                  "unsafeName": "assignmentsRemoved",
                  "safeName": "assignmentsRemoved"
                },
                "snakeCase": {
                  "unsafeName": "assignments_removed",
                  "safeName": "assignments_removed"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSIGNMENTS_REMOVED",
                  "safeName": "ASSIGNMENTS_REMOVED"
                },
                "pascalCase": {
                  "unsafeName": "AssignmentsRemoved",
                  "safeName": "AssignmentsRemoved"
                }
              },
              "wireValue": "assignments_removed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BulkRoleUnAssignmentReportAssignmentsRemoved_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BulkRoleUnAssignmentReport_example_autogenerated": {}
        }
      }
    },
    "ConditionSetCreateResourceId": {
      "name": {
        "typeId": "ConditionSetCreateResourceId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetCreateResourceId",
          "camelCase": {
            "unsafeName": "conditionSetCreateResourceId",
            "safeName": "conditionSetCreateResourceId"
          },
          "snakeCase": {
            "unsafeName": "condition_set_create_resource_id",
            "safeName": "condition_set_create_resource_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_CREATE_RESOURCE_ID",
            "safeName": "CONDITION_SET_CREATE_RESOURCE_ID"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetCreateResourceId",
            "safeName": "ConditionSetCreateResourceId"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "For ResourceSets, the id of the base resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetCreateResourceId_example_autogenerated": "foo"
        }
      }
    },
    "ConditionSetCreateConditions": {
      "name": {
        "typeId": "ConditionSetCreateConditions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetCreateConditions",
          "camelCase": {
            "unsafeName": "conditionSetCreateConditions",
            "safeName": "conditionSetCreateConditions"
          },
          "snakeCase": {
            "unsafeName": "condition_set_create_conditions",
            "safeName": "condition_set_create_conditions"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_CREATE_CONDITIONS",
            "safeName": "CONDITION_SET_CREATE_CONDITIONS"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetCreateConditions",
            "safeName": "ConditionSetCreateConditions"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetCreateConditions_example_autogenerated": {}
        }
      }
    },
    "ConditionSetCreateParentId": {
      "name": {
        "typeId": "ConditionSetCreateParentId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetCreateParentId",
          "camelCase": {
            "unsafeName": "conditionSetCreateParentId",
            "safeName": "conditionSetCreateParentId"
          },
          "snakeCase": {
            "unsafeName": "condition_set_create_parent_id",
            "safeName": "condition_set_create_parent_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_CREATE_PARENT_ID",
            "safeName": "CONDITION_SET_CREATE_PARENT_ID"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetCreateParentId",
            "safeName": "ConditionSetCreateParentId"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Parent Condition Set",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetCreateParentId_example_autogenerated": "foo"
        }
      }
    },
    "ConditionSetCreate": {
      "name": {
        "typeId": "ConditionSetCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetCreate",
          "camelCase": {
            "unsafeName": "conditionSetCreate",
            "safeName": "conditionSetCreate"
          },
          "snakeCase": {
            "unsafeName": "condition_set_create",
            "safeName": "condition_set_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_CREATE",
            "safeName": "CONDITION_SET_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetCreate",
            "safeName": "ConditionSetCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1,
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetType",
                    "camelCase": {
                      "unsafeName": "conditionSetType",
                      "safeName": "conditionSetType"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_type",
                      "safeName": "condition_set_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_TYPE",
                      "safeName": "CONDITION_SET_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetType",
                      "safeName": "ConditionSetType"
                    }
                  },
                  "typeId": "ConditionSetType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the type of the set: UserSet or ResourceSet",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "autogenerated",
                "camelCase": {
                  "unsafeName": "autogenerated",
                  "safeName": "autogenerated"
                },
                "snakeCase": {
                  "unsafeName": "autogenerated",
                  "safeName": "autogenerated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTOGENERATED",
                  "safeName": "AUTOGENERATED"
                },
                "pascalCase": {
                  "unsafeName": "Autogenerated",
                  "safeName": "Autogenerated"
                }
              },
              "wireValue": "autogenerated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "whether the set was autogenerated by the system.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateAutogenerated_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "wireValue": "resource_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetCreateResourceId",
                    "camelCase": {
                      "unsafeName": "conditionSetCreateResourceId",
                      "safeName": "conditionSetCreateResourceId"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_create_resource_id",
                      "safeName": "condition_set_create_resource_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_CREATE_RESOURCE_ID",
                      "safeName": "CONDITION_SET_CREATE_RESOURCE_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetCreateResourceId",
                      "safeName": "ConditionSetCreateResourceId"
                    }
                  },
                  "typeId": "ConditionSetCreateResourceId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For ResourceSets, the id of the base resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateResourceId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "conditions",
                "camelCase": {
                  "unsafeName": "conditions",
                  "safeName": "conditions"
                },
                "snakeCase": {
                  "unsafeName": "conditions",
                  "safeName": "conditions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITIONS",
                  "safeName": "CONDITIONS"
                },
                "pascalCase": {
                  "unsafeName": "Conditions",
                  "safeName": "Conditions"
                }
              },
              "wireValue": "conditions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetCreateConditions",
                    "camelCase": {
                      "unsafeName": "conditionSetCreateConditions",
                      "safeName": "conditionSetCreateConditions"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_create_conditions",
                      "safeName": "condition_set_create_conditions"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_CREATE_CONDITIONS",
                      "safeName": "CONDITION_SET_CREATE_CONDITIONS"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetCreateConditions",
                      "safeName": "ConditionSetCreateConditions"
                    }
                  },
                  "typeId": "ConditionSetCreateConditions",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateConditions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parent_id",
                "camelCase": {
                  "unsafeName": "parentId",
                  "safeName": "parentId"
                },
                "snakeCase": {
                  "unsafeName": "parent_id",
                  "safeName": "parent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARENT_ID",
                  "safeName": "PARENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ParentId",
                  "safeName": "ParentId"
                }
              },
              "wireValue": "parent_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetCreateParentId",
                    "camelCase": {
                      "unsafeName": "conditionSetCreateParentId",
                      "safeName": "conditionSetCreateParentId"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_create_parent_id",
                      "safeName": "condition_set_create_parent_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_CREATE_PARENT_ID",
                      "safeName": "CONDITION_SET_CREATE_PARENT_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetCreateParentId",
                      "safeName": "ConditionSetCreateParentId"
                    }
                  },
                  "typeId": "ConditionSetCreateParentId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Parent Condition Set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetCreateParentId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetCreate_example_0": {
            "key": "na_based_employees",
            "type": "userset",
            "name": "US or Canada based employees",
            "conditions": {
              "allOf": [
                {
                  "user.role": {
                    "equals": "employee"
                  }
                },
                {
                  "user.location": {
                    "in": [
                      "US",
                      "Canada"
                    ]
                  }
                }
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetReadResourceId": {
      "name": {
        "typeId": "ConditionSetReadResourceId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetReadResourceId",
          "camelCase": {
            "unsafeName": "conditionSetReadResourceId",
            "safeName": "conditionSetReadResourceId"
          },
          "snakeCase": {
            "unsafeName": "condition_set_read_resource_id",
            "safeName": "condition_set_read_resource_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_READ_RESOURCE_ID",
            "safeName": "CONDITION_SET_READ_RESOURCE_ID"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetReadResourceId",
            "safeName": "ConditionSetReadResourceId"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "For ResourceSets, the id of the base resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetReadResourceId_example_autogenerated": "foo"
        }
      }
    },
    "ConditionSetReadConditions": {
      "name": {
        "typeId": "ConditionSetReadConditions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetReadConditions",
          "camelCase": {
            "unsafeName": "conditionSetReadConditions",
            "safeName": "conditionSetReadConditions"
          },
          "snakeCase": {
            "unsafeName": "condition_set_read_conditions",
            "safeName": "condition_set_read_conditions"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_READ_CONDITIONS",
            "safeName": "CONDITION_SET_READ_CONDITIONS"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetReadConditions",
            "safeName": "ConditionSetReadConditions"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetReadConditions_example_autogenerated": {}
        }
      }
    },
    "ConditionSetReadParentId": {
      "name": {
        "typeId": "ConditionSetReadParentId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetReadParentId",
          "camelCase": {
            "unsafeName": "conditionSetReadParentId",
            "safeName": "conditionSetReadParentId"
          },
          "snakeCase": {
            "unsafeName": "condition_set_read_parent_id",
            "safeName": "condition_set_read_parent_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_READ_PARENT_ID",
            "safeName": "CONDITION_SET_READ_PARENT_ID"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetReadParentId",
            "safeName": "ConditionSetReadParentId"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Parent Condition Set",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetReadParentId_example_autogenerated": "foo"
        }
      }
    },
    "ConditionSetRead": {
      "name": {
        "typeId": "ConditionSetRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetRead",
          "camelCase": {
            "unsafeName": "conditionSetRead",
            "safeName": "conditionSetRead"
          },
          "snakeCase": {
            "unsafeName": "condition_set_read",
            "safeName": "condition_set_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_READ",
            "safeName": "CONDITION_SET_READ"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetRead",
            "safeName": "ConditionSetRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the condition set. The key will be used as the generated rego rule name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetType",
                    "camelCase": {
                      "unsafeName": "conditionSetType",
                      "safeName": "conditionSetType"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_type",
                      "safeName": "condition_set_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_TYPE",
                      "safeName": "CONDITION_SET_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetType",
                      "safeName": "ConditionSetType"
                    }
                  },
                  "typeId": "ConditionSetType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the type of the set: UserSet or ResourceSet",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "autogenerated",
                "camelCase": {
                  "unsafeName": "autogenerated",
                  "safeName": "autogenerated"
                },
                "snakeCase": {
                  "unsafeName": "autogenerated",
                  "safeName": "autogenerated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTOGENERATED",
                  "safeName": "AUTOGENERATED"
                },
                "pascalCase": {
                  "unsafeName": "Autogenerated",
                  "safeName": "Autogenerated"
                }
              },
              "wireValue": "autogenerated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "whether the set was autogenerated by the system.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadAutogenerated_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "wireValue": "resource_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetReadResourceId",
                    "camelCase": {
                      "unsafeName": "conditionSetReadResourceId",
                      "safeName": "conditionSetReadResourceId"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_read_resource_id",
                      "safeName": "condition_set_read_resource_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_READ_RESOURCE_ID",
                      "safeName": "CONDITION_SET_READ_RESOURCE_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetReadResourceId",
                      "safeName": "ConditionSetReadResourceId"
                    }
                  },
                  "typeId": "ConditionSetReadResourceId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For ResourceSets, the id of the base resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadResourceId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the condition set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the condition set belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the condition set belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the condition set belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource",
                "camelCase": {
                  "unsafeName": "resource",
                  "safeName": "resource"
                },
                "snakeCase": {
                  "unsafeName": "resource",
                  "safeName": "resource"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE",
                  "safeName": "RESOURCE"
                },
                "pascalCase": {
                  "unsafeName": "Resource",
                  "safeName": "Resource"
                }
              },
              "wireValue": "resource"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRead",
                    "camelCase": {
                      "unsafeName": "resourceRead",
                      "safeName": "resourceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_read",
                      "safeName": "resource_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_READ",
                      "safeName": "RESOURCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRead",
                      "safeName": "ResourceRead"
                    }
                  },
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "conditions",
                "camelCase": {
                  "unsafeName": "conditions",
                  "safeName": "conditions"
                },
                "snakeCase": {
                  "unsafeName": "conditions",
                  "safeName": "conditions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITIONS",
                  "safeName": "CONDITIONS"
                },
                "pascalCase": {
                  "unsafeName": "Conditions",
                  "safeName": "Conditions"
                }
              },
              "wireValue": "conditions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetReadConditions",
                    "camelCase": {
                      "unsafeName": "conditionSetReadConditions",
                      "safeName": "conditionSetReadConditions"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_read_conditions",
                      "safeName": "condition_set_read_conditions"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_READ_CONDITIONS",
                      "safeName": "CONDITION_SET_READ_CONDITIONS"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetReadConditions",
                      "safeName": "ConditionSetReadConditions"
                    }
                  },
                  "typeId": "ConditionSetReadConditions",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadConditions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parent_id",
                "camelCase": {
                  "unsafeName": "parentId",
                  "safeName": "parentId"
                },
                "snakeCase": {
                  "unsafeName": "parent_id",
                  "safeName": "parent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARENT_ID",
                  "safeName": "PARENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ParentId",
                  "safeName": "ParentId"
                }
              },
              "wireValue": "parent_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetReadParentId",
                    "camelCase": {
                      "unsafeName": "conditionSetReadParentId",
                      "safeName": "conditionSetReadParentId"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_read_parent_id",
                      "safeName": "condition_set_read_parent_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_READ_PARENT_ID",
                      "safeName": "CONDITION_SET_READ_PARENT_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetReadParentId",
                      "safeName": "ConditionSetReadParentId"
                    }
                  },
                  "typeId": "ConditionSetReadParentId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Parent Condition Set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetReadParentId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRead_example_0": {
            "key": "na_based_employees",
            "type": "userset",
            "autogenerated": false,
            "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "name": "US or Canada based employees",
            "description": "All employees based in the US or Canada",
            "conditions": {
              "allOf": [
                {
                  "user.role": {
                    "equals": "employee"
                  }
                },
                {
                  "user.location": {
                    "in": [
                      "US",
                      "Canada"
                    ]
                  }
                }
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetRuleCreate": {
      "name": {
        "typeId": "ConditionSetRuleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetRuleCreate",
          "camelCase": {
            "unsafeName": "conditionSetRuleCreate",
            "safeName": "conditionSetRuleCreate"
          },
          "snakeCase": {
            "unsafeName": "condition_set_rule_create",
            "safeName": "condition_set_rule_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_RULE_CREATE",
            "safeName": "CONDITION_SET_RULE_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetRuleCreate",
            "safeName": "ConditionSetRuleCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "user_set",
                "camelCase": {
                  "unsafeName": "userSet",
                  "safeName": "userSet"
                },
                "snakeCase": {
                  "unsafeName": "user_set",
                  "safeName": "user_set"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_SET",
                  "safeName": "USER_SET"
                },
                "pascalCase": {
                  "unsafeName": "UserSet",
                  "safeName": "UserSet"
                }
              },
              "wireValue": "user_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The userset that will be given permission, i.e: all the users matching this rule will be given the specified permission",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateUserSet_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permission",
                "camelCase": {
                  "unsafeName": "permission",
                  "safeName": "permission"
                },
                "snakeCase": {
                  "unsafeName": "permission",
                  "safeName": "permission"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSION",
                  "safeName": "PERMISSION"
                },
                "pascalCase": {
                  "unsafeName": "Permission",
                  "safeName": "Permission"
                }
              },
              "wireValue": "permission"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The permission that will be granted to the userset *on* the resourceset. The permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreatePermission_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_set",
                "camelCase": {
                  "unsafeName": "resourceSet",
                  "safeName": "resourceSet"
                },
                "snakeCase": {
                  "unsafeName": "resource_set",
                  "safeName": "resource_set"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_SET",
                  "safeName": "RESOURCE_SET"
                },
                "pascalCase": {
                  "unsafeName": "ResourceSet",
                  "safeName": "ResourceSet"
                }
              },
              "wireValue": "resource_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The resourceset that represents the resources that are granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateResourceSet_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_role",
                "camelCase": {
                  "unsafeName": "isRole",
                  "safeName": "isRole"
                },
                "snakeCase": {
                  "unsafeName": "is_role",
                  "safeName": "is_role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_ROLE",
                  "safeName": "IS_ROLE"
                },
                "pascalCase": {
                  "unsafeName": "IsRole",
                  "safeName": "IsRole"
                }
              },
              "wireValue": "is_role"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the role's autogen user-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateIsRole_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_resource",
                "camelCase": {
                  "unsafeName": "isResource",
                  "safeName": "isResource"
                },
                "snakeCase": {
                  "unsafeName": "is_resource",
                  "safeName": "is_resource"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_RESOURCE",
                  "safeName": "IS_RESOURCE"
                },
                "pascalCase": {
                  "unsafeName": "IsResource",
                  "safeName": "IsResource"
                }
              },
              "wireValue": "is_resource"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the resource's autogen resource-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleCreateIsResource_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRuleCreate_example_0": {
            "user_set": "us_based_employees",
            "permission": "repository:clone",
            "resource_set": "private_repos"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetRuleRead": {
      "name": {
        "typeId": "ConditionSetRuleRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetRuleRead",
          "camelCase": {
            "unsafeName": "conditionSetRuleRead",
            "safeName": "conditionSetRuleRead"
          },
          "snakeCase": {
            "unsafeName": "condition_set_rule_read",
            "safeName": "condition_set_rule_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_RULE_READ",
            "safeName": "CONDITION_SET_RULE_READ"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetRuleRead",
            "safeName": "ConditionSetRuleRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the condition set rule",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify this condition set rule.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user_set",
                "camelCase": {
                  "unsafeName": "userSet",
                  "safeName": "userSet"
                },
                "snakeCase": {
                  "unsafeName": "user_set",
                  "safeName": "user_set"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_SET",
                  "safeName": "USER_SET"
                },
                "pascalCase": {
                  "unsafeName": "UserSet",
                  "safeName": "UserSet"
                }
              },
              "wireValue": "user_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the userset that is currently granted permissions, i.e: all the users matching this rule are granted the permission on the resourceset",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadUserSet_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permission",
                "camelCase": {
                  "unsafeName": "permission",
                  "safeName": "permission"
                },
                "snakeCase": {
                  "unsafeName": "permission",
                  "safeName": "permission"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSION",
                  "safeName": "PERMISSION"
                },
                "pascalCase": {
                  "unsafeName": "Permission",
                  "safeName": "Permission"
                }
              },
              "wireValue": "permission"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "a permission that is currently granted to the userset *on* the resourceset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadPermission_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_set",
                "camelCase": {
                  "unsafeName": "resourceSet",
                  "safeName": "resourceSet"
                },
                "snakeCase": {
                  "unsafeName": "resource_set",
                  "safeName": "resource_set"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_SET",
                  "safeName": "RESOURCE_SET"
                },
                "pascalCase": {
                  "unsafeName": "ResourceSet",
                  "safeName": "ResourceSet"
                }
              },
              "wireValue": "resource_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the resourceset that represents the resources that are currently granted for access, i.e: all the resources matching this rule can be accessed by the userset to perform the granted *permission*",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadResourceSet_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the condition set rule belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the condition set rule belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the condition set rule belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set rule was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the condition set rule was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRuleRead_example_0": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "key": "us_based_employees_can_repository_clone_private_repos",
            "user_set": "us_based_employees",
            "permission": "repository:clone",
            "resource_set": "private_repos",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:16:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetRuleRemove": {
      "name": {
        "typeId": "ConditionSetRuleRemove",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetRuleRemove",
          "camelCase": {
            "unsafeName": "conditionSetRuleRemove",
            "safeName": "conditionSetRuleRemove"
          },
          "snakeCase": {
            "unsafeName": "condition_set_rule_remove",
            "safeName": "condition_set_rule_remove"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_RULE_REMOVE",
            "safeName": "CONDITION_SET_RULE_REMOVE"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetRuleRemove",
            "safeName": "ConditionSetRuleRemove"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "user_set",
                "camelCase": {
                  "unsafeName": "userSet",
                  "safeName": "userSet"
                },
                "snakeCase": {
                  "unsafeName": "user_set",
                  "safeName": "user_set"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_SET",
                  "safeName": "USER_SET"
                },
                "pascalCase": {
                  "unsafeName": "UserSet",
                  "safeName": "UserSet"
                }
              },
              "wireValue": "user_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The userset that will be unassigned these permission, i.e: all the users matching this rule will lose the specified permission",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveUserSet_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permission",
                "camelCase": {
                  "unsafeName": "permission",
                  "safeName": "permission"
                },
                "snakeCase": {
                  "unsafeName": "permission",
                  "safeName": "permission"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSION",
                  "safeName": "PERMISSION"
                },
                "pascalCase": {
                  "unsafeName": "Permission",
                  "safeName": "Permission"
                }
              },
              "wireValue": "permission"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The permission that will be removed from the userset *on* the resourceset. The permission can be either a resource action id, or `{resource_key}:{action_key}`, i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemovePermission_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_set",
                "camelCase": {
                  "unsafeName": "resourceSet",
                  "safeName": "resourceSet"
                },
                "snakeCase": {
                  "unsafeName": "resource_set",
                  "safeName": "resource_set"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_SET",
                  "safeName": "RESOURCE_SET"
                },
                "pascalCase": {
                  "unsafeName": "ResourceSet",
                  "safeName": "ResourceSet"
                }
              },
              "wireValue": "resource_set"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The resourceset that represents the resources that are no longer granted for access, i.e: all the resources matching this rule can no longer be accessed by the userset, and will be revoked the specified *permission*",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveResourceSet_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_role",
                "camelCase": {
                  "unsafeName": "isRole",
                  "safeName": "isRole"
                },
                "snakeCase": {
                  "unsafeName": "is_role",
                  "safeName": "is_role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_ROLE",
                  "safeName": "IS_ROLE"
                },
                "pascalCase": {
                  "unsafeName": "IsRole",
                  "safeName": "IsRole"
                }
              },
              "wireValue": "is_role"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the role's autogen user-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveIsRole_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_resource",
                "camelCase": {
                  "unsafeName": "isResource",
                  "safeName": "isResource"
                },
                "snakeCase": {
                  "unsafeName": "is_resource",
                  "safeName": "is_resource"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_RESOURCE",
                  "safeName": "IS_RESOURCE"
                },
                "pascalCase": {
                  "unsafeName": "IsResource",
                  "safeName": "IsResource"
                }
              },
              "wireValue": "is_resource"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if True, will set the condition set rule to the resource's autogen resource-set.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetRuleRemoveIsResource_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetRuleRemove_example_0": {
            "user_set": "us_based_employees",
            "permission": "repository:clone",
            "resource_set": "private_repos"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ConditionSetType": {
      "name": {
        "typeId": "ConditionSetType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetType",
          "camelCase": {
            "unsafeName": "conditionSetType",
            "safeName": "conditionSetType"
          },
          "snakeCase": {
            "unsafeName": "condition_set_type",
            "safeName": "condition_set_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_TYPE",
            "safeName": "CONDITION_SET_TYPE"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetType",
            "safeName": "ConditionSetType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "userset",
                "camelCase": {
                  "unsafeName": "userset",
                  "safeName": "userset"
                },
                "snakeCase": {
                  "unsafeName": "userset",
                  "safeName": "userset"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USERSET",
                  "safeName": "USERSET"
                },
                "pascalCase": {
                  "unsafeName": "Userset",
                  "safeName": "Userset"
                }
              },
              "wireValue": "userset"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resourceset",
                "camelCase": {
                  "unsafeName": "resourceset",
                  "safeName": "resourceset"
                },
                "snakeCase": {
                  "unsafeName": "resourceset",
                  "safeName": "resourceset"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCESET",
                  "safeName": "RESOURCESET"
                },
                "pascalCase": {
                  "unsafeName": "Resourceset",
                  "safeName": "Resourceset"
                }
              },
              "wireValue": "resourceset"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetType_example_autogenerated": "userset"
        }
      }
    },
    "ConditionSetUpdateConditions": {
      "name": {
        "typeId": "ConditionSetUpdateConditions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetUpdateConditions",
          "camelCase": {
            "unsafeName": "conditionSetUpdateConditions",
            "safeName": "conditionSetUpdateConditions"
          },
          "snakeCase": {
            "unsafeName": "condition_set_update_conditions",
            "safeName": "condition_set_update_conditions"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_UPDATE_CONDITIONS",
            "safeName": "CONDITION_SET_UPDATE_CONDITIONS"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetUpdateConditions",
            "safeName": "ConditionSetUpdateConditions"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetUpdateConditions_example_autogenerated": {}
        }
      }
    },
    "ConditionSetUpdateParentId": {
      "name": {
        "typeId": "ConditionSetUpdateParentId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetUpdateParentId",
          "camelCase": {
            "unsafeName": "conditionSetUpdateParentId",
            "safeName": "conditionSetUpdateParentId"
          },
          "snakeCase": {
            "unsafeName": "condition_set_update_parent_id",
            "safeName": "condition_set_update_parent_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_UPDATE_PARENT_ID",
            "safeName": "CONDITION_SET_UPDATE_PARENT_ID"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetUpdateParentId",
            "safeName": "ConditionSetUpdateParentId"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Parent Condition Set",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetUpdateParentId_example_autogenerated": "foo"
        }
      }
    },
    "ConditionSetUpdate": {
      "name": {
        "typeId": "ConditionSetUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetUpdate",
          "camelCase": {
            "unsafeName": "conditionSetUpdate",
            "safeName": "conditionSetUpdate"
          },
          "snakeCase": {
            "unsafeName": "condition_set_update",
            "safeName": "condition_set_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_UPDATE",
            "safeName": "CONDITION_SET_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetUpdate",
            "safeName": "ConditionSetUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A descriptive name for the set, i.e: 'US based employees' or 'Users behind VPN'",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "conditions",
                "camelCase": {
                  "unsafeName": "conditions",
                  "safeName": "conditions"
                },
                "snakeCase": {
                  "unsafeName": "conditions",
                  "safeName": "conditions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITIONS",
                  "safeName": "CONDITIONS"
                },
                "pascalCase": {
                  "unsafeName": "Conditions",
                  "safeName": "Conditions"
                }
              },
              "wireValue": "conditions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetUpdateConditions",
                    "camelCase": {
                      "unsafeName": "conditionSetUpdateConditions",
                      "safeName": "conditionSetUpdateConditions"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_update_conditions",
                      "safeName": "condition_set_update_conditions"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_UPDATE_CONDITIONS",
                      "safeName": "CONDITION_SET_UPDATE_CONDITIONS"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetUpdateConditions",
                      "safeName": "ConditionSetUpdateConditions"
                    }
                  },
                  "typeId": "ConditionSetUpdateConditions",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a boolean expression that consists of multiple conditions, with and/or logic.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateConditions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parent_id",
                "camelCase": {
                  "unsafeName": "parentId",
                  "safeName": "parentId"
                },
                "snakeCase": {
                  "unsafeName": "parent_id",
                  "safeName": "parent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARENT_ID",
                  "safeName": "PARENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ParentId",
                  "safeName": "ParentId"
                }
              },
              "wireValue": "parent_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetUpdateParentId",
                    "camelCase": {
                      "unsafeName": "conditionSetUpdateParentId",
                      "safeName": "conditionSetUpdateParentId"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_update_parent_id",
                      "safeName": "condition_set_update_parent_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_UPDATE_PARENT_ID",
                      "safeName": "CONDITION_SET_UPDATE_PARENT_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetUpdateParentId",
                      "safeName": "ConditionSetUpdateParentId"
                    }
                  },
                  "typeId": "ConditionSetUpdateParentId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Parent Condition Set",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSetUpdateParentId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ConditionSetUpdate_example_0": {
            "name": "US based managers",
            "conditions": {
              "allOf": [
                {
                  "user.role": {
                    "equals": "manager"
                  }
                },
                {
                  "user.location": {
                    "in": [
                      "US"
                    ]
                  }
                }
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "EnvironmentCopyConflictStrategy": {
      "name": {
        "typeId": "EnvironmentCopyConflictStrategy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentCopyConflictStrategy",
          "camelCase": {
            "unsafeName": "environmentCopyConflictStrategy",
            "safeName": "environmentCopyConflictStrategy"
          },
          "snakeCase": {
            "unsafeName": "environment_copy_conflict_strategy",
            "safeName": "environment_copy_conflict_strategy"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_COPY_CONFLICT_STRATEGY",
            "safeName": "ENVIRONMENT_COPY_CONFLICT_STRATEGY"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentCopyConflictStrategy",
            "safeName": "EnvironmentCopyConflictStrategy"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "fail",
              "camelCase": {
                "unsafeName": "fail",
                "safeName": "fail"
              },
              "snakeCase": {
                "unsafeName": "fail",
                "safeName": "fail"
              },
              "screamingSnakeCase": {
                "unsafeName": "FAIL",
                "safeName": "FAIL"
              },
              "pascalCase": {
                "unsafeName": "Fail",
                "safeName": "Fail"
              }
            },
            "wireValue": "fail"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "fail",
                "camelCase": {
                  "unsafeName": "fail",
                  "safeName": "fail"
                },
                "snakeCase": {
                  "unsafeName": "fail",
                  "safeName": "fail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FAIL",
                  "safeName": "FAIL"
                },
                "pascalCase": {
                  "unsafeName": "Fail",
                  "safeName": "Fail"
                }
              },
              "wireValue": "fail"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "overwrite",
                "camelCase": {
                  "unsafeName": "overwrite",
                  "safeName": "overwrite"
                },
                "snakeCase": {
                  "unsafeName": "overwrite",
                  "safeName": "overwrite"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OVERWRITE",
                  "safeName": "OVERWRITE"
                },
                "pascalCase": {
                  "unsafeName": "Overwrite",
                  "safeName": "Overwrite"
                }
              },
              "wireValue": "overwrite"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Action to take when detecting a conflict when copying. Only applies to copying into an existing environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyConflictStrategy_example_autogenerated": "fail"
        }
      }
    },
    "EnvironmentCopy": {
      "name": {
        "typeId": "EnvironmentCopy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentCopy",
          "camelCase": {
            "unsafeName": "environmentCopy",
            "safeName": "environmentCopy"
          },
          "snakeCase": {
            "unsafeName": "environment_copy",
            "safeName": "environment_copy"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_COPY",
            "safeName": "ENVIRONMENT_COPY"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentCopy",
            "safeName": "EnvironmentCopy"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "target_env",
                "camelCase": {
                  "unsafeName": "targetEnv",
                  "safeName": "targetEnv"
                },
                "snakeCase": {
                  "unsafeName": "target_env",
                  "safeName": "target_env"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TARGET_ENV",
                  "safeName": "TARGET_ENV"
                },
                "pascalCase": {
                  "unsafeName": "TargetEnv",
                  "safeName": "TargetEnv"
                }
              },
              "wireValue": "target_env"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EnvironmentCopyTarget",
                "camelCase": {
                  "unsafeName": "environmentCopyTarget",
                  "safeName": "environmentCopyTarget"
                },
                "snakeCase": {
                  "unsafeName": "environment_copy_target",
                  "safeName": "environment_copy_target"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_COPY_TARGET",
                  "safeName": "ENVIRONMENT_COPY_TARGET"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentCopyTarget",
                  "safeName": "EnvironmentCopyTarget"
                }
              },
              "typeId": "EnvironmentCopyTarget",
              "inline": false,
              "type": "named"
            },
            "docs": "If copying a new environment, the environment configuration. If copying to an existing environment, the environment identifier",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "conflict_strategy",
                "camelCase": {
                  "unsafeName": "conflictStrategy",
                  "safeName": "conflictStrategy"
                },
                "snakeCase": {
                  "unsafeName": "conflict_strategy",
                  "safeName": "conflict_strategy"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFLICT_STRATEGY",
                  "safeName": "CONFLICT_STRATEGY"
                },
                "pascalCase": {
                  "unsafeName": "ConflictStrategy",
                  "safeName": "ConflictStrategy"
                }
              },
              "wireValue": "conflict_strategy"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCopyConflictStrategy",
                    "camelCase": {
                      "unsafeName": "environmentCopyConflictStrategy",
                      "safeName": "environmentCopyConflictStrategy"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_copy_conflict_strategy",
                      "safeName": "environment_copy_conflict_strategy"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_COPY_CONFLICT_STRATEGY",
                      "safeName": "ENVIRONMENT_COPY_CONFLICT_STRATEGY"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCopyConflictStrategy",
                      "safeName": "EnvironmentCopyConflictStrategy"
                    }
                  },
                  "typeId": "EnvironmentCopyConflictStrategy",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Action to take when detecting a conflict when copying. Only applies to copying into an existing environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyConflictStrategy_example_autogenerated": "fail"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "scope",
                "camelCase": {
                  "unsafeName": "scope",
                  "safeName": "scope"
                },
                "snakeCase": {
                  "unsafeName": "scope",
                  "safeName": "scope"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SCOPE",
                  "safeName": "SCOPE"
                },
                "pascalCase": {
                  "unsafeName": "Scope",
                  "safeName": "Scope"
                }
              },
              "wireValue": "scope"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCopyScope",
                    "camelCase": {
                      "unsafeName": "environmentCopyScope",
                      "safeName": "environmentCopyScope"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_copy_scope",
                      "safeName": "environment_copy_scope"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_COPY_SCOPE",
                      "safeName": "ENVIRONMENT_COPY_SCOPE"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCopyScope",
                      "safeName": "EnvironmentCopyScope"
                    }
                  },
                  "typeId": "EnvironmentCopyScope",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filters to include and exclude copied objects",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopy_example_autogenerated": {
            "target_env": {}
          }
        }
      }
    },
    "EnvironmentCopyScope": {
      "name": {
        "typeId": "EnvironmentCopyScope",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentCopyScope",
          "camelCase": {
            "unsafeName": "environmentCopyScope",
            "safeName": "environmentCopyScope"
          },
          "snakeCase": {
            "unsafeName": "environment_copy_scope",
            "safeName": "environment_copy_scope"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_COPY_SCOPE",
            "safeName": "ENVIRONMENT_COPY_SCOPE"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentCopyScope",
            "safeName": "EnvironmentCopyScope"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "resources",
                "camelCase": {
                  "unsafeName": "resources",
                  "safeName": "resources"
                },
                "snakeCase": {
                  "unsafeName": "resources",
                  "safeName": "resources"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCES",
                  "safeName": "RESOURCES"
                },
                "pascalCase": {
                  "unsafeName": "Resources",
                  "safeName": "Resources"
                }
              },
              "wireValue": "resources"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCopyScopeFilters",
                    "camelCase": {
                      "unsafeName": "environmentCopyScopeFilters",
                      "safeName": "environmentCopyScopeFilters"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_copy_scope_filters",
                      "safeName": "environment_copy_scope_filters"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_COPY_SCOPE_FILTERS",
                      "safeName": "ENVIRONMENT_COPY_SCOPE_FILTERS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCopyScopeFilters",
                      "safeName": "EnvironmentCopyScopeFilters"
                    }
                  },
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Resources to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "roles",
                "camelCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "snakeCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLES",
                  "safeName": "ROLES"
                },
                "pascalCase": {
                  "unsafeName": "Roles",
                  "safeName": "Roles"
                }
              },
              "wireValue": "roles"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCopyScopeFilters",
                    "camelCase": {
                      "unsafeName": "environmentCopyScopeFilters",
                      "safeName": "environmentCopyScopeFilters"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_copy_scope_filters",
                      "safeName": "environment_copy_scope_filters"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_COPY_SCOPE_FILTERS",
                      "safeName": "ENVIRONMENT_COPY_SCOPE_FILTERS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCopyScopeFilters",
                      "safeName": "EnvironmentCopyScopeFilters"
                    }
                  },
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Roles to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user_sets",
                "camelCase": {
                  "unsafeName": "userSets",
                  "safeName": "userSets"
                },
                "snakeCase": {
                  "unsafeName": "user_sets",
                  "safeName": "user_sets"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_SETS",
                  "safeName": "USER_SETS"
                },
                "pascalCase": {
                  "unsafeName": "UserSets",
                  "safeName": "UserSets"
                }
              },
              "wireValue": "user_sets"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCopyScopeFilters",
                    "camelCase": {
                      "unsafeName": "environmentCopyScopeFilters",
                      "safeName": "environmentCopyScopeFilters"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_copy_scope_filters",
                      "safeName": "environment_copy_scope_filters"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_COPY_SCOPE_FILTERS",
                      "safeName": "ENVIRONMENT_COPY_SCOPE_FILTERS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCopyScopeFilters",
                      "safeName": "EnvironmentCopyScopeFilters"
                    }
                  },
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "User sets to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_sets",
                "camelCase": {
                  "unsafeName": "resourceSets",
                  "safeName": "resourceSets"
                },
                "snakeCase": {
                  "unsafeName": "resource_sets",
                  "safeName": "resource_sets"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_SETS",
                  "safeName": "RESOURCE_SETS"
                },
                "pascalCase": {
                  "unsafeName": "ResourceSets",
                  "safeName": "ResourceSets"
                }
              },
              "wireValue": "resource_sets"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCopyScopeFilters",
                    "camelCase": {
                      "unsafeName": "environmentCopyScopeFilters",
                      "safeName": "environmentCopyScopeFilters"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_copy_scope_filters",
                      "safeName": "environment_copy_scope_filters"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_COPY_SCOPE_FILTERS",
                      "safeName": "ENVIRONMENT_COPY_SCOPE_FILTERS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCopyScopeFilters",
                      "safeName": "EnvironmentCopyScopeFilters"
                    }
                  },
                  "typeId": "EnvironmentCopyScopeFilters",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Resource sets to copy",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyScope_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCopyScopeFilters": {
      "name": {
        "typeId": "EnvironmentCopyScopeFilters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentCopyScopeFilters",
          "camelCase": {
            "unsafeName": "environmentCopyScopeFilters",
            "safeName": "environmentCopyScopeFilters"
          },
          "snakeCase": {
            "unsafeName": "environment_copy_scope_filters",
            "safeName": "environment_copy_scope_filters"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_COPY_SCOPE_FILTERS",
            "safeName": "ENVIRONMENT_COPY_SCOPE_FILTERS"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentCopyScopeFilters",
            "safeName": "EnvironmentCopyScopeFilters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "include",
                "camelCase": {
                  "unsafeName": "include",
                  "safeName": "include"
                },
                "snakeCase": {
                  "unsafeName": "include",
                  "safeName": "include"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INCLUDE",
                  "safeName": "INCLUDE"
                },
                "pascalCase": {
                  "unsafeName": "Include",
                  "safeName": "Include"
                }
              },
              "wireValue": "include"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Objects to include (use * as wildcard)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyScopeFiltersInclude_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "exclude",
                "camelCase": {
                  "unsafeName": "exclude",
                  "safeName": "exclude"
                },
                "snakeCase": {
                  "unsafeName": "exclude",
                  "safeName": "exclude"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXCLUDE",
                  "safeName": "EXCLUDE"
                },
                "pascalCase": {
                  "unsafeName": "Exclude",
                  "safeName": "Exclude"
                }
              },
              "wireValue": "exclude"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object to exclude (use * as wildcard)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyScopeFiltersExclude_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyScopeFilters_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCopyTarget": {
      "name": {
        "typeId": "EnvironmentCopyTarget",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentCopyTarget",
          "camelCase": {
            "unsafeName": "environmentCopyTarget",
            "safeName": "environmentCopyTarget"
          },
          "snakeCase": {
            "unsafeName": "environment_copy_target",
            "safeName": "environment_copy_target"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_COPY_TARGET",
            "safeName": "ENVIRONMENT_COPY_TARGET"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentCopyTarget",
            "safeName": "EnvironmentCopyTarget"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "existing",
                "camelCase": {
                  "unsafeName": "existing",
                  "safeName": "existing"
                },
                "snakeCase": {
                  "unsafeName": "existing",
                  "safeName": "existing"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXISTING",
                  "safeName": "EXISTING"
                },
                "pascalCase": {
                  "unsafeName": "Existing",
                  "safeName": "Existing"
                }
              },
              "wireValue": "existing"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Identifier of an existing environment to copy into",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCopyTargetExisting_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "new",
                "camelCase": {
                  "unsafeName": "new",
                  "safeName": "new_"
                },
                "snakeCase": {
                  "unsafeName": "new",
                  "safeName": "new_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NEW",
                  "safeName": "NEW"
                },
                "pascalCase": {
                  "unsafeName": "New",
                  "safeName": "New"
                }
              },
              "wireValue": "new"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCreate",
                    "camelCase": {
                      "unsafeName": "environmentCreate",
                      "safeName": "environmentCreate"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_create",
                      "safeName": "environment_create"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_CREATE",
                      "safeName": "ENVIRONMENT_CREATE"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCreate",
                      "safeName": "EnvironmentCreate"
                    }
                  },
                  "typeId": "EnvironmentCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Description of the environment to create. This environment must not already exist.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCopyTarget_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCreateSettings": {
      "name": {
        "typeId": "EnvironmentCreateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentCreateSettings",
          "camelCase": {
            "unsafeName": "environmentCreateSettings",
            "safeName": "environmentCreateSettings"
          },
          "snakeCase": {
            "unsafeName": "environment_create_settings",
            "safeName": "environment_create_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_CREATE_SETTINGS",
            "safeName": "ENVIRONMENT_CREATE_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentCreateSettings",
            "safeName": "EnvironmentCreateSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCreateSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentCreate": {
      "name": {
        "typeId": "EnvironmentCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentCreate",
          "camelCase": {
            "unsafeName": "environmentCreate",
            "safeName": "environmentCreate"
          },
          "snakeCase": {
            "unsafeName": "environment_create",
            "safeName": "environment_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_CREATE",
            "safeName": "ENVIRONMENT_CREATE"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentCreate",
            "safeName": "EnvironmentCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_branch_name",
                "camelCase": {
                  "unsafeName": "customBranchName",
                  "safeName": "customBranchName"
                },
                "snakeCase": {
                  "unsafeName": "custom_branch_name",
                  "safeName": "custom_branch_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_BRANCH_NAME",
                  "safeName": "CUSTOM_BRANCH_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CustomBranchName",
                  "safeName": "CustomBranchName"
                }
              },
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateCustomBranchName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "jwks",
                "camelCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "snakeCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "JWKS",
                  "safeName": "JWKS"
                },
                "pascalCase": {
                  "unsafeName": "Jwks",
                  "safeName": "Jwks"
                }
              },
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "JwksObj",
                    "camelCase": {
                      "unsafeName": "jwksObj",
                      "safeName": "jwksObj"
                    },
                    "snakeCase": {
                      "unsafeName": "jwks_obj",
                      "safeName": "jwks_obj"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "JWKS_OBJ",
                      "safeName": "JWKS_OBJ"
                    },
                    "pascalCase": {
                      "unsafeName": "JwksObj",
                      "safeName": "JwksObj"
                    }
                  },
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentCreateSettings",
                    "camelCase": {
                      "unsafeName": "environmentCreateSettings",
                      "safeName": "environmentCreateSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_create_settings",
                      "safeName": "environment_create_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_CREATE_SETTINGS",
                      "safeName": "ENVIRONMENT_CREATE_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentCreateSettings",
                      "safeName": "EnvironmentCreateSettings"
                    }
                  },
                  "typeId": "EnvironmentCreateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentCreateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentCreate_example_autogenerated": {
            "key": "foo",
            "name": "foo"
          }
        }
      }
    },
    "EnvironmentReadSettings": {
      "name": {
        "typeId": "EnvironmentReadSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentReadSettings",
          "camelCase": {
            "unsafeName": "environmentReadSettings",
            "safeName": "environmentReadSettings"
          },
          "snakeCase": {
            "unsafeName": "environment_read_settings",
            "safeName": "environment_read_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_READ_SETTINGS",
            "safeName": "ENVIRONMENT_READ_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentReadSettings",
            "safeName": "EnvironmentReadSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentReadSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentRead": {
      "name": {
        "typeId": "EnvironmentRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentRead",
          "camelCase": {
            "unsafeName": "environmentRead",
            "safeName": "environmentRead"
          },
          "snakeCase": {
            "unsafeName": "environment_read",
            "safeName": "environment_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_READ",
            "safeName": "ENVIRONMENT_READ"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentRead",
            "safeName": "EnvironmentRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_branch_name",
                "camelCase": {
                  "unsafeName": "customBranchName",
                  "safeName": "customBranchName"
                },
                "snakeCase": {
                  "unsafeName": "custom_branch_name",
                  "safeName": "custom_branch_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_BRANCH_NAME",
                  "safeName": "CUSTOM_BRANCH_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CustomBranchName",
                  "safeName": "CustomBranchName"
                }
              },
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadCustomBranchName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "jwks",
                "camelCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "snakeCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "JWKS",
                  "safeName": "JWKS"
                },
                "pascalCase": {
                  "unsafeName": "Jwks",
                  "safeName": "Jwks"
                }
              },
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "JwksObj",
                    "camelCase": {
                      "unsafeName": "jwksObj",
                      "safeName": "jwksObj"
                    },
                    "snakeCase": {
                      "unsafeName": "jwks_obj",
                      "safeName": "jwks_obj"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "JWKS_OBJ",
                      "safeName": "JWKS_OBJ"
                    },
                    "pascalCase": {
                      "unsafeName": "JwksObj",
                      "safeName": "JwksObj"
                    }
                  },
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentReadSettings",
                    "camelCase": {
                      "unsafeName": "environmentReadSettings",
                      "safeName": "environmentReadSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_read_settings",
                      "safeName": "environment_read_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_READ_SETTINGS",
                      "safeName": "ENVIRONMENT_READ_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentReadSettings",
                      "safeName": "EnvironmentReadSettings"
                    }
                  },
                  "typeId": "EnvironmentReadSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentReadSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentRead_example_autogenerated": {
            "key": "foo",
            "id": "foo",
            "organization_id": "foo",
            "project_id": "foo",
            "created_at": "foo",
            "updated_at": "foo",
            "name": "foo"
          }
        }
      }
    },
    "EnvironmentStatsSettings": {
      "name": {
        "typeId": "EnvironmentStatsSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentStatsSettings",
          "camelCase": {
            "unsafeName": "environmentStatsSettings",
            "safeName": "environmentStatsSettings"
          },
          "snakeCase": {
            "unsafeName": "environment_stats_settings",
            "safeName": "environment_stats_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_STATS_SETTINGS",
            "safeName": "ENVIRONMENT_STATS_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentStatsSettings",
            "safeName": "EnvironmentStatsSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentStatsSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentStats": {
      "name": {
        "typeId": "EnvironmentStats",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentStats",
          "camelCase": {
            "unsafeName": "environmentStats",
            "safeName": "environmentStats"
          },
          "snakeCase": {
            "unsafeName": "environment_stats",
            "safeName": "environment_stats"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_STATS",
            "safeName": "ENVIRONMENT_STATS"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentStats",
            "safeName": "EnvironmentStats"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the environment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the environment was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_branch_name",
                "camelCase": {
                  "unsafeName": "customBranchName",
                  "safeName": "customBranchName"
                },
                "snakeCase": {
                  "unsafeName": "custom_branch_name",
                  "safeName": "custom_branch_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_BRANCH_NAME",
                  "safeName": "CUSTOM_BRANCH_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CustomBranchName",
                  "safeName": "CustomBranchName"
                }
              },
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsCustomBranchName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "jwks",
                "camelCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "snakeCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "JWKS",
                  "safeName": "JWKS"
                },
                "pascalCase": {
                  "unsafeName": "Jwks",
                  "safeName": "Jwks"
                }
              },
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "JwksObj",
                    "camelCase": {
                      "unsafeName": "jwksObj",
                      "safeName": "jwksObj"
                    },
                    "snakeCase": {
                      "unsafeName": "jwks_obj",
                      "safeName": "jwks_obj"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "JWKS_OBJ",
                      "safeName": "JWKS_OBJ"
                    },
                    "pascalCase": {
                      "unsafeName": "JwksObj",
                      "safeName": "JwksObj"
                    }
                  },
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentStatsSettings",
                    "camelCase": {
                      "unsafeName": "environmentStatsSettings",
                      "safeName": "environmentStatsSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_stats_settings",
                      "safeName": "environment_stats_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_STATS_SETTINGS",
                      "safeName": "ENVIRONMENT_STATS_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentStatsSettings",
                      "safeName": "EnvironmentStatsSettings"
                    }
                  },
                  "typeId": "EnvironmentStatsSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pdp_configs",
                "camelCase": {
                  "unsafeName": "pdpConfigs",
                  "safeName": "pdpConfigs"
                },
                "snakeCase": {
                  "unsafeName": "pdp_configs",
                  "safeName": "pdp_configs"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PDP_CONFIGS",
                  "safeName": "PDP_CONFIGS"
                },
                "pascalCase": {
                  "unsafeName": "PdpConfigs",
                  "safeName": "PdpConfigs"
                }
              },
              "wireValue": "pdp_configs"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "PDPConfigRead",
                    "camelCase": {
                      "unsafeName": "pdpConfigRead",
                      "safeName": "pdpConfigRead"
                    },
                    "snakeCase": {
                      "unsafeName": "pdp_config_read",
                      "safeName": "pdp_config_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PDP_CONFIG_READ",
                      "safeName": "PDP_CONFIG_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "PdpConfigRead",
                      "safeName": "PdpConfigRead"
                    }
                  },
                  "typeId": "PDPConfigRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentStatsPdpConfigs_example_autogenerated": [
                  {
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "client_secret": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "stats",
                "camelCase": {
                  "unsafeName": "stats",
                  "safeName": "stats"
                },
                "snakeCase": {
                  "unsafeName": "stats",
                  "safeName": "stats"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATS",
                  "safeName": "STATS"
                },
                "pascalCase": {
                  "unsafeName": "Stats",
                  "safeName": "Stats"
                }
              },
              "wireValue": "stats"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Statistics",
                "camelCase": {
                  "unsafeName": "statistics",
                  "safeName": "statistics"
                },
                "snakeCase": {
                  "unsafeName": "statistics",
                  "safeName": "statistics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATISTICS",
                  "safeName": "STATISTICS"
                },
                "pascalCase": {
                  "unsafeName": "Statistics",
                  "safeName": "Statistics"
                }
              },
              "typeId": "Statistics",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentStats_example_autogenerated": {
            "key": "foo",
            "id": "foo",
            "organization_id": "foo",
            "project_id": "foo",
            "created_at": "foo",
            "updated_at": "foo",
            "name": "foo",
            "pdp_configs": [
              {
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "client_secret": "foo"
              }
            ],
            "stats": {
              "roles": 42,
              "users": 42,
              "policies": 42,
              "resources": 42,
              "tenants": 42,
              "has_decision_logs": true,
              "members": [
                {
                  "id": "foo",
                  "email": "foo",
                  "email_verified": true,
                  "is_superuser": true,
                  "is_onboarding": true,
                  "onboarding_step": "create_organization",
                  "created_at": "foo",
                  "identities": [
                    {
                      "user_id": "foo",
                      "provider": "foo",
                      "sub": "foo",
                      "email": "foo",
                      "email_verified": true,
                      "auth0_info": {}
                    }
                  ],
                  "settings": {},
                  "grants": [
                    {
                      "organization_id": "foo",
                      "object_type": "org",
                      "access_level": "admin"
                    }
                  ]
                }
              ]
            }
          }
        }
      }
    },
    "EnvironmentUpdateSettings": {
      "name": {
        "typeId": "EnvironmentUpdateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentUpdateSettings",
          "camelCase": {
            "unsafeName": "environmentUpdateSettings",
            "safeName": "environmentUpdateSettings"
          },
          "snakeCase": {
            "unsafeName": "environment_update_settings",
            "safeName": "environment_update_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_UPDATE_SETTINGS",
            "safeName": "ENVIRONMENT_UPDATE_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentUpdateSettings",
            "safeName": "EnvironmentUpdateSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this environment",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentUpdateSettings_example_autogenerated": {}
        }
      }
    },
    "EnvironmentUpdate": {
      "name": {
        "typeId": "EnvironmentUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EnvironmentUpdate",
          "camelCase": {
            "unsafeName": "environmentUpdate",
            "safeName": "environmentUpdate"
          },
          "snakeCase": {
            "unsafeName": "environment_update",
            "safeName": "environment_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENT_UPDATE",
            "safeName": "ENVIRONMENT_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "EnvironmentUpdate",
            "safeName": "EnvironmentUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_branch_name",
                "camelCase": {
                  "unsafeName": "customBranchName",
                  "safeName": "customBranchName"
                },
                "snakeCase": {
                  "unsafeName": "custom_branch_name",
                  "safeName": "custom_branch_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_BRANCH_NAME",
                  "safeName": "CUSTOM_BRANCH_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CustomBranchName",
                  "safeName": "CustomBranchName"
                }
              },
              "wireValue": "custom_branch_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "when using gitops feature, an optional branch name for the environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateCustomBranchName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "jwks",
                "camelCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "snakeCase": {
                  "unsafeName": "jwks",
                  "safeName": "jwks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "JWKS",
                  "safeName": "JWKS"
                },
                "pascalCase": {
                  "unsafeName": "Jwks",
                  "safeName": "Jwks"
                }
              },
              "wireValue": "jwks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "JwksObj",
                    "camelCase": {
                      "unsafeName": "jwksObj",
                      "safeName": "jwksObj"
                    },
                    "snakeCase": {
                      "unsafeName": "jwks_obj",
                      "safeName": "jwks_obj"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "JWKS_OBJ",
                      "safeName": "JWKS_OBJ"
                    },
                    "pascalCase": {
                      "unsafeName": "JwksObj",
                      "safeName": "JwksObj"
                    }
                  },
                  "typeId": "JwksObj",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "jwks for element frontend only login",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentUpdateSettings",
                    "camelCase": {
                      "unsafeName": "environmentUpdateSettings",
                      "safeName": "environmentUpdateSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_update_settings",
                      "safeName": "environment_update_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_UPDATE_SETTINGS",
                      "safeName": "ENVIRONMENT_UPDATE_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentUpdateSettings",
                      "safeName": "EnvironmentUpdateSettings"
                    }
                  },
                  "typeId": "EnvironmentUpdateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this environment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EnvironmentUpdateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnvironmentUpdate_example_autogenerated": {}
        }
      }
    },
    "HTTPValidationError": {
      "name": {
        "typeId": "HTTPValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "detail",
                "camelCase": {
                  "unsafeName": "detail",
                  "safeName": "detail"
                },
                "snakeCase": {
                  "unsafeName": "detail",
                  "safeName": "detail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DETAIL",
                  "safeName": "DETAIL"
                },
                "pascalCase": {
                  "unsafeName": "Detail",
                  "safeName": "Detail"
                }
              },
              "wireValue": "detail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ValidationError",
                        "camelCase": {
                          "unsafeName": "validationError",
                          "safeName": "validationError"
                        },
                        "snakeCase": {
                          "unsafeName": "validation_error",
                          "safeName": "validation_error"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "VALIDATION_ERROR",
                          "safeName": "VALIDATION_ERROR"
                        },
                        "pascalCase": {
                          "unsafeName": "ValidationError",
                          "safeName": "ValidationError"
                        }
                      },
                      "typeId": "ValidationError",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "HttpValidationErrorDetail_example_autogenerated": [
                  {
                    "loc": [
                      "foo"
                    ],
                    "msg": "foo",
                    "type": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "HTTPValidationError_example_autogenerated": {}
        }
      }
    },
    "IdentityReadAuth0Info": {
      "name": {
        "typeId": "IdentityReadAuth0Info",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "IdentityReadAuth0Info",
          "camelCase": {
            "unsafeName": "identityReadAuth0Info",
            "safeName": "identityReadAuth0Info"
          },
          "snakeCase": {
            "unsafeName": "identity_read_auth_0_info",
            "safeName": "identity_read_auth_0_info"
          },
          "screamingSnakeCase": {
            "unsafeName": "IDENTITY_READ_AUTH_0_INFO",
            "safeName": "IDENTITY_READ_AUTH_0_INFO"
          },
          "pascalCase": {
            "unsafeName": "IdentityReadAuth0Info",
            "safeName": "IdentityReadAuth0Info"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw user info json coming from our identity provider and matching a specific account identity",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdentityReadAuth0Info_example_autogenerated": {}
        }
      }
    },
    "IdentityRead": {
      "name": {
        "typeId": "IdentityRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "IdentityRead",
          "camelCase": {
            "unsafeName": "identityRead",
            "safeName": "identityRead"
          },
          "snakeCase": {
            "unsafeName": "identity_read",
            "safeName": "identity_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "IDENTITY_READ",
            "safeName": "IDENTITY_READ"
          },
          "pascalCase": {
            "unsafeName": "IdentityRead",
            "safeName": "IdentityRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "wireValue": "user_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique User Id of this identity in the identity provider (including the provider type)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadUserId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "provider",
                "camelCase": {
                  "unsafeName": "provider",
                  "safeName": "provider"
                },
                "snakeCase": {
                  "unsafeName": "provider",
                  "safeName": "provider"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROVIDER",
                  "safeName": "PROVIDER"
                },
                "pascalCase": {
                  "unsafeName": "Provider",
                  "safeName": "Provider"
                }
              },
              "wireValue": "provider"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The identity provider type this identity came from",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadProvider_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sub",
                "camelCase": {
                  "unsafeName": "sub",
                  "safeName": "sub"
                },
                "snakeCase": {
                  "unsafeName": "sub",
                  "safeName": "sub"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUB",
                  "safeName": "SUB"
                },
                "pascalCase": {
                  "unsafeName": "Sub",
                  "safeName": "Sub"
                }
              },
              "wireValue": "sub"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique User Id of this identity in the identity provider (NOT including the provider type)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadSub_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Email connected to this account identity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email_verified",
                "camelCase": {
                  "unsafeName": "emailVerified",
                  "safeName": "emailVerified"
                },
                "snakeCase": {
                  "unsafeName": "email_verified",
                  "safeName": "email_verified"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL_VERIFIED",
                  "safeName": "EMAIL_VERIFIED"
                },
                "pascalCase": {
                  "unsafeName": "EmailVerified",
                  "safeName": "EmailVerified"
                }
              },
              "wireValue": "email_verified"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether this email address connected to this account identity is verified or not. For social providers like 'Login with Google' this is done automatically, otherwise we will send the user a verification link in email.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadEmailVerified_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auth0_info",
                "camelCase": {
                  "unsafeName": "auth0Info",
                  "safeName": "auth0Info"
                },
                "snakeCase": {
                  "unsafeName": "auth_0_info",
                  "safeName": "auth_0_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTH_0_INFO",
                  "safeName": "AUTH_0_INFO"
                },
                "pascalCase": {
                  "unsafeName": "Auth0Info",
                  "safeName": "Auth0Info"
                }
              },
              "wireValue": "auth0_info"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "IdentityReadAuth0Info",
                "camelCase": {
                  "unsafeName": "identityReadAuth0Info",
                  "safeName": "identityReadAuth0Info"
                },
                "snakeCase": {
                  "unsafeName": "identity_read_auth_0_info",
                  "safeName": "identity_read_auth_0_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IDENTITY_READ_AUTH_0_INFO",
                  "safeName": "IDENTITY_READ_AUTH_0_INFO"
                },
                "pascalCase": {
                  "unsafeName": "IdentityReadAuth0Info",
                  "safeName": "IdentityReadAuth0Info"
                }
              },
              "typeId": "IdentityReadAuth0Info",
              "inline": false,
              "type": "named"
            },
            "docs": "Raw user info json coming from our identity provider and matching a specific account identity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdentityReadAuth0Info_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdentityRead_example_autogenerated": {
            "user_id": "foo",
            "provider": "foo",
            "sub": "foo",
            "email": "foo",
            "email_verified": true,
            "auth0_info": {}
          }
        }
      }
    },
    "InviteRead": {
      "name": {
        "typeId": "InviteRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "InviteRead",
          "camelCase": {
            "unsafeName": "inviteRead",
            "safeName": "inviteRead"
          },
          "snakeCase": {
            "unsafeName": "invite_read",
            "safeName": "invite_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "INVITE_READ",
            "safeName": "INVITE_READ"
          },
          "pascalCase": {
            "unsafeName": "InviteRead",
            "safeName": "InviteRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "member_id",
                "camelCase": {
                  "unsafeName": "memberId",
                  "safeName": "memberId"
                },
                "snakeCase": {
                  "unsafeName": "member_id",
                  "safeName": "member_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEMBER_ID",
                  "safeName": "MEMBER_ID"
                },
                "pascalCase": {
                  "unsafeName": "MemberId",
                  "safeName": "MemberId"
                }
              },
              "wireValue": "member_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique id of the invite",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadMemberId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The invited member's email address",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "MemberAccessLevel",
                    "camelCase": {
                      "unsafeName": "memberAccessLevel",
                      "safeName": "memberAccessLevel"
                    },
                    "snakeCase": {
                      "unsafeName": "member_access_level",
                      "safeName": "member_access_level"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "MEMBER_ACCESS_LEVEL",
                      "safeName": "MEMBER_ACCESS_LEVEL"
                    },
                    "pascalCase": {
                      "unsafeName": "MemberAccessLevel",
                      "safeName": "MemberAccessLevel"
                    }
                  },
                  "typeId": "MemberAccessLevel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The role the member will be assigned with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the invite",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the invite belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "invite_code",
                "camelCase": {
                  "unsafeName": "inviteCode",
                  "safeName": "inviteCode"
                },
                "snakeCase": {
                  "unsafeName": "invite_code",
                  "safeName": "invite_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INVITE_CODE",
                  "safeName": "INVITE_CODE"
                },
                "pascalCase": {
                  "unsafeName": "InviteCode",
                  "safeName": "InviteCode"
                }
              },
              "wireValue": "invite_code"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The invite code that is sent to the member's email",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadInviteCode_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the invite was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "InviteStatus",
                "camelCase": {
                  "unsafeName": "inviteStatus",
                  "safeName": "inviteStatus"
                },
                "snakeCase": {
                  "unsafeName": "invite_status",
                  "safeName": "invite_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INVITE_STATUS",
                  "safeName": "INVITE_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "InviteStatus",
                  "safeName": "InviteStatus"
                }
              },
              "typeId": "InviteStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The status of the invite (pending, failed, etc)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "failed_reason",
                "camelCase": {
                  "unsafeName": "failedReason",
                  "safeName": "failedReason"
                },
                "snakeCase": {
                  "unsafeName": "failed_reason",
                  "safeName": "failed_reason"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FAILED_REASON",
                  "safeName": "FAILED_REASON"
                },
                "pascalCase": {
                  "unsafeName": "FailedReason",
                  "safeName": "FailedReason"
                }
              },
              "wireValue": "failed_reason"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "if failed, the reason the invitation failed",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InviteReadFailedReason_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "InviteRead_example_0": {
            "email": "jane@coolcompany.com",
            "role": "admin",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "invite_code": "40ef0e48-a11f-4963-a229-e396c9eeefff",
            "created_at": "2019-08-24T14:15:22Z",
            "status": "pending",
            "failed_reason": ""
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "InviteStatus": {
      "name": {
        "typeId": "InviteStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "InviteStatus",
          "camelCase": {
            "unsafeName": "inviteStatus",
            "safeName": "inviteStatus"
          },
          "snakeCase": {
            "unsafeName": "invite_status",
            "safeName": "invite_status"
          },
          "screamingSnakeCase": {
            "unsafeName": "INVITE_STATUS",
            "safeName": "INVITE_STATUS"
          },
          "pascalCase": {
            "unsafeName": "InviteStatus",
            "safeName": "InviteStatus"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accepted",
                "camelCase": {
                  "unsafeName": "accepted",
                  "safeName": "accepted"
                },
                "snakeCase": {
                  "unsafeName": "accepted",
                  "safeName": "accepted"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCEPTED",
                  "safeName": "ACCEPTED"
                },
                "pascalCase": {
                  "unsafeName": "Accepted",
                  "safeName": "Accepted"
                }
              },
              "wireValue": "accepted"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "failed",
                "camelCase": {
                  "unsafeName": "failed",
                  "safeName": "failed"
                },
                "snakeCase": {
                  "unsafeName": "failed",
                  "safeName": "failed"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FAILED",
                  "safeName": "FAILED"
                },
                "pascalCase": {
                  "unsafeName": "Failed",
                  "safeName": "Failed"
                }
              },
              "wireValue": "failed"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "canceled",
                "camelCase": {
                  "unsafeName": "canceled",
                  "safeName": "canceled"
                },
                "snakeCase": {
                  "unsafeName": "canceled",
                  "safeName": "canceled"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CANCELED",
                  "safeName": "CANCELED"
                },
                "pascalCase": {
                  "unsafeName": "Canceled",
                  "safeName": "Canceled"
                }
              },
              "wireValue": "canceled"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "InviteStatus_example_autogenerated": "pending"
        }
      }
    },
    "JwksObjKeysItems": {
      "name": {
        "typeId": "JwksObjKeysItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "JwksObjKeysItems",
          "camelCase": {
            "unsafeName": "jwksObjKeysItems",
            "safeName": "jwksObjKeysItems"
          },
          "snakeCase": {
            "unsafeName": "jwks_obj_keys_items",
            "safeName": "jwks_obj_keys_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "JWKS_OBJ_KEYS_ITEMS",
            "safeName": "JWKS_OBJ_KEYS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "JwksObjKeysItems",
            "safeName": "JwksObjKeysItems"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "JwksObjKeysItems_example_autogenerated": {}
        }
      }
    },
    "JwksObj": {
      "name": {
        "typeId": "JwksObj",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "JwksObj",
          "camelCase": {
            "unsafeName": "jwksObj",
            "safeName": "jwksObj"
          },
          "snakeCase": {
            "unsafeName": "jwks_obj",
            "safeName": "jwks_obj"
          },
          "screamingSnakeCase": {
            "unsafeName": "JWKS_OBJ",
            "safeName": "JWKS_OBJ"
          },
          "pascalCase": {
            "unsafeName": "JwksObj",
            "safeName": "JwksObj"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "keys",
                "camelCase": {
                  "unsafeName": "keys",
                  "safeName": "keys"
                },
                "snakeCase": {
                  "unsafeName": "keys",
                  "safeName": "keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEYS",
                  "safeName": "KEYS"
                },
                "pascalCase": {
                  "unsafeName": "Keys",
                  "safeName": "Keys"
                }
              },
              "wireValue": "keys"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "JwksObjKeysItems",
                    "camelCase": {
                      "unsafeName": "jwksObjKeysItems",
                      "safeName": "jwksObjKeysItems"
                    },
                    "snakeCase": {
                      "unsafeName": "jwks_obj_keys_items",
                      "safeName": "jwks_obj_keys_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "JWKS_OBJ_KEYS_ITEMS",
                      "safeName": "JWKS_OBJ_KEYS_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "JwksObjKeysItems",
                      "safeName": "JwksObjKeysItems"
                    }
                  },
                  "typeId": "JwksObjKeysItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The keys to match against the request headers",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "JwksObjKeys_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "JwksObj_example_autogenerated": {
            "keys": [
              {}
            ]
          }
        }
      }
    },
    "MemberAccessLevel": {
      "name": {
        "typeId": "MemberAccessLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MemberAccessLevel",
          "camelCase": {
            "unsafeName": "memberAccessLevel",
            "safeName": "memberAccessLevel"
          },
          "snakeCase": {
            "unsafeName": "member_access_level",
            "safeName": "member_access_level"
          },
          "screamingSnakeCase": {
            "unsafeName": "MEMBER_ACCESS_LEVEL",
            "safeName": "MEMBER_ACCESS_LEVEL"
          },
          "pascalCase": {
            "unsafeName": "MemberAccessLevel",
            "safeName": "MemberAccessLevel"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "admin",
                "camelCase": {
                  "unsafeName": "admin",
                  "safeName": "admin"
                },
                "snakeCase": {
                  "unsafeName": "admin",
                  "safeName": "admin"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADMIN",
                  "safeName": "ADMIN"
                },
                "pascalCase": {
                  "unsafeName": "Admin",
                  "safeName": "Admin"
                }
              },
              "wireValue": "admin"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "write",
                "camelCase": {
                  "unsafeName": "write",
                  "safeName": "write"
                },
                "snakeCase": {
                  "unsafeName": "write",
                  "safeName": "write"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WRITE",
                  "safeName": "WRITE"
                },
                "pascalCase": {
                  "unsafeName": "Write",
                  "safeName": "Write"
                }
              },
              "wireValue": "write"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "read",
                "camelCase": {
                  "unsafeName": "read",
                  "safeName": "read"
                },
                "snakeCase": {
                  "unsafeName": "read",
                  "safeName": "read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "READ",
                  "safeName": "READ"
                },
                "pascalCase": {
                  "unsafeName": "Read",
                  "safeName": "Read"
                }
              },
              "wireValue": "read"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "no_access",
                "camelCase": {
                  "unsafeName": "noAccess",
                  "safeName": "noAccess"
                },
                "snakeCase": {
                  "unsafeName": "no_access",
                  "safeName": "no_access"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_ACCESS",
                  "safeName": "NO_ACCESS"
                },
                "pascalCase": {
                  "unsafeName": "NoAccess",
                  "safeName": "NoAccess"
                }
              },
              "wireValue": "no_access"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MemberAccessLevel_example_autogenerated": "admin"
        }
      }
    },
    "MemberAccessObj": {
      "name": {
        "typeId": "MemberAccessObj",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MemberAccessObj",
          "camelCase": {
            "unsafeName": "memberAccessObj",
            "safeName": "memberAccessObj"
          },
          "snakeCase": {
            "unsafeName": "member_access_obj",
            "safeName": "member_access_obj"
          },
          "screamingSnakeCase": {
            "unsafeName": "MEMBER_ACCESS_OBJ",
            "safeName": "MEMBER_ACCESS_OBJ"
          },
          "pascalCase": {
            "unsafeName": "MemberAccessObj",
            "safeName": "MemberAccessObj"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "org",
                "camelCase": {
                  "unsafeName": "org",
                  "safeName": "org"
                },
                "snakeCase": {
                  "unsafeName": "org",
                  "safeName": "org"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG",
                  "safeName": "ORG"
                },
                "pascalCase": {
                  "unsafeName": "Org",
                  "safeName": "Org"
                }
              },
              "wireValue": "org"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project",
                "camelCase": {
                  "unsafeName": "project",
                  "safeName": "project"
                },
                "snakeCase": {
                  "unsafeName": "project",
                  "safeName": "project"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT",
                  "safeName": "PROJECT"
                },
                "pascalCase": {
                  "unsafeName": "Project",
                  "safeName": "Project"
                }
              },
              "wireValue": "project"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "env",
                "camelCase": {
                  "unsafeName": "env",
                  "safeName": "env"
                },
                "snakeCase": {
                  "unsafeName": "env",
                  "safeName": "env"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV",
                  "safeName": "ENV"
                },
                "pascalCase": {
                  "unsafeName": "Env",
                  "safeName": "Env"
                }
              },
              "wireValue": "env"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MemberAccessObj_example_autogenerated": "org"
        }
      }
    },
    "OnboardingStep": {
      "name": {
        "typeId": "OnboardingStep",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OnboardingStep",
          "camelCase": {
            "unsafeName": "onboardingStep",
            "safeName": "onboardingStep"
          },
          "snakeCase": {
            "unsafeName": "onboarding_step",
            "safeName": "onboarding_step"
          },
          "screamingSnakeCase": {
            "unsafeName": "ONBOARDING_STEP",
            "safeName": "ONBOARDING_STEP"
          },
          "pascalCase": {
            "unsafeName": "OnboardingStep",
            "safeName": "OnboardingStep"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "create_organization",
                "camelCase": {
                  "unsafeName": "createOrganization",
                  "safeName": "createOrganization"
                },
                "snakeCase": {
                  "unsafeName": "create_organization",
                  "safeName": "create_organization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATE_ORGANIZATION",
                  "safeName": "CREATE_ORGANIZATION"
                },
                "pascalCase": {
                  "unsafeName": "CreateOrganization",
                  "safeName": "CreateOrganization"
                }
              },
              "wireValue": "create_organization"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "create_project",
                "camelCase": {
                  "unsafeName": "createProject",
                  "safeName": "createProject"
                },
                "snakeCase": {
                  "unsafeName": "create_project",
                  "safeName": "create_project"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATE_PROJECT",
                  "safeName": "CREATE_PROJECT"
                },
                "pascalCase": {
                  "unsafeName": "CreateProject",
                  "safeName": "CreateProject"
                }
              },
              "wireValue": "create_project"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "create_resource",
                "camelCase": {
                  "unsafeName": "createResource",
                  "safeName": "createResource"
                },
                "snakeCase": {
                  "unsafeName": "create_resource",
                  "safeName": "create_resource"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATE_RESOURCE",
                  "safeName": "CREATE_RESOURCE"
                },
                "pascalCase": {
                  "unsafeName": "CreateResource",
                  "safeName": "CreateResource"
                }
              },
              "wireValue": "create_resource"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "create_actions",
                "camelCase": {
                  "unsafeName": "createActions",
                  "safeName": "createActions"
                },
                "snakeCase": {
                  "unsafeName": "create_actions",
                  "safeName": "create_actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATE_ACTIONS",
                  "safeName": "CREATE_ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "CreateActions",
                  "safeName": "CreateActions"
                }
              },
              "wireValue": "create_actions"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "assign_permissions",
                "camelCase": {
                  "unsafeName": "assignPermissions",
                  "safeName": "assignPermissions"
                },
                "snakeCase": {
                  "unsafeName": "assign_permissions",
                  "safeName": "assign_permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSIGN_PERMISSIONS",
                  "safeName": "ASSIGN_PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "AssignPermissions",
                  "safeName": "AssignPermissions"
                }
              },
              "wireValue": "assign_permissions"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "assign_user_roles",
                "camelCase": {
                  "unsafeName": "assignUserRoles",
                  "safeName": "assignUserRoles"
                },
                "snakeCase": {
                  "unsafeName": "assign_user_roles",
                  "safeName": "assign_user_roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSIGN_USER_ROLES",
                  "safeName": "ASSIGN_USER_ROLES"
                },
                "pascalCase": {
                  "unsafeName": "AssignUserRoles",
                  "safeName": "AssignUserRoles"
                }
              },
              "wireValue": "assign_user_roles"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "connect_sdk",
                "camelCase": {
                  "unsafeName": "connectSdk",
                  "safeName": "connectSdk"
                },
                "snakeCase": {
                  "unsafeName": "connect_sdk",
                  "safeName": "connect_sdk"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONNECT_SDK",
                  "safeName": "CONNECT_SDK"
                },
                "pascalCase": {
                  "unsafeName": "ConnectSdk",
                  "safeName": "ConnectSdk"
                }
              },
              "wireValue": "connect_sdk"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "done",
                "camelCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "snakeCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DONE",
                  "safeName": "DONE"
                },
                "pascalCase": {
                  "unsafeName": "Done",
                  "safeName": "Done"
                }
              },
              "wireValue": "done"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OnboardingStep_example_autogenerated": "create_organization"
        }
      }
    },
    "OrgMemberReadWithGrantsSettings": {
      "name": {
        "typeId": "OrgMemberReadWithGrantsSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrgMemberReadWithGrantsSettings",
          "camelCase": {
            "unsafeName": "orgMemberReadWithGrantsSettings",
            "safeName": "orgMemberReadWithGrantsSettings"
          },
          "snakeCase": {
            "unsafeName": "org_member_read_with_grants_settings",
            "safeName": "org_member_read_with_grants_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORG_MEMBER_READ_WITH_GRANTS_SETTINGS",
            "safeName": "ORG_MEMBER_READ_WITH_GRANTS_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "OrgMemberReadWithGrantsSettings",
            "safeName": "OrgMemberReadWithGrantsSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Custom permit.io dashboard settings, such as preferred theme, etc.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrgMemberReadWithGrantsSettings_example_autogenerated": {}
        }
      }
    },
    "OrgMemberReadWithGrants": {
      "name": {
        "typeId": "OrgMemberReadWithGrants",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrgMemberReadWithGrants",
          "camelCase": {
            "unsafeName": "orgMemberReadWithGrants",
            "safeName": "orgMemberReadWithGrants"
          },
          "snakeCase": {
            "unsafeName": "org_member_read_with_grants",
            "safeName": "org_member_read_with_grants"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORG_MEMBER_READ_WITH_GRANTS",
            "safeName": "ORG_MEMBER_READ_WITH_GRANTS"
          },
          "pascalCase": {
            "unsafeName": "OrgMemberReadWithGrants",
            "safeName": "OrgMemberReadWithGrants"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the account member",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "email"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Email of the user controlling this account",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email_verified",
                "camelCase": {
                  "unsafeName": "emailVerified",
                  "safeName": "emailVerified"
                },
                "snakeCase": {
                  "unsafeName": "email_verified",
                  "safeName": "email_verified"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL_VERIFIED",
                  "safeName": "EMAIL_VERIFIED"
                },
                "pascalCase": {
                  "unsafeName": "EmailVerified",
                  "safeName": "EmailVerified"
                }
              },
              "wireValue": "email_verified"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether this email address is verified or not. For social providers like 'Login with Google' this is done automatically, otherwise we will send the user a verification link in email.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsEmailVerified_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of this user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "given_name",
                "camelCase": {
                  "unsafeName": "givenName",
                  "safeName": "givenName"
                },
                "snakeCase": {
                  "unsafeName": "given_name",
                  "safeName": "given_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GIVEN_NAME",
                  "safeName": "GIVEN_NAME"
                },
                "pascalCase": {
                  "unsafeName": "GivenName",
                  "safeName": "GivenName"
                }
              },
              "wireValue": "given_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsGivenName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "family_name",
                "camelCase": {
                  "unsafeName": "familyName",
                  "safeName": "familyName"
                },
                "snakeCase": {
                  "unsafeName": "family_name",
                  "safeName": "family_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FAMILY_NAME",
                  "safeName": "FAMILY_NAME"
                },
                "pascalCase": {
                  "unsafeName": "FamilyName",
                  "safeName": "FamilyName"
                }
              },
              "wireValue": "family_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsFamilyName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "picture",
                "camelCase": {
                  "unsafeName": "picture",
                  "safeName": "picture"
                },
                "snakeCase": {
                  "unsafeName": "picture",
                  "safeName": "picture"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PICTURE",
                  "safeName": "PICTURE"
                },
                "pascalCase": {
                  "unsafeName": "Picture",
                  "safeName": "Picture"
                }
              },
              "wireValue": "picture"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL to picture, photo, or avatar of the user that controls this account.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsPicture_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_superuser",
                "camelCase": {
                  "unsafeName": "isSuperuser",
                  "safeName": "isSuperuser"
                },
                "snakeCase": {
                  "unsafeName": "is_superuser",
                  "safeName": "is_superuser"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SUPERUSER",
                  "safeName": "IS_SUPERUSER"
                },
                "pascalCase": {
                  "unsafeName": "IsSuperuser",
                  "safeName": "IsSuperuser"
                }
              },
              "wireValue": "is_superuser"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether or not this user has special access to permit.io organizations",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsIsSuperuser_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_onboarding",
                "camelCase": {
                  "unsafeName": "isOnboarding",
                  "safeName": "isOnboarding"
                },
                "snakeCase": {
                  "unsafeName": "is_onboarding",
                  "safeName": "is_onboarding"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_ONBOARDING",
                  "safeName": "IS_ONBOARDING"
                },
                "pascalCase": {
                  "unsafeName": "IsOnboarding",
                  "safeName": "IsOnboarding"
                }
              },
              "wireValue": "is_onboarding"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether or not this user is currently onboarding, needs to be replaced by a user journey object",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsIsOnboarding_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "onboarding_step",
                "camelCase": {
                  "unsafeName": "onboardingStep",
                  "safeName": "onboardingStep"
                },
                "snakeCase": {
                  "unsafeName": "onboarding_step",
                  "safeName": "onboarding_step"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ONBOARDING_STEP",
                  "safeName": "ONBOARDING_STEP"
                },
                "pascalCase": {
                  "unsafeName": "OnboardingStep",
                  "safeName": "OnboardingStep"
                }
              },
              "wireValue": "onboarding_step"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "OnboardingStep",
                "camelCase": {
                  "unsafeName": "onboardingStep",
                  "safeName": "onboardingStep"
                },
                "snakeCase": {
                  "unsafeName": "onboarding_step",
                  "safeName": "onboarding_step"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ONBOARDING_STEP",
                  "safeName": "ONBOARDING_STEP"
                },
                "pascalCase": {
                  "unsafeName": "OnboardingStep",
                  "safeName": "OnboardingStep"
                }
              },
              "typeId": "OnboardingStep",
              "inline": false,
              "type": "named"
            },
            "docs": "the step the user is currently going through in onboarding",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the account member was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "last_login",
                "camelCase": {
                  "unsafeName": "lastLogin",
                  "safeName": "lastLogin"
                },
                "snakeCase": {
                  "unsafeName": "last_login",
                  "safeName": "last_login"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_LOGIN",
                  "safeName": "LAST_LOGIN"
                },
                "pascalCase": {
                  "unsafeName": "LastLogin",
                  "safeName": "LastLogin"
                }
              },
              "wireValue": "last_login"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last date and time this user logged in (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsLastLogin_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "last_ip",
                "camelCase": {
                  "unsafeName": "lastIp",
                  "safeName": "lastIp"
                },
                "snakeCase": {
                  "unsafeName": "last_ip",
                  "safeName": "last_ip"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_IP",
                  "safeName": "LAST_IP"
                },
                "pascalCase": {
                  "unsafeName": "LastIp",
                  "safeName": "LastIp"
                }
              },
              "wireValue": "last_ip"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0.0.0.0",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last IP address from which this user logged in.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsLastIp_example_autogenerated": "0.0.0.0"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logins_count",
                "camelCase": {
                  "unsafeName": "loginsCount",
                  "safeName": "loginsCount"
                },
                "snakeCase": {
                  "unsafeName": "logins_count",
                  "safeName": "logins_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOGINS_COUNT",
                  "safeName": "LOGINS_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "LoginsCount",
                  "safeName": "LoginsCount"
                }
              },
              "wireValue": "logins_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Total number of logins this user has performed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsLoginsCount_example_autogenerated": 0
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "identities",
                "camelCase": {
                  "unsafeName": "identities",
                  "safeName": "identities"
                },
                "snakeCase": {
                  "unsafeName": "identities",
                  "safeName": "identities"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IDENTITIES",
                  "safeName": "IDENTITIES"
                },
                "pascalCase": {
                  "unsafeName": "Identities",
                  "safeName": "Identities"
                }
              },
              "wireValue": "identities"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "IdentityRead",
                    "camelCase": {
                      "unsafeName": "identityRead",
                      "safeName": "identityRead"
                    },
                    "snakeCase": {
                      "unsafeName": "identity_read",
                      "safeName": "identity_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "IDENTITY_READ",
                      "safeName": "IDENTITY_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "IdentityRead",
                      "safeName": "IdentityRead"
                    }
                  },
                  "typeId": "IdentityRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsIdentities_example_autogenerated": [
                  {
                    "user_id": "foo",
                    "provider": "foo",
                    "sub": "foo",
                    "email": "foo",
                    "email_verified": true,
                    "auth0_info": {}
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "invite",
                "camelCase": {
                  "unsafeName": "invite",
                  "safeName": "invite"
                },
                "snakeCase": {
                  "unsafeName": "invite",
                  "safeName": "invite"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INVITE",
                  "safeName": "INVITE"
                },
                "pascalCase": {
                  "unsafeName": "Invite",
                  "safeName": "Invite"
                }
              },
              "wireValue": "invite"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "InviteRead",
                    "camelCase": {
                      "unsafeName": "inviteRead",
                      "safeName": "inviteRead"
                    },
                    "snakeCase": {
                      "unsafeName": "invite_read",
                      "safeName": "invite_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "INVITE_READ",
                      "safeName": "INVITE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "InviteRead",
                      "safeName": "InviteRead"
                    }
                  },
                  "typeId": "InviteRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "OrgMemberReadWithGrantsSettings",
                "camelCase": {
                  "unsafeName": "orgMemberReadWithGrantsSettings",
                  "safeName": "orgMemberReadWithGrantsSettings"
                },
                "snakeCase": {
                  "unsafeName": "org_member_read_with_grants_settings",
                  "safeName": "org_member_read_with_grants_settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG_MEMBER_READ_WITH_GRANTS_SETTINGS",
                  "safeName": "ORG_MEMBER_READ_WITH_GRANTS_SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "OrgMemberReadWithGrantsSettings",
                  "safeName": "OrgMemberReadWithGrantsSettings"
                }
              },
              "typeId": "OrgMemberReadWithGrantsSettings",
              "inline": false,
              "type": "named"
            },
            "docs": "Custom permit.io dashboard settings, such as preferred theme, etc.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "grants",
                "camelCase": {
                  "unsafeName": "grants",
                  "safeName": "grants"
                },
                "snakeCase": {
                  "unsafeName": "grants",
                  "safeName": "grants"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GRANTS",
                  "safeName": "GRANTS"
                },
                "pascalCase": {
                  "unsafeName": "Grants",
                  "safeName": "Grants"
                }
              },
              "wireValue": "grants"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Permission",
                    "camelCase": {
                      "unsafeName": "permission",
                      "safeName": "permission"
                    },
                    "snakeCase": {
                      "unsafeName": "permission",
                      "safeName": "permission"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PERMISSION",
                      "safeName": "PERMISSION"
                    },
                    "pascalCase": {
                      "unsafeName": "Permission",
                      "safeName": "Permission"
                    }
                  },
                  "typeId": "Permission",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrgMemberReadWithGrantsGrants_example_autogenerated": [
                  {
                    "organization_id": "foo",
                    "object_type": "org",
                    "access_level": "admin"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "OrgMemberReadWithGrants_example_0": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "email": "janedoe@permituser.com",
            "email_verified": true,
            "name": "Jane Josephine Doe",
            "given_name": "Jane",
            "family_name": "Doe",
            "picture": "http://permituser.com/janedoe/me.jpg",
            "is_superuser": false,
            "is_onboarding": true,
            "onboarding_step": "done",
            "created_at": "2019-08-20T14:15:22Z",
            "last_login": "2019-08-24T14:15:22Z",
            "last_ip": "1.2.3.4",
            "logins_count": 2,
            "identities": [
              {
                "user_id": "google-oauth2|000000000000000000001",
                "provider": "google-oauth2",
                "sub": "000000000000000000001",
                "email": "Jane@permituser.com",
                "email_verified": true,
                "auth0_info": {}
              }
            ],
            "invite": {
              "email": "Jane@permituser.com",
              "role": "admin",
              "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
              "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
              "invite_code": "40ef0e48-a11f-4963-a229-e396c9eeefff",
              "created_at": "2019-08-24T14:15:22Z",
              "status": "pending",
              "failed_reason": ""
            },
            "settings": {
              "option": "value",
              "another-option": "another-value"
            },
            "grants": [
              {
                "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                "object_type": "org",
                "access_level": "admin"
              }
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "OrganizationCreateSettings": {
      "name": {
        "typeId": "OrganizationCreateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationCreateSettings",
          "camelCase": {
            "unsafeName": "organizationCreateSettings",
            "safeName": "organizationCreateSettings"
          },
          "snakeCase": {
            "unsafeName": "organization_create_settings",
            "safeName": "organization_create_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_CREATE_SETTINGS",
            "safeName": "ORGANIZATION_CREATE_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "OrganizationCreateSettings",
            "safeName": "OrganizationCreateSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationCreateSettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationCreate": {
      "name": {
        "typeId": "OrganizationCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationCreate",
          "camelCase": {
            "unsafeName": "organizationCreate",
            "safeName": "organizationCreate"
          },
          "snakeCase": {
            "unsafeName": "organization_create",
            "safeName": "organization_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_CREATE",
            "safeName": "ORGANIZATION_CREATE"
          },
          "pascalCase": {
            "unsafeName": "OrganizationCreate",
            "safeName": "OrganizationCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\.\\-\\_\\ ]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationCreateSettings",
                    "camelCase": {
                      "unsafeName": "organizationCreateSettings",
                      "safeName": "organizationCreateSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_create_settings",
                      "safeName": "organization_create_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_CREATE_SETTINGS",
                      "safeName": "ORGANIZATION_CREATE_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationCreateSettings",
                      "safeName": "OrganizationCreateSettings"
                    }
                  },
                  "typeId": "OrganizationCreateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationCreateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationCreate_example_autogenerated": {
            "key": "foo",
            "name": "foo"
          }
        }
      }
    },
    "OrganizationReadSettings": {
      "name": {
        "typeId": "OrganizationReadSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationReadSettings",
          "camelCase": {
            "unsafeName": "organizationReadSettings",
            "safeName": "organizationReadSettings"
          },
          "snakeCase": {
            "unsafeName": "organization_read_settings",
            "safeName": "organization_read_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_READ_SETTINGS",
            "safeName": "ORGANIZATION_READ_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "OrganizationReadSettings",
            "safeName": "OrganizationReadSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationReadSettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationRead": {
      "name": {
        "typeId": "OrganizationRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationRead",
          "camelCase": {
            "unsafeName": "organizationRead",
            "safeName": "organizationRead"
          },
          "snakeCase": {
            "unsafeName": "organization_read",
            "safeName": "organization_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_READ",
            "safeName": "ORGANIZATION_READ"
          },
          "pascalCase": {
            "unsafeName": "OrganizationRead",
            "safeName": "OrganizationRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_enterprise",
                "camelCase": {
                  "unsafeName": "isEnterprise",
                  "safeName": "isEnterprise"
                },
                "snakeCase": {
                  "unsafeName": "is_enterprise",
                  "safeName": "is_enterprise"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_ENTERPRISE",
                  "safeName": "IS_ENTERPRISE"
                },
                "pascalCase": {
                  "unsafeName": "IsEnterprise",
                  "safeName": "IsEnterprise"
                }
              },
              "wireValue": "is_enterprise"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Is this an enterprise account?",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadIsEnterprise_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationReadSettings",
                    "camelCase": {
                      "unsafeName": "organizationReadSettings",
                      "safeName": "organizationReadSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_read_settings",
                      "safeName": "organization_read_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_READ_SETTINGS",
                      "safeName": "ORGANIZATION_READ_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationReadSettings",
                      "safeName": "OrganizationReadSettings"
                    }
                  },
                  "typeId": "OrganizationReadSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationRead_example_autogenerated": {
            "key": "foo",
            "id": "foo",
            "is_enterprise": true,
            "created_at": "foo",
            "updated_at": "foo",
            "name": "foo"
          }
        }
      }
    },
    "OrganizationReadWithApiKeySettings": {
      "name": {
        "typeId": "OrganizationReadWithApiKeySettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationReadWithApiKeySettings",
          "camelCase": {
            "unsafeName": "organizationReadWithApiKeySettings",
            "safeName": "organizationReadWithApiKeySettings"
          },
          "snakeCase": {
            "unsafeName": "organization_read_with_api_key_settings",
            "safeName": "organization_read_with_api_key_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_READ_WITH_API_KEY_SETTINGS",
            "safeName": "ORGANIZATION_READ_WITH_API_KEY_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "OrganizationReadWithApiKeySettings",
            "safeName": "OrganizationReadWithApiKeySettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationReadWithApiKeySettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationReadWithAPIKey": {
      "name": {
        "typeId": "OrganizationReadWithAPIKey",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationReadWithAPIKey",
          "camelCase": {
            "unsafeName": "organizationReadWithApiKey",
            "safeName": "organizationReadWithApiKey"
          },
          "snakeCase": {
            "unsafeName": "organization_read_with_api_key",
            "safeName": "organization_read_with_api_key"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_READ_WITH_API_KEY",
            "safeName": "ORGANIZATION_READ_WITH_API_KEY"
          },
          "pascalCase": {
            "unsafeName": "OrganizationReadWithApiKey",
            "safeName": "OrganizationReadWithApiKey"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the organization (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the organization.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_enterprise",
                "camelCase": {
                  "unsafeName": "isEnterprise",
                  "safeName": "isEnterprise"
                },
                "snakeCase": {
                  "unsafeName": "is_enterprise",
                  "safeName": "is_enterprise"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_ENTERPRISE",
                  "safeName": "IS_ENTERPRISE"
                },
                "pascalCase": {
                  "unsafeName": "IsEnterprise",
                  "safeName": "IsEnterprise"
                }
              },
              "wireValue": "is_enterprise"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Is this an enterprise account?",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyIsEnterprise_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the organization was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationReadWithApiKeySettings",
                    "camelCase": {
                      "unsafeName": "organizationReadWithApiKeySettings",
                      "safeName": "organizationReadWithApiKeySettings"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_read_with_api_key_settings",
                      "safeName": "organization_read_with_api_key_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_READ_WITH_API_KEY_SETTINGS",
                      "safeName": "ORGANIZATION_READ_WITH_API_KEY_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationReadWithApiKeySettings",
                      "safeName": "OrganizationReadWithApiKeySettings"
                    }
                  },
                  "typeId": "OrganizationReadWithApiKeySettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeySettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "api_key_id",
                "camelCase": {
                  "unsafeName": "apiKeyId",
                  "safeName": "apiKeyId"
                },
                "snakeCase": {
                  "unsafeName": "api_key_id",
                  "safeName": "api_key_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY_ID",
                  "safeName": "API_KEY_ID"
                },
                "pascalCase": {
                  "unsafeName": "ApiKeyId",
                  "safeName": "ApiKeyId"
                }
              },
              "wireValue": "api_key_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyApiKeyId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "api_key_secret",
                "camelCase": {
                  "unsafeName": "apiKeySecret",
                  "safeName": "apiKeySecret"
                },
                "snakeCase": {
                  "unsafeName": "api_key_secret",
                  "safeName": "api_key_secret"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY_SECRET",
                  "safeName": "API_KEY_SECRET"
                },
                "pascalCase": {
                  "unsafeName": "ApiKeySecret",
                  "safeName": "ApiKeySecret"
                }
              },
              "wireValue": "api_key_secret"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationReadWithApiKeyApiKeySecret_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationReadWithAPIKey_example_autogenerated": {
            "key": "foo",
            "id": "foo",
            "is_enterprise": true,
            "created_at": "foo",
            "updated_at": "foo",
            "name": "foo"
          }
        }
      }
    },
    "OrganizationUpdateSettings": {
      "name": {
        "typeId": "OrganizationUpdateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationUpdateSettings",
          "camelCase": {
            "unsafeName": "organizationUpdateSettings",
            "safeName": "organizationUpdateSettings"
          },
          "snakeCase": {
            "unsafeName": "organization_update_settings",
            "safeName": "organization_update_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_UPDATE_SETTINGS",
            "safeName": "ORGANIZATION_UPDATE_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "OrganizationUpdateSettings",
            "safeName": "OrganizationUpdateSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationUpdateSettings_example_autogenerated": {}
        }
      }
    },
    "OrganizationUpdate": {
      "name": {
        "typeId": "OrganizationUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OrganizationUpdate",
          "camelCase": {
            "unsafeName": "organizationUpdate",
            "safeName": "organizationUpdate"
          },
          "snakeCase": {
            "unsafeName": "organization_update",
            "safeName": "organization_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATION_UPDATE",
            "safeName": "ORGANIZATION_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "OrganizationUpdate",
            "safeName": "OrganizationUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^[A-Za-z0-9\\.\\-\\_\\ ]+$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the organization, usually it's your company's name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationUpdateSettings",
                    "camelCase": {
                      "unsafeName": "organizationUpdateSettings",
                      "safeName": "organizationUpdateSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_update_settings",
                      "safeName": "organization_update_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_UPDATE_SETTINGS",
                      "safeName": "ORGANIZATION_UPDATE_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationUpdateSettings",
                      "safeName": "OrganizationUpdateSettings"
                    }
                  },
                  "typeId": "OrganizationUpdateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OrganizationUpdateSettings_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OrganizationUpdate_example_autogenerated": {}
        }
      }
    },
    "PDPConfigRead": {
      "name": {
        "typeId": "PDPConfigRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PDPConfigRead",
          "camelCase": {
            "unsafeName": "pdpConfigRead",
            "safeName": "pdpConfigRead"
          },
          "snakeCase": {
            "unsafeName": "pdp_config_read",
            "safeName": "pdp_config_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PDP_CONFIG_READ",
            "safeName": "PDP_CONFIG_READ"
          },
          "pascalCase": {
            "unsafeName": "PdpConfigRead",
            "safeName": "PdpConfigRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the pdp_config belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the pdp_config belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the pdp_config belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "client_secret",
                "camelCase": {
                  "unsafeName": "clientSecret",
                  "safeName": "clientSecret"
                },
                "snakeCase": {
                  "unsafeName": "client_secret",
                  "safeName": "client_secret"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CLIENT_SECRET",
                  "safeName": "CLIENT_SECRET"
                },
                "pascalCase": {
                  "unsafeName": "ClientSecret",
                  "safeName": "ClientSecret"
                }
              },
              "wireValue": "client_secret"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PdpConfigReadClientSecret_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PDPConfigRead_example_autogenerated": {
            "id": "foo",
            "organization_id": "foo",
            "project_id": "foo",
            "environment_id": "foo",
            "client_secret": "foo"
          }
        }
      }
    },
    "PaginatedResult_ConditionSetRead_": {
      "name": {
        "typeId": "PaginatedResult_ConditionSetRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PaginatedResult_ConditionSetRead_",
          "camelCase": {
            "unsafeName": "paginatedResultConditionSetRead",
            "safeName": "paginatedResultConditionSetRead"
          },
          "snakeCase": {
            "unsafeName": "paginated_result_condition_set_read",
            "safeName": "paginated_result_condition_set_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAGINATED_RESULT_CONDITION_SET_READ",
            "safeName": "PAGINATED_RESULT_CONDITION_SET_READ"
          },
          "pascalCase": {
            "unsafeName": "PaginatedResultConditionSetRead",
            "safeName": "PaginatedResultConditionSetRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetRead",
                    "camelCase": {
                      "unsafeName": "conditionSetRead",
                      "safeName": "conditionSetRead"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_read",
                      "safeName": "condition_set_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_READ",
                      "safeName": "CONDITION_SET_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetRead",
                      "safeName": "ConditionSetRead"
                    }
                  },
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Condition Sets",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultConditionSetReadData_example_autogenerated": [
                  {
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "created_at": "foo",
                    "updated_at": "foo",
                    "name": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultConditionSetReadTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "page_count",
                "camelCase": {
                  "unsafeName": "pageCount",
                  "safeName": "pageCount"
                },
                "snakeCase": {
                  "unsafeName": "page_count",
                  "safeName": "page_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_COUNT",
                  "safeName": "PAGE_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "PageCount",
                  "safeName": "PageCount"
                }
              },
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultConditionSetReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_ConditionSetRead__example_autogenerated": {
            "data": [
              {
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo",
                "name": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "PaginatedResult_ResourceRead_": {
      "name": {
        "typeId": "PaginatedResult_ResourceRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PaginatedResult_ResourceRead_",
          "camelCase": {
            "unsafeName": "paginatedResultResourceRead",
            "safeName": "paginatedResultResourceRead"
          },
          "snakeCase": {
            "unsafeName": "paginated_result_resource_read",
            "safeName": "paginated_result_resource_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAGINATED_RESULT_RESOURCE_READ",
            "safeName": "PAGINATED_RESULT_RESOURCE_READ"
          },
          "pascalCase": {
            "unsafeName": "PaginatedResultResourceRead",
            "safeName": "PaginatedResultResourceRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRead",
                    "camelCase": {
                      "unsafeName": "resourceRead",
                      "safeName": "resourceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_read",
                      "safeName": "resource_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_READ",
                      "safeName": "RESOURCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRead",
                      "safeName": "ResourceRead"
                    }
                  },
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Resources",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceReadData_example_autogenerated": [
                  {
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "created_at": "foo",
                    "updated_at": "foo",
                    "name": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceReadTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "page_count",
                "camelCase": {
                  "unsafeName": "pageCount",
                  "safeName": "pageCount"
                },
                "snakeCase": {
                  "unsafeName": "page_count",
                  "safeName": "page_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_COUNT",
                  "safeName": "PAGE_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "PageCount",
                  "safeName": "PageCount"
                }
              },
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_ResourceRead__example_autogenerated": {
            "data": [
              {
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo",
                "name": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "PaginatedResult_ResourceRoleRead_": {
      "name": {
        "typeId": "PaginatedResult_ResourceRoleRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PaginatedResult_ResourceRoleRead_",
          "camelCase": {
            "unsafeName": "paginatedResultResourceRoleRead",
            "safeName": "paginatedResultResourceRoleRead"
          },
          "snakeCase": {
            "unsafeName": "paginated_result_resource_role_read",
            "safeName": "paginated_result_resource_role_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAGINATED_RESULT_RESOURCE_ROLE_READ",
            "safeName": "PAGINATED_RESULT_RESOURCE_ROLE_READ"
          },
          "pascalCase": {
            "unsafeName": "PaginatedResultResourceRoleRead",
            "safeName": "PaginatedResultResourceRoleRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleRead",
                    "camelCase": {
                      "unsafeName": "resourceRoleRead",
                      "safeName": "resourceRoleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_read",
                      "safeName": "resource_role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_READ",
                      "safeName": "RESOURCE_ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleRead",
                      "safeName": "ResourceRoleRead"
                    }
                  },
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Resource Roles",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceRoleReadData_example_autogenerated": [
                  {
                    "name": "foo",
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "resource_id": "foo",
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceRoleReadTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "page_count",
                "camelCase": {
                  "unsafeName": "pageCount",
                  "safeName": "pageCount"
                },
                "snakeCase": {
                  "unsafeName": "page_count",
                  "safeName": "page_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_COUNT",
                  "safeName": "PAGE_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "PageCount",
                  "safeName": "PageCount"
                }
              },
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultResourceRoleReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_ResourceRoleRead__example_autogenerated": {
            "data": [
              {
                "name": "foo",
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "resource_id": "foo",
                "created_at": "foo",
                "updated_at": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "PaginatedResult_RoleRead_": {
      "name": {
        "typeId": "PaginatedResult_RoleRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PaginatedResult_RoleRead_",
          "camelCase": {
            "unsafeName": "paginatedResultRoleRead",
            "safeName": "paginatedResultRoleRead"
          },
          "snakeCase": {
            "unsafeName": "paginated_result_role_read",
            "safeName": "paginated_result_role_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAGINATED_RESULT_ROLE_READ",
            "safeName": "PAGINATED_RESULT_ROLE_READ"
          },
          "pascalCase": {
            "unsafeName": "PaginatedResultRoleRead",
            "safeName": "PaginatedResultRoleRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleRead",
                    "camelCase": {
                      "unsafeName": "roleRead",
                      "safeName": "roleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_read",
                      "safeName": "role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_READ",
                      "safeName": "ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleRead",
                      "safeName": "RoleRead"
                    }
                  },
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Roles",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultRoleReadData_example_autogenerated": [
                  {
                    "name": "foo",
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultRoleReadTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "page_count",
                "camelCase": {
                  "unsafeName": "pageCount",
                  "safeName": "pageCount"
                },
                "snakeCase": {
                  "unsafeName": "page_count",
                  "safeName": "page_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_COUNT",
                  "safeName": "PAGE_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "PageCount",
                  "safeName": "PageCount"
                }
              },
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultRoleReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_RoleRead__example_autogenerated": {
            "data": [
              {
                "name": "foo",
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "PaginatedResult_TenantRead_": {
      "name": {
        "typeId": "PaginatedResult_TenantRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PaginatedResult_TenantRead_",
          "camelCase": {
            "unsafeName": "paginatedResultTenantRead",
            "safeName": "paginatedResultTenantRead"
          },
          "snakeCase": {
            "unsafeName": "paginated_result_tenant_read",
            "safeName": "paginated_result_tenant_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAGINATED_RESULT_TENANT_READ",
            "safeName": "PAGINATED_RESULT_TENANT_READ"
          },
          "pascalCase": {
            "unsafeName": "PaginatedResultTenantRead",
            "safeName": "PaginatedResultTenantRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantRead",
                    "camelCase": {
                      "unsafeName": "tenantRead",
                      "safeName": "tenantRead"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_read",
                      "safeName": "tenant_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_READ",
                      "safeName": "TENANT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantRead",
                      "safeName": "TenantRead"
                    }
                  },
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Tenants",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultTenantReadData_example_autogenerated": [
                  {
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "created_at": "foo",
                    "updated_at": "foo",
                    "last_action_at": "foo",
                    "name": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultTenantReadTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "page_count",
                "camelCase": {
                  "unsafeName": "pageCount",
                  "safeName": "pageCount"
                },
                "snakeCase": {
                  "unsafeName": "page_count",
                  "safeName": "page_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_COUNT",
                  "safeName": "PAGE_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "PageCount",
                  "safeName": "PageCount"
                }
              },
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultTenantReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_TenantRead__example_autogenerated": {
            "data": [
              {
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo",
                "last_action_at": "foo",
                "name": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "PaginatedResult_UserRead_": {
      "name": {
        "typeId": "PaginatedResult_UserRead_",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PaginatedResult_UserRead_",
          "camelCase": {
            "unsafeName": "paginatedResultUserRead",
            "safeName": "paginatedResultUserRead"
          },
          "snakeCase": {
            "unsafeName": "paginated_result_user_read",
            "safeName": "paginated_result_user_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAGINATED_RESULT_USER_READ",
            "safeName": "PAGINATED_RESULT_USER_READ"
          },
          "pascalCase": {
            "unsafeName": "PaginatedResultUserRead",
            "safeName": "PaginatedResultUserRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserRead",
                    "camelCase": {
                      "unsafeName": "userRead",
                      "safeName": "userRead"
                    },
                    "snakeCase": {
                      "unsafeName": "user_read",
                      "safeName": "user_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_READ",
                      "safeName": "USER_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "UserRead",
                      "safeName": "UserRead"
                    }
                  },
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of Users",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultUserReadData_example_autogenerated": [
                  {
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultUserReadTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "page_count",
                "camelCase": {
                  "unsafeName": "pageCount",
                  "safeName": "pageCount"
                },
                "snakeCase": {
                  "unsafeName": "page_count",
                  "safeName": "page_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_COUNT",
                  "safeName": "PAGE_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "PageCount",
                  "safeName": "PageCount"
                }
              },
              "wireValue": "page_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 0,
                      "validation": {
                        "min": 0
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedResultUserReadPageCount_example_autogenerated": 0
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedResult_UserRead__example_autogenerated": {
            "data": [
              {
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "Permission": {
      "name": {
        "typeId": "Permission",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Permission",
          "camelCase": {
            "unsafeName": "permission",
            "safeName": "permission"
          },
          "snakeCase": {
            "unsafeName": "permission",
            "safeName": "permission"
          },
          "screamingSnakeCase": {
            "unsafeName": "PERMISSION",
            "safeName": "PERMISSION"
          },
          "pascalCase": {
            "unsafeName": "Permission",
            "safeName": "Permission"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "object_type",
                "camelCase": {
                  "unsafeName": "objectType",
                  "safeName": "objectType"
                },
                "snakeCase": {
                  "unsafeName": "object_type",
                  "safeName": "object_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OBJECT_TYPE",
                  "safeName": "OBJECT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ObjectType",
                  "safeName": "ObjectType"
                }
              },
              "wireValue": "object_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "MemberAccessObj",
                "camelCase": {
                  "unsafeName": "memberAccessObj",
                  "safeName": "memberAccessObj"
                },
                "snakeCase": {
                  "unsafeName": "member_access_obj",
                  "safeName": "member_access_obj"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEMBER_ACCESS_OBJ",
                  "safeName": "MEMBER_ACCESS_OBJ"
                },
                "pascalCase": {
                  "unsafeName": "MemberAccessObj",
                  "safeName": "MemberAccessObj"
                }
              },
              "typeId": "MemberAccessObj",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "access_level",
                "camelCase": {
                  "unsafeName": "accessLevel",
                  "safeName": "accessLevel"
                },
                "snakeCase": {
                  "unsafeName": "access_level",
                  "safeName": "access_level"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LEVEL",
                  "safeName": "ACCESS_LEVEL"
                },
                "pascalCase": {
                  "unsafeName": "AccessLevel",
                  "safeName": "AccessLevel"
                }
              },
              "wireValue": "access_level"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "MemberAccessLevel",
                "camelCase": {
                  "unsafeName": "memberAccessLevel",
                  "safeName": "memberAccessLevel"
                },
                "snakeCase": {
                  "unsafeName": "member_access_level",
                  "safeName": "member_access_level"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEMBER_ACCESS_LEVEL",
                  "safeName": "MEMBER_ACCESS_LEVEL"
                },
                "pascalCase": {
                  "unsafeName": "MemberAccessLevel",
                  "safeName": "MemberAccessLevel"
                }
              },
              "typeId": "MemberAccessLevel",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_key",
                "camelCase": {
                  "unsafeName": "organizationKey",
                  "safeName": "organizationKey"
                },
                "snakeCase": {
                  "unsafeName": "organization_key",
                  "safeName": "organization_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_KEY",
                  "safeName": "ORGANIZATION_KEY"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationKey",
                  "safeName": "OrganizationKey"
                }
              },
              "wireValue": "organization_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionOrganizationKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_key",
                "camelCase": {
                  "unsafeName": "projectKey",
                  "safeName": "projectKey"
                },
                "snakeCase": {
                  "unsafeName": "project_key",
                  "safeName": "project_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_KEY",
                  "safeName": "PROJECT_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ProjectKey",
                  "safeName": "ProjectKey"
                }
              },
              "wireValue": "project_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionProjectKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_key",
                "camelCase": {
                  "unsafeName": "environmentKey",
                  "safeName": "environmentKey"
                },
                "snakeCase": {
                  "unsafeName": "environment_key",
                  "safeName": "environment_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_KEY",
                  "safeName": "ENVIRONMENT_KEY"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentKey",
                  "safeName": "EnvironmentKey"
                }
              },
              "wireValue": "environment_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionEnvironmentKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_name",
                "camelCase": {
                  "unsafeName": "organizationName",
                  "safeName": "organizationName"
                },
                "snakeCase": {
                  "unsafeName": "organization_name",
                  "safeName": "organization_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_NAME",
                  "safeName": "ORGANIZATION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationName",
                  "safeName": "OrganizationName"
                }
              },
              "wireValue": "organization_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionOrganizationName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_name",
                "camelCase": {
                  "unsafeName": "projectName",
                  "safeName": "projectName"
                },
                "snakeCase": {
                  "unsafeName": "project_name",
                  "safeName": "project_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_NAME",
                  "safeName": "PROJECT_NAME"
                },
                "pascalCase": {
                  "unsafeName": "ProjectName",
                  "safeName": "ProjectName"
                }
              },
              "wireValue": "project_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionProjectName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_name",
                "camelCase": {
                  "unsafeName": "environmentName",
                  "safeName": "environmentName"
                },
                "snakeCase": {
                  "unsafeName": "environment_name",
                  "safeName": "environment_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_NAME",
                  "safeName": "ENVIRONMENT_NAME"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentName",
                  "safeName": "EnvironmentName"
                }
              },
              "wireValue": "environment_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PermissionEnvironmentName_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Permission_example_autogenerated": {
            "organization_id": "foo",
            "object_type": "org",
            "access_level": "admin"
          }
        }
      }
    },
    "ProjectCreateSettings": {
      "name": {
        "typeId": "ProjectCreateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ProjectCreateSettings",
          "camelCase": {
            "unsafeName": "projectCreateSettings",
            "safeName": "projectCreateSettings"
          },
          "snakeCase": {
            "unsafeName": "project_create_settings",
            "safeName": "project_create_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROJECT_CREATE_SETTINGS",
            "safeName": "PROJECT_CREATE_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "ProjectCreateSettings",
            "safeName": "ProjectCreateSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectCreateSettings_example_autogenerated": {}
        }
      }
    },
    "ProjectCreate": {
      "name": {
        "typeId": "ProjectCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ProjectCreate",
          "camelCase": {
            "unsafeName": "projectCreate",
            "safeName": "projectCreate"
          },
          "snakeCase": {
            "unsafeName": "project_create",
            "safeName": "project_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROJECT_CREATE",
            "safeName": "PROJECT_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ProjectCreate",
            "safeName": "ProjectCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the project (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the project.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "urn_namespace",
                "camelCase": {
                  "unsafeName": "urnNamespace",
                  "safeName": "urnNamespace"
                },
                "snakeCase": {
                  "unsafeName": "urn_namespace",
                  "safeName": "urn_namespace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URN_NAMESPACE",
                  "safeName": "URN_NAMESPACE"
                },
                "pascalCase": {
                  "unsafeName": "UrnNamespace",
                  "safeName": "UrnNamespace"
                }
              },
              "wireValue": "urn_namespace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "[a-z0-9-]{2,}"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional namespace for URNs. If empty, URNs will be generated from project key.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateUrnNamespace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a longer description outlining the project objectives",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ProjectCreateSettings",
                    "camelCase": {
                      "unsafeName": "projectCreateSettings",
                      "safeName": "projectCreateSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "project_create_settings",
                      "safeName": "project_create_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROJECT_CREATE_SETTINGS",
                      "safeName": "PROJECT_CREATE_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "ProjectCreateSettings",
                      "safeName": "ProjectCreateSettings"
                    }
                  },
                  "typeId": "ProjectCreateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "active_policy_repo_id",
                "camelCase": {
                  "unsafeName": "activePolicyRepoId",
                  "safeName": "activePolicyRepoId"
                },
                "snakeCase": {
                  "unsafeName": "active_policy_repo_id",
                  "safeName": "active_policy_repo_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIVE_POLICY_REPO_ID",
                  "safeName": "ACTIVE_POLICY_REPO_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActivePolicyRepoId",
                  "safeName": "ActivePolicyRepoId"
                }
              },
              "wireValue": "active_policy_repo_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the policy repo to use for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectCreateActivePolicyRepoId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectCreate_example_autogenerated": {
            "key": "foo",
            "name": "foo"
          }
        }
      }
    },
    "ProjectReadSettings": {
      "name": {
        "typeId": "ProjectReadSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ProjectReadSettings",
          "camelCase": {
            "unsafeName": "projectReadSettings",
            "safeName": "projectReadSettings"
          },
          "snakeCase": {
            "unsafeName": "project_read_settings",
            "safeName": "project_read_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROJECT_READ_SETTINGS",
            "safeName": "PROJECT_READ_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "ProjectReadSettings",
            "safeName": "ProjectReadSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectReadSettings_example_autogenerated": {}
        }
      }
    },
    "ProjectRead": {
      "name": {
        "typeId": "ProjectRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ProjectRead",
          "camelCase": {
            "unsafeName": "projectRead",
            "safeName": "projectRead"
          },
          "snakeCase": {
            "unsafeName": "project_read",
            "safeName": "project_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROJECT_READ",
            "safeName": "PROJECT_READ"
          },
          "pascalCase": {
            "unsafeName": "ProjectRead",
            "safeName": "ProjectRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the project (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the project.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "urn_namespace",
                "camelCase": {
                  "unsafeName": "urnNamespace",
                  "safeName": "urnNamespace"
                },
                "snakeCase": {
                  "unsafeName": "urn_namespace",
                  "safeName": "urn_namespace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URN_NAMESPACE",
                  "safeName": "URN_NAMESPACE"
                },
                "pascalCase": {
                  "unsafeName": "UrnNamespace",
                  "safeName": "UrnNamespace"
                }
              },
              "wireValue": "urn_namespace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "[a-z0-9-]{2,}"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional namespace for URNs. If empty, URNs will be generated from project key.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadUrnNamespace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the project belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the project was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the project was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a longer description outlining the project objectives",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ProjectReadSettings",
                    "camelCase": {
                      "unsafeName": "projectReadSettings",
                      "safeName": "projectReadSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "project_read_settings",
                      "safeName": "project_read_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROJECT_READ_SETTINGS",
                      "safeName": "PROJECT_READ_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "ProjectReadSettings",
                      "safeName": "ProjectReadSettings"
                    }
                  },
                  "typeId": "ProjectReadSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "active_policy_repo_id",
                "camelCase": {
                  "unsafeName": "activePolicyRepoId",
                  "safeName": "activePolicyRepoId"
                },
                "snakeCase": {
                  "unsafeName": "active_policy_repo_id",
                  "safeName": "active_policy_repo_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIVE_POLICY_REPO_ID",
                  "safeName": "ACTIVE_POLICY_REPO_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActivePolicyRepoId",
                  "safeName": "ActivePolicyRepoId"
                }
              },
              "wireValue": "active_policy_repo_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the policy repo to use for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectReadActivePolicyRepoId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectRead_example_autogenerated": {
            "key": "foo",
            "id": "foo",
            "organization_id": "foo",
            "created_at": "foo",
            "updated_at": "foo",
            "name": "foo"
          }
        }
      }
    },
    "ProjectUpdateSettings": {
      "name": {
        "typeId": "ProjectUpdateSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ProjectUpdateSettings",
          "camelCase": {
            "unsafeName": "projectUpdateSettings",
            "safeName": "projectUpdateSettings"
          },
          "snakeCase": {
            "unsafeName": "project_update_settings",
            "safeName": "project_update_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROJECT_UPDATE_SETTINGS",
            "safeName": "PROJECT_UPDATE_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "ProjectUpdateSettings",
            "safeName": "ProjectUpdateSettings"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "the settings for this project",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectUpdateSettings_example_autogenerated": {}
        }
      }
    },
    "ProjectUpdate": {
      "name": {
        "typeId": "ProjectUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ProjectUpdate",
          "camelCase": {
            "unsafeName": "projectUpdate",
            "safeName": "projectUpdate"
          },
          "snakeCase": {
            "unsafeName": "project_update",
            "safeName": "project_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROJECT_UPDATE",
            "safeName": "PROJECT_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ProjectUpdate",
            "safeName": "ProjectUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a longer description outlining the project objectives",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "settings",
                "camelCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "snakeCase": {
                  "unsafeName": "settings",
                  "safeName": "settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SETTINGS",
                  "safeName": "SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "Settings",
                  "safeName": "Settings"
                }
              },
              "wireValue": "settings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ProjectUpdateSettings",
                    "camelCase": {
                      "unsafeName": "projectUpdateSettings",
                      "safeName": "projectUpdateSettings"
                    },
                    "snakeCase": {
                      "unsafeName": "project_update_settings",
                      "safeName": "project_update_settings"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROJECT_UPDATE_SETTINGS",
                      "safeName": "PROJECT_UPDATE_SETTINGS"
                    },
                    "pascalCase": {
                      "unsafeName": "ProjectUpdateSettings",
                      "safeName": "ProjectUpdateSettings"
                    }
                  },
                  "typeId": "ProjectUpdateSettings",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the settings for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateSettings_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "active_policy_repo_id",
                "camelCase": {
                  "unsafeName": "activePolicyRepoId",
                  "safeName": "activePolicyRepoId"
                },
                "snakeCase": {
                  "unsafeName": "active_policy_repo_id",
                  "safeName": "active_policy_repo_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIVE_POLICY_REPO_ID",
                  "safeName": "ACTIVE_POLICY_REPO_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActivePolicyRepoId",
                  "safeName": "ActivePolicyRepoId"
                }
              },
              "wireValue": "active_policy_repo_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the policy repo to use for this project",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ProjectUpdateActivePolicyRepoId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProjectUpdate_example_autogenerated": {}
        }
      }
    },
    "RelationsBlock": {
      "name": {
        "typeId": "RelationsBlock",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RelationsBlock",
          "camelCase": {
            "unsafeName": "relationsBlock",
            "safeName": "relationsBlock"
          },
          "snakeCase": {
            "unsafeName": "relations_block",
            "safeName": "relations_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "RELATIONS_BLOCK",
            "safeName": "RELATIONS_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "RelationsBlock",
            "safeName": "RelationsBlock"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "A actions definition block, typically contained within a resource type definition block.\nThe actions represents the ways you can interact with a protected resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RelationsBlock_example_autogenerated": {}
        }
      }
    },
    "RemoveRolePermissions": {
      "name": {
        "typeId": "RemoveRolePermissions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RemoveRolePermissions",
          "camelCase": {
            "unsafeName": "removeRolePermissions",
            "safeName": "removeRolePermissions"
          },
          "snakeCase": {
            "unsafeName": "remove_role_permissions",
            "safeName": "remove_role_permissions"
          },
          "screamingSnakeCase": {
            "unsafeName": "REMOVE_ROLE_PERMISSIONS",
            "safeName": "REMOVE_ROLE_PERMISSIONS"
          },
          "pascalCase": {
            "unsafeName": "RemoveRolePermissions",
            "safeName": "RemoveRolePermissions"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of permissions to remove from the role. If a permission is not found it is skipped. Each permission can be either a resource action id, or `{resource_key}:{action_key}`,i.e: the \"permission name\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RemoveRolePermissionsPermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RemoveRolePermissions_example_0": {
            "permissions": [
              "document:share"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionCreateAttributes": {
      "name": {
        "typeId": "ResourceActionCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionCreateAttributes",
          "camelCase": {
            "unsafeName": "resourceActionCreateAttributes",
            "safeName": "resourceActionCreateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_action_create_attributes",
            "safeName": "resource_action_create_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_CREATE_ATTRIBUTES",
            "safeName": "RESOURCE_ACTION_CREATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionCreateAttributes",
            "safeName": "ResourceActionCreateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionCreate": {
      "name": {
        "typeId": "ResourceActionCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionCreate",
          "camelCase": {
            "unsafeName": "resourceActionCreate",
            "safeName": "resourceActionCreate"
          },
          "snakeCase": {
            "unsafeName": "resource_action_create",
            "safeName": "resource_action_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_CREATE",
            "safeName": "RESOURCE_ACTION_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionCreate",
            "safeName": "ResourceActionCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionCreateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceActionCreateAttributes",
                      "safeName": "resourceActionCreateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_create_attributes",
                      "safeName": "resource_action_create_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_CREATE_ATTRIBUTES",
                      "safeName": "RESOURCE_ACTION_CREATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionCreateAttributes",
                      "safeName": "ResourceActionCreateAttributes"
                    }
                  },
                  "typeId": "ResourceActionCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionCreate_example_0": {
            "key": "read",
            "name": "read",
            "description": "read a document"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionGroupCreateAttributes": {
      "name": {
        "typeId": "ResourceActionGroupCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionGroupCreateAttributes",
          "camelCase": {
            "unsafeName": "resourceActionGroupCreateAttributes",
            "safeName": "resourceActionGroupCreateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_action_group_create_attributes",
            "safeName": "resource_action_group_create_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_GROUP_CREATE_ATTRIBUTES",
            "safeName": "RESOURCE_ACTION_GROUP_CREATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionGroupCreateAttributes",
            "safeName": "ResourceActionGroupCreateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionGroupCreate": {
      "name": {
        "typeId": "ResourceActionGroupCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionGroupCreate",
          "camelCase": {
            "unsafeName": "resourceActionGroupCreate",
            "safeName": "resourceActionGroupCreate"
          },
          "snakeCase": {
            "unsafeName": "resource_action_group_create",
            "safeName": "resource_action_group_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_GROUP_CREATE",
            "safeName": "RESOURCE_ACTION_GROUP_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionGroupCreate",
            "safeName": "ResourceActionGroupCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action group (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action group.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action group represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionGroupCreateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceActionGroupCreateAttributes",
                      "safeName": "resourceActionGroupCreateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_group_create_attributes",
                      "safeName": "resource_action_group_create_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_GROUP_CREATE_ATTRIBUTES",
                      "safeName": "RESOURCE_ACTION_GROUP_CREATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionGroupCreateAttributes",
                      "safeName": "ResourceActionGroupCreateAttributes"
                    }
                  },
                  "typeId": "ResourceActionGroupCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "actions",
                "camelCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "snakeCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIONS",
                  "safeName": "ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Actions",
                  "safeName": "Actions"
                }
              },
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupCreateActions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionGroupCreate_example_0": {
            "key": "writer",
            "name": "Writer",
            "description": "Writer Action Group",
            "actions": [
              "read",
              "update"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionGroupReadAttributes": {
      "name": {
        "typeId": "ResourceActionGroupReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionGroupReadAttributes",
          "camelCase": {
            "unsafeName": "resourceActionGroupReadAttributes",
            "safeName": "resourceActionGroupReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_action_group_read_attributes",
            "safeName": "resource_action_group_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_GROUP_READ_ATTRIBUTES",
            "safeName": "RESOURCE_ACTION_GROUP_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionGroupReadAttributes",
            "safeName": "ResourceActionGroupReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionGroupRead": {
      "name": {
        "typeId": "ResourceActionGroupRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionGroupRead",
          "camelCase": {
            "unsafeName": "resourceActionGroupRead",
            "safeName": "resourceActionGroupRead"
          },
          "snakeCase": {
            "unsafeName": "resource_action_group_read",
            "safeName": "resource_action_group_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_GROUP_READ",
            "safeName": "RESOURCE_ACTION_GROUP_READ"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionGroupRead",
            "safeName": "ResourceActionGroupRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action group represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionGroupReadAttributes",
                    "camelCase": {
                      "unsafeName": "resourceActionGroupReadAttributes",
                      "safeName": "resourceActionGroupReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_group_read_attributes",
                      "safeName": "resource_action_group_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_GROUP_READ_ATTRIBUTES",
                      "safeName": "RESOURCE_ACTION_GROUP_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionGroupReadAttributes",
                      "safeName": "ResourceActionGroupReadAttributes"
                    }
                  },
                  "typeId": "ResourceActionGroupReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "actions",
                "camelCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "snakeCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIONS",
                  "safeName": "ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Actions",
                  "safeName": "Actions"
                }
              },
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadActions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action group (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action group.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the action group belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadResourceId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action group was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action group was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionGroupRead_example_0": {
            "name": "Writer",
            "description": "Writer Action Group",
            "actions": [
              "read",
              "update"
            ],
            "key": "writer",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionGroupUpdateAttributes": {
      "name": {
        "typeId": "ResourceActionGroupUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionGroupUpdateAttributes",
          "camelCase": {
            "unsafeName": "resourceActionGroupUpdateAttributes",
            "safeName": "resourceActionGroupUpdateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_action_group_update_attributes",
            "safeName": "resource_action_group_update_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_GROUP_UPDATE_ATTRIBUTES",
            "safeName": "RESOURCE_ACTION_GROUP_UPDATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionGroupUpdateAttributes",
            "safeName": "ResourceActionGroupUpdateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionGroupUpdate": {
      "name": {
        "typeId": "ResourceActionGroupUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionGroupUpdate",
          "camelCase": {
            "unsafeName": "resourceActionGroupUpdate",
            "safeName": "resourceActionGroupUpdate"
          },
          "snakeCase": {
            "unsafeName": "resource_action_group_update",
            "safeName": "resource_action_group_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_GROUP_UPDATE",
            "safeName": "RESOURCE_ACTION_GROUP_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionGroupUpdate",
            "safeName": "ResourceActionGroupUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the action group",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action group represents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionGroupUpdateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceActionGroupUpdateAttributes",
                      "safeName": "resourceActionGroupUpdateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_group_update_attributes",
                      "safeName": "resource_action_group_update_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_GROUP_UPDATE_ATTRIBUTES",
                      "safeName": "RESOURCE_ACTION_GROUP_UPDATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionGroupUpdateAttributes",
                      "safeName": "ResourceActionGroupUpdateAttributes"
                    }
                  },
                  "typeId": "ResourceActionGroupUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "actions",
                "camelCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "snakeCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIONS",
                  "safeName": "ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Actions",
                  "safeName": "Actions"
                }
              },
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionGroupUpdateActions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionGroupUpdate_example_autogenerated": {}
        }
      }
    },
    "ResourceActionReadAttributes": {
      "name": {
        "typeId": "ResourceActionReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionReadAttributes",
          "camelCase": {
            "unsafeName": "resourceActionReadAttributes",
            "safeName": "resourceActionReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_action_read_attributes",
            "safeName": "resource_action_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_READ_ATTRIBUTES",
            "safeName": "RESOURCE_ACTION_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionReadAttributes",
            "safeName": "ResourceActionReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionRead": {
      "name": {
        "typeId": "ResourceActionRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionRead",
          "camelCase": {
            "unsafeName": "resourceActionRead",
            "safeName": "resourceActionRead"
          },
          "snakeCase": {
            "unsafeName": "resource_action_read",
            "safeName": "resource_action_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_READ",
            "safeName": "RESOURCE_ACTION_READ"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionRead",
            "safeName": "ResourceActionRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionReadAttributes",
                    "camelCase": {
                      "unsafeName": "resourceActionReadAttributes",
                      "safeName": "resourceActionReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_read_attributes",
                      "safeName": "resource_action_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_READ_ATTRIBUTES",
                      "safeName": "RESOURCE_ACTION_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionReadAttributes",
                      "safeName": "ResourceActionReadAttributes"
                    }
                  },
                  "typeId": "ResourceActionReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the action (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permission_name",
                "camelCase": {
                  "unsafeName": "permissionName",
                  "safeName": "permissionName"
                },
                "snakeCase": {
                  "unsafeName": "permission_name",
                  "safeName": "permission_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSION_NAME",
                  "safeName": "PERMISSION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "PermissionName",
                  "safeName": "PermissionName"
                }
              },
              "wireValue": "permission_name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the action, prefixed by the resource the action is acting upon.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadPermissionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the action belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadResourceId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the action was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionRead_example_0": {
            "name": "read",
            "description": "read a document",
            "key": "read",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "permission_name": "document:read",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceActionUpdateAttributes": {
      "name": {
        "typeId": "ResourceActionUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionUpdateAttributes",
          "camelCase": {
            "unsafeName": "resourceActionUpdateAttributes",
            "safeName": "resourceActionUpdateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_action_update_attributes",
            "safeName": "resource_action_update_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_UPDATE_ATTRIBUTES",
            "safeName": "RESOURCE_ACTION_UPDATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionUpdateAttributes",
            "safeName": "ResourceActionUpdateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceActionUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceActionUpdate": {
      "name": {
        "typeId": "ResourceActionUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceActionUpdate",
          "camelCase": {
            "unsafeName": "resourceActionUpdate",
            "safeName": "resourceActionUpdate"
          },
          "snakeCase": {
            "unsafeName": "resource_action_update",
            "safeName": "resource_action_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_UPDATE",
            "safeName": "RESOURCE_ACTION_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionUpdate",
            "safeName": "ResourceActionUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the action",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this action respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionUpdateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceActionUpdateAttributes",
                      "safeName": "resourceActionUpdateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_update_attributes",
                      "safeName": "resource_action_update_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_UPDATE_ATTRIBUTES",
                      "safeName": "RESOURCE_ACTION_UPDATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionUpdateAttributes",
                      "safeName": "ResourceActionUpdateAttributes"
                    }
                  },
                  "typeId": "ResourceActionUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action. This metadata can be used to filter actions using query parameters with attr_ prefix",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceActionUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceActionUpdate_example_0": {
            "description": "read a document"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceAttributeCreate": {
      "name": {
        "typeId": "ResourceAttributeCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceAttributeCreate",
          "camelCase": {
            "unsafeName": "resourceAttributeCreate",
            "safeName": "resourceAttributeCreate"
          },
          "snakeCase": {
            "unsafeName": "resource_attribute_create",
            "safeName": "resource_attribute_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ATTRIBUTE_CREATE",
            "safeName": "RESOURCE_ATTRIBUTE_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceAttributeCreate",
            "safeName": "ResourceAttributeCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AttributeType",
                "camelCase": {
                  "unsafeName": "attributeType",
                  "safeName": "attributeType"
                },
                "snakeCase": {
                  "unsafeName": "attribute_type",
                  "safeName": "attribute_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_TYPE",
                  "safeName": "ATTRIBUTE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "AttributeType",
                  "safeName": "AttributeType"
                }
              },
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this attribute respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeCreateDescription_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceAttributeCreate_example_0": {
            "key": "private",
            "type": "bool",
            "description": "whether or not the github repository is private"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceAttributeRead": {
      "name": {
        "typeId": "ResourceAttributeRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceAttributeRead",
          "camelCase": {
            "unsafeName": "resourceAttributeRead",
            "safeName": "resourceAttributeRead"
          },
          "snakeCase": {
            "unsafeName": "resource_attribute_read",
            "safeName": "resource_attribute_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ATTRIBUTE_READ",
            "safeName": "RESOURCE_ATTRIBUTE_READ"
          },
          "pascalCase": {
            "unsafeName": "ResourceAttributeRead",
            "safeName": "ResourceAttributeRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AttributeType",
                "camelCase": {
                  "unsafeName": "attributeType",
                  "safeName": "attributeType"
                },
                "snakeCase": {
                  "unsafeName": "attribute_type",
                  "safeName": "attribute_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_TYPE",
                  "safeName": "ATTRIBUTE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "AttributeType",
                  "safeName": "AttributeType"
                }
              },
              "typeId": "AttributeType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this attribute respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the attribute",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadResourceId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_key",
                "camelCase": {
                  "unsafeName": "resourceKey",
                  "safeName": "resourceKey"
                },
                "snakeCase": {
                  "unsafeName": "resource_key",
                  "safeName": "resource_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_KEY",
                  "safeName": "RESOURCE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ResourceKey",
                  "safeName": "ResourceKey"
                }
              },
              "wireValue": "resource_key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadResourceKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the attribute belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the attribute was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the attribute was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "built_in",
                "camelCase": {
                  "unsafeName": "builtIn",
                  "safeName": "builtIn"
                },
                "snakeCase": {
                  "unsafeName": "built_in",
                  "safeName": "built_in"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUILT_IN",
                  "safeName": "BUILT_IN"
                },
                "pascalCase": {
                  "unsafeName": "BuiltIn",
                  "safeName": "BuiltIn"
                }
              },
              "wireValue": "built_in"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether the attribute is built-in, and managed by the Permit system.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeReadBuiltIn_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceAttributeRead_example_0": {
            "type": "bool",
            "description": "whether or not the github repository is private",
            "key": "private",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "resource_key": "repository",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "built_in": false
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceAttributeUpdate": {
      "name": {
        "typeId": "ResourceAttributeUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceAttributeUpdate",
          "camelCase": {
            "unsafeName": "resourceAttributeUpdate",
            "safeName": "resourceAttributeUpdate"
          },
          "snakeCase": {
            "unsafeName": "resource_attribute_update",
            "safeName": "resource_attribute_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ATTRIBUTE_UPDATE",
            "safeName": "RESOURCE_ATTRIBUTE_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceAttributeUpdate",
            "safeName": "ResourceAttributeUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "AttributeType",
                    "camelCase": {
                      "unsafeName": "attributeType",
                      "safeName": "attributeType"
                    },
                    "snakeCase": {
                      "unsafeName": "attribute_type",
                      "safeName": "attribute_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ATTRIBUTE_TYPE",
                      "safeName": "ATTRIBUTE_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "AttributeType",
                      "safeName": "AttributeType"
                    }
                  },
                  "typeId": "AttributeType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this attribute respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceAttributeUpdateDescription_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceAttributeUpdate_example_0": {
            "description": "whether or not the github repository is private"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceCreate": {
      "name": {
        "typeId": "ResourceCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceCreate",
          "camelCase": {
            "unsafeName": "resourceCreate",
            "safeName": "resourceCreate"
          },
          "snakeCase": {
            "unsafeName": "resource_create",
            "safeName": "resource_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_CREATE",
            "safeName": "RESOURCE_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceCreate",
            "safeName": "ResourceCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "urn",
                "camelCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "snakeCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URN",
                  "safeName": "URN"
                },
                "pascalCase": {
                  "unsafeName": "Urn",
                  "safeName": "Urn"
                }
              },
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateUrn_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "actions",
                "camelCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "snakeCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIONS",
                  "safeName": "ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Actions",
                  "safeName": "Actions"
                }
              },
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ActionBlockEditable",
                    "camelCase": {
                      "unsafeName": "actionBlockEditable",
                      "safeName": "actionBlockEditable"
                    },
                    "snakeCase": {
                      "unsafeName": "action_block_editable",
                      "safeName": "action_block_editable"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ACTION_BLOCK_EDITABLE",
                      "safeName": "ACTION_BLOCK_EDITABLE"
                    },
                    "pascalCase": {
                      "unsafeName": "ActionBlockEditable",
                      "safeName": "ActionBlockEditable"
                    }
                  },
                  "typeId": "ActionBlockEditable",
                  "inline": false,
                  "type": "named"
                },
                "type": "map"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "AttributeBlockEditable",
                        "camelCase": {
                          "unsafeName": "attributeBlockEditable",
                          "safeName": "attributeBlockEditable"
                        },
                        "snakeCase": {
                          "unsafeName": "attribute_block_editable",
                          "safeName": "attribute_block_editable"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ATTRIBUTE_BLOCK_EDITABLE",
                          "safeName": "ATTRIBUTE_BLOCK_EDITABLE"
                        },
                        "pascalCase": {
                          "unsafeName": "AttributeBlockEditable",
                          "safeName": "AttributeBlockEditable"
                        }
                      },
                      "typeId": "AttributeBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceCreate_example_0": {
            "key": "repository",
            "name": "Repository",
            "actions": {
              "clone": {},
              "read": {},
              "push": {}
            },
            "attributes": {
              "created": {
                "type": "time",
                "description": "the time (timestamp) the repository was created"
              },
              "private": {
                "type": "bool",
                "description": "whether the repo is private (if false, the repo is public)"
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceInstanceCreateAttributes": {
      "name": {
        "typeId": "ResourceInstanceCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceInstanceCreateAttributes",
          "camelCase": {
            "unsafeName": "resourceInstanceCreateAttributes",
            "safeName": "resourceInstanceCreateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_instance_create_attributes",
            "safeName": "resource_instance_create_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_INSTANCE_CREATE_ATTRIBUTES",
            "safeName": "RESOURCE_INSTANCE_CREATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceInstanceCreateAttributes",
            "safeName": "ResourceInstanceCreateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceInstanceCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceInstanceCreate": {
      "name": {
        "typeId": "ResourceInstanceCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceInstanceCreate",
          "camelCase": {
            "unsafeName": "resourceInstanceCreate",
            "safeName": "resourceInstanceCreate"
          },
          "snakeCase": {
            "unsafeName": "resource_instance_create",
            "safeName": "resource_instance_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_INSTANCE_CREATE",
            "safeName": "RESOURCE_INSTANCE_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceInstanceCreate",
            "safeName": "ResourceInstanceCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier by which Permit will identify the resource instance for permission checks. You will later pass this identifier to the `permit.check()` API. A key can be anything: for example the resource db id, a url slug, a UUID or anything else as long as it's unique on your end. The resource instance key must be url-friendly.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the *key* of the tenant that this resource belongs to, used to enforce tenant boundaries in multi-tenant apps.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateTenant_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource",
                "camelCase": {
                  "unsafeName": "resource",
                  "safeName": "resource"
                },
                "snakeCase": {
                  "unsafeName": "resource",
                  "safeName": "resource"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE",
                  "safeName": "RESOURCE"
                },
                "pascalCase": {
                  "unsafeName": "Resource",
                  "safeName": "Resource"
                }
              },
              "wireValue": "resource"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the *key* of the resource (type) of this resource instance. For example: if this resource instance is the annual budget document, the key of the resource might be `document`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateResource_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceInstanceCreateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceInstanceCreateAttributes",
                      "safeName": "resourceInstanceCreateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_instance_create_attributes",
                      "safeName": "resource_instance_create_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_INSTANCE_CREATE_ATTRIBUTES",
                      "safeName": "RESOURCE_INSTANCE_CREATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceInstanceCreateAttributes",
                      "safeName": "ResourceInstanceCreateAttributes"
                    }
                  },
                  "typeId": "ResourceInstanceCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceInstanceCreate_example_0": {
            "key": "react",
            "tenant": "default",
            "resource": "repository",
            "attributes": {
              "private": "false",
              "owner": "facebook"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceInstanceReadAttributes": {
      "name": {
        "typeId": "ResourceInstanceReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceInstanceReadAttributes",
          "camelCase": {
            "unsafeName": "resourceInstanceReadAttributes",
            "safeName": "resourceInstanceReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_instance_read_attributes",
            "safeName": "resource_instance_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_INSTANCE_READ_ATTRIBUTES",
            "safeName": "RESOURCE_INSTANCE_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceInstanceReadAttributes",
            "safeName": "ResourceInstanceReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceInstanceReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceInstanceRead": {
      "name": {
        "typeId": "ResourceInstanceRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceInstanceRead",
          "camelCase": {
            "unsafeName": "resourceInstanceRead",
            "safeName": "resourceInstanceRead"
          },
          "snakeCase": {
            "unsafeName": "resource_instance_read",
            "safeName": "resource_instance_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_INSTANCE_READ",
            "safeName": "RESOURCE_INSTANCE_READ"
          },
          "pascalCase": {
            "unsafeName": "ResourceInstanceRead",
            "safeName": "ResourceInstanceRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique identifier by which Permit will identify the resource instance for permission checks. You will later pass this identifier to the `permit.check()` API. A key can be anything: for example the resource db id, a url slug, a UUID or anything else as long as it's unique on your end. The resource instance key must be url-friendly.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the *key* of the tenant that this resource belongs to, used to enforce tenant boundaries in multi-tenant apps.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadTenant_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource",
                "camelCase": {
                  "unsafeName": "resource",
                  "safeName": "resource"
                },
                "snakeCase": {
                  "unsafeName": "resource",
                  "safeName": "resource"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE",
                  "safeName": "RESOURCE"
                },
                "pascalCase": {
                  "unsafeName": "Resource",
                  "safeName": "Resource"
                }
              },
              "wireValue": "resource"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the *key* of the resource (type) of this resource instance. For example: if this resource instance is the annual budget document, the key of the resource might be `document`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadResource_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource instance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the resource instance belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the resource instance belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the resource instance belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource instance was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource instance was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the id of the resource (type) of this resource instance.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadResourceId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "wireValue": "tenant_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the id of the tenant of this resource instance.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadTenantId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceInstanceReadAttributes",
                    "camelCase": {
                      "unsafeName": "resourceInstanceReadAttributes",
                      "safeName": "resourceInstanceReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_instance_read_attributes",
                      "safeName": "resource_instance_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_INSTANCE_READ_ATTRIBUTES",
                      "safeName": "RESOURCE_INSTANCE_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceInstanceReadAttributes",
                      "safeName": "ResourceInstanceReadAttributes"
                    }
                  },
                  "typeId": "ResourceInstanceReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceReadAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceInstanceRead_example_0": {
            "key": "react",
            "tenant": "default",
            "resource": "repository",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
            "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
            "attributes": {
              "private": "false",
              "owner": "facebook"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceInstanceUpdateAttributes": {
      "name": {
        "typeId": "ResourceInstanceUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceInstanceUpdateAttributes",
          "camelCase": {
            "unsafeName": "resourceInstanceUpdateAttributes",
            "safeName": "resourceInstanceUpdateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_instance_update_attributes",
            "safeName": "resource_instance_update_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_INSTANCE_UPDATE_ATTRIBUTES",
            "safeName": "RESOURCE_INSTANCE_UPDATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceInstanceUpdateAttributes",
            "safeName": "ResourceInstanceUpdateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceInstanceUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceInstanceUpdate": {
      "name": {
        "typeId": "ResourceInstanceUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceInstanceUpdate",
          "camelCase": {
            "unsafeName": "resourceInstanceUpdate",
            "safeName": "resourceInstanceUpdate"
          },
          "snakeCase": {
            "unsafeName": "resource_instance_update",
            "safeName": "resource_instance_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_INSTANCE_UPDATE",
            "safeName": "RESOURCE_INSTANCE_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceInstanceUpdate",
            "safeName": "ResourceInstanceUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceInstanceUpdateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceInstanceUpdateAttributes",
                      "safeName": "resourceInstanceUpdateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_instance_update_attributes",
                      "safeName": "resource_instance_update_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_INSTANCE_UPDATE_ATTRIBUTES",
                      "safeName": "RESOURCE_INSTANCE_UPDATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceInstanceUpdateAttributes",
                      "safeName": "ResourceInstanceUpdateAttributes"
                    }
                  },
                  "typeId": "ResourceInstanceUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty resource attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceInstanceUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceInstanceUpdate_example_0": {
            "attributes": {
              "private": "false",
              "owner": "facebook"
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceRead": {
      "name": {
        "typeId": "ResourceRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRead",
          "camelCase": {
            "unsafeName": "resourceRead",
            "safeName": "resourceRead"
          },
          "snakeCase": {
            "unsafeName": "resource_read",
            "safeName": "resource_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_READ",
            "safeName": "RESOURCE_READ"
          },
          "pascalCase": {
            "unsafeName": "ResourceRead",
            "safeName": "ResourceRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the resource belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the resource belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the resource belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the resource was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "urn",
                "camelCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "snakeCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URN",
                  "safeName": "URN"
                },
                "pascalCase": {
                  "unsafeName": "Urn",
                  "safeName": "Urn"
                }
              },
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadUrn_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "actions",
                "camelCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "snakeCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIONS",
                  "safeName": "ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Actions",
                  "safeName": "Actions"
                }
              },
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ActionBlockRead",
                        "camelCase": {
                          "unsafeName": "actionBlockRead",
                          "safeName": "actionBlockRead"
                        },
                        "snakeCase": {
                          "unsafeName": "action_block_read",
                          "safeName": "action_block_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ACTION_BLOCK_READ",
                          "safeName": "ACTION_BLOCK_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ActionBlockRead",
                          "safeName": "ActionBlockRead"
                        }
                      },
                      "typeId": "ActionBlockRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "AttributeBlockRead",
                        "camelCase": {
                          "unsafeName": "attributeBlockRead",
                          "safeName": "attributeBlockRead"
                        },
                        "snakeCase": {
                          "unsafeName": "attribute_block_read",
                          "safeName": "attribute_block_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ATTRIBUTE_BLOCK_READ",
                          "safeName": "ATTRIBUTE_BLOCK_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "AttributeBlockRead",
                          "safeName": "AttributeBlockRead"
                        }
                      },
                      "typeId": "AttributeBlockRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "action_groups",
                "camelCase": {
                  "unsafeName": "actionGroups",
                  "safeName": "actionGroups"
                },
                "snakeCase": {
                  "unsafeName": "action_groups",
                  "safeName": "action_groups"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_GROUPS",
                  "safeName": "ACTION_GROUPS"
                },
                "pascalCase": {
                  "unsafeName": "ActionGroups",
                  "safeName": "ActionGroups"
                }
              },
              "wireValue": "action_groups"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReadActionGroups_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRead_example_0": {
            "key": "repository",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "name": "Repository",
            "urn": "prn:github:scm:repository",
            "description": "a git repository stored on github",
            "actions": {
              "clone": {
                "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
              },
              "read": {
                "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
              },
              "push": {
                "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
              }
            },
            "attributes": {
              "created": {
                "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                "type": "time",
                "description": "the time (timestamp) the repository was created"
              },
              "private": {
                "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                "type": "bool",
                "description": "whether the repo is private (if false, the repo is public)"
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceReplace": {
      "name": {
        "typeId": "ResourceReplace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceReplace",
          "camelCase": {
            "unsafeName": "resourceReplace",
            "safeName": "resourceReplace"
          },
          "snakeCase": {
            "unsafeName": "resource_replace",
            "safeName": "resource_replace"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_REPLACE",
            "safeName": "RESOURCE_REPLACE"
          },
          "pascalCase": {
            "unsafeName": "ResourceReplace",
            "safeName": "ResourceReplace"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "urn",
                "camelCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "snakeCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URN",
                  "safeName": "URN"
                },
                "pascalCase": {
                  "unsafeName": "Urn",
                  "safeName": "Urn"
                }
              },
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceUrn_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "actions",
                "camelCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "snakeCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIONS",
                  "safeName": "ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Actions",
                  "safeName": "Actions"
                }
              },
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ActionBlockEditable",
                    "camelCase": {
                      "unsafeName": "actionBlockEditable",
                      "safeName": "actionBlockEditable"
                    },
                    "snakeCase": {
                      "unsafeName": "action_block_editable",
                      "safeName": "action_block_editable"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ACTION_BLOCK_EDITABLE",
                      "safeName": "ACTION_BLOCK_EDITABLE"
                    },
                    "pascalCase": {
                      "unsafeName": "ActionBlockEditable",
                      "safeName": "ActionBlockEditable"
                    }
                  },
                  "typeId": "ActionBlockEditable",
                  "inline": false,
                  "type": "named"
                },
                "type": "map"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "AttributeBlockEditable",
                        "camelCase": {
                          "unsafeName": "attributeBlockEditable",
                          "safeName": "attributeBlockEditable"
                        },
                        "snakeCase": {
                          "unsafeName": "attribute_block_editable",
                          "safeName": "attribute_block_editable"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ATTRIBUTE_BLOCK_EDITABLE",
                          "safeName": "ATTRIBUTE_BLOCK_EDITABLE"
                        },
                        "pascalCase": {
                          "unsafeName": "AttributeBlockEditable",
                          "safeName": "AttributeBlockEditable"
                        }
                      },
                      "typeId": "AttributeBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceReplaceAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceReplace_example_autogenerated": {
            "name": "foo",
            "actions": {}
          }
        }
      }
    },
    "ResourceRoleCreateAttributes": {
      "name": {
        "typeId": "ResourceRoleCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleCreateAttributes",
          "camelCase": {
            "unsafeName": "resourceRoleCreateAttributes",
            "safeName": "resourceRoleCreateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_role_create_attributes",
            "safeName": "resource_role_create_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_CREATE_ATTRIBUTES",
            "safeName": "RESOURCE_ROLE_CREATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleCreateAttributes",
            "safeName": "ResourceRoleCreateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceRoleCreate": {
      "name": {
        "typeId": "ResourceRoleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleCreate",
          "camelCase": {
            "unsafeName": "resourceRoleCreate",
            "safeName": "resourceRoleCreate"
          },
          "snakeCase": {
            "unsafeName": "resource_role_create",
            "safeName": "resource_role_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_CREATE",
            "safeName": "RESOURCE_ROLE_CREATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleCreate",
            "safeName": "ResourceRoleCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreatePermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleCreateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceRoleCreateAttributes",
                      "safeName": "resourceRoleCreateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_create_attributes",
                      "safeName": "resource_role_create_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_CREATE_ATTRIBUTES",
                      "safeName": "RESOURCE_ROLE_CREATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleCreateAttributes",
                      "safeName": "ResourceRoleCreateAttributes"
                    }
                  },
                  "typeId": "ResourceRoleCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTENDS",
                  "safeName": "EXTENDS"
                },
                "pascalCase": {
                  "unsafeName": "Extends",
                  "safeName": "Extends"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleCreateExtends_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRoleCreate_example_0": {
            "key": "maintainer",
            "name": "Maintainer",
            "description": "the maintainer role can read from the repo and push changes",
            "permissions": [
              "push"
            ],
            "extends": [
              "contributor"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceRoleListRoles0": {
      "name": {
        "typeId": "ResourceRoleListRoles0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleListRoles0",
          "camelCase": {
            "unsafeName": "resourceRoleListRoles0",
            "safeName": "resourceRoleListRoles0"
          },
          "snakeCase": {
            "unsafeName": "resource_role_list_roles_0",
            "safeName": "resource_role_list_roles_0"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_LIST_ROLES_0",
            "safeName": "RESOURCE_ROLE_LIST_ROLES_0"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleListRoles0",
            "safeName": "ResourceRoleListRoles0"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRoleRead",
                "camelCase": {
                  "unsafeName": "resourceRoleRead",
                  "safeName": "resourceRoleRead"
                },
                "snakeCase": {
                  "unsafeName": "resource_role_read",
                  "safeName": "resource_role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ROLE_READ",
                  "safeName": "RESOURCE_ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRoleRead",
                  "safeName": "ResourceRoleRead"
                }
              },
              "typeId": "ResourceRoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRoleRead",
                "camelCase": {
                  "unsafeName": "resourceRoleRead",
                  "safeName": "resourceRoleRead"
                },
                "snakeCase": {
                  "unsafeName": "resource_role_read",
                  "safeName": "resource_role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ROLE_READ",
                  "safeName": "RESOURCE_ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRoleRead",
                  "safeName": "ResourceRoleRead"
                }
              },
              "typeId": "ResourceRoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleListRoles0_example_autogenerated": [
            {
              "name": "foo",
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "resource_id": "foo",
              "created_at": "foo",
              "updated_at": "foo"
            }
          ]
        }
      }
    },
    "ResourceRoleListRoles": {
      "name": {
        "typeId": "ResourceRoleListRoles",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleListRoles",
          "camelCase": {
            "unsafeName": "resourceRoleListRoles",
            "safeName": "resourceRoleListRoles"
          },
          "snakeCase": {
            "unsafeName": "resource_role_list_roles",
            "safeName": "resource_role_list_roles"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_LIST_ROLES",
            "safeName": "RESOURCE_ROLE_LIST_ROLES"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleListRoles",
            "safeName": "ResourceRoleListRoles"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRoleListRoles0",
                "camelCase": {
                  "unsafeName": "resourceRoleListRoles0",
                  "safeName": "resourceRoleListRoles0"
                },
                "snakeCase": {
                  "unsafeName": "resource_role_list_roles_0",
                  "safeName": "resource_role_list_roles_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ROLE_LIST_ROLES_0",
                  "safeName": "RESOURCE_ROLE_LIST_ROLES_0"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRoleListRoles0",
                  "safeName": "ResourceRoleListRoles0"
                }
              },
              "typeId": "ResourceRoleListRoles0",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PaginatedResult_ResourceRoleRead_",
                "camelCase": {
                  "unsafeName": "paginatedResultResourceRoleRead",
                  "safeName": "paginatedResultResourceRoleRead"
                },
                "snakeCase": {
                  "unsafeName": "paginated_result_resource_role_read",
                  "safeName": "paginated_result_resource_role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGINATED_RESULT_RESOURCE_ROLE_READ",
                  "safeName": "PAGINATED_RESULT_RESOURCE_ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "PaginatedResultResourceRoleRead",
                  "safeName": "PaginatedResultResourceRoleRead"
                }
              },
              "typeId": "PaginatedResult_ResourceRoleRead_",
              "inline": false,
              "displayName": "PaginatedResult[ResourceRoleRead]",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleListRoles_example_autogenerated": [
            {
              "name": "foo",
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "resource_id": "foo",
              "created_at": "foo",
              "updated_at": "foo"
            }
          ]
        }
      }
    },
    "ResourceRoleList": {
      "name": {
        "typeId": "ResourceRoleList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleList",
          "camelCase": {
            "unsafeName": "resourceRoleList",
            "safeName": "resourceRoleList"
          },
          "snakeCase": {
            "unsafeName": "resource_role_list",
            "safeName": "resource_role_list"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_LIST",
            "safeName": "RESOURCE_ROLE_LIST"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleList",
            "safeName": "ResourceRoleList"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "roles",
                "camelCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "snakeCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLES",
                  "safeName": "ROLES"
                },
                "pascalCase": {
                  "unsafeName": "Roles",
                  "safeName": "Roles"
                }
              },
              "wireValue": "roles"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRoleListRoles",
                "camelCase": {
                  "unsafeName": "resourceRoleListRoles",
                  "safeName": "resourceRoleListRoles"
                },
                "snakeCase": {
                  "unsafeName": "resource_role_list_roles",
                  "safeName": "resource_role_list_roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ROLE_LIST_ROLES",
                  "safeName": "RESOURCE_ROLE_LIST_ROLES"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRoleListRoles",
                  "safeName": "ResourceRoleListRoles"
                }
              },
              "typeId": "ResourceRoleListRoles",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleListRoles_example_autogenerated": [
                  {
                    "name": "foo",
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "resource_id": "foo",
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleList_example_autogenerated": {
            "roles": [
              {
                "name": "foo",
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "resource_id": "foo",
                "created_at": "foo",
                "updated_at": "foo"
              }
            ]
          }
        }
      }
    },
    "ResourceRoleReadAttributes": {
      "name": {
        "typeId": "ResourceRoleReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleReadAttributes",
          "camelCase": {
            "unsafeName": "resourceRoleReadAttributes",
            "safeName": "resourceRoleReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_role_read_attributes",
            "safeName": "resource_role_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_READ_ATTRIBUTES",
            "safeName": "RESOURCE_ROLE_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleReadAttributes",
            "safeName": "ResourceRoleReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleReadAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceRoleRead": {
      "name": {
        "typeId": "ResourceRoleRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleRead",
          "camelCase": {
            "unsafeName": "resourceRoleRead",
            "safeName": "resourceRoleRead"
          },
          "snakeCase": {
            "unsafeName": "resource_role_read",
            "safeName": "resource_role_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_READ",
            "safeName": "RESOURCE_ROLE_READ"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleRead",
            "safeName": "ResourceRoleRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadPermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleReadAttributes",
                    "camelCase": {
                      "unsafeName": "resourceRoleReadAttributes",
                      "safeName": "resourceRoleReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_read_attributes",
                      "safeName": "resource_role_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_READ_ATTRIBUTES",
                      "safeName": "RESOURCE_ROLE_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleReadAttributes",
                      "safeName": "ResourceRoleReadAttributes"
                    }
                  },
                  "typeId": "ResourceRoleReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTENDS",
                  "safeName": "EXTENDS"
                },
                "pascalCase": {
                  "unsafeName": "Extends",
                  "safeName": "Extends"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadExtends_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "wireValue": "resource_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the resource that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadResourceId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRoleRead_example_0": {
            "name": "Maintainer",
            "description": "the maintainer role can read from the repo and push changes",
            "permissions": [
              "push"
            ],
            "extends": [
              "contributor"
            ],
            "key": "maintainer",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceRoleUpdateAttributes": {
      "name": {
        "typeId": "ResourceRoleUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleUpdateAttributes",
          "camelCase": {
            "unsafeName": "resourceRoleUpdateAttributes",
            "safeName": "resourceRoleUpdateAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_role_update_attributes",
            "safeName": "resource_role_update_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_UPDATE_ATTRIBUTES",
            "safeName": "RESOURCE_ROLE_UPDATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleUpdateAttributes",
            "safeName": "ResourceRoleUpdateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceRoleUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "ResourceRoleUpdate": {
      "name": {
        "typeId": "ResourceRoleUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceRoleUpdate",
          "camelCase": {
            "unsafeName": "resourceRoleUpdate",
            "safeName": "resourceRoleUpdate"
          },
          "snakeCase": {
            "unsafeName": "resource_role_update",
            "safeName": "resource_role_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLE_UPDATE",
            "safeName": "RESOURCE_ROLE_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoleUpdate",
            "safeName": "ResourceRoleUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdatePermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleUpdateAttributes",
                    "camelCase": {
                      "unsafeName": "resourceRoleUpdateAttributes",
                      "safeName": "resourceRoleUpdateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_update_attributes",
                      "safeName": "resource_role_update_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_UPDATE_ATTRIBUTES",
                      "safeName": "RESOURCE_ROLE_UPDATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleUpdateAttributes",
                      "safeName": "ResourceRoleUpdateAttributes"
                    }
                  },
                  "typeId": "ResourceRoleUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTENDS",
                  "safeName": "EXTENDS"
                },
                "pascalCase": {
                  "unsafeName": "Extends",
                  "safeName": "Extends"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceRoleUpdateExtends_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "ResourceRoleUpdate_example_0": {
            "description": "the maintainer role can read from the repo and push changes",
            "permissions": [
              "push"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "ResourceUpdate": {
      "name": {
        "typeId": "ResourceUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourceUpdate",
          "camelCase": {
            "unsafeName": "resourceUpdate",
            "safeName": "resourceUpdate"
          },
          "snakeCase": {
            "unsafeName": "resource_update",
            "safeName": "resource_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_UPDATE",
            "safeName": "RESOURCE_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "ResourceUpdate",
            "safeName": "ResourceUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "urn",
                "camelCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "snakeCase": {
                  "unsafeName": "urn",
                  "safeName": "urn"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URN",
                  "safeName": "URN"
                },
                "pascalCase": {
                  "unsafeName": "Urn",
                  "safeName": "Urn"
                }
              },
              "wireValue": "urn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The [URN](https://en.wikipedia.org/wiki/Uniform_Resource_Name) (Uniform Resource Name) of the resource",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateUrn_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional longer description of what this resource respresents in your system",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "actions",
                "camelCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "snakeCase": {
                  "unsafeName": "actions",
                  "safeName": "actions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIONS",
                  "safeName": "ACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Actions",
                  "safeName": "Actions"
                }
              },
              "wireValue": "actions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ActionBlockEditable",
                        "camelCase": {
                          "unsafeName": "actionBlockEditable",
                          "safeName": "actionBlockEditable"
                        },
                        "snakeCase": {
                          "unsafeName": "action_block_editable",
                          "safeName": "action_block_editable"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ACTION_BLOCK_EDITABLE",
                          "safeName": "ACTION_BLOCK_EDITABLE"
                        },
                        "pascalCase": {
                          "unsafeName": "ActionBlockEditable",
                          "safeName": "ActionBlockEditable"
                        }
                      },
                      "typeId": "ActionBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\n        A actions definition block, typically contained within a resource type definition block.\n        The actions represents the ways you can interact with a protected resource.\n        ",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateActions_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "AttributeBlockEditable",
                        "camelCase": {
                          "unsafeName": "attributeBlockEditable",
                          "safeName": "attributeBlockEditable"
                        },
                        "snakeCase": {
                          "unsafeName": "attribute_block_editable",
                          "safeName": "attribute_block_editable"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ATTRIBUTE_BLOCK_EDITABLE",
                          "safeName": "ATTRIBUTE_BLOCK_EDITABLE"
                        },
                        "pascalCase": {
                          "unsafeName": "AttributeBlockEditable",
                          "safeName": "AttributeBlockEditable"
                        }
                      },
                      "typeId": "AttributeBlockEditable",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Attributes that each resource of this type defines, and can be used in your ABAC policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResourceUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourceUpdate_example_autogenerated": {}
        }
      }
    },
    "RoleAssignmentCreate": {
      "name": {
        "typeId": "RoleAssignmentCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleAssignmentCreate",
          "camelCase": {
            "unsafeName": "roleAssignmentCreate",
            "safeName": "roleAssignmentCreate"
          },
          "snakeCase": {
            "unsafeName": "role_assignment_create",
            "safeName": "role_assignment_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_ASSIGNMENT_CREATE",
            "safeName": "ROLE_ASSIGNMENT_CREATE"
          },
          "pascalCase": {
            "unsafeName": "RoleAssignmentCreate",
            "safeName": "RoleAssignmentCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be assigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentCreateRole_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentCreateTenant_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user",
                "camelCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "snakeCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER",
                  "safeName": "USER"
                },
                "pascalCase": {
                  "unsafeName": "User",
                  "safeName": "User"
                }
              },
              "wireValue": "user"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the user the role will be assigned to (accepts either the user id or the user key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentCreateUser_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleAssignmentCreate_example_0": {
            "role": "admin",
            "tenant": "stripe-inc",
            "user": "jane@coolcompany.com"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleAssignmentRead": {
      "name": {
        "typeId": "RoleAssignmentRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleAssignmentRead",
          "camelCase": {
            "unsafeName": "roleAssignmentRead",
            "safeName": "roleAssignmentRead"
          },
          "snakeCase": {
            "unsafeName": "role_assignment_read",
            "safeName": "role_assignment_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_ASSIGNMENT_READ",
            "safeName": "ROLE_ASSIGNMENT_READ"
          },
          "pascalCase": {
            "unsafeName": "RoleAssignmentRead",
            "safeName": "RoleAssignmentRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role assignment",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user",
                "camelCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "snakeCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER",
                  "safeName": "USER"
                },
                "pascalCase": {
                  "unsafeName": "User",
                  "safeName": "User"
                }
              },
              "wireValue": "user"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the user the role is assigned to",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadUser_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that is assigned",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadRole_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadTenant_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "wireValue": "user_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadUserId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "wireValue": "role_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadRoleId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "wireValue": "tenant_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadTenantId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the role assignment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the role assignment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the role assignment belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role assignment was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentReadCreatedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleAssignmentRead_example_0": {
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "user": "jane@coolcompany.com",
            "role": "admin",
            "tenant": "stripe-inc",
            "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
            "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
            "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleAssignmentRemove": {
      "name": {
        "typeId": "RoleAssignmentRemove",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleAssignmentRemove",
          "camelCase": {
            "unsafeName": "roleAssignmentRemove",
            "safeName": "roleAssignmentRemove"
          },
          "snakeCase": {
            "unsafeName": "role_assignment_remove",
            "safeName": "role_assignment_remove"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_ASSIGNMENT_REMOVE",
            "safeName": "ROLE_ASSIGNMENT_REMOVE"
          },
          "pascalCase": {
            "unsafeName": "RoleAssignmentRemove",
            "safeName": "RoleAssignmentRemove"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be unassigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentRemoveRole_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentRemoveTenant_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user",
                "camelCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "snakeCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER",
                  "safeName": "USER"
                },
                "pascalCase": {
                  "unsafeName": "User",
                  "safeName": "User"
                }
              },
              "wireValue": "user"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the user the role will be unassigned from (accepts either the user id or the user key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleAssignmentRemoveUser_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleAssignmentRemove_example_0": {
            "role": "editor",
            "tenant": "google-inc",
            "user": "jane@coolcompany.com"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleBlock": {
      "name": {
        "typeId": "RoleBlock",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleBlock",
          "camelCase": {
            "unsafeName": "roleBlock",
            "safeName": "roleBlock"
          },
          "snakeCase": {
            "unsafeName": "role_block",
            "safeName": "role_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_BLOCK",
            "safeName": "ROLE_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "RoleBlock",
            "safeName": "RoleBlock"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleBlockDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleBlockPermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleBlock_example_autogenerated": {}
        }
      }
    },
    "RoleCreateAttributes": {
      "name": {
        "typeId": "RoleCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleCreateAttributes",
          "camelCase": {
            "unsafeName": "roleCreateAttributes",
            "safeName": "roleCreateAttributes"
          },
          "snakeCase": {
            "unsafeName": "role_create_attributes",
            "safeName": "role_create_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_CREATE_ATTRIBUTES",
            "safeName": "ROLE_CREATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "RoleCreateAttributes",
            "safeName": "RoleCreateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "RoleCreate": {
      "name": {
        "typeId": "RoleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleCreate",
          "camelCase": {
            "unsafeName": "roleCreate",
            "safeName": "roleCreate"
          },
          "snakeCase": {
            "unsafeName": "role_create",
            "safeName": "role_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_CREATE",
            "safeName": "ROLE_CREATE"
          },
          "pascalCase": {
            "unsafeName": "RoleCreate",
            "safeName": "RoleCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreatePermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleCreateAttributes",
                    "camelCase": {
                      "unsafeName": "roleCreateAttributes",
                      "safeName": "roleCreateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "role_create_attributes",
                      "safeName": "role_create_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_CREATE_ATTRIBUTES",
                      "safeName": "ROLE_CREATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleCreateAttributes",
                      "safeName": "RoleCreateAttributes"
                    }
                  },
                  "typeId": "RoleCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTENDS",
                  "safeName": "EXTENDS"
                },
                "pascalCase": {
                  "unsafeName": "Extends",
                  "safeName": "Extends"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleCreateExtends_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleCreate_example_0": {
            "key": "editor",
            "name": "Editor",
            "description": "the editor role can read and write to documents",
            "permissions": [
              "document:write"
            ],
            "extends": [
              "viewer"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleListRoles0": {
      "name": {
        "typeId": "RoleListRoles0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleListRoles0",
          "camelCase": {
            "unsafeName": "roleListRoles0",
            "safeName": "roleListRoles0"
          },
          "snakeCase": {
            "unsafeName": "role_list_roles_0",
            "safeName": "role_list_roles_0"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_LIST_ROLES_0",
            "safeName": "ROLE_LIST_ROLES_0"
          },
          "pascalCase": {
            "unsafeName": "RoleListRoles0",
            "safeName": "RoleListRoles0"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleRead",
                "camelCase": {
                  "unsafeName": "roleRead",
                  "safeName": "roleRead"
                },
                "snakeCase": {
                  "unsafeName": "role_read",
                  "safeName": "role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_READ",
                  "safeName": "ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "RoleRead",
                  "safeName": "RoleRead"
                }
              },
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleRead",
                "camelCase": {
                  "unsafeName": "roleRead",
                  "safeName": "roleRead"
                },
                "snakeCase": {
                  "unsafeName": "role_read",
                  "safeName": "role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_READ",
                  "safeName": "ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "RoleRead",
                  "safeName": "RoleRead"
                }
              },
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleListRoles0_example_autogenerated": [
            {
              "name": "foo",
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "created_at": "foo",
              "updated_at": "foo"
            }
          ]
        }
      }
    },
    "RoleListRoles": {
      "name": {
        "typeId": "RoleListRoles",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleListRoles",
          "camelCase": {
            "unsafeName": "roleListRoles",
            "safeName": "roleListRoles"
          },
          "snakeCase": {
            "unsafeName": "role_list_roles",
            "safeName": "role_list_roles"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_LIST_ROLES",
            "safeName": "ROLE_LIST_ROLES"
          },
          "pascalCase": {
            "unsafeName": "RoleListRoles",
            "safeName": "RoleListRoles"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleListRoles0",
                "camelCase": {
                  "unsafeName": "roleListRoles0",
                  "safeName": "roleListRoles0"
                },
                "snakeCase": {
                  "unsafeName": "role_list_roles_0",
                  "safeName": "role_list_roles_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_LIST_ROLES_0",
                  "safeName": "ROLE_LIST_ROLES_0"
                },
                "pascalCase": {
                  "unsafeName": "RoleListRoles0",
                  "safeName": "RoleListRoles0"
                }
              },
              "typeId": "RoleListRoles0",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PaginatedResult_RoleRead_",
                "camelCase": {
                  "unsafeName": "paginatedResultRoleRead",
                  "safeName": "paginatedResultRoleRead"
                },
                "snakeCase": {
                  "unsafeName": "paginated_result_role_read",
                  "safeName": "paginated_result_role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGINATED_RESULT_ROLE_READ",
                  "safeName": "PAGINATED_RESULT_ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "PaginatedResultRoleRead",
                  "safeName": "PaginatedResultRoleRead"
                }
              },
              "typeId": "PaginatedResult_RoleRead_",
              "inline": false,
              "displayName": "PaginatedResult[RoleRead]",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleListRoles_example_autogenerated": [
            {
              "name": "foo",
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "created_at": "foo",
              "updated_at": "foo"
            }
          ]
        }
      }
    },
    "RoleList": {
      "name": {
        "typeId": "RoleList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleList",
          "camelCase": {
            "unsafeName": "roleList",
            "safeName": "roleList"
          },
          "snakeCase": {
            "unsafeName": "role_list",
            "safeName": "role_list"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_LIST",
            "safeName": "ROLE_LIST"
          },
          "pascalCase": {
            "unsafeName": "RoleList",
            "safeName": "RoleList"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "roles",
                "camelCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "snakeCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLES",
                  "safeName": "ROLES"
                },
                "pascalCase": {
                  "unsafeName": "Roles",
                  "safeName": "Roles"
                }
              },
              "wireValue": "roles"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleListRoles",
                "camelCase": {
                  "unsafeName": "roleListRoles",
                  "safeName": "roleListRoles"
                },
                "snakeCase": {
                  "unsafeName": "role_list_roles",
                  "safeName": "role_list_roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_LIST_ROLES",
                  "safeName": "ROLE_LIST_ROLES"
                },
                "pascalCase": {
                  "unsafeName": "RoleListRoles",
                  "safeName": "RoleListRoles"
                }
              },
              "typeId": "RoleListRoles",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleListRoles_example_autogenerated": [
                  {
                    "name": "foo",
                    "key": "foo",
                    "id": "foo",
                    "organization_id": "foo",
                    "project_id": "foo",
                    "environment_id": "foo",
                    "created_at": "foo",
                    "updated_at": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleList_example_autogenerated": {
            "roles": [
              {
                "name": "foo",
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo"
              }
            ]
          }
        }
      }
    },
    "RoleReadAttributes": {
      "name": {
        "typeId": "RoleReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleReadAttributes",
          "camelCase": {
            "unsafeName": "roleReadAttributes",
            "safeName": "roleReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "role_read_attributes",
            "safeName": "role_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_READ_ATTRIBUTES",
            "safeName": "ROLE_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "RoleReadAttributes",
            "safeName": "RoleReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleReadAttributes_example_autogenerated": {}
        }
      }
    },
    "RoleRead": {
      "name": {
        "typeId": "RoleRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleRead",
          "camelCase": {
            "unsafeName": "roleRead",
            "safeName": "roleRead"
          },
          "snakeCase": {
            "unsafeName": "role_read",
            "safeName": "role_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_READ",
            "safeName": "ROLE_READ"
          },
          "pascalCase": {
            "unsafeName": "RoleRead",
            "safeName": "RoleRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadPermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleReadAttributes",
                    "camelCase": {
                      "unsafeName": "roleReadAttributes",
                      "safeName": "roleReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "role_read_attributes",
                      "safeName": "role_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_READ_ATTRIBUTES",
                      "safeName": "ROLE_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleReadAttributes",
                      "safeName": "RoleReadAttributes"
                    }
                  },
                  "typeId": "RoleReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTENDS",
                  "safeName": "EXTENDS"
                },
                "pascalCase": {
                  "unsafeName": "Extends",
                  "safeName": "Extends"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadExtends_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL-friendly name of the role (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the role.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the role belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the role was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleRead_example_0": {
            "name": "Editor",
            "description": "the editor role can read and write to documents",
            "permissions": [
              "document:write"
            ],
            "extends": [
              "viewer"
            ],
            "key": "editor",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RoleUpdateAttributes": {
      "name": {
        "typeId": "RoleUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleUpdateAttributes",
          "camelCase": {
            "unsafeName": "roleUpdateAttributes",
            "safeName": "roleUpdateAttributes"
          },
          "snakeCase": {
            "unsafeName": "role_update_attributes",
            "safeName": "role_update_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_UPDATE_ATTRIBUTES",
            "safeName": "ROLE_UPDATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "RoleUpdateAttributes",
            "safeName": "RoleUpdateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RoleUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "RoleUpdate": {
      "name": {
        "typeId": "RoleUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RoleUpdate",
          "camelCase": {
            "unsafeName": "roleUpdate",
            "safeName": "roleUpdate"
          },
          "snakeCase": {
            "unsafeName": "role_update",
            "safeName": "role_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_UPDATE",
            "safeName": "ROLE_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "RoleUpdate",
            "safeName": "RoleUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the role",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional description string explaining what this role represents, or what permissions are granted to it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "permissions",
                "camelCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "snakeCase": {
                  "unsafeName": "permissions",
                  "safeName": "permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERMISSIONS",
                  "safeName": "PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "Permissions",
                  "safeName": "Permissions"
                }
              },
              "wireValue": "permissions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of action keys that define what actions this resource role is permitted to do",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdatePermissions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleUpdateAttributes",
                    "camelCase": {
                      "unsafeName": "roleUpdateAttributes",
                      "safeName": "roleUpdateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "role_update_attributes",
                      "safeName": "role_update_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_UPDATE_ATTRIBUTES",
                      "safeName": "ROLE_UPDATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleUpdateAttributes",
                      "safeName": "RoleUpdateAttributes"
                    }
                  },
                  "typeId": "RoleUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "optional dictionary of key-value pairs that can be used to store arbitrary metadata about this role. This metadata can be used to filter role using query parameters with attr_ prefix, currently supports only 'equals' operator",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateAttributes_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extends",
                "camelCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "snakeCase": {
                  "unsafeName": "extends",
                  "safeName": "extends_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTENDS",
                  "safeName": "EXTENDS"
                },
                "pascalCase": {
                  "unsafeName": "Extends",
                  "safeName": "Extends"
                }
              },
              "wireValue": "extends"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "list of role keys that define what roles this role extends. In other words: this role will automatically inherit all the permissions of the given roles in this list.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RoleUpdateExtends_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "RoleUpdate_example_0": {
            "description": "the editor role can read and write to documents",
            "permissions": [
              "document:write"
            ]
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "RolesBlock": {
      "name": {
        "typeId": "RolesBlock",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RolesBlock",
          "camelCase": {
            "unsafeName": "rolesBlock",
            "safeName": "rolesBlock"
          },
          "snakeCase": {
            "unsafeName": "roles_block",
            "safeName": "roles_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLES_BLOCK",
            "safeName": "ROLES_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "RolesBlock",
            "safeName": "RolesBlock"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Resource roles definition block, defines all the roles on the resource.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RolesBlock_example_autogenerated": {}
        }
      }
    },
    "Statistics": {
      "name": {
        "typeId": "Statistics",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Statistics",
          "camelCase": {
            "unsafeName": "statistics",
            "safeName": "statistics"
          },
          "snakeCase": {
            "unsafeName": "statistics",
            "safeName": "statistics"
          },
          "screamingSnakeCase": {
            "unsafeName": "STATISTICS",
            "safeName": "STATISTICS"
          },
          "pascalCase": {
            "unsafeName": "Statistics",
            "safeName": "Statistics"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "roles",
                "camelCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "snakeCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLES",
                  "safeName": "ROLES"
                },
                "pascalCase": {
                  "unsafeName": "Roles",
                  "safeName": "Roles"
                }
              },
              "wireValue": "roles"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsRoles_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "users",
                "camelCase": {
                  "unsafeName": "users",
                  "safeName": "users"
                },
                "snakeCase": {
                  "unsafeName": "users",
                  "safeName": "users"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USERS",
                  "safeName": "USERS"
                },
                "pascalCase": {
                  "unsafeName": "Users",
                  "safeName": "Users"
                }
              },
              "wireValue": "users"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsUsers_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "policies",
                "camelCase": {
                  "unsafeName": "policies",
                  "safeName": "policies"
                },
                "snakeCase": {
                  "unsafeName": "policies",
                  "safeName": "policies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "POLICIES",
                  "safeName": "POLICIES"
                },
                "pascalCase": {
                  "unsafeName": "Policies",
                  "safeName": "Policies"
                }
              },
              "wireValue": "policies"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsPolicies_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resources",
                "camelCase": {
                  "unsafeName": "resources",
                  "safeName": "resources"
                },
                "snakeCase": {
                  "unsafeName": "resources",
                  "safeName": "resources"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCES",
                  "safeName": "RESOURCES"
                },
                "pascalCase": {
                  "unsafeName": "Resources",
                  "safeName": "Resources"
                }
              },
              "wireValue": "resources"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsResources_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenants",
                "camelCase": {
                  "unsafeName": "tenants",
                  "safeName": "tenants"
                },
                "snakeCase": {
                  "unsafeName": "tenants",
                  "safeName": "tenants"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANTS",
                  "safeName": "TENANTS"
                },
                "pascalCase": {
                  "unsafeName": "Tenants",
                  "safeName": "Tenants"
                }
              },
              "wireValue": "tenants"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 0
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsTenants_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "has_decision_logs",
                "camelCase": {
                  "unsafeName": "hasDecisionLogs",
                  "safeName": "hasDecisionLogs"
                },
                "snakeCase": {
                  "unsafeName": "has_decision_logs",
                  "safeName": "has_decision_logs"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HAS_DECISION_LOGS",
                  "safeName": "HAS_DECISION_LOGS"
                },
                "pascalCase": {
                  "unsafeName": "HasDecisionLogs",
                  "safeName": "HasDecisionLogs"
                }
              },
              "wireValue": "has_decision_logs"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsHasDecisionLogs_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "members",
                "camelCase": {
                  "unsafeName": "members",
                  "safeName": "members"
                },
                "snakeCase": {
                  "unsafeName": "members",
                  "safeName": "members"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEMBERS",
                  "safeName": "MEMBERS"
                },
                "pascalCase": {
                  "unsafeName": "Members",
                  "safeName": "Members"
                }
              },
              "wireValue": "members"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrgMemberReadWithGrants",
                    "camelCase": {
                      "unsafeName": "orgMemberReadWithGrants",
                      "safeName": "orgMemberReadWithGrants"
                    },
                    "snakeCase": {
                      "unsafeName": "org_member_read_with_grants",
                      "safeName": "org_member_read_with_grants"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORG_MEMBER_READ_WITH_GRANTS",
                      "safeName": "ORG_MEMBER_READ_WITH_GRANTS"
                    },
                    "pascalCase": {
                      "unsafeName": "OrgMemberReadWithGrants",
                      "safeName": "OrgMemberReadWithGrants"
                    }
                  },
                  "typeId": "OrgMemberReadWithGrants",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "StatisticsMembers_example_autogenerated": [
                  {
                    "id": "foo",
                    "email": "foo",
                    "email_verified": true,
                    "is_superuser": true,
                    "is_onboarding": true,
                    "onboarding_step": "create_organization",
                    "created_at": "foo",
                    "identities": [
                      {
                        "user_id": "foo",
                        "provider": "foo",
                        "sub": "foo",
                        "email": "foo",
                        "email_verified": true,
                        "auth0_info": {}
                      }
                    ],
                    "settings": {},
                    "grants": [
                      {
                        "organization_id": "foo",
                        "object_type": "org",
                        "access_level": "admin"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Statistics_example_autogenerated": {
            "roles": 42,
            "users": 42,
            "policies": 42,
            "resources": 42,
            "tenants": 42,
            "has_decision_logs": true,
            "members": [
              {
                "id": "foo",
                "email": "foo",
                "email_verified": true,
                "is_superuser": true,
                "is_onboarding": true,
                "onboarding_step": "create_organization",
                "created_at": "foo",
                "identities": [
                  {
                    "user_id": "foo",
                    "provider": "foo",
                    "sub": "foo",
                    "email": "foo",
                    "email_verified": true,
                    "auth0_info": {}
                  }
                ],
                "settings": {},
                "grants": [
                  {
                    "organization_id": "foo",
                    "object_type": "org",
                    "access_level": "admin"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "TenantCreateAttributes": {
      "name": {
        "typeId": "TenantCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantCreateAttributes",
          "camelCase": {
            "unsafeName": "tenantCreateAttributes",
            "safeName": "tenantCreateAttributes"
          },
          "snakeCase": {
            "unsafeName": "tenant_create_attributes",
            "safeName": "tenant_create_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_CREATE_ATTRIBUTES",
            "safeName": "TENANT_CREATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "TenantCreateAttributes",
            "safeName": "TenantCreateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "TenantCreate": {
      "name": {
        "typeId": "TenantCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantCreate",
          "camelCase": {
            "unsafeName": "tenantCreate",
            "safeName": "tenantCreate"
          },
          "snakeCase": {
            "unsafeName": "tenant_create",
            "safeName": "tenant_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_CREATE",
            "safeName": "TENANT_CREATE"
          },
          "pascalCase": {
            "unsafeName": "TenantCreate",
            "safeName": "TenantCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9\\-_]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the tenant. The tenant key must be url-friendly (slugified).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantCreateAttributes",
                    "camelCase": {
                      "unsafeName": "tenantCreateAttributes",
                      "safeName": "tenantCreateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_create_attributes",
                      "safeName": "tenant_create_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_CREATE_ATTRIBUTES",
                      "safeName": "TENANT_CREATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantCreateAttributes",
                      "safeName": "TenantCreateAttributes"
                    }
                  },
                  "typeId": "TenantCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "TenantCreate_example_0": {
            "key": "stripeinc",
            "name": "Stripe Inc",
            "attributes": {
              "allowed_locations": [
                "US",
                "CA"
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "TenantCreateBulkOperation": {
      "name": {
        "typeId": "TenantCreateBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantCreateBulkOperation",
          "camelCase": {
            "unsafeName": "tenantCreateBulkOperation",
            "safeName": "tenantCreateBulkOperation"
          },
          "snakeCase": {
            "unsafeName": "tenant_create_bulk_operation",
            "safeName": "tenant_create_bulk_operation"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_CREATE_BULK_OPERATION",
            "safeName": "TENANT_CREATE_BULK_OPERATION"
          },
          "pascalCase": {
            "unsafeName": "TenantCreateBulkOperation",
            "safeName": "TenantCreateBulkOperation"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "operations",
                "camelCase": {
                  "unsafeName": "operations",
                  "safeName": "operations"
                },
                "snakeCase": {
                  "unsafeName": "operations",
                  "safeName": "operations"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPERATIONS",
                  "safeName": "OPERATIONS"
                },
                "pascalCase": {
                  "unsafeName": "Operations",
                  "safeName": "Operations"
                }
              },
              "wireValue": "operations"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantCreate",
                    "camelCase": {
                      "unsafeName": "tenantCreate",
                      "safeName": "tenantCreate"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_create",
                      "safeName": "tenant_create"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_CREATE",
                      "safeName": "TENANT_CREATE"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantCreate",
                      "safeName": "TenantCreate"
                    }
                  },
                  "typeId": "TenantCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantCreateBulkOperationOperations_example_autogenerated": [
                  {
                    "key": "foo",
                    "name": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantCreateBulkOperation_example_autogenerated": {
            "operations": [
              {
                "key": "foo",
                "name": "foo"
              }
            ]
          }
        }
      }
    },
    "TenantCreateBulkOperationResult": {
      "name": {
        "typeId": "TenantCreateBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantCreateBulkOperationResult",
          "camelCase": {
            "unsafeName": "tenantCreateBulkOperationResult",
            "safeName": "tenantCreateBulkOperationResult"
          },
          "snakeCase": {
            "unsafeName": "tenant_create_bulk_operation_result",
            "safeName": "tenant_create_bulk_operation_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_CREATE_BULK_OPERATION_RESULT",
            "safeName": "TENANT_CREATE_BULK_OPERATION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "TenantCreateBulkOperationResult",
            "safeName": "TenantCreateBulkOperationResult"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantCreateBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "TenantDeleteBulkOperation": {
      "name": {
        "typeId": "TenantDeleteBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantDeleteBulkOperation",
          "camelCase": {
            "unsafeName": "tenantDeleteBulkOperation",
            "safeName": "tenantDeleteBulkOperation"
          },
          "snakeCase": {
            "unsafeName": "tenant_delete_bulk_operation",
            "safeName": "tenant_delete_bulk_operation"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_DELETE_BULK_OPERATION",
            "safeName": "TENANT_DELETE_BULK_OPERATION"
          },
          "pascalCase": {
            "unsafeName": "TenantDeleteBulkOperation",
            "safeName": "TenantDeleteBulkOperation"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "idents",
                "camelCase": {
                  "unsafeName": "idents",
                  "safeName": "idents"
                },
                "snakeCase": {
                  "unsafeName": "idents",
                  "safeName": "idents"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IDENTS",
                  "safeName": "IDENTS"
                },
                "pascalCase": {
                  "unsafeName": "Idents",
                  "safeName": "Idents"
                }
              },
              "wireValue": "idents"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantDeleteBulkOperationIdents_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantDeleteBulkOperation_example_autogenerated": {
            "idents": [
              "foo"
            ]
          }
        }
      }
    },
    "TenantDeleteBulkOperationResult": {
      "name": {
        "typeId": "TenantDeleteBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantDeleteBulkOperationResult",
          "camelCase": {
            "unsafeName": "tenantDeleteBulkOperationResult",
            "safeName": "tenantDeleteBulkOperationResult"
          },
          "snakeCase": {
            "unsafeName": "tenant_delete_bulk_operation_result",
            "safeName": "tenant_delete_bulk_operation_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_DELETE_BULK_OPERATION_RESULT",
            "safeName": "TENANT_DELETE_BULK_OPERATION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "TenantDeleteBulkOperationResult",
            "safeName": "TenantDeleteBulkOperationResult"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantDeleteBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "TenantReadAttributes": {
      "name": {
        "typeId": "TenantReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantReadAttributes",
          "camelCase": {
            "unsafeName": "tenantReadAttributes",
            "safeName": "tenantReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "tenant_read_attributes",
            "safeName": "tenant_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_READ_ATTRIBUTES",
            "safeName": "TENANT_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "TenantReadAttributes",
            "safeName": "TenantReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantReadAttributes_example_autogenerated": {}
        }
      }
    },
    "TenantRead": {
      "name": {
        "typeId": "TenantRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantRead",
          "camelCase": {
            "unsafeName": "tenantRead",
            "safeName": "tenantRead"
          },
          "snakeCase": {
            "unsafeName": "tenant_read",
            "safeName": "tenant_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_READ",
            "safeName": "TENANT_READ"
          },
          "pascalCase": {
            "unsafeName": "TenantRead",
            "safeName": "TenantRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the tenant. The tenant key must be url-friendly (slugified).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the tenant belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the tenant belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the tenant belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                }
              },
              "wireValue": "created_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the tenant was created (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadCreatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                }
              },
              "wireValue": "updated_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the tenant was last updated/modified (ISO_8601 format).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadUpdatedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "last_action_at",
                "camelCase": {
                  "unsafeName": "lastActionAt",
                  "safeName": "lastActionAt"
                },
                "snakeCase": {
                  "unsafeName": "last_action_at",
                  "safeName": "last_action_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_ACTION_AT",
                  "safeName": "LAST_ACTION_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastActionAt",
                  "safeName": "LastActionAt"
                }
              },
              "wireValue": "last_action_at"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "date-time"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Date and time when the tenant was last active (ISO_8601 format). In other words, this is the last time a permission check was done on a resource belonging to this tenant.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadLastActionAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A descriptive name for the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantReadAttributes",
                    "camelCase": {
                      "unsafeName": "tenantReadAttributes",
                      "safeName": "tenantReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_read_attributes",
                      "safeName": "tenant_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_READ_ATTRIBUTES",
                      "safeName": "TENANT_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantReadAttributes",
                      "safeName": "TenantReadAttributes"
                    }
                  },
                  "typeId": "TenantReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantReadAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "TenantRead_example_0": {
            "key": "stripeinc",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "created_at": "2019-08-24T14:15:22Z",
            "updated_at": "2019-08-24T14:15:22Z",
            "last_action_at": "2019-08-24T14:15:22Z",
            "name": "Stripe Inc",
            "attributes": {
              "allowed_locations": [
                "US",
                "CA"
              ]
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "TenantUpdateAttributes": {
      "name": {
        "typeId": "TenantUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantUpdateAttributes",
          "camelCase": {
            "unsafeName": "tenantUpdateAttributes",
            "safeName": "tenantUpdateAttributes"
          },
          "snakeCase": {
            "unsafeName": "tenant_update_attributes",
            "safeName": "tenant_update_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_UPDATE_ATTRIBUTES",
            "safeName": "TENANT_UPDATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "TenantUpdateAttributes",
            "safeName": "TenantUpdateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "TenantUpdate": {
      "name": {
        "typeId": "TenantUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantUpdate",
          "camelCase": {
            "unsafeName": "tenantUpdate",
            "safeName": "tenantUpdate"
          },
          "snakeCase": {
            "unsafeName": "tenant_update",
            "safeName": "tenant_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANT_UPDATE",
            "safeName": "TENANT_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "TenantUpdate",
            "safeName": "TenantUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A descriptive name for the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantUpdateName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "an optional longer description of the tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantUpdateDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantUpdateAttributes",
                    "camelCase": {
                      "unsafeName": "tenantUpdateAttributes",
                      "safeName": "tenantUpdateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_update_attributes",
                      "safeName": "tenant_update_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_UPDATE_ATTRIBUTES",
                      "safeName": "TENANT_UPDATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantUpdateAttributes",
                      "safeName": "TenantUpdateAttributes"
                    }
                  },
                  "typeId": "TenantUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitraty tenant attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TenantUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantUpdate_example_autogenerated": {}
        }
      }
    },
    "UserCreateAttributes": {
      "name": {
        "typeId": "UserCreateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserCreateAttributes",
          "camelCase": {
            "unsafeName": "userCreateAttributes",
            "safeName": "userCreateAttributes"
          },
          "snakeCase": {
            "unsafeName": "user_create_attributes",
            "safeName": "user_create_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_CREATE_ATTRIBUTES",
            "safeName": "USER_CREATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "UserCreateAttributes",
            "safeName": "UserCreateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserCreateAttributes_example_autogenerated": {}
        }
      }
    },
    "UserCreate": {
      "name": {
        "typeId": "UserCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserCreate",
          "camelCase": {
            "unsafeName": "userCreate",
            "safeName": "userCreate"
          },
          "snakeCase": {
            "unsafeName": "user_create",
            "safeName": "user_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_CREATE",
            "safeName": "USER_CREATE"
          },
          "pascalCase": {
            "unsafeName": "UserCreate",
            "safeName": "UserCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^[A-Za-z0-9|@+\\-\\._]+$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the user for permission checks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "email"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The email of the user. If synced, will be unique inside the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "first_name",
                "camelCase": {
                  "unsafeName": "firstName",
                  "safeName": "firstName"
                },
                "snakeCase": {
                  "unsafeName": "first_name",
                  "safeName": "first_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FIRST_NAME",
                  "safeName": "FIRST_NAME"
                },
                "pascalCase": {
                  "unsafeName": "FirstName",
                  "safeName": "FirstName"
                }
              },
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateFirstName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "last_name",
                "camelCase": {
                  "unsafeName": "lastName",
                  "safeName": "lastName"
                },
                "snakeCase": {
                  "unsafeName": "last_name",
                  "safeName": "last_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_NAME",
                  "safeName": "LAST_NAME"
                },
                "pascalCase": {
                  "unsafeName": "LastName",
                  "safeName": "LastName"
                }
              },
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateLastName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserCreateAttributes",
                    "camelCase": {
                      "unsafeName": "userCreateAttributes",
                      "safeName": "userCreateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "user_create_attributes",
                      "safeName": "user_create_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_CREATE_ATTRIBUTES",
                      "safeName": "USER_CREATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "UserCreateAttributes",
                      "safeName": "UserCreateAttributes"
                    }
                  },
                  "typeId": "UserCreateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserCreate_example_0": {
            "key": "user|892179821739812389327",
            "email": "jane@coolcompany.com",
            "first_name": "Jane",
            "last_name": "Doe",
            "attributes": {
              "department": "marketing",
              "age": 30,
              "subscription": {
                "tier": "pro",
                "expired": false
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserCreateBulkOperation": {
      "name": {
        "typeId": "UserCreateBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserCreateBulkOperation",
          "camelCase": {
            "unsafeName": "userCreateBulkOperation",
            "safeName": "userCreateBulkOperation"
          },
          "snakeCase": {
            "unsafeName": "user_create_bulk_operation",
            "safeName": "user_create_bulk_operation"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_CREATE_BULK_OPERATION",
            "safeName": "USER_CREATE_BULK_OPERATION"
          },
          "pascalCase": {
            "unsafeName": "UserCreateBulkOperation",
            "safeName": "UserCreateBulkOperation"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "operations",
                "camelCase": {
                  "unsafeName": "operations",
                  "safeName": "operations"
                },
                "snakeCase": {
                  "unsafeName": "operations",
                  "safeName": "operations"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPERATIONS",
                  "safeName": "OPERATIONS"
                },
                "pascalCase": {
                  "unsafeName": "Operations",
                  "safeName": "Operations"
                }
              },
              "wireValue": "operations"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserCreate",
                    "camelCase": {
                      "unsafeName": "userCreate",
                      "safeName": "userCreate"
                    },
                    "snakeCase": {
                      "unsafeName": "user_create",
                      "safeName": "user_create"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_CREATE",
                      "safeName": "USER_CREATE"
                    },
                    "pascalCase": {
                      "unsafeName": "UserCreate",
                      "safeName": "UserCreate"
                    }
                  },
                  "typeId": "UserCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserCreateBulkOperationOperations_example_autogenerated": [
                  {
                    "key": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserCreateBulkOperation_example_autogenerated": {
            "operations": [
              {
                "key": "foo"
              }
            ]
          }
        }
      }
    },
    "UserCreateBulkOperationResult": {
      "name": {
        "typeId": "UserCreateBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserCreateBulkOperationResult",
          "camelCase": {
            "unsafeName": "userCreateBulkOperationResult",
            "safeName": "userCreateBulkOperationResult"
          },
          "snakeCase": {
            "unsafeName": "user_create_bulk_operation_result",
            "safeName": "user_create_bulk_operation_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_CREATE_BULK_OPERATION_RESULT",
            "safeName": "USER_CREATE_BULK_OPERATION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "UserCreateBulkOperationResult",
            "safeName": "UserCreateBulkOperationResult"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserCreateBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "UserDeleteBulkOperation": {
      "name": {
        "typeId": "UserDeleteBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserDeleteBulkOperation",
          "camelCase": {
            "unsafeName": "userDeleteBulkOperation",
            "safeName": "userDeleteBulkOperation"
          },
          "snakeCase": {
            "unsafeName": "user_delete_bulk_operation",
            "safeName": "user_delete_bulk_operation"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_DELETE_BULK_OPERATION",
            "safeName": "USER_DELETE_BULK_OPERATION"
          },
          "pascalCase": {
            "unsafeName": "UserDeleteBulkOperation",
            "safeName": "UserDeleteBulkOperation"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "idents",
                "camelCase": {
                  "unsafeName": "idents",
                  "safeName": "idents"
                },
                "snakeCase": {
                  "unsafeName": "idents",
                  "safeName": "idents"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IDENTS",
                  "safeName": "IDENTS"
                },
                "pascalCase": {
                  "unsafeName": "Idents",
                  "safeName": "Idents"
                }
              },
              "wireValue": "idents"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserDeleteBulkOperationIdents_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserDeleteBulkOperation_example_autogenerated": {
            "idents": [
              "foo"
            ]
          }
        }
      }
    },
    "UserDeleteBulkOperationResult": {
      "name": {
        "typeId": "UserDeleteBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserDeleteBulkOperationResult",
          "camelCase": {
            "unsafeName": "userDeleteBulkOperationResult",
            "safeName": "userDeleteBulkOperationResult"
          },
          "snakeCase": {
            "unsafeName": "user_delete_bulk_operation_result",
            "safeName": "user_delete_bulk_operation_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_DELETE_BULK_OPERATION_RESULT",
            "safeName": "USER_DELETE_BULK_OPERATION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "UserDeleteBulkOperationResult",
            "safeName": "UserDeleteBulkOperationResult"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserDeleteBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "UserInTenant": {
      "name": {
        "typeId": "UserInTenant",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserInTenant",
          "camelCase": {
            "unsafeName": "userInTenant",
            "safeName": "userInTenant"
          },
          "snakeCase": {
            "unsafeName": "user_in_tenant",
            "safeName": "user_in_tenant"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_IN_TENANT",
            "safeName": "USER_IN_TENANT"
          },
          "pascalCase": {
            "unsafeName": "UserInTenant",
            "safeName": "UserInTenant"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The tenant key which the user is associated with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInTenantTenant_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "roles",
                "camelCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "snakeCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLES",
                  "safeName": "ROLES"
                },
                "pascalCase": {
                  "unsafeName": "Roles",
                  "safeName": "Roles"
                }
              },
              "wireValue": "roles"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of roles assigned to the user in that tenant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInTenantRoles_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserStatus",
                "camelCase": {
                  "unsafeName": "userStatus",
                  "safeName": "userStatus"
                },
                "snakeCase": {
                  "unsafeName": "user_status",
                  "safeName": "user_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_STATUS",
                  "safeName": "USER_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "UserStatus",
                  "safeName": "UserStatus"
                }
              },
              "typeId": "UserStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "Whether the user has signed in or not",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInTenant_example_autogenerated": {
            "tenant": "foo",
            "roles": [
              "foo"
            ],
            "status": "active"
          }
        }
      }
    },
    "UserReadAttributes": {
      "name": {
        "typeId": "UserReadAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserReadAttributes",
          "camelCase": {
            "unsafeName": "userReadAttributes",
            "safeName": "userReadAttributes"
          },
          "snakeCase": {
            "unsafeName": "user_read_attributes",
            "safeName": "user_read_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_READ_ATTRIBUTES",
            "safeName": "USER_READ_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "UserReadAttributes",
            "safeName": "UserReadAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserReadAttributes_example_autogenerated": {}
        }
      }
    },
    "UserRead": {
      "name": {
        "typeId": "UserRead",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserRead",
          "camelCase": {
            "unsafeName": "userRead",
            "safeName": "userRead"
          },
          "snakeCase": {
            "unsafeName": "user_read",
            "safeName": "user_read"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_READ",
            "safeName": "USER_READ"
          },
          "pascalCase": {
            "unsafeName": "UserRead",
            "safeName": "UserRead"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A unique id by which Permit will identify the user for permission checks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the user",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization_id",
                "camelCase": {
                  "unsafeName": "organizationId",
                  "safeName": "organizationId"
                },
                "snakeCase": {
                  "unsafeName": "organization_id",
                  "safeName": "organization_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_ID",
                  "safeName": "ORGANIZATION_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationId",
                  "safeName": "OrganizationId"
                }
              },
              "wireValue": "organization_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the organization that the user belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadOrganizationId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "project_id",
                "camelCase": {
                  "unsafeName": "projectId",
                  "safeName": "projectId"
                },
                "snakeCase": {
                  "unsafeName": "project_id",
                  "safeName": "project_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_ID",
                  "safeName": "PROJECT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjectId",
                  "safeName": "ProjectId"
                }
              },
              "wireValue": "project_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the project that the user belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadProjectId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "environment_id",
                "camelCase": {
                  "unsafeName": "environmentId",
                  "safeName": "environmentId"
                },
                "snakeCase": {
                  "unsafeName": "environment_id",
                  "safeName": "environment_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_ID",
                  "safeName": "ENVIRONMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentId",
                  "safeName": "EnvironmentId"
                }
              },
              "wireValue": "environment_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique id of the environment that the user belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadEnvironmentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "associated_tenants",
                "camelCase": {
                  "unsafeName": "associatedTenants",
                  "safeName": "associatedTenants"
                },
                "snakeCase": {
                  "unsafeName": "associated_tenants",
                  "safeName": "associated_tenants"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSOCIATED_TENANTS",
                  "safeName": "ASSOCIATED_TENANTS"
                },
                "pascalCase": {
                  "unsafeName": "AssociatedTenants",
                  "safeName": "AssociatedTenants"
                }
              },
              "wireValue": "associated_tenants"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "UserInTenant",
                        "camelCase": {
                          "unsafeName": "userInTenant",
                          "safeName": "userInTenant"
                        },
                        "snakeCase": {
                          "unsafeName": "user_in_tenant",
                          "safeName": "user_in_tenant"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "USER_IN_TENANT",
                          "safeName": "USER_IN_TENANT"
                        },
                        "pascalCase": {
                          "unsafeName": "UserInTenant",
                          "safeName": "UserInTenant"
                        }
                      },
                      "typeId": "UserInTenant",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadAssociatedTenants_example_autogenerated": [
                  {
                    "tenant": "foo",
                    "roles": [
                      "foo"
                    ],
                    "status": "active"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "roles",
                "camelCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "snakeCase": {
                  "unsafeName": "roles",
                  "safeName": "roles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLES",
                  "safeName": "ROLES"
                },
                "pascalCase": {
                  "unsafeName": "Roles",
                  "safeName": "Roles"
                }
              },
              "wireValue": "roles"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "UserRole",
                        "camelCase": {
                          "unsafeName": "userRole",
                          "safeName": "userRole"
                        },
                        "snakeCase": {
                          "unsafeName": "user_role",
                          "safeName": "user_role"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "USER_ROLE",
                          "safeName": "USER_ROLE"
                        },
                        "pascalCase": {
                          "unsafeName": "UserRole",
                          "safeName": "UserRole"
                        }
                      },
                      "typeId": "UserRole",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadRoles_example_autogenerated": [
                  {
                    "role": "foo",
                    "tenant": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "email"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The email of the user. If synced, will be unique inside the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "first_name",
                "camelCase": {
                  "unsafeName": "firstName",
                  "safeName": "firstName"
                },
                "snakeCase": {
                  "unsafeName": "first_name",
                  "safeName": "first_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FIRST_NAME",
                  "safeName": "FIRST_NAME"
                },
                "pascalCase": {
                  "unsafeName": "FirstName",
                  "safeName": "FirstName"
                }
              },
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadFirstName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "last_name",
                "camelCase": {
                  "unsafeName": "lastName",
                  "safeName": "lastName"
                },
                "snakeCase": {
                  "unsafeName": "last_name",
                  "safeName": "last_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_NAME",
                  "safeName": "LAST_NAME"
                },
                "pascalCase": {
                  "unsafeName": "LastName",
                  "safeName": "LastName"
                }
              },
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadLastName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserReadAttributes",
                    "camelCase": {
                      "unsafeName": "userReadAttributes",
                      "safeName": "userReadAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "user_read_attributes",
                      "safeName": "user_read_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_READ_ATTRIBUTES",
                      "safeName": "USER_READ_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "UserReadAttributes",
                      "safeName": "UserReadAttributes"
                    }
                  },
                  "typeId": "UserReadAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReadAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserRead_example_0": {
            "key": "user|892179821739812389327",
            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
            "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
            "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
            "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
            "associated_tenants": [
              {
                "tenant": "stripe-inc",
                "roles": [
                  "admin"
                ],
                "status": "active"
              },
              {
                "tenant": "othercompany.com",
                "roles": [
                  "viewer"
                ],
                "status": "pending"
              }
            ],
            "roles": [
              {
                "role": "admin",
                "tenant": "stripe-inc"
              },
              {
                "role": "viewer",
                "tenant": "othercompany.com"
              }
            ],
            "email": "jane@coolcompany.com",
            "first_name": "Jane",
            "last_name": "Doe",
            "attributes": {
              "department": "marketing",
              "age": 30,
              "subscription": {
                "tier": "pro",
                "expired": false
              }
            }
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserReplaceBulkOperation": {
      "name": {
        "typeId": "UserReplaceBulkOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserReplaceBulkOperation",
          "camelCase": {
            "unsafeName": "userReplaceBulkOperation",
            "safeName": "userReplaceBulkOperation"
          },
          "snakeCase": {
            "unsafeName": "user_replace_bulk_operation",
            "safeName": "user_replace_bulk_operation"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_REPLACE_BULK_OPERATION",
            "safeName": "USER_REPLACE_BULK_OPERATION"
          },
          "pascalCase": {
            "unsafeName": "UserReplaceBulkOperation",
            "safeName": "UserReplaceBulkOperation"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "operations",
                "camelCase": {
                  "unsafeName": "operations",
                  "safeName": "operations"
                },
                "snakeCase": {
                  "unsafeName": "operations",
                  "safeName": "operations"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPERATIONS",
                  "safeName": "OPERATIONS"
                },
                "pascalCase": {
                  "unsafeName": "Operations",
                  "safeName": "Operations"
                }
              },
              "wireValue": "operations"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserCreate",
                    "camelCase": {
                      "unsafeName": "userCreate",
                      "safeName": "userCreate"
                    },
                    "snakeCase": {
                      "unsafeName": "user_create",
                      "safeName": "user_create"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_CREATE",
                      "safeName": "USER_CREATE"
                    },
                    "pascalCase": {
                      "unsafeName": "UserCreate",
                      "safeName": "UserCreate"
                    }
                  },
                  "typeId": "UserCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserReplaceBulkOperationOperations_example_autogenerated": [
                  {
                    "key": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserReplaceBulkOperation_example_autogenerated": {
            "operations": [
              {
                "key": "foo"
              }
            ]
          }
        }
      }
    },
    "UserReplaceBulkOperationResult": {
      "name": {
        "typeId": "UserReplaceBulkOperationResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserReplaceBulkOperationResult",
          "camelCase": {
            "unsafeName": "userReplaceBulkOperationResult",
            "safeName": "userReplaceBulkOperationResult"
          },
          "snakeCase": {
            "unsafeName": "user_replace_bulk_operation_result",
            "safeName": "user_replace_bulk_operation_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_REPLACE_BULK_OPERATION_RESULT",
            "safeName": "USER_REPLACE_BULK_OPERATION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "UserReplaceBulkOperationResult",
            "safeName": "UserReplaceBulkOperationResult"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserReplaceBulkOperationResult_example_autogenerated": {}
        }
      }
    },
    "UserRole": {
      "name": {
        "typeId": "UserRole",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserRole",
          "camelCase": {
            "unsafeName": "userRole",
            "safeName": "userRole"
          },
          "snakeCase": {
            "unsafeName": "user_role",
            "safeName": "user_role"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_ROLE",
            "safeName": "USER_ROLE"
          },
          "pascalCase": {
            "unsafeName": "UserRole",
            "safeName": "UserRole"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that is assigned",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleRole_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleTenant_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserRole_example_autogenerated": {
            "role": "foo",
            "tenant": "foo"
          }
        }
      }
    },
    "UserRoleCreate": {
      "name": {
        "typeId": "UserRoleCreate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserRoleCreate",
          "camelCase": {
            "unsafeName": "userRoleCreate",
            "safeName": "userRoleCreate"
          },
          "snakeCase": {
            "unsafeName": "user_role_create",
            "safeName": "user_role_create"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_ROLE_CREATE",
            "safeName": "USER_ROLE_CREATE"
          },
          "pascalCase": {
            "unsafeName": "UserRoleCreate",
            "safeName": "UserRoleCreate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be assigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleCreateRole_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleCreateTenant_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserRoleCreate_example_0": {
            "role": "admin",
            "tenant": "stripe-inc"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserRoleRemove": {
      "name": {
        "typeId": "UserRoleRemove",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserRoleRemove",
          "camelCase": {
            "unsafeName": "userRoleRemove",
            "safeName": "userRoleRemove"
          },
          "snakeCase": {
            "unsafeName": "user_role_remove",
            "safeName": "user_role_remove"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_ROLE_REMOVE",
            "safeName": "USER_ROLE_REMOVE"
          },
          "pascalCase": {
            "unsafeName": "UserRoleRemove",
            "safeName": "UserRoleRemove"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the role that will be unassigned (accepts either the role id or the role key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleRemoveRole_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tenant",
                "camelCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "snakeCase": {
                  "unsafeName": "tenant",
                  "safeName": "tenant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT",
                  "safeName": "TENANT"
                },
                "pascalCase": {
                  "unsafeName": "Tenant",
                  "safeName": "Tenant"
                }
              },
              "wireValue": "tenant"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "the tenant the role is associated with (accepts either the tenant id or the tenant key)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserRoleRemoveTenant_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {
          "UserRoleRemove_example_0": {
            "role": "editor",
            "tenant": "google-inc"
          }
        },
        "autogeneratedExamples": {}
      }
    },
    "UserStatus": {
      "name": {
        "typeId": "UserStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserStatus",
          "camelCase": {
            "unsafeName": "userStatus",
            "safeName": "userStatus"
          },
          "snakeCase": {
            "unsafeName": "user_status",
            "safeName": "user_status"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_STATUS",
            "safeName": "USER_STATUS"
          },
          "pascalCase": {
            "unsafeName": "UserStatus",
            "safeName": "UserStatus"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "active",
                "camelCase": {
                  "unsafeName": "active",
                  "safeName": "active"
                },
                "snakeCase": {
                  "unsafeName": "active",
                  "safeName": "active"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTIVE",
                  "safeName": "ACTIVE"
                },
                "pascalCase": {
                  "unsafeName": "Active",
                  "safeName": "Active"
                }
              },
              "wireValue": "active"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An enumeration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserStatus_example_autogenerated": "active"
        }
      }
    },
    "UserUpdateAttributes": {
      "name": {
        "typeId": "UserUpdateAttributes",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserUpdateAttributes",
          "camelCase": {
            "unsafeName": "userUpdateAttributes",
            "safeName": "userUpdateAttributes"
          },
          "snakeCase": {
            "unsafeName": "user_update_attributes",
            "safeName": "user_update_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_UPDATE_ATTRIBUTES",
            "safeName": "USER_UPDATE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "UserUpdateAttributes",
            "safeName": "UserUpdateAttributes"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserUpdateAttributes_example_autogenerated": {}
        }
      }
    },
    "UserUpdate": {
      "name": {
        "typeId": "UserUpdate",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserUpdate",
          "camelCase": {
            "unsafeName": "userUpdate",
            "safeName": "userUpdate"
          },
          "snakeCase": {
            "unsafeName": "user_update",
            "safeName": "user_update"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_UPDATE",
            "safeName": "USER_UPDATE"
          },
          "pascalCase": {
            "unsafeName": "UserUpdate",
            "safeName": "UserUpdate"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "email"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The email of the user. If synced, will be unique inside the environment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "first_name",
                "camelCase": {
                  "unsafeName": "firstName",
                  "safeName": "firstName"
                },
                "snakeCase": {
                  "unsafeName": "first_name",
                  "safeName": "first_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FIRST_NAME",
                  "safeName": "FIRST_NAME"
                },
                "pascalCase": {
                  "unsafeName": "FirstName",
                  "safeName": "FirstName"
                }
              },
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "First name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateFirstName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "last_name",
                "camelCase": {
                  "unsafeName": "lastName",
                  "safeName": "lastName"
                },
                "snakeCase": {
                  "unsafeName": "last_name",
                  "safeName": "last_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_NAME",
                  "safeName": "LAST_NAME"
                },
                "pascalCase": {
                  "unsafeName": "LastName",
                  "safeName": "LastName"
                }
              },
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Last name of the user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateLastName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserUpdateAttributes",
                    "camelCase": {
                      "unsafeName": "userUpdateAttributes",
                      "safeName": "userUpdateAttributes"
                    },
                    "snakeCase": {
                      "unsafeName": "user_update_attributes",
                      "safeName": "user_update_attributes"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_UPDATE_ATTRIBUTES",
                      "safeName": "USER_UPDATE_ATTRIBUTES"
                    },
                    "pascalCase": {
                      "unsafeName": "UserUpdateAttributes",
                      "safeName": "UserUpdateAttributes"
                    }
                  },
                  "typeId": "UserUpdateAttributes",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Arbitrary user attributes that will be used to enforce attribute-based access control policies.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserUpdateAttributes_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserUpdate_example_autogenerated": {}
        }
      }
    },
    "ValidationErrorLocItems": {
      "name": {
        "typeId": "ValidationErrorLocItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ValidationErrorLocItems",
          "camelCase": {
            "unsafeName": "validationErrorLocItems",
            "safeName": "validationErrorLocItems"
          },
          "snakeCase": {
            "unsafeName": "validation_error_loc_items",
            "safeName": "validation_error_loc_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "VALIDATION_ERROR_LOC_ITEMS",
            "safeName": "VALIDATION_ERROR_LOC_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "ValidationErrorLocItems",
            "safeName": "ValidationErrorLocItems"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationErrorLocItems_example_autogenerated": "foo"
        }
      }
    },
    "ValidationError": {
      "name": {
        "typeId": "ValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ValidationError",
          "camelCase": {
            "unsafeName": "validationError",
            "safeName": "validationError"
          },
          "snakeCase": {
            "unsafeName": "validation_error",
            "safeName": "validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "VALIDATION_ERROR",
            "safeName": "VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ValidationError",
            "safeName": "ValidationError"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "loc",
                "camelCase": {
                  "unsafeName": "loc",
                  "safeName": "loc"
                },
                "snakeCase": {
                  "unsafeName": "loc",
                  "safeName": "loc"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOC",
                  "safeName": "LOC"
                },
                "pascalCase": {
                  "unsafeName": "Loc",
                  "safeName": "Loc"
                }
              },
              "wireValue": "loc"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ValidationErrorLocItems",
                    "camelCase": {
                      "unsafeName": "validationErrorLocItems",
                      "safeName": "validationErrorLocItems"
                    },
                    "snakeCase": {
                      "unsafeName": "validation_error_loc_items",
                      "safeName": "validation_error_loc_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "VALIDATION_ERROR_LOC_ITEMS",
                      "safeName": "VALIDATION_ERROR_LOC_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "ValidationErrorLocItems",
                      "safeName": "ValidationErrorLocItems"
                    }
                  },
                  "typeId": "ValidationErrorLocItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorLoc_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "msg",
                "camelCase": {
                  "unsafeName": "msg",
                  "safeName": "msg"
                },
                "snakeCase": {
                  "unsafeName": "msg",
                  "safeName": "msg"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MSG",
                  "safeName": "MSG"
                },
                "pascalCase": {
                  "unsafeName": "Msg",
                  "safeName": "Msg"
                }
              },
              "wireValue": "msg"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorMsg_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationError_example_autogenerated": {
            "loc": [
              "foo"
            ],
            "msg": "foo",
            "type": "foo"
          }
        }
      }
    },
    "ResourcesListResourcesResponse2001": {
      "name": {
        "typeId": "ResourcesListResourcesResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResourcesListResourcesResponse2001",
          "camelCase": {
            "unsafeName": "resourcesListResourcesResponse2001",
            "safeName": "resourcesListResourcesResponse2001"
          },
          "snakeCase": {
            "unsafeName": "resources_list_resources_response_2001",
            "safeName": "resources_list_resources_response_2001"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCES_LIST_RESOURCES_RESPONSE_2001",
            "safeName": "RESOURCES_LIST_RESOURCES_RESPONSE_2001"
          },
          "pascalCase": {
            "unsafeName": "ResourcesListResourcesResponse2001",
            "safeName": "ResourcesListResourcesResponse2001"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRead",
                "camelCase": {
                  "unsafeName": "resourceRead",
                  "safeName": "resourceRead"
                },
                "snakeCase": {
                  "unsafeName": "resource_read",
                  "safeName": "resource_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_READ",
                  "safeName": "RESOURCE_READ"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRead",
                  "safeName": "ResourceRead"
                }
              },
              "typeId": "ResourceRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRead",
                "camelCase": {
                  "unsafeName": "resourceRead",
                  "safeName": "resourceRead"
                },
                "snakeCase": {
                  "unsafeName": "resource_read",
                  "safeName": "resource_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_READ",
                  "safeName": "RESOURCE_READ"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRead",
                  "safeName": "ResourceRead"
                }
              },
              "typeId": "ResourceRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResourcesListResourcesResponse2001_example_autogenerated": [
            {
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "created_at": "foo",
              "updated_at": "foo",
              "name": "foo"
            }
          ]
        }
      }
    },
    "Resources_list_resources_Response_200": {
      "name": {
        "typeId": "Resources_list_resources_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Resources_list_resources_Response_200",
          "camelCase": {
            "unsafeName": "resourcesListResourcesResponse200",
            "safeName": "resourcesListResourcesResponse200"
          },
          "snakeCase": {
            "unsafeName": "resources_list_resources_response_200",
            "safeName": "resources_list_resources_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCES_LIST_RESOURCES_RESPONSE_200",
            "safeName": "RESOURCES_LIST_RESOURCES_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "ResourcesListResourcesResponse200",
            "safeName": "ResourcesListResourcesResponse200"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PaginatedResult_ResourceRead_",
                "camelCase": {
                  "unsafeName": "paginatedResultResourceRead",
                  "safeName": "paginatedResultResourceRead"
                },
                "snakeCase": {
                  "unsafeName": "paginated_result_resource_read",
                  "safeName": "paginated_result_resource_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGINATED_RESULT_RESOURCE_READ",
                  "safeName": "PAGINATED_RESULT_RESOURCE_READ"
                },
                "pascalCase": {
                  "unsafeName": "PaginatedResultResourceRead",
                  "safeName": "PaginatedResultResourceRead"
                }
              },
              "typeId": "PaginatedResult_ResourceRead_",
              "inline": false,
              "displayName": "PaginatedResult[ResourceRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourcesListResourcesResponse2001",
                "camelCase": {
                  "unsafeName": "resourcesListResourcesResponse2001",
                  "safeName": "resourcesListResourcesResponse2001"
                },
                "snakeCase": {
                  "unsafeName": "resources_list_resources_response_2001",
                  "safeName": "resources_list_resources_response_2001"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCES_LIST_RESOURCES_RESPONSE_2001",
                  "safeName": "RESOURCES_LIST_RESOURCES_RESPONSE_2001"
                },
                "pascalCase": {
                  "unsafeName": "ResourcesListResourcesResponse2001",
                  "safeName": "ResourcesListResourcesResponse2001"
                }
              },
              "typeId": "ResourcesListResourcesResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Resources_list_resources_Response_200_example_autogenerated": {
            "data": [
              {
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo",
                "name": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "RolesListRolesResponse2001": {
      "name": {
        "typeId": "RolesListRolesResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RolesListRolesResponse2001",
          "camelCase": {
            "unsafeName": "rolesListRolesResponse2001",
            "safeName": "rolesListRolesResponse2001"
          },
          "snakeCase": {
            "unsafeName": "roles_list_roles_response_2001",
            "safeName": "roles_list_roles_response_2001"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLES_LIST_ROLES_RESPONSE_2001",
            "safeName": "ROLES_LIST_ROLES_RESPONSE_2001"
          },
          "pascalCase": {
            "unsafeName": "RolesListRolesResponse2001",
            "safeName": "RolesListRolesResponse2001"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleRead",
                "camelCase": {
                  "unsafeName": "roleRead",
                  "safeName": "roleRead"
                },
                "snakeCase": {
                  "unsafeName": "role_read",
                  "safeName": "role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_READ",
                  "safeName": "ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "RoleRead",
                  "safeName": "RoleRead"
                }
              },
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleRead",
                "camelCase": {
                  "unsafeName": "roleRead",
                  "safeName": "roleRead"
                },
                "snakeCase": {
                  "unsafeName": "role_read",
                  "safeName": "role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_READ",
                  "safeName": "ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "RoleRead",
                  "safeName": "RoleRead"
                }
              },
              "typeId": "RoleRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RolesListRolesResponse2001_example_autogenerated": [
            {
              "name": "foo",
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "created_at": "foo",
              "updated_at": "foo"
            }
          ]
        }
      }
    },
    "Roles_list_roles_Response_200": {
      "name": {
        "typeId": "Roles_list_roles_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Roles_list_roles_Response_200",
          "camelCase": {
            "unsafeName": "rolesListRolesResponse200",
            "safeName": "rolesListRolesResponse200"
          },
          "snakeCase": {
            "unsafeName": "roles_list_roles_response_200",
            "safeName": "roles_list_roles_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLES_LIST_ROLES_RESPONSE_200",
            "safeName": "ROLES_LIST_ROLES_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "RolesListRolesResponse200",
            "safeName": "RolesListRolesResponse200"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PaginatedResult_RoleRead_",
                "camelCase": {
                  "unsafeName": "paginatedResultRoleRead",
                  "safeName": "paginatedResultRoleRead"
                },
                "snakeCase": {
                  "unsafeName": "paginated_result_role_read",
                  "safeName": "paginated_result_role_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGINATED_RESULT_ROLE_READ",
                  "safeName": "PAGINATED_RESULT_ROLE_READ"
                },
                "pascalCase": {
                  "unsafeName": "PaginatedResultRoleRead",
                  "safeName": "PaginatedResultRoleRead"
                }
              },
              "typeId": "PaginatedResult_RoleRead_",
              "inline": false,
              "displayName": "PaginatedResult[RoleRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RolesListRolesResponse2001",
                "camelCase": {
                  "unsafeName": "rolesListRolesResponse2001",
                  "safeName": "rolesListRolesResponse2001"
                },
                "snakeCase": {
                  "unsafeName": "roles_list_roles_response_2001",
                  "safeName": "roles_list_roles_response_2001"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLES_LIST_ROLES_RESPONSE_2001",
                  "safeName": "ROLES_LIST_ROLES_RESPONSE_2001"
                },
                "pascalCase": {
                  "unsafeName": "RolesListRolesResponse2001",
                  "safeName": "RolesListRolesResponse2001"
                }
              },
              "typeId": "RolesListRolesResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Roles_list_roles_Response_200_example_autogenerated": {
            "data": [
              {
                "name": "foo",
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "ConditionSetsListConditionSetsResponse2001": {
      "name": {
        "typeId": "ConditionSetsListConditionSetsResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ConditionSetsListConditionSetsResponse2001",
          "camelCase": {
            "unsafeName": "conditionSetsListConditionSetsResponse2001",
            "safeName": "conditionSetsListConditionSetsResponse2001"
          },
          "snakeCase": {
            "unsafeName": "condition_sets_list_condition_sets_response_2001",
            "safeName": "condition_sets_list_condition_sets_response_2001"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_2001",
            "safeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_2001"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetsListConditionSetsResponse2001",
            "safeName": "ConditionSetsListConditionSetsResponse2001"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ConditionSetRead",
                "camelCase": {
                  "unsafeName": "conditionSetRead",
                  "safeName": "conditionSetRead"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_read",
                  "safeName": "condition_set_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_READ",
                  "safeName": "CONDITION_SET_READ"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetRead",
                  "safeName": "ConditionSetRead"
                }
              },
              "typeId": "ConditionSetRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ConditionSetRead",
                "camelCase": {
                  "unsafeName": "conditionSetRead",
                  "safeName": "conditionSetRead"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_read",
                  "safeName": "condition_set_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_READ",
                  "safeName": "CONDITION_SET_READ"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetRead",
                  "safeName": "ConditionSetRead"
                }
              },
              "typeId": "ConditionSetRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSetsListConditionSetsResponse2001_example_autogenerated": [
            {
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "created_at": "foo",
              "updated_at": "foo",
              "name": "foo"
            }
          ]
        }
      }
    },
    "Condition Sets_list_condition_sets_Response_200": {
      "name": {
        "typeId": "Condition Sets_list_condition_sets_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Condition Sets_list_condition_sets_Response_200",
          "camelCase": {
            "unsafeName": "conditionSetsListConditionSetsResponse200",
            "safeName": "conditionSetsListConditionSetsResponse200"
          },
          "snakeCase": {
            "unsafeName": "condition_sets_list_condition_sets_response_200",
            "safeName": "condition_sets_list_condition_sets_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_200",
            "safeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetsListConditionSetsResponse200",
            "safeName": "ConditionSetsListConditionSetsResponse200"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PaginatedResult_ConditionSetRead_",
                "camelCase": {
                  "unsafeName": "paginatedResultConditionSetRead",
                  "safeName": "paginatedResultConditionSetRead"
                },
                "snakeCase": {
                  "unsafeName": "paginated_result_condition_set_read",
                  "safeName": "paginated_result_condition_set_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGINATED_RESULT_CONDITION_SET_READ",
                  "safeName": "PAGINATED_RESULT_CONDITION_SET_READ"
                },
                "pascalCase": {
                  "unsafeName": "PaginatedResultConditionSetRead",
                  "safeName": "PaginatedResultConditionSetRead"
                }
              },
              "typeId": "PaginatedResult_ConditionSetRead_",
              "inline": false,
              "displayName": "PaginatedResult[ConditionSetRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ConditionSetsListConditionSetsResponse2001",
                "camelCase": {
                  "unsafeName": "conditionSetsListConditionSetsResponse2001",
                  "safeName": "conditionSetsListConditionSetsResponse2001"
                },
                "snakeCase": {
                  "unsafeName": "condition_sets_list_condition_sets_response_2001",
                  "safeName": "condition_sets_list_condition_sets_response_2001"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_2001",
                  "safeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_2001"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetsListConditionSetsResponse2001",
                  "safeName": "ConditionSetsListConditionSetsResponse2001"
                }
              },
              "typeId": "ConditionSetsListConditionSetsResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Condition Sets_list_condition_sets_Response_200_example_autogenerated": {
            "data": [
              {
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo",
                "name": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    },
    "TenantsListTenantsResponse2001": {
      "name": {
        "typeId": "TenantsListTenantsResponse2001",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TenantsListTenantsResponse2001",
          "camelCase": {
            "unsafeName": "tenantsListTenantsResponse2001",
            "safeName": "tenantsListTenantsResponse2001"
          },
          "snakeCase": {
            "unsafeName": "tenants_list_tenants_response_2001",
            "safeName": "tenants_list_tenants_response_2001"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANTS_LIST_TENANTS_RESPONSE_2001",
            "safeName": "TENANTS_LIST_TENANTS_RESPONSE_2001"
          },
          "pascalCase": {
            "unsafeName": "TenantsListTenantsResponse2001",
            "safeName": "TenantsListTenantsResponse2001"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TenantRead",
                "camelCase": {
                  "unsafeName": "tenantRead",
                  "safeName": "tenantRead"
                },
                "snakeCase": {
                  "unsafeName": "tenant_read",
                  "safeName": "tenant_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_READ",
                  "safeName": "TENANT_READ"
                },
                "pascalCase": {
                  "unsafeName": "TenantRead",
                  "safeName": "TenantRead"
                }
              },
              "typeId": "TenantRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TenantRead",
                "camelCase": {
                  "unsafeName": "tenantRead",
                  "safeName": "tenantRead"
                },
                "snakeCase": {
                  "unsafeName": "tenant_read",
                  "safeName": "tenant_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_READ",
                  "safeName": "TENANT_READ"
                },
                "pascalCase": {
                  "unsafeName": "TenantRead",
                  "safeName": "TenantRead"
                }
              },
              "typeId": "TenantRead",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TenantsListTenantsResponse2001_example_autogenerated": [
            {
              "key": "foo",
              "id": "foo",
              "organization_id": "foo",
              "project_id": "foo",
              "environment_id": "foo",
              "created_at": "foo",
              "updated_at": "foo",
              "last_action_at": "foo",
              "name": "foo"
            }
          ]
        }
      }
    },
    "Tenants_list_tenants_Response_200": {
      "name": {
        "typeId": "Tenants_list_tenants_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Tenants_list_tenants_Response_200",
          "camelCase": {
            "unsafeName": "tenantsListTenantsResponse200",
            "safeName": "tenantsListTenantsResponse200"
          },
          "snakeCase": {
            "unsafeName": "tenants_list_tenants_response_200",
            "safeName": "tenants_list_tenants_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANTS_LIST_TENANTS_RESPONSE_200",
            "safeName": "TENANTS_LIST_TENANTS_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "TenantsListTenantsResponse200",
            "safeName": "TenantsListTenantsResponse200"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PaginatedResult_TenantRead_",
                "camelCase": {
                  "unsafeName": "paginatedResultTenantRead",
                  "safeName": "paginatedResultTenantRead"
                },
                "snakeCase": {
                  "unsafeName": "paginated_result_tenant_read",
                  "safeName": "paginated_result_tenant_read"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGINATED_RESULT_TENANT_READ",
                  "safeName": "PAGINATED_RESULT_TENANT_READ"
                },
                "pascalCase": {
                  "unsafeName": "PaginatedResultTenantRead",
                  "safeName": "PaginatedResultTenantRead"
                }
              },
              "typeId": "PaginatedResult_TenantRead_",
              "inline": false,
              "displayName": "PaginatedResult[TenantRead]",
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TenantsListTenantsResponse2001",
                "camelCase": {
                  "unsafeName": "tenantsListTenantsResponse2001",
                  "safeName": "tenantsListTenantsResponse2001"
                },
                "snakeCase": {
                  "unsafeName": "tenants_list_tenants_response_2001",
                  "safeName": "tenants_list_tenants_response_2001"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANTS_LIST_TENANTS_RESPONSE_2001",
                  "safeName": "TENANTS_LIST_TENANTS_RESPONSE_2001"
                },
                "pascalCase": {
                  "unsafeName": "TenantsListTenantsResponse2001",
                  "safeName": "TenantsListTenantsResponse2001"
                }
              },
              "typeId": "TenantsListTenantsResponse2001",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tenants_list_tenants_Response_200_example_autogenerated": {
            "data": [
              {
                "key": "foo",
                "id": "foo",
                "organization_id": "foo",
                "project_id": "foo",
                "environment_id": "foo",
                "created_at": "foo",
                "updated_at": "foo",
                "last_action_at": "foo",
                "name": "foo"
              }
            ],
            "total_count": 42
          }
        }
      }
    }
  },
  "services": {
    "service_organizations": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Organizations",
              "camelCase": {
                "unsafeName": "organizations",
                "safeName": "organizations"
              },
              "snakeCase": {
                "unsafeName": "organizations",
                "safeName": "organizations"
              },
              "screamingSnakeCase": {
                "unsafeName": "ORGANIZATIONS",
                "safeName": "ORGANIZATIONS"
              },
              "pascalCase": {
                "unsafeName": "Organizations",
                "safeName": "Organizations"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Organizations",
            "camelCase": {
              "unsafeName": "organizations",
              "safeName": "organizations"
            },
            "snakeCase": {
              "unsafeName": "organizations",
              "safeName": "organizations"
            },
            "screamingSnakeCase": {
              "unsafeName": "ORGANIZATIONS",
              "safeName": "ORGANIZATIONS"
            },
            "pascalCase": {
              "unsafeName": "Organizations",
              "safeName": "Organizations"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Organizations",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_organizationsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listOrganizationsRequestUnprocessableEntityError",
                    "safeName": "listOrganizationsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_organizations_request_unprocessable_entity_error",
                    "safeName": "list_organizations_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_ORGANIZATIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_ORGANIZATIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListOrganizationsRequestUnprocessableEntityError",
                    "safeName": "ListOrganizationsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_organizationsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.list_organizations",
          "name": {
            "originalName": "list_organizations",
            "camelCase": {
              "unsafeName": "listOrganizations",
              "safeName": "listOrganizations"
            },
            "snakeCase": {
              "unsafeName": "list_organizations",
              "safeName": "list_organizations"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_ORGANIZATIONS",
              "safeName": "LIST_ORGANIZATIONS"
            },
            "pascalCase": {
              "unsafeName": "ListOrganizations",
              "safeName": "ListOrganizations"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "OrganizationRead",
                        "camelCase": {
                          "unsafeName": "organizationRead",
                          "safeName": "organizationRead"
                        },
                        "snakeCase": {
                          "unsafeName": "organization_read",
                          "safeName": "organization_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ORGANIZATION_READ",
                          "safeName": "ORGANIZATION_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "OrganizationRead",
                          "safeName": "OrganizationRead"
                        }
                      },
                      "typeId": "OrganizationRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsListOrganizationsExample": [
                      {
                        "key": "foo",
                        "id": "foo",
                        "is_enterprise": true,
                        "created_at": "foo",
                        "updated_at": "foo",
                        "name": "foo",
                        "settings": {}
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the organizations that can be accessed by the\nauthenticated actor (i.e: human team member or api key).",
          "v2Examples": {
            "autogeneratedExamples": {
              "listOrganizationsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/orgs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "foo",
                        "id": "foo",
                        "is_enterprise": true,
                        "created_at": "foo",
                        "updated_at": "foo",
                        "name": "foo",
                        "settings": {}
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Organization",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_organizationRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createOrganizationRequestUnprocessableEntityError",
                    "safeName": "createOrganizationRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_organization_request_unprocessable_entity_error",
                    "safeName": "create_organization_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateOrganizationRequestUnprocessableEntityError",
                    "safeName": "CreateOrganizationRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.create_organization",
          "name": {
            "originalName": "create_organization",
            "camelCase": {
              "unsafeName": "createOrganization",
              "safeName": "createOrganization"
            },
            "snakeCase": {
              "unsafeName": "create_organization",
              "safeName": "create_organization"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_ORGANIZATION",
              "safeName": "CREATE_ORGANIZATION"
            },
            "pascalCase": {
              "unsafeName": "CreateOrganization",
              "safeName": "CreateOrganization"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "OrganizationCreate",
                "camelCase": {
                  "unsafeName": "organizationCreate",
                  "safeName": "organizationCreate"
                },
                "snakeCase": {
                  "unsafeName": "organization_create",
                  "safeName": "organization_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_CREATE",
                  "safeName": "ORGANIZATION_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationCreate",
                  "safeName": "OrganizationCreate"
                }
              },
              "typeId": "OrganizationCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "organizationsCreateOrganizationExample": {
                  "key": "foo",
                  "name": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationReadWithAPIKey",
                    "camelCase": {
                      "unsafeName": "organizationReadWithApiKey",
                      "safeName": "organizationReadWithApiKey"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_read_with_api_key",
                      "safeName": "organization_read_with_api_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_READ_WITH_API_KEY",
                      "safeName": "ORGANIZATION_READ_WITH_API_KEY"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationReadWithApiKey",
                      "safeName": "OrganizationReadWithApiKey"
                    }
                  },
                  "typeId": "OrganizationReadWithAPIKey",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsCreateOrganizationExample": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {},
                      "api_key_id": "foo",
                      "api_key_secret": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new organization that will be owned by the\nauthenticated actor (i.e: human team member or api key).",
          "v2Examples": {
            "autogeneratedExamples": {
              "organizationsCreateOrganizationExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/orgs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "foo",
                    "name": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {},
                      "api_key_id": "foo",
                      "api_key_secret": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Organization",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "org_id",
                "camelCase": {
                  "unsafeName": "orgId",
                  "safeName": "orgId"
                },
                "snakeCase": {
                  "unsafeName": "org_id",
                  "safeName": "org_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG_ID",
                  "safeName": "ORG_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrgId",
                  "safeName": "OrgId"
                }
              },
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_organizationRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getOrganizationRequestUnprocessableEntityError",
                    "safeName": "getOrganizationRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_organization_request_unprocessable_entity_error",
                    "safeName": "get_organization_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetOrganizationRequestUnprocessableEntityError",
                    "safeName": "GetOrganizationRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "org_id",
                "camelCase": {
                  "unsafeName": "orgId",
                  "safeName": "orgId"
                },
                "snakeCase": {
                  "unsafeName": "org_id",
                  "safeName": "org_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG_ID",
                  "safeName": "ORG_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrgId",
                  "safeName": "OrgId"
                }
              },
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.get_organization",
          "name": {
            "originalName": "get_organization",
            "camelCase": {
              "unsafeName": "getOrganization",
              "safeName": "getOrganization"
            },
            "snakeCase": {
              "unsafeName": "get_organization",
              "safeName": "get_organization"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_ORGANIZATION",
              "safeName": "GET_ORGANIZATION"
            },
            "pascalCase": {
              "unsafeName": "GetOrganization",
              "safeName": "GetOrganization"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationRead",
                    "camelCase": {
                      "unsafeName": "organizationRead",
                      "safeName": "organizationRead"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_read",
                      "safeName": "organization_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_READ",
                      "safeName": "ORGANIZATION_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationRead",
                      "safeName": "OrganizationRead"
                    }
                  },
                  "typeId": "OrganizationRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsGetOrganizationExample": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single organization (Permit.io account) matching the given org_id,\nif such org exists and can be accessed by the authenticated actor.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getOrganizationExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/orgs/org_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "org_id": "org_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Organization",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "org_id",
                "camelCase": {
                  "unsafeName": "orgId",
                  "safeName": "orgId"
                },
                "snakeCase": {
                  "unsafeName": "org_id",
                  "safeName": "org_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG_ID",
                  "safeName": "ORG_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrgId",
                  "safeName": "OrgId"
                }
              },
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_organizationRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteOrganizationRequestUnprocessableEntityError",
                    "safeName": "deleteOrganizationRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_organization_request_unprocessable_entity_error",
                    "safeName": "delete_organization_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteOrganizationRequestUnprocessableEntityError",
                    "safeName": "DeleteOrganizationRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "org_id",
                "camelCase": {
                  "unsafeName": "orgId",
                  "safeName": "orgId"
                },
                "snakeCase": {
                  "unsafeName": "org_id",
                  "safeName": "org_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG_ID",
                  "safeName": "ORG_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrgId",
                  "safeName": "OrgId"
                }
              },
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.delete_organization",
          "name": {
            "originalName": "delete_organization",
            "camelCase": {
              "unsafeName": "deleteOrganization",
              "safeName": "deleteOrganization"
            },
            "snakeCase": {
              "unsafeName": "delete_organization",
              "safeName": "delete_organization"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_ORGANIZATION",
              "safeName": "DELETE_ORGANIZATION"
            },
            "pascalCase": {
              "unsafeName": "DeleteOrganization",
              "safeName": "DeleteOrganization"
            }
          },
          "docs": "Deletes an organization (Permit.io account) and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteOrganizationExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/orgs/org_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "org_id": "org_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Organization",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "org_id",
                "camelCase": {
                  "unsafeName": "orgId",
                  "safeName": "orgId"
                },
                "snakeCase": {
                  "unsafeName": "org_id",
                  "safeName": "org_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG_ID",
                  "safeName": "ORG_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrgId",
                  "safeName": "OrgId"
                }
              },
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_organizationRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateOrganizationRequestUnprocessableEntityError",
                    "safeName": "updateOrganizationRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_organization_request_unprocessable_entity_error",
                    "safeName": "update_organization_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateOrganizationRequestUnprocessableEntityError",
                    "safeName": "UpdateOrganizationRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/",
            "parts": [
              {
                "pathParameter": "org_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "org_id",
                "camelCase": {
                  "unsafeName": "orgId",
                  "safeName": "orgId"
                },
                "snakeCase": {
                  "unsafeName": "org_id",
                  "safeName": "org_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORG_ID",
                  "safeName": "ORG_ID"
                },
                "pascalCase": {
                  "unsafeName": "OrgId",
                  "safeName": "OrgId"
                }
              },
              "docs": "Either the unique id of the organization, or the URL-friendly key of the organization (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "org_id_example": "org_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.update_organization",
          "name": {
            "originalName": "update_organization",
            "camelCase": {
              "unsafeName": "updateOrganization",
              "safeName": "updateOrganization"
            },
            "snakeCase": {
              "unsafeName": "update_organization",
              "safeName": "update_organization"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_ORGANIZATION",
              "safeName": "UPDATE_ORGANIZATION"
            },
            "pascalCase": {
              "unsafeName": "UpdateOrganization",
              "safeName": "UpdateOrganization"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "OrganizationUpdate",
                "camelCase": {
                  "unsafeName": "organizationUpdate",
                  "safeName": "organizationUpdate"
                },
                "snakeCase": {
                  "unsafeName": "organization_update",
                  "safeName": "organization_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION_UPDATE",
                  "safeName": "ORGANIZATION_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "OrganizationUpdate",
                  "safeName": "OrganizationUpdate"
                }
              },
              "typeId": "OrganizationUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "organizationsUpdateOrganizationExample": {}
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationRead",
                    "camelCase": {
                      "unsafeName": "organizationRead",
                      "safeName": "organizationRead"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_read",
                      "safeName": "organization_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_READ",
                      "safeName": "ORGANIZATION_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationRead",
                      "safeName": "OrganizationRead"
                    }
                  },
                  "typeId": "OrganizationRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsUpdateOrganizationExample": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the organization's profile.",
          "v2Examples": {
            "autogeneratedExamples": {
              "organizationsUpdateOrganizationExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/orgs/org_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "org_id": "org_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Active Organization",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/orgs/active/org",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_active_organizationRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getActiveOrganizationRequestUnprocessableEntityError",
                    "safeName": "getActiveOrganizationRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_active_organization_request_unprocessable_entity_error",
                    "safeName": "get_active_organization_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_ACTIVE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_ACTIVE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetActiveOrganizationRequestUnprocessableEntityError",
                    "safeName": "GetActiveOrganizationRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_active_organizationRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/orgs/active/org",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_organizations.get_active_organization",
          "name": {
            "originalName": "get_active_organization",
            "camelCase": {
              "unsafeName": "getActiveOrganization",
              "safeName": "getActiveOrganization"
            },
            "snakeCase": {
              "unsafeName": "get_active_organization",
              "safeName": "get_active_organization"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_ACTIVE_ORGANIZATION",
              "safeName": "GET_ACTIVE_ORGANIZATION"
            },
            "pascalCase": {
              "unsafeName": "GetActiveOrganization",
              "safeName": "GetActiveOrganization"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OrganizationRead",
                    "camelCase": {
                      "unsafeName": "organizationRead",
                      "safeName": "organizationRead"
                    },
                    "snakeCase": {
                      "unsafeName": "organization_read",
                      "safeName": "organization_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ORGANIZATION_READ",
                      "safeName": "ORGANIZATION_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "OrganizationRead",
                      "safeName": "OrganizationRead"
                    }
                  },
                  "typeId": "OrganizationRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "organizationsGetActiveOrganizationExample": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single organization (Permit.io account) matching the given org_id,\nif such org exists and can be accessed by the authenticated actor.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getActiveOrganizationExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/orgs/active/org"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "is_enterprise": true,
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_projects": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Projects",
              "camelCase": {
                "unsafeName": "projects",
                "safeName": "projects"
              },
              "snakeCase": {
                "unsafeName": "projects",
                "safeName": "projects"
              },
              "screamingSnakeCase": {
                "unsafeName": "PROJECTS",
                "safeName": "PROJECTS"
              },
              "pascalCase": {
                "unsafeName": "Projects",
                "safeName": "Projects"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Projects",
            "camelCase": {
              "unsafeName": "projects",
              "safeName": "projects"
            },
            "snakeCase": {
              "unsafeName": "projects",
              "safeName": "projects"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROJECTS",
              "safeName": "PROJECTS"
            },
            "pascalCase": {
              "unsafeName": "Projects",
              "safeName": "Projects"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Projects",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_projectsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listProjectsRequestUnprocessableEntityError",
                    "safeName": "listProjectsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_projects_request_unprocessable_entity_error",
                    "safeName": "list_projects_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_PROJECTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_PROJECTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListProjectsRequestUnprocessableEntityError",
                    "safeName": "ListProjectsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_projectsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.list_projects",
          "name": {
            "originalName": "list_projects",
            "camelCase": {
              "unsafeName": "listProjects",
              "safeName": "listProjects"
            },
            "snakeCase": {
              "unsafeName": "list_projects",
              "safeName": "list_projects"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_PROJECTS",
              "safeName": "LIST_PROJECTS"
            },
            "pascalCase": {
              "unsafeName": "ListProjects",
              "safeName": "ListProjects"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ProjectRead",
                        "camelCase": {
                          "unsafeName": "projectRead",
                          "safeName": "projectRead"
                        },
                        "snakeCase": {
                          "unsafeName": "project_read",
                          "safeName": "project_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "PROJECT_READ",
                          "safeName": "PROJECT_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ProjectRead",
                          "safeName": "ProjectRead"
                        }
                      },
                      "typeId": "ProjectRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsListProjectsExample": [
                      {
                        "key": "foo",
                        "urn_namespace": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "name": "foo",
                        "description": "foo",
                        "settings": {},
                        "active_policy_repo_id": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the projects under the active organization.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listProjectsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "foo",
                        "urn_namespace": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "name": "foo",
                        "description": "foo",
                        "settings": {},
                        "active_policy_repo_id": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Project",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_projectRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createProjectRequestUnprocessableEntityError",
                    "safeName": "createProjectRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_project_request_unprocessable_entity_error",
                    "safeName": "create_project_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateProjectRequestUnprocessableEntityError",
                    "safeName": "CreateProjectRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.create_project",
          "name": {
            "originalName": "create_project",
            "camelCase": {
              "unsafeName": "createProject",
              "safeName": "createProject"
            },
            "snakeCase": {
              "unsafeName": "create_project",
              "safeName": "create_project"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_PROJECT",
              "safeName": "CREATE_PROJECT"
            },
            "pascalCase": {
              "unsafeName": "CreateProject",
              "safeName": "CreateProject"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ProjectCreate",
                "camelCase": {
                  "unsafeName": "projectCreate",
                  "safeName": "projectCreate"
                },
                "snakeCase": {
                  "unsafeName": "project_create",
                  "safeName": "project_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_CREATE",
                  "safeName": "PROJECT_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ProjectCreate",
                  "safeName": "ProjectCreate"
                }
              },
              "typeId": "ProjectCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "projectsCreateProjectExample": {
                  "key": "foo",
                  "name": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ProjectRead",
                    "camelCase": {
                      "unsafeName": "projectRead",
                      "safeName": "projectRead"
                    },
                    "snakeCase": {
                      "unsafeName": "project_read",
                      "safeName": "project_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROJECT_READ",
                      "safeName": "PROJECT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ProjectRead",
                      "safeName": "ProjectRead"
                    }
                  },
                  "typeId": "ProjectRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsCreateProjectExample": {
                      "key": "foo",
                      "urn_namespace": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "settings": {},
                      "active_policy_repo_id": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new project under the active organization.",
          "v2Examples": {
            "autogeneratedExamples": {
              "projectsCreateProjectExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/projects"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "foo",
                    "name": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "urn_namespace": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "settings": {},
                      "active_policy_repo_id": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Project",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_projectRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getProjectRequestUnprocessableEntityError",
                    "safeName": "getProjectRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_project_request_unprocessable_entity_error",
                    "safeName": "get_project_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetProjectRequestUnprocessableEntityError",
                    "safeName": "GetProjectRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.get_project",
          "name": {
            "originalName": "get_project",
            "camelCase": {
              "unsafeName": "getProject",
              "safeName": "getProject"
            },
            "snakeCase": {
              "unsafeName": "get_project",
              "safeName": "get_project"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_PROJECT",
              "safeName": "GET_PROJECT"
            },
            "pascalCase": {
              "unsafeName": "GetProject",
              "safeName": "GetProject"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ProjectRead",
                    "camelCase": {
                      "unsafeName": "projectRead",
                      "safeName": "projectRead"
                    },
                    "snakeCase": {
                      "unsafeName": "project_read",
                      "safeName": "project_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROJECT_READ",
                      "safeName": "PROJECT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ProjectRead",
                      "safeName": "ProjectRead"
                    }
                  },
                  "typeId": "ProjectRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsGetProjectExample": {
                      "key": "foo",
                      "urn_namespace": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "settings": {},
                      "active_policy_repo_id": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single project matching the given proj_id, if such project exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getProjectExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "urn_namespace": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "settings": {},
                      "active_policy_repo_id": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Project",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_projectRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteProjectRequestUnprocessableEntityError",
                    "safeName": "deleteProjectRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_project_request_unprocessable_entity_error",
                    "safeName": "delete_project_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteProjectRequestUnprocessableEntityError",
                    "safeName": "DeleteProjectRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.delete_project",
          "name": {
            "originalName": "delete_project",
            "camelCase": {
              "unsafeName": "deleteProject",
              "safeName": "deleteProject"
            },
            "snakeCase": {
              "unsafeName": "delete_project",
              "safeName": "delete_project"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_PROJECT",
              "safeName": "DELETE_PROJECT"
            },
            "pascalCase": {
              "unsafeName": "DeleteProject",
              "safeName": "DeleteProject"
            }
          },
          "docs": "Deletes the project and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteProjectExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/projects/proj_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Project",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_projectRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateProjectRequestUnprocessableEntityError",
                    "safeName": "updateProjectRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_project_request_unprocessable_entity_error",
                    "safeName": "update_project_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateProjectRequestUnprocessableEntityError",
                    "safeName": "UpdateProjectRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_projectRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_projects.update_project",
          "name": {
            "originalName": "update_project",
            "camelCase": {
              "unsafeName": "updateProject",
              "safeName": "updateProject"
            },
            "snakeCase": {
              "unsafeName": "update_project",
              "safeName": "update_project"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_PROJECT",
              "safeName": "UPDATE_PROJECT"
            },
            "pascalCase": {
              "unsafeName": "UpdateProject",
              "safeName": "UpdateProject"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ProjectUpdate",
                "camelCase": {
                  "unsafeName": "projectUpdate",
                  "safeName": "projectUpdate"
                },
                "snakeCase": {
                  "unsafeName": "project_update",
                  "safeName": "project_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJECT_UPDATE",
                  "safeName": "PROJECT_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ProjectUpdate",
                  "safeName": "ProjectUpdate"
                }
              },
              "typeId": "ProjectUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "projectsUpdateProjectExample": {}
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ProjectRead",
                    "camelCase": {
                      "unsafeName": "projectRead",
                      "safeName": "projectRead"
                    },
                    "snakeCase": {
                      "unsafeName": "project_read",
                      "safeName": "project_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROJECT_READ",
                      "safeName": "PROJECT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ProjectRead",
                      "safeName": "ProjectRead"
                    }
                  },
                  "typeId": "ProjectRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "projectsUpdateProjectExample": {
                      "key": "foo",
                      "urn_namespace": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "settings": {},
                      "active_policy_repo_id": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the project.",
          "v2Examples": {
            "autogeneratedExamples": {
              "projectsUpdateProjectExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/projects/proj_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "urn_namespace": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "settings": {},
                      "active_policy_repo_id": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_environments": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Environments",
              "camelCase": {
                "unsafeName": "environments",
                "safeName": "environments"
              },
              "snakeCase": {
                "unsafeName": "environments",
                "safeName": "environments"
              },
              "screamingSnakeCase": {
                "unsafeName": "ENVIRONMENTS",
                "safeName": "ENVIRONMENTS"
              },
              "pascalCase": {
                "unsafeName": "Environments",
                "safeName": "Environments"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Environments",
            "camelCase": {
              "unsafeName": "environments",
              "safeName": "environments"
            },
            "snakeCase": {
              "unsafeName": "environments",
              "safeName": "environments"
            },
            "screamingSnakeCase": {
              "unsafeName": "ENVIRONMENTS",
              "safeName": "ENVIRONMENTS"
            },
            "pascalCase": {
              "unsafeName": "Environments",
              "safeName": "Environments"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Stats Environments",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/stats"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Stats_environmentsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "statsEnvironmentsRequestUnprocessableEntityError",
                    "safeName": "statsEnvironmentsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "stats_environments_request_unprocessable_entity_error",
                    "safeName": "stats_environments_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "STATS_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "STATS_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "StatsEnvironmentsRequestUnprocessableEntityError",
                    "safeName": "StatsEnvironmentsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Stats_environmentsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/stats"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.stats_environments",
          "name": {
            "originalName": "stats_environments",
            "camelCase": {
              "unsafeName": "statsEnvironments",
              "safeName": "statsEnvironments"
            },
            "snakeCase": {
              "unsafeName": "stats_environments",
              "safeName": "stats_environments"
            },
            "screamingSnakeCase": {
              "unsafeName": "STATS_ENVIRONMENTS",
              "safeName": "STATS_ENVIRONMENTS"
            },
            "pascalCase": {
              "unsafeName": "StatsEnvironments",
              "safeName": "StatsEnvironments"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentStats",
                    "camelCase": {
                      "unsafeName": "environmentStats",
                      "safeName": "environmentStats"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_stats",
                      "safeName": "environment_stats"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_STATS",
                      "safeName": "ENVIRONMENT_STATS"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentStats",
                      "safeName": "EnvironmentStats"
                    }
                  },
                  "typeId": "EnvironmentStats",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsStatsEnvironmentsExample": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {},
                      "pdp_configs": [
                        {
                          "id": "foo",
                          "name": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "client_secret": "foo"
                        }
                      ],
                      "stats": {
                        "roles": 42,
                        "users": 42,
                        "policies": 42,
                        "resources": 42,
                        "tenants": 42,
                        "has_decision_logs": true,
                        "members": [
                          {
                            "id": "foo",
                            "email": "foo",
                            "email_verified": true,
                            "name": "foo",
                            "given_name": "foo",
                            "family_name": "foo",
                            "picture": "foo",
                            "is_superuser": true,
                            "is_onboarding": true,
                            "onboarding_step": "create_organization",
                            "created_at": "foo",
                            "last_login": "foo",
                            "last_ip": "0.0.0.0",
                            "logins_count": 0,
                            "identities": [
                              {
                                "user_id": "foo",
                                "provider": "foo",
                                "sub": "foo",
                                "email": "foo",
                                "email_verified": true,
                                "auth0_info": {}
                              }
                            ],
                            "invite": {
                              "member_id": "foo",
                              "email": "foo",
                              "role": "admin",
                              "id": "foo",
                              "organization_id": "foo",
                              "invite_code": "foo",
                              "created_at": "foo",
                              "status": "pending",
                              "failed_reason": "foo"
                            },
                            "settings": {},
                            "grants": [
                              {
                                "organization_id": "foo",
                                "project_id": "foo",
                                "environment_id": "foo",
                                "object_type": "org",
                                "access_level": "admin",
                                "organization_key": "foo",
                                "project_key": "foo",
                                "environment_key": "foo",
                                "organization_name": "foo",
                                "project_name": "foo",
                                "environment_name": "foo"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "statsEnvironmentsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id/envs/env_id/stats"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {},
                      "pdp_configs": [
                        {
                          "id": "foo",
                          "name": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "client_secret": "foo"
                        }
                      ],
                      "stats": {
                        "roles": 42,
                        "users": 42,
                        "policies": 42,
                        "resources": 42,
                        "tenants": 42,
                        "has_decision_logs": true,
                        "members": [
                          {
                            "id": "foo",
                            "email": "foo",
                            "email_verified": true,
                            "name": "foo",
                            "given_name": "foo",
                            "family_name": "foo",
                            "picture": "foo",
                            "is_superuser": true,
                            "is_onboarding": true,
                            "onboarding_step": "create_organization",
                            "created_at": "foo",
                            "last_login": "foo",
                            "last_ip": "0.0.0.0",
                            "logins_count": 0,
                            "identities": [
                              {
                                "user_id": "foo",
                                "provider": "foo",
                                "sub": "foo",
                                "email": "foo",
                                "email_verified": true,
                                "auth0_info": {}
                              }
                            ],
                            "invite": {
                              "member_id": "foo",
                              "email": "foo",
                              "role": "admin",
                              "id": "foo",
                              "organization_id": "foo",
                              "invite_code": "foo",
                              "created_at": "foo",
                              "status": "pending",
                              "failed_reason": "foo"
                            },
                            "settings": {},
                            "grants": [
                              {
                                "organization_id": "foo",
                                "project_id": "foo",
                                "environment_id": "foo",
                                "object_type": "org",
                                "access_level": "admin",
                                "organization_key": "foo",
                                "project_key": "foo",
                                "environment_key": "foo",
                                "organization_name": "foo",
                                "project_name": "foo",
                                "environment_name": "foo"
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List Environments",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_environmentsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listEnvironmentsRequestUnprocessableEntityError",
                    "safeName": "listEnvironmentsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_environments_request_unprocessable_entity_error",
                    "safeName": "list_environments_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListEnvironmentsRequestUnprocessableEntityError",
                    "safeName": "ListEnvironmentsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_environmentsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.list_environments",
          "name": {
            "originalName": "list_environments",
            "camelCase": {
              "unsafeName": "listEnvironments",
              "safeName": "listEnvironments"
            },
            "snakeCase": {
              "unsafeName": "list_environments",
              "safeName": "list_environments"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_ENVIRONMENTS",
              "safeName": "LIST_ENVIRONMENTS"
            },
            "pascalCase": {
              "unsafeName": "ListEnvironments",
              "safeName": "ListEnvironments"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EnvironmentRead",
                        "camelCase": {
                          "unsafeName": "environmentRead",
                          "safeName": "environmentRead"
                        },
                        "snakeCase": {
                          "unsafeName": "environment_read",
                          "safeName": "environment_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ENVIRONMENT_READ",
                          "safeName": "ENVIRONMENT_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "EnvironmentRead",
                          "safeName": "EnvironmentRead"
                        }
                      },
                      "typeId": "EnvironmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsListEnvironmentsExample": [
                      {
                        "key": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "name": "foo",
                        "description": "foo",
                        "custom_branch_name": "foo",
                        "jwks": {
                          "keys": [
                            {}
                          ]
                        },
                        "settings": {}
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the environments under a given project.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listEnvironmentsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id/envs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "name": "foo",
                        "description": "foo",
                        "custom_branch_name": "foo",
                        "jwks": {
                          "keys": [
                            {}
                          ]
                        },
                        "settings": {}
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Environment",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_environmentRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createEnvironmentRequestUnprocessableEntityError",
                    "safeName": "createEnvironmentRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_environment_request_unprocessable_entity_error",
                    "safeName": "create_environment_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateEnvironmentRequestUnprocessableEntityError",
                    "safeName": "CreateEnvironmentRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.create_environment",
          "name": {
            "originalName": "create_environment",
            "camelCase": {
              "unsafeName": "createEnvironment",
              "safeName": "createEnvironment"
            },
            "snakeCase": {
              "unsafeName": "create_environment",
              "safeName": "create_environment"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_ENVIRONMENT",
              "safeName": "CREATE_ENVIRONMENT"
            },
            "pascalCase": {
              "unsafeName": "CreateEnvironment",
              "safeName": "CreateEnvironment"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EnvironmentCreate",
                "camelCase": {
                  "unsafeName": "environmentCreate",
                  "safeName": "environmentCreate"
                },
                "snakeCase": {
                  "unsafeName": "environment_create",
                  "safeName": "environment_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_CREATE",
                  "safeName": "ENVIRONMENT_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentCreate",
                  "safeName": "EnvironmentCreate"
                }
              },
              "typeId": "EnvironmentCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "environmentsCreateEnvironmentExample": {
                  "key": "foo",
                  "name": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentRead",
                    "camelCase": {
                      "unsafeName": "environmentRead",
                      "safeName": "environmentRead"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_read",
                      "safeName": "environment_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_READ",
                      "safeName": "ENVIRONMENT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentRead",
                      "safeName": "EnvironmentRead"
                    }
                  },
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsCreateEnvironmentExample": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new environment under a given project.",
          "v2Examples": {
            "autogeneratedExamples": {
              "environmentsCreateEnvironmentExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/projects/proj_id/envs"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "foo",
                    "name": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Environment",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_environmentRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getEnvironmentRequestUnprocessableEntityError",
                    "safeName": "getEnvironmentRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_environment_request_unprocessable_entity_error",
                    "safeName": "get_environment_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetEnvironmentRequestUnprocessableEntityError",
                    "safeName": "GetEnvironmentRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.get_environment",
          "name": {
            "originalName": "get_environment",
            "camelCase": {
              "unsafeName": "getEnvironment",
              "safeName": "getEnvironment"
            },
            "snakeCase": {
              "unsafeName": "get_environment",
              "safeName": "get_environment"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_ENVIRONMENT",
              "safeName": "GET_ENVIRONMENT"
            },
            "pascalCase": {
              "unsafeName": "GetEnvironment",
              "safeName": "GetEnvironment"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentRead",
                    "camelCase": {
                      "unsafeName": "environmentRead",
                      "safeName": "environmentRead"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_read",
                      "safeName": "environment_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_READ",
                      "safeName": "ENVIRONMENT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentRead",
                      "safeName": "EnvironmentRead"
                    }
                  },
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsGetEnvironmentExample": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single environment matching the given env_id, if such environment exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getEnvironmentExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/projects/proj_id/envs/env_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Environment",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_environmentRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteEnvironmentRequestUnprocessableEntityError",
                    "safeName": "deleteEnvironmentRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_environment_request_unprocessable_entity_error",
                    "safeName": "delete_environment_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteEnvironmentRequestUnprocessableEntityError",
                    "safeName": "DeleteEnvironmentRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.delete_environment",
          "name": {
            "originalName": "delete_environment",
            "camelCase": {
              "unsafeName": "deleteEnvironment",
              "safeName": "deleteEnvironment"
            },
            "snakeCase": {
              "unsafeName": "delete_environment",
              "safeName": "delete_environment"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_ENVIRONMENT",
              "safeName": "DELETE_ENVIRONMENT"
            },
            "pascalCase": {
              "unsafeName": "DeleteEnvironment",
              "safeName": "DeleteEnvironment"
            }
          },
          "docs": "Deletes an environment and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteEnvironmentExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/projects/proj_id/envs/env_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Environment",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_environmentRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateEnvironmentRequestUnprocessableEntityError",
                    "safeName": "updateEnvironmentRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_environment_request_unprocessable_entity_error",
                    "safeName": "update_environment_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateEnvironmentRequestUnprocessableEntityError",
                    "safeName": "UpdateEnvironmentRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.update_environment",
          "name": {
            "originalName": "update_environment",
            "camelCase": {
              "unsafeName": "updateEnvironment",
              "safeName": "updateEnvironment"
            },
            "snakeCase": {
              "unsafeName": "update_environment",
              "safeName": "update_environment"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_ENVIRONMENT",
              "safeName": "UPDATE_ENVIRONMENT"
            },
            "pascalCase": {
              "unsafeName": "UpdateEnvironment",
              "safeName": "UpdateEnvironment"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EnvironmentUpdate",
                "camelCase": {
                  "unsafeName": "environmentUpdate",
                  "safeName": "environmentUpdate"
                },
                "snakeCase": {
                  "unsafeName": "environment_update",
                  "safeName": "environment_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_UPDATE",
                  "safeName": "ENVIRONMENT_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentUpdate",
                  "safeName": "EnvironmentUpdate"
                }
              },
              "typeId": "EnvironmentUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "environmentsUpdateEnvironmentExample": {}
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentRead",
                    "camelCase": {
                      "unsafeName": "environmentRead",
                      "safeName": "environmentRead"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_read",
                      "safeName": "environment_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_READ",
                      "safeName": "ENVIRONMENT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentRead",
                      "safeName": "EnvironmentRead"
                    }
                  },
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsUpdateEnvironmentExample": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Updates the environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "environmentsUpdateEnvironmentExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/projects/proj_id/envs/env_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Copy Environment",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/copy"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Copy_environmentRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "copyEnvironmentRequestUnprocessableEntityError",
                    "safeName": "copyEnvironmentRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "copy_environment_request_unprocessable_entity_error",
                    "safeName": "copy_environment_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "COPY_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "COPY_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CopyEnvironmentRequestUnprocessableEntityError",
                    "safeName": "CopyEnvironmentRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Copy_environmentRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/projects/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/envs/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/copy"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_environments.copy_environment",
          "name": {
            "originalName": "copy_environment",
            "camelCase": {
              "unsafeName": "copyEnvironment",
              "safeName": "copyEnvironment"
            },
            "snakeCase": {
              "unsafeName": "copy_environment",
              "safeName": "copy_environment"
            },
            "screamingSnakeCase": {
              "unsafeName": "COPY_ENVIRONMENT",
              "safeName": "COPY_ENVIRONMENT"
            },
            "pascalCase": {
              "unsafeName": "CopyEnvironment",
              "safeName": "CopyEnvironment"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EnvironmentCopy",
                "camelCase": {
                  "unsafeName": "environmentCopy",
                  "safeName": "environmentCopy"
                },
                "snakeCase": {
                  "unsafeName": "environment_copy",
                  "safeName": "environment_copy"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVIRONMENT_COPY",
                  "safeName": "ENVIRONMENT_COPY"
                },
                "pascalCase": {
                  "unsafeName": "EnvironmentCopy",
                  "safeName": "EnvironmentCopy"
                }
              },
              "typeId": "EnvironmentCopy",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "environmentsCopyEnvironmentExample": {
                  "target_env": {}
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EnvironmentRead",
                    "camelCase": {
                      "unsafeName": "environmentRead",
                      "safeName": "environmentRead"
                    },
                    "snakeCase": {
                      "unsafeName": "environment_read",
                      "safeName": "environment_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENVIRONMENT_READ",
                      "safeName": "ENVIRONMENT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "EnvironmentRead",
                      "safeName": "EnvironmentRead"
                    }
                  },
                  "typeId": "EnvironmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "environmentsCopyEnvironmentExample": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Copy environment\n\nThis endpoint either duplicates an existing environment to a new environment\nin the same project, or copies from an existing environment to another\nexisting environment.\n\nThe `scope` object controls which objects will be copied to the target\nenvironment.\n\nTo clone to a new environment, the user must have write permissions\nto the containing project. To clone into an existing environment,\nthe user must have write permissions to the target environment.\n\nCopying environments across projects or organizations is not\nallowed.",
          "v2Examples": {
            "autogeneratedExamples": {
              "environmentsCopyEnvironmentExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/projects/proj_id/envs/env_id/copy"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "target_env": {}
                  }
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "value": {
                      "key": "foo",
                      "id": "foo",
                      "organization_id": "foo",
                      "project_id": "foo",
                      "created_at": "foo",
                      "updated_at": "foo",
                      "name": "foo",
                      "description": "foo",
                      "custom_branch_name": "foo",
                      "jwks": {
                        "keys": [
                          {}
                        ]
                      },
                      "settings": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_resources": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Resources",
              "camelCase": {
                "unsafeName": "resources",
                "safeName": "resources"
              },
              "snakeCase": {
                "unsafeName": "resources",
                "safeName": "resources"
              },
              "screamingSnakeCase": {
                "unsafeName": "RESOURCES",
                "safeName": "RESOURCES"
              },
              "pascalCase": {
                "unsafeName": "Resources",
                "safeName": "Resources"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Resources",
            "camelCase": {
              "unsafeName": "resources",
              "safeName": "resources"
            },
            "snakeCase": {
              "unsafeName": "resources",
              "safeName": "resources"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCES",
              "safeName": "RESOURCES"
            },
            "pascalCase": {
              "unsafeName": "Resources",
              "safeName": "Resources"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resources",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "search",
                  "camelCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "snakeCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SEARCH",
                    "safeName": "SEARCH"
                  },
                  "pascalCase": {
                    "unsafeName": "Search",
                    "safeName": "Search"
                  }
                },
                "wireValue": "search"
              },
              "docs": "Text search for the resources name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "include_built_in",
                  "camelCase": {
                    "unsafeName": "includeBuiltIn",
                    "safeName": "includeBuiltIn"
                  },
                  "snakeCase": {
                    "unsafeName": "include_built_in",
                    "safeName": "include_built_in"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_BUILT_IN",
                    "safeName": "INCLUDE_BUILT_IN"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeBuiltIn",
                    "safeName": "IncludeBuiltIn"
                  }
                },
                "wireValue": "include_built_in"
              },
              "docs": "Whether to include or exclude built-in resources, default is False",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_built_in_example": false
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "include_total_count",
                  "camelCase": {
                    "unsafeName": "includeTotalCount",
                    "safeName": "includeTotalCount"
                  },
                  "snakeCase": {
                    "unsafeName": "include_total_count",
                    "safeName": "include_total_count"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_TOTAL_COUNT",
                    "safeName": "INCLUDE_TOTAL_COUNT"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeTotalCount",
                    "safeName": "IncludeTotalCount"
                  }
                },
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_resourcesRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listResourcesRequestUnprocessableEntityError",
                    "safeName": "listResourcesRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_resources_request_unprocessable_entity_error",
                    "safeName": "list_resources_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_RESOURCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_RESOURCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListResourcesRequestUnprocessableEntityError",
                    "safeName": "ListResourcesRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resourcesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.list_resources",
          "name": {
            "originalName": "list_resources",
            "camelCase": {
              "unsafeName": "listResources",
              "safeName": "listResources"
            },
            "snakeCase": {
              "unsafeName": "list_resources",
              "safeName": "list_resources"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_RESOURCES",
              "safeName": "LIST_RESOURCES"
            },
            "pascalCase": {
              "unsafeName": "ListResources",
              "safeName": "ListResources"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Resources_list_resources_Response_200",
                    "camelCase": {
                      "unsafeName": "resourcesListResourcesResponse200",
                      "safeName": "resourcesListResourcesResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "resources_list_resources_response_200",
                      "safeName": "resources_list_resources_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCES_LIST_RESOURCES_RESPONSE_200",
                      "safeName": "RESOURCES_LIST_RESOURCES_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourcesListResourcesResponse200",
                      "safeName": "ResourcesListResourcesResponse200"
                    }
                  },
                  "typeId": "Resources_list_resources_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesListResourcesExample": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "name": "foo",
                          "urn": "foo",
                          "description": "foo",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the resources defined in your schema.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listResourcesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "name": "foo",
                          "urn": "foo",
                          "description": "foo",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Resource",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_resourceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createResourceRequestUnprocessableEntityError",
                    "safeName": "createResourceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_resource_request_unprocessable_entity_error",
                    "safeName": "create_resource_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateResourceRequestUnprocessableEntityError",
                    "safeName": "CreateResourceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.create_resource",
          "name": {
            "originalName": "create_resource",
            "camelCase": {
              "unsafeName": "createResource",
              "safeName": "createResource"
            },
            "snakeCase": {
              "unsafeName": "create_resource",
              "safeName": "create_resource"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_RESOURCE",
              "safeName": "CREATE_RESOURCE"
            },
            "pascalCase": {
              "unsafeName": "CreateResource",
              "safeName": "CreateResource"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceCreate",
                "camelCase": {
                  "unsafeName": "resourceCreate",
                  "safeName": "resourceCreate"
                },
                "snakeCase": {
                  "unsafeName": "resource_create",
                  "safeName": "resource_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_CREATE",
                  "safeName": "RESOURCE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceCreate",
                  "safeName": "ResourceCreate"
                }
              },
              "typeId": "ResourceCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourcesCreateResourceExample": {
                  "key": "repository",
                  "name": "Repository",
                  "actions": {
                    "clone": {},
                    "read": {},
                    "push": {}
                  },
                  "attributes": {
                    "created": {
                      "type": "time",
                      "description": "the time (timestamp) the repository was created"
                    },
                    "private": {
                      "type": "bool",
                      "description": "whether the repo is private (if false, the repo is public)"
                    }
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRead",
                    "camelCase": {
                      "unsafeName": "resourceRead",
                      "safeName": "resourceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_read",
                      "safeName": "resource_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_READ",
                      "safeName": "RESOURCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRead",
                      "safeName": "ResourceRead"
                    }
                  },
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesCreateResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new resource (a type of object you may protect with permissions).",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourcesCreateResourceExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "repository",
                    "name": "Repository",
                    "actions": {
                      "clone": {},
                      "read": {},
                      "push": {}
                    },
                    "attributes": {
                      "created": {
                        "type": "time",
                        "description": "the time (timestamp) the repository was created"
                      },
                      "private": {
                        "type": "bool",
                        "description": "whether the repo is private (if false, the repo is public)"
                      }
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resourceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceRequestUnprocessableEntityError",
                    "safeName": "getResourceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_request_unprocessable_entity_error",
                    "safeName": "get_resource_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceRequestUnprocessableEntityError",
                    "safeName": "GetResourceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.get_resource",
          "name": {
            "originalName": "get_resource",
            "camelCase": {
              "unsafeName": "getResource",
              "safeName": "getResource"
            },
            "snakeCase": {
              "unsafeName": "get_resource",
              "safeName": "get_resource"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE",
              "safeName": "GET_RESOURCE"
            },
            "pascalCase": {
              "unsafeName": "GetResource",
              "safeName": "GetResource"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRead",
                    "camelCase": {
                      "unsafeName": "resourceRead",
                      "safeName": "resourceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_read",
                      "safeName": "resource_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_READ",
                      "safeName": "RESOURCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRead",
                      "safeName": "ResourceRead"
                    }
                  },
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesGetResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single resource, if such resource exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Replace Resource",
          "method": "PUT",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Replace_resourceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "replaceResourceRequestUnprocessableEntityError",
                    "safeName": "replaceResourceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "replace_resource_request_unprocessable_entity_error",
                    "safeName": "replace_resource_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REPLACE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "REPLACE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ReplaceResourceRequestUnprocessableEntityError",
                    "safeName": "ReplaceResourceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Replace_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.replace_resource",
          "name": {
            "originalName": "replace_resource",
            "camelCase": {
              "unsafeName": "replaceResource",
              "safeName": "replaceResource"
            },
            "snakeCase": {
              "unsafeName": "replace_resource",
              "safeName": "replace_resource"
            },
            "screamingSnakeCase": {
              "unsafeName": "REPLACE_RESOURCE",
              "safeName": "REPLACE_RESOURCE"
            },
            "pascalCase": {
              "unsafeName": "ReplaceResource",
              "safeName": "ReplaceResource"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceReplace",
                "camelCase": {
                  "unsafeName": "resourceReplace",
                  "safeName": "resourceReplace"
                },
                "snakeCase": {
                  "unsafeName": "resource_replace",
                  "safeName": "resource_replace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_REPLACE",
                  "safeName": "RESOURCE_REPLACE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceReplace",
                  "safeName": "ResourceReplace"
                }
              },
              "typeId": "ResourceReplace",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourcesReplaceResourceExample": {
                  "name": "foo",
                  "actions": {}
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRead",
                    "camelCase": {
                      "unsafeName": "resourceRead",
                      "safeName": "resourceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_read",
                      "safeName": "resource_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_READ",
                      "safeName": "RESOURCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRead",
                      "safeName": "ResourceRead"
                    }
                  },
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesReplaceResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Completely replaces the resource definition.\n\n- If the resource key is changed, all role and permissions assignments for the the resource will be revoked.\n- If the resource key is unchanged, but some actions are removed or renamed from the resource definition,\nrole and permissions assignments for these actions will be revoked.\n\nTODO: we need to decide if we are auto-revoking, or if we are rejecting the PUT completely while there are permissions that can be affected.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourcesReplaceResourceExample": {
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "foo",
                    "actions": {}
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Resource",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_resourceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteResourceRequestUnprocessableEntityError",
                    "safeName": "deleteResourceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_resource_request_unprocessable_entity_error",
                    "safeName": "delete_resource_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteResourceRequestUnprocessableEntityError",
                    "safeName": "DeleteResourceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.delete_resource",
          "name": {
            "originalName": "delete_resource",
            "camelCase": {
              "unsafeName": "deleteResource",
              "safeName": "deleteResource"
            },
            "snakeCase": {
              "unsafeName": "delete_resource",
              "safeName": "delete_resource"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_RESOURCE",
              "safeName": "DELETE_RESOURCE"
            },
            "pascalCase": {
              "unsafeName": "DeleteResource",
              "safeName": "DeleteResource"
            }
          },
          "docs": "Deletes the resource and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteResourceExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Resource",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_resourceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateResourceRequestUnprocessableEntityError",
                    "safeName": "updateResourceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_resource_request_unprocessable_entity_error",
                    "safeName": "update_resource_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateResourceRequestUnprocessableEntityError",
                    "safeName": "UpdateResourceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resourceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resources.update_resource",
          "name": {
            "originalName": "update_resource",
            "camelCase": {
              "unsafeName": "updateResource",
              "safeName": "updateResource"
            },
            "snakeCase": {
              "unsafeName": "update_resource",
              "safeName": "update_resource"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_RESOURCE",
              "safeName": "UPDATE_RESOURCE"
            },
            "pascalCase": {
              "unsafeName": "UpdateResource",
              "safeName": "UpdateResource"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceUpdate",
                "camelCase": {
                  "unsafeName": "resourceUpdate",
                  "safeName": "resourceUpdate"
                },
                "snakeCase": {
                  "unsafeName": "resource_update",
                  "safeName": "resource_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_UPDATE",
                  "safeName": "RESOURCE_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceUpdate",
                  "safeName": "ResourceUpdate"
                }
              },
              "typeId": "ResourceUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourcesUpdateResourceExample": {}
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRead",
                    "camelCase": {
                      "unsafeName": "resourceRead",
                      "safeName": "resourceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_read",
                      "safeName": "resource_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_READ",
                      "safeName": "RESOURCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRead",
                      "safeName": "ResourceRead"
                    }
                  },
                  "typeId": "ResourceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourcesUpdateResourceExample": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the resource definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourcesUpdateResourceExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "Repository",
                      "urn": "prn:github:scm:repository",
                      "description": "a git repository stored on github",
                      "actions": {
                        "clone": {
                          "id": "90e21d70-2b1b-42f0-b492-8fd69c1d79d1"
                        },
                        "read": {
                          "id": "2bc27751-6115-43c0-b68c-928cb46e34bc"
                        },
                        "push": {
                          "id": "e06da336-6e03-41d6-a495-40b0d7537b2a"
                        }
                      },
                      "attributes": {
                        "created": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f11",
                          "type": "time",
                          "description": "the time (timestamp) the repository was created"
                        },
                        "private": {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f22",
                          "type": "bool",
                          "description": "whether the repo is private (if false, the repo is public)"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_resourceActions": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Resource Actions",
              "camelCase": {
                "unsafeName": "resourceActions",
                "safeName": "resourceActions"
              },
              "snakeCase": {
                "unsafeName": "resource_actions",
                "safeName": "resource_actions"
              },
              "screamingSnakeCase": {
                "unsafeName": "RESOURCE_ACTIONS",
                "safeName": "RESOURCE_ACTIONS"
              },
              "pascalCase": {
                "unsafeName": "ResourceActions",
                "safeName": "ResourceActions"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Resource Actions",
            "camelCase": {
              "unsafeName": "resourceActions",
              "safeName": "resourceActions"
            },
            "snakeCase": {
              "unsafeName": "resource_actions",
              "safeName": "resource_actions"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ACTIONS",
              "safeName": "RESOURCE_ACTIONS"
            },
            "pascalCase": {
              "unsafeName": "ResourceActions",
              "safeName": "ResourceActions"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Actions",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_resource_actionsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listResourceActionsRequestUnprocessableEntityError",
                    "safeName": "listResourceActionsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_resource_actions_request_unprocessable_entity_error",
                    "safeName": "list_resource_actions_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_RESOURCE_ACTIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_RESOURCE_ACTIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListResourceActionsRequestUnprocessableEntityError",
                    "safeName": "ListResourceActionsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_actionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.list_resource_actions",
          "name": {
            "originalName": "list_resource_actions",
            "camelCase": {
              "unsafeName": "listResourceActions",
              "safeName": "listResourceActions"
            },
            "snakeCase": {
              "unsafeName": "list_resource_actions",
              "safeName": "list_resource_actions"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_RESOURCE_ACTIONS",
              "safeName": "LIST_RESOURCE_ACTIONS"
            },
            "pascalCase": {
              "unsafeName": "ListResourceActions",
              "safeName": "ListResourceActions"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ResourceActionRead",
                        "camelCase": {
                          "unsafeName": "resourceActionRead",
                          "safeName": "resourceActionRead"
                        },
                        "snakeCase": {
                          "unsafeName": "resource_action_read",
                          "safeName": "resource_action_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "RESOURCE_ACTION_READ",
                          "safeName": "RESOURCE_ACTION_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ResourceActionRead",
                          "safeName": "ResourceActionRead"
                        }
                      },
                      "typeId": "ResourceActionRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsListResourceActionsExample": [
                      {
                        "name": "foo",
                        "description": "foo",
                        "attributes": {},
                        "key": "foo",
                        "id": "foo",
                        "permission_name": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "resource_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the actions defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listResourceActionsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "name": "foo",
                        "description": "foo",
                        "attributes": {},
                        "key": "foo",
                        "id": "foo",
                        "permission_name": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "resource_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Resource Action",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_resource_actionRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createResourceActionRequestUnprocessableEntityError",
                    "safeName": "createResourceActionRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_resource_action_request_unprocessable_entity_error",
                    "safeName": "create_resource_action_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateResourceActionRequestUnprocessableEntityError",
                    "safeName": "CreateResourceActionRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.create_resource_action",
          "name": {
            "originalName": "create_resource_action",
            "camelCase": {
              "unsafeName": "createResourceAction",
              "safeName": "createResourceAction"
            },
            "snakeCase": {
              "unsafeName": "create_resource_action",
              "safeName": "create_resource_action"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_RESOURCE_ACTION",
              "safeName": "CREATE_RESOURCE_ACTION"
            },
            "pascalCase": {
              "unsafeName": "CreateResourceAction",
              "safeName": "CreateResourceAction"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceActionCreate",
                "camelCase": {
                  "unsafeName": "resourceActionCreate",
                  "safeName": "resourceActionCreate"
                },
                "snakeCase": {
                  "unsafeName": "resource_action_create",
                  "safeName": "resource_action_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ACTION_CREATE",
                  "safeName": "RESOURCE_ACTION_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceActionCreate",
                  "safeName": "ResourceActionCreate"
                }
              },
              "typeId": "ResourceActionCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionsCreateResourceActionExample": {
                  "key": "read",
                  "name": "read",
                  "description": "read a document"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionRead",
                    "camelCase": {
                      "unsafeName": "resourceActionRead",
                      "safeName": "resourceActionRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_read",
                      "safeName": "resource_action_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_READ",
                      "safeName": "RESOURCE_ACTION_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionRead",
                      "safeName": "ResourceActionRead"
                    }
                  },
                  "typeId": "ResourceActionRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsCreateResourceActionExample": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new action that can affect the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionsCreateResourceActionExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "read",
                    "name": "read",
                    "description": "read a document"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource Action",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_id",
                "camelCase": {
                  "unsafeName": "actionId",
                  "safeName": "actionId"
                },
                "snakeCase": {
                  "unsafeName": "action_id",
                  "safeName": "action_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_ID",
                  "safeName": "ACTION_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionId",
                  "safeName": "ActionId"
                }
              },
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resource_actionRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceActionRequestUnprocessableEntityError",
                    "safeName": "getResourceActionRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_action_request_unprocessable_entity_error",
                    "safeName": "get_resource_action_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceActionRequestUnprocessableEntityError",
                    "safeName": "GetResourceActionRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_id",
                "camelCase": {
                  "unsafeName": "actionId",
                  "safeName": "actionId"
                },
                "snakeCase": {
                  "unsafeName": "action_id",
                  "safeName": "action_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_ID",
                  "safeName": "ACTION_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionId",
                  "safeName": "ActionId"
                }
              },
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.get_resource_action",
          "name": {
            "originalName": "get_resource_action",
            "camelCase": {
              "unsafeName": "getResourceAction",
              "safeName": "getResourceAction"
            },
            "snakeCase": {
              "unsafeName": "get_resource_action",
              "safeName": "get_resource_action"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE_ACTION",
              "safeName": "GET_RESOURCE_ACTION"
            },
            "pascalCase": {
              "unsafeName": "GetResourceAction",
              "safeName": "GetResourceAction"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionRead",
                    "camelCase": {
                      "unsafeName": "resourceActionRead",
                      "safeName": "resourceActionRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_read",
                      "safeName": "resource_action_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_READ",
                      "safeName": "RESOURCE_ACTION_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionRead",
                      "safeName": "ResourceActionRead"
                    }
                  },
                  "typeId": "ResourceActionRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsGetResourceActionExample": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single action defined on the resource, if such action exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceActionExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions/action_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_id": "action_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Resource Action",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_id",
                "camelCase": {
                  "unsafeName": "actionId",
                  "safeName": "actionId"
                },
                "snakeCase": {
                  "unsafeName": "action_id",
                  "safeName": "action_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_ID",
                  "safeName": "ACTION_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionId",
                  "safeName": "ActionId"
                }
              },
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_resource_actionRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteResourceActionRequestUnprocessableEntityError",
                    "safeName": "deleteResourceActionRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_resource_action_request_unprocessable_entity_error",
                    "safeName": "delete_resource_action_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteResourceActionRequestUnprocessableEntityError",
                    "safeName": "DeleteResourceActionRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_id",
                "camelCase": {
                  "unsafeName": "actionId",
                  "safeName": "actionId"
                },
                "snakeCase": {
                  "unsafeName": "action_id",
                  "safeName": "action_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_ID",
                  "safeName": "ACTION_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionId",
                  "safeName": "ActionId"
                }
              },
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.delete_resource_action",
          "name": {
            "originalName": "delete_resource_action",
            "camelCase": {
              "unsafeName": "deleteResourceAction",
              "safeName": "deleteResourceAction"
            },
            "snakeCase": {
              "unsafeName": "delete_resource_action",
              "safeName": "delete_resource_action"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_RESOURCE_ACTION",
              "safeName": "DELETE_RESOURCE_ACTION"
            },
            "pascalCase": {
              "unsafeName": "DeleteResourceAction",
              "safeName": "DeleteResourceAction"
            }
          },
          "docs": "Deletes the action and all its related data.\nThis includes any permissions granted to perform the action.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteResourceActionExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions/action_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_id": "action_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Resource Action",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_id",
                "camelCase": {
                  "unsafeName": "actionId",
                  "safeName": "actionId"
                },
                "snakeCase": {
                  "unsafeName": "action_id",
                  "safeName": "action_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_ID",
                  "safeName": "ACTION_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionId",
                  "safeName": "ActionId"
                }
              },
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_resource_actionRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateResourceActionRequestUnprocessableEntityError",
                    "safeName": "updateResourceActionRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_resource_action_request_unprocessable_entity_error",
                    "safeName": "update_resource_action_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateResourceActionRequestUnprocessableEntityError",
                    "safeName": "UpdateResourceActionRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_actionRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/actions/"
              },
              {
                "pathParameter": "action_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_id",
                "camelCase": {
                  "unsafeName": "actionId",
                  "safeName": "actionId"
                },
                "snakeCase": {
                  "unsafeName": "action_id",
                  "safeName": "action_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_ID",
                  "safeName": "ACTION_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionId",
                  "safeName": "ActionId"
                }
              },
              "docs": "Either the unique id of the action, or the URL-friendly key of the action (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_id_example": "action_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActions.update_resource_action",
          "name": {
            "originalName": "update_resource_action",
            "camelCase": {
              "unsafeName": "updateResourceAction",
              "safeName": "updateResourceAction"
            },
            "snakeCase": {
              "unsafeName": "update_resource_action",
              "safeName": "update_resource_action"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_RESOURCE_ACTION",
              "safeName": "UPDATE_RESOURCE_ACTION"
            },
            "pascalCase": {
              "unsafeName": "UpdateResourceAction",
              "safeName": "UpdateResourceAction"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceActionUpdate",
                "camelCase": {
                  "unsafeName": "resourceActionUpdate",
                  "safeName": "resourceActionUpdate"
                },
                "snakeCase": {
                  "unsafeName": "resource_action_update",
                  "safeName": "resource_action_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ACTION_UPDATE",
                  "safeName": "RESOURCE_ACTION_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceActionUpdate",
                  "safeName": "ResourceActionUpdate"
                }
              },
              "typeId": "ResourceActionUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionsUpdateResourceActionExample": {
                  "description": "read a document"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionRead",
                    "camelCase": {
                      "unsafeName": "resourceActionRead",
                      "safeName": "resourceActionRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_read",
                      "safeName": "resource_action_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_READ",
                      "safeName": "RESOURCE_ACTION_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionRead",
                      "safeName": "ResourceActionRead"
                    }
                  },
                  "typeId": "ResourceActionRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionsUpdateResourceActionExample": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the action defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionsUpdateResourceActionExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/actions/action_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_id": "action_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "read a document"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "read",
                      "description": "read a document",
                      "key": "read",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_name": "document:read",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_resourceActionGroups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Resource Action Groups",
              "camelCase": {
                "unsafeName": "resourceActionGroups",
                "safeName": "resourceActionGroups"
              },
              "snakeCase": {
                "unsafeName": "resource_action_groups",
                "safeName": "resource_action_groups"
              },
              "screamingSnakeCase": {
                "unsafeName": "RESOURCE_ACTION_GROUPS",
                "safeName": "RESOURCE_ACTION_GROUPS"
              },
              "pascalCase": {
                "unsafeName": "ResourceActionGroups",
                "safeName": "ResourceActionGroups"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Resource Action Groups",
            "camelCase": {
              "unsafeName": "resourceActionGroups",
              "safeName": "resourceActionGroups"
            },
            "snakeCase": {
              "unsafeName": "resource_action_groups",
              "safeName": "resource_action_groups"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ACTION_GROUPS",
              "safeName": "RESOURCE_ACTION_GROUPS"
            },
            "pascalCase": {
              "unsafeName": "ResourceActionGroups",
              "safeName": "ResourceActionGroups"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Action Groups",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_resource_action_groupsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listResourceActionGroupsRequestUnprocessableEntityError",
                    "safeName": "listResourceActionGroupsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_resource_action_groups_request_unprocessable_entity_error",
                    "safeName": "list_resource_action_groups_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_RESOURCE_ACTION_GROUPS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_RESOURCE_ACTION_GROUPS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListResourceActionGroupsRequestUnprocessableEntityError",
                    "safeName": "ListResourceActionGroupsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_action_groupsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.list_resource_action_groups",
          "name": {
            "originalName": "list_resource_action_groups",
            "camelCase": {
              "unsafeName": "listResourceActionGroups",
              "safeName": "listResourceActionGroups"
            },
            "snakeCase": {
              "unsafeName": "list_resource_action_groups",
              "safeName": "list_resource_action_groups"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_RESOURCE_ACTION_GROUPS",
              "safeName": "LIST_RESOURCE_ACTION_GROUPS"
            },
            "pascalCase": {
              "unsafeName": "ListResourceActionGroups",
              "safeName": "ListResourceActionGroups"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ResourceActionGroupRead",
                        "camelCase": {
                          "unsafeName": "resourceActionGroupRead",
                          "safeName": "resourceActionGroupRead"
                        },
                        "snakeCase": {
                          "unsafeName": "resource_action_group_read",
                          "safeName": "resource_action_group_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "RESOURCE_ACTION_GROUP_READ",
                          "safeName": "RESOURCE_ACTION_GROUP_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ResourceActionGroupRead",
                          "safeName": "ResourceActionGroupRead"
                        }
                      },
                      "typeId": "ResourceActionGroupRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsListResourceActionGroupsExample": [
                      {
                        "name": "foo",
                        "description": "foo",
                        "attributes": {},
                        "actions": [
                          "foo"
                        ],
                        "key": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "resource_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the action groups defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listResourceActionGroupsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "name": "foo",
                        "description": "foo",
                        "attributes": {},
                        "actions": [
                          "foo"
                        ],
                        "key": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "resource_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Resource Action Group",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_resource_action_groupRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "createResourceActionGroupRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_resource_action_group_request_unprocessable_entity_error",
                    "safeName": "create_resource_action_group_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "CreateResourceActionGroupRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.create_resource_action_group",
          "name": {
            "originalName": "create_resource_action_group",
            "camelCase": {
              "unsafeName": "createResourceActionGroup",
              "safeName": "createResourceActionGroup"
            },
            "snakeCase": {
              "unsafeName": "create_resource_action_group",
              "safeName": "create_resource_action_group"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_RESOURCE_ACTION_GROUP",
              "safeName": "CREATE_RESOURCE_ACTION_GROUP"
            },
            "pascalCase": {
              "unsafeName": "CreateResourceActionGroup",
              "safeName": "CreateResourceActionGroup"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceActionGroupCreate",
                "camelCase": {
                  "unsafeName": "resourceActionGroupCreate",
                  "safeName": "resourceActionGroupCreate"
                },
                "snakeCase": {
                  "unsafeName": "resource_action_group_create",
                  "safeName": "resource_action_group_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ACTION_GROUP_CREATE",
                  "safeName": "RESOURCE_ACTION_GROUP_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceActionGroupCreate",
                  "safeName": "ResourceActionGroupCreate"
                }
              },
              "typeId": "ResourceActionGroupCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionGroupsCreateResourceActionGroupExample": {
                  "key": "writer",
                  "name": "Writer",
                  "description": "Writer Action Group",
                  "actions": [
                    "read",
                    "update"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionGroupRead",
                    "camelCase": {
                      "unsafeName": "resourceActionGroupRead",
                      "safeName": "resourceActionGroupRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_group_read",
                      "safeName": "resource_action_group_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_GROUP_READ",
                      "safeName": "RESOURCE_ACTION_GROUP_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionGroupRead",
                      "safeName": "ResourceActionGroupRead"
                    }
                  },
                  "typeId": "ResourceActionGroupRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsCreateResourceActionGroupExample": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new action group that can affect the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionGroupsCreateResourceActionGroupExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "writer",
                    "name": "Writer",
                    "description": "Writer Action Group",
                    "actions": [
                      "read",
                      "update"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource Action Group",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_group_id",
                "camelCase": {
                  "unsafeName": "actionGroupId",
                  "safeName": "actionGroupId"
                },
                "snakeCase": {
                  "unsafeName": "action_group_id",
                  "safeName": "action_group_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_GROUP_ID",
                  "safeName": "ACTION_GROUP_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionGroupId",
                  "safeName": "ActionGroupId"
                }
              },
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resource_action_groupRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "getResourceActionGroupRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_action_group_request_unprocessable_entity_error",
                    "safeName": "get_resource_action_group_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "GetResourceActionGroupRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_group_id",
                "camelCase": {
                  "unsafeName": "actionGroupId",
                  "safeName": "actionGroupId"
                },
                "snakeCase": {
                  "unsafeName": "action_group_id",
                  "safeName": "action_group_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_GROUP_ID",
                  "safeName": "ACTION_GROUP_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionGroupId",
                  "safeName": "ActionGroupId"
                }
              },
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.get_resource_action_group",
          "name": {
            "originalName": "get_resource_action_group",
            "camelCase": {
              "unsafeName": "getResourceActionGroup",
              "safeName": "getResourceActionGroup"
            },
            "snakeCase": {
              "unsafeName": "get_resource_action_group",
              "safeName": "get_resource_action_group"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE_ACTION_GROUP",
              "safeName": "GET_RESOURCE_ACTION_GROUP"
            },
            "pascalCase": {
              "unsafeName": "GetResourceActionGroup",
              "safeName": "GetResourceActionGroup"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionGroupRead",
                    "camelCase": {
                      "unsafeName": "resourceActionGroupRead",
                      "safeName": "resourceActionGroupRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_group_read",
                      "safeName": "resource_action_group_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_GROUP_READ",
                      "safeName": "RESOURCE_ACTION_GROUP_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionGroupRead",
                      "safeName": "ResourceActionGroupRead"
                    }
                  },
                  "typeId": "ResourceActionGroupRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsGetResourceActionGroupExample": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single action group defined on the resource, if such action exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceActionGroupExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups/action_group_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_group_id": "action_group_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Resource Action Group",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_group_id",
                "camelCase": {
                  "unsafeName": "actionGroupId",
                  "safeName": "actionGroupId"
                },
                "snakeCase": {
                  "unsafeName": "action_group_id",
                  "safeName": "action_group_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_GROUP_ID",
                  "safeName": "ACTION_GROUP_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionGroupId",
                  "safeName": "ActionGroupId"
                }
              },
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_resource_action_groupRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "deleteResourceActionGroupRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_resource_action_group_request_unprocessable_entity_error",
                    "safeName": "delete_resource_action_group_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "DeleteResourceActionGroupRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_group_id",
                "camelCase": {
                  "unsafeName": "actionGroupId",
                  "safeName": "actionGroupId"
                },
                "snakeCase": {
                  "unsafeName": "action_group_id",
                  "safeName": "action_group_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_GROUP_ID",
                  "safeName": "ACTION_GROUP_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionGroupId",
                  "safeName": "ActionGroupId"
                }
              },
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.delete_resource_action_group",
          "name": {
            "originalName": "delete_resource_action_group",
            "camelCase": {
              "unsafeName": "deleteResourceActionGroup",
              "safeName": "deleteResourceActionGroup"
            },
            "snakeCase": {
              "unsafeName": "delete_resource_action_group",
              "safeName": "delete_resource_action_group"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_RESOURCE_ACTION_GROUP",
              "safeName": "DELETE_RESOURCE_ACTION_GROUP"
            },
            "pascalCase": {
              "unsafeName": "DeleteResourceActionGroup",
              "safeName": "DeleteResourceActionGroup"
            }
          },
          "docs": "Deletes the action and all its related data.\nThis includes any permissions granted to perform the action.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteResourceActionGroupExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups/action_group_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "action_group_id": "action_group_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Resource Action Group",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_group_id",
                "camelCase": {
                  "unsafeName": "actionGroupId",
                  "safeName": "actionGroupId"
                },
                "snakeCase": {
                  "unsafeName": "action_group_id",
                  "safeName": "action_group_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_GROUP_ID",
                  "safeName": "ACTION_GROUP_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionGroupId",
                  "safeName": "ActionGroupId"
                }
              },
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            },
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_resource_action_groupRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "updateResourceActionGroupRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_resource_action_group_request_unprocessable_entity_error",
                    "safeName": "update_resource_action_group_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateResourceActionGroupRequestUnprocessableEntityError",
                    "safeName": "UpdateResourceActionGroupRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_action_groupRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/action_groups/"
              },
              {
                "pathParameter": "action_group_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "action_group_id",
                "camelCase": {
                  "unsafeName": "actionGroupId",
                  "safeName": "actionGroupId"
                },
                "snakeCase": {
                  "unsafeName": "action_group_id",
                  "safeName": "action_group_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACTION_GROUP_ID",
                  "safeName": "ACTION_GROUP_ID"
                },
                "pascalCase": {
                  "unsafeName": "ActionGroupId",
                  "safeName": "ActionGroupId"
                }
              },
              "docs": "Either the unique id of the action group, or the URL-friendly key of the action group (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "action_group_id_example": "action_group_id"
                }
              }
            },
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceActionGroups.update_resource_action_group",
          "name": {
            "originalName": "update_resource_action_group",
            "camelCase": {
              "unsafeName": "updateResourceActionGroup",
              "safeName": "updateResourceActionGroup"
            },
            "snakeCase": {
              "unsafeName": "update_resource_action_group",
              "safeName": "update_resource_action_group"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_RESOURCE_ACTION_GROUP",
              "safeName": "UPDATE_RESOURCE_ACTION_GROUP"
            },
            "pascalCase": {
              "unsafeName": "UpdateResourceActionGroup",
              "safeName": "UpdateResourceActionGroup"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceActionGroupUpdate",
                "camelCase": {
                  "unsafeName": "resourceActionGroupUpdate",
                  "safeName": "resourceActionGroupUpdate"
                },
                "snakeCase": {
                  "unsafeName": "resource_action_group_update",
                  "safeName": "resource_action_group_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ACTION_GROUP_UPDATE",
                  "safeName": "RESOURCE_ACTION_GROUP_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceActionGroupUpdate",
                  "safeName": "ResourceActionGroupUpdate"
                }
              },
              "typeId": "ResourceActionGroupUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceActionGroupsUpdateResourceActionGroupExample": {}
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceActionGroupRead",
                    "camelCase": {
                      "unsafeName": "resourceActionGroupRead",
                      "safeName": "resourceActionGroupRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_action_group_read",
                      "safeName": "resource_action_group_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ACTION_GROUP_READ",
                      "safeName": "RESOURCE_ACTION_GROUP_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceActionGroupRead",
                      "safeName": "ResourceActionGroupRead"
                    }
                  },
                  "typeId": "ResourceActionGroupRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceActionGroupsUpdateResourceActionGroupExample": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the action defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceActionGroupsUpdateResourceActionGroupExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/action_groups/action_group_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "resource_id": "resource_id",
                    "action_group_id": "action_group_id",
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Writer",
                      "description": "Writer Action Group",
                      "actions": [
                        "read",
                        "update"
                      ],
                      "key": "writer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_resourceRoles": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Resource Roles",
              "camelCase": {
                "unsafeName": "resourceRoles",
                "safeName": "resourceRoles"
              },
              "snakeCase": {
                "unsafeName": "resource_roles",
                "safeName": "resource_roles"
              },
              "screamingSnakeCase": {
                "unsafeName": "RESOURCE_ROLES",
                "safeName": "RESOURCE_ROLES"
              },
              "pascalCase": {
                "unsafeName": "ResourceRoles",
                "safeName": "ResourceRoles"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Resource Roles",
            "camelCase": {
              "unsafeName": "resourceRoles",
              "safeName": "resourceRoles"
            },
            "snakeCase": {
              "unsafeName": "resource_roles",
              "safeName": "resource_roles"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ROLES",
              "safeName": "RESOURCE_ROLES"
            },
            "pascalCase": {
              "unsafeName": "ResourceRoles",
              "safeName": "ResourceRoles"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Roles",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_resource_rolesRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listResourceRolesRequestUnprocessableEntityError",
                    "safeName": "listResourceRolesRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_resource_roles_request_unprocessable_entity_error",
                    "safeName": "list_resource_roles_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_RESOURCE_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_RESOURCE_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListResourceRolesRequestUnprocessableEntityError",
                    "safeName": "ListResourceRolesRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_rolesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.list_resource_roles",
          "name": {
            "originalName": "list_resource_roles",
            "camelCase": {
              "unsafeName": "listResourceRoles",
              "safeName": "listResourceRoles"
            },
            "snakeCase": {
              "unsafeName": "list_resource_roles",
              "safeName": "list_resource_roles"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_RESOURCE_ROLES",
              "safeName": "LIST_RESOURCE_ROLES"
            },
            "pascalCase": {
              "unsafeName": "ListResourceRoles",
              "safeName": "ListResourceRoles"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ResourceRoleRead",
                        "camelCase": {
                          "unsafeName": "resourceRoleRead",
                          "safeName": "resourceRoleRead"
                        },
                        "snakeCase": {
                          "unsafeName": "resource_role_read",
                          "safeName": "resource_role_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "RESOURCE_ROLE_READ",
                          "safeName": "RESOURCE_ROLE_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ResourceRoleRead",
                          "safeName": "ResourceRoleRead"
                        }
                      },
                      "typeId": "ResourceRoleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesListResourceRolesExample": [
                      {
                        "name": "foo",
                        "description": "foo",
                        "permissions": [
                          "foo"
                        ],
                        "attributes": {},
                        "extends": [
                          "foo"
                        ],
                        "key": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "resource_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the roles defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listResourceRolesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "name": "foo",
                        "description": "foo",
                        "permissions": [
                          "foo"
                        ],
                        "attributes": {},
                        "extends": [
                          "foo"
                        ],
                        "key": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "resource_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Resource Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_resource_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createResourceRoleRequestUnprocessableEntityError",
                    "safeName": "createResourceRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_resource_role_request_unprocessable_entity_error",
                    "safeName": "create_resource_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateResourceRoleRequestUnprocessableEntityError",
                    "safeName": "CreateResourceRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.create_resource_role",
          "name": {
            "originalName": "create_resource_role",
            "camelCase": {
              "unsafeName": "createResourceRole",
              "safeName": "createResourceRole"
            },
            "snakeCase": {
              "unsafeName": "create_resource_role",
              "safeName": "create_resource_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_RESOURCE_ROLE",
              "safeName": "CREATE_RESOURCE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "CreateResourceRole",
              "safeName": "CreateResourceRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRoleCreate",
                "camelCase": {
                  "unsafeName": "resourceRoleCreate",
                  "safeName": "resourceRoleCreate"
                },
                "snakeCase": {
                  "unsafeName": "resource_role_create",
                  "safeName": "resource_role_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ROLE_CREATE",
                  "safeName": "RESOURCE_ROLE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRoleCreate",
                  "safeName": "ResourceRoleCreate"
                }
              },
              "typeId": "ResourceRoleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesCreateResourceRoleExample": {
                  "key": "maintainer",
                  "name": "Maintainer",
                  "description": "the maintainer role can read from the repo and push changes",
                  "permissions": [
                    "push"
                  ],
                  "extends": [
                    "contributor"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleRead",
                    "camelCase": {
                      "unsafeName": "resourceRoleRead",
                      "safeName": "resourceRoleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_read",
                      "safeName": "resource_role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_READ",
                      "safeName": "RESOURCE_ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleRead",
                      "safeName": "ResourceRoleRead"
                    }
                  },
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesCreateResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new role associated with the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesCreateResourceRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "maintainer",
                    "name": "Maintainer",
                    "description": "the maintainer role can read from the repo and push changes",
                    "permissions": [
                      "push"
                    ],
                    "extends": [
                      "contributor"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource Role",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resource_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceRoleRequestUnprocessableEntityError",
                    "safeName": "getResourceRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_role_request_unprocessable_entity_error",
                    "safeName": "get_resource_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceRoleRequestUnprocessableEntityError",
                    "safeName": "GetResourceRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.get_resource_role",
          "name": {
            "originalName": "get_resource_role",
            "camelCase": {
              "unsafeName": "getResourceRole",
              "safeName": "getResourceRole"
            },
            "snakeCase": {
              "unsafeName": "get_resource_role",
              "safeName": "get_resource_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE_ROLE",
              "safeName": "GET_RESOURCE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "GetResourceRole",
              "safeName": "GetResourceRole"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleRead",
                    "camelCase": {
                      "unsafeName": "resourceRoleRead",
                      "safeName": "resourceRoleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_read",
                      "safeName": "resource_role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_READ",
                      "safeName": "RESOURCE_ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleRead",
                      "safeName": "ResourceRoleRead"
                    }
                  },
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesGetResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single role defined on the resource, if such role exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Resource Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_resource_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteResourceRoleRequestUnprocessableEntityError",
                    "safeName": "deleteResourceRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_resource_role_request_unprocessable_entity_error",
                    "safeName": "delete_resource_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteResourceRoleRequestUnprocessableEntityError",
                    "safeName": "DeleteResourceRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.delete_resource_role",
          "name": {
            "originalName": "delete_resource_role",
            "camelCase": {
              "unsafeName": "deleteResourceRole",
              "safeName": "deleteResourceRole"
            },
            "snakeCase": {
              "unsafeName": "delete_resource_role",
              "safeName": "delete_resource_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_RESOURCE_ROLE",
              "safeName": "DELETE_RESOURCE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "DeleteResourceRole",
              "safeName": "DeleteResourceRole"
            }
          },
          "docs": "Deletes the role and all its related data.\nThis includes any permissions granted to said role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteResourceRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Resource Role",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_resource_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateResourceRoleRequestUnprocessableEntityError",
                    "safeName": "updateResourceRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_resource_role_request_unprocessable_entity_error",
                    "safeName": "update_resource_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateResourceRoleRequestUnprocessableEntityError",
                    "safeName": "UpdateResourceRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.update_resource_role",
          "name": {
            "originalName": "update_resource_role",
            "camelCase": {
              "unsafeName": "updateResourceRole",
              "safeName": "updateResourceRole"
            },
            "snakeCase": {
              "unsafeName": "update_resource_role",
              "safeName": "update_resource_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_RESOURCE_ROLE",
              "safeName": "UPDATE_RESOURCE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "UpdateResourceRole",
              "safeName": "UpdateResourceRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceRoleUpdate",
                "camelCase": {
                  "unsafeName": "resourceRoleUpdate",
                  "safeName": "resourceRoleUpdate"
                },
                "snakeCase": {
                  "unsafeName": "resource_role_update",
                  "safeName": "resource_role_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ROLE_UPDATE",
                  "safeName": "RESOURCE_ROLE_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceRoleUpdate",
                  "safeName": "ResourceRoleUpdate"
                }
              },
              "typeId": "ResourceRoleUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesUpdateResourceRoleExample": {
                  "description": "the maintainer role can read from the repo and push changes",
                  "permissions": [
                    "push"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleRead",
                    "camelCase": {
                      "unsafeName": "resourceRoleRead",
                      "safeName": "resourceRoleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_read",
                      "safeName": "resource_role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_READ",
                      "safeName": "RESOURCE_ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleRead",
                      "safeName": "ResourceRoleRead"
                    }
                  },
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesUpdateResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the role defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesUpdateResourceRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "the maintainer role can read from the repo and push changes",
                    "permissions": [
                      "push"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Assign Permissions to Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "assignPermissionsToResourceRoleRequestUnprocessableEntityError",
                    "safeName": "assignPermissionsToResourceRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "assign_permissions_to_resource_role_request_unprocessable_entity_error",
                    "safeName": "assign_permissions_to_resource_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "AssignPermissionsToResourceRoleRequestUnprocessableEntityError",
                    "safeName": "AssignPermissionsToResourceRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.assign_permissions_to_resource_role",
          "name": {
            "originalName": "assign_permissions_to_resource_role",
            "camelCase": {
              "unsafeName": "assignPermissionsToResourceRole",
              "safeName": "assignPermissionsToResourceRole"
            },
            "snakeCase": {
              "unsafeName": "assign_permissions_to_resource_role",
              "safeName": "assign_permissions_to_resource_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE",
              "safeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "AssignPermissionsToResourceRole",
              "safeName": "AssignPermissionsToResourceRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AddRolePermissions",
                "camelCase": {
                  "unsafeName": "addRolePermissions",
                  "safeName": "addRolePermissions"
                },
                "snakeCase": {
                  "unsafeName": "add_role_permissions",
                  "safeName": "add_role_permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADD_ROLE_PERMISSIONS",
                  "safeName": "ADD_ROLE_PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "AddRolePermissions",
                  "safeName": "AddRolePermissions"
                }
              },
              "typeId": "AddRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesAssignPermissionsToResourceRoleExample": {
                  "permissions": [
                    "document:write"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleRead",
                    "camelCase": {
                      "unsafeName": "resourceRoleRead",
                      "safeName": "resourceRoleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_read",
                      "safeName": "resource_role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_READ",
                      "safeName": "RESOURCE_ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleRead",
                      "safeName": "ResourceRoleRead"
                    }
                  },
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesAssignPermissionsToResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assign permissions to role.\n\nIf some of the permissions specified are already assigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesAssignPermissionsToResourceRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:write"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Remove Permissions from Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "removePermissionsFromResourceRoleRequestUnprocessableEntityError",
                    "safeName": "removePermissionsFromResourceRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "remove_permissions_from_resource_role_request_unprocessable_entity_error",
                    "safeName": "remove_permissions_from_resource_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "RemovePermissionsFromResourceRoleRequestUnprocessableEntityError",
                    "safeName": "RemovePermissionsFromResourceRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.remove_permissions_from_resource_role",
          "name": {
            "originalName": "remove_permissions_from_resource_role",
            "camelCase": {
              "unsafeName": "removePermissionsFromResourceRole",
              "safeName": "removePermissionsFromResourceRole"
            },
            "snakeCase": {
              "unsafeName": "remove_permissions_from_resource_role",
              "safeName": "remove_permissions_from_resource_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE",
              "safeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "RemovePermissionsFromResourceRole",
              "safeName": "RemovePermissionsFromResourceRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RemoveRolePermissions",
                "camelCase": {
                  "unsafeName": "removeRolePermissions",
                  "safeName": "removeRolePermissions"
                },
                "snakeCase": {
                  "unsafeName": "remove_role_permissions",
                  "safeName": "remove_role_permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REMOVE_ROLE_PERMISSIONS",
                  "safeName": "REMOVE_ROLE_PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "RemoveRolePermissions",
                  "safeName": "RemoveRolePermissions"
                }
              },
              "typeId": "RemoveRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceRolesRemovePermissionsFromResourceRoleExample": {
                  "permissions": [
                    "document:share"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleRead",
                    "camelCase": {
                      "unsafeName": "resourceRoleRead",
                      "safeName": "resourceRoleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_read",
                      "safeName": "resource_role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_READ",
                      "safeName": "RESOURCE_ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleRead",
                      "safeName": "ResourceRoleRead"
                    }
                  },
                  "typeId": "ResourceRoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesRemovePermissionsFromResourceRoleExample": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Remove permissions from role.\n\nIf some of the permissions specified are already unassigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceRolesRemovePermissionsFromResourceRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:share"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Maintainer",
                      "description": "the maintainer role can read from the repo and push changes",
                      "permissions": [
                        "push"
                      ],
                      "extends": [
                        "contributor"
                      ],
                      "key": "maintainer",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource Role Ancestors",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resource_role_ancestorsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceRoleAncestorsRequestUnprocessableEntityError",
                    "safeName": "getResourceRoleAncestorsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_role_ancestors_request_unprocessable_entity_error",
                    "safeName": "get_resource_role_ancestors_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceRoleAncestorsRequestUnprocessableEntityError",
                    "safeName": "GetResourceRoleAncestorsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_role_ancestorsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.get_resource_role_ancestors",
          "name": {
            "originalName": "get_resource_role_ancestors",
            "camelCase": {
              "unsafeName": "getResourceRoleAncestors",
              "safeName": "getResourceRoleAncestors"
            },
            "snakeCase": {
              "unsafeName": "get_resource_role_ancestors",
              "safeName": "get_resource_role_ancestors"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE_ROLE_ANCESTORS",
              "safeName": "GET_RESOURCE_ROLE_ANCESTORS"
            },
            "pascalCase": {
              "unsafeName": "GetResourceRoleAncestors",
              "safeName": "GetResourceRoleAncestors"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleList",
                    "camelCase": {
                      "unsafeName": "resourceRoleList",
                      "safeName": "resourceRoleList"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_list",
                      "safeName": "resource_role_list"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_LIST",
                      "safeName": "RESOURCE_ROLE_LIST"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleList",
                      "safeName": "ResourceRoleList"
                    }
                  },
                  "typeId": "ResourceRoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesGetResourceRoleAncestorsExample": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "resource_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceRoleAncestorsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/ancestors"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "resource_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource Role Descendants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resource_role_descendantsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceRoleDescendantsRequestUnprocessableEntityError",
                    "safeName": "getResourceRoleDescendantsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_role_descendants_request_unprocessable_entity_error",
                    "safeName": "get_resource_role_descendants_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceRoleDescendantsRequestUnprocessableEntityError",
                    "safeName": "GetResourceRoleDescendantsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_role_descendantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceRoles.get_resource_role_descendants",
          "name": {
            "originalName": "get_resource_role_descendants",
            "camelCase": {
              "unsafeName": "getResourceRoleDescendants",
              "safeName": "getResourceRoleDescendants"
            },
            "snakeCase": {
              "unsafeName": "get_resource_role_descendants",
              "safeName": "get_resource_role_descendants"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE_ROLE_DESCENDANTS",
              "safeName": "GET_RESOURCE_ROLE_DESCENDANTS"
            },
            "pascalCase": {
              "unsafeName": "GetResourceRoleDescendants",
              "safeName": "GetResourceRoleDescendants"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceRoleList",
                    "camelCase": {
                      "unsafeName": "resourceRoleList",
                      "safeName": "resourceRoleList"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_role_list",
                      "safeName": "resource_role_list"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ROLE_LIST",
                      "safeName": "RESOURCE_ROLE_LIST"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceRoleList",
                      "safeName": "ResourceRoleList"
                    }
                  },
                  "typeId": "ResourceRoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceRolesGetResourceRoleDescendantsExample": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "resource_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceRoleDescendantsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/roles/role_id/descendants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "resource_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_resourceAttributes": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Resource Attributes",
              "camelCase": {
                "unsafeName": "resourceAttributes",
                "safeName": "resourceAttributes"
              },
              "snakeCase": {
                "unsafeName": "resource_attributes",
                "safeName": "resource_attributes"
              },
              "screamingSnakeCase": {
                "unsafeName": "RESOURCE_ATTRIBUTES",
                "safeName": "RESOURCE_ATTRIBUTES"
              },
              "pascalCase": {
                "unsafeName": "ResourceAttributes",
                "safeName": "ResourceAttributes"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Resource Attributes",
            "camelCase": {
              "unsafeName": "resourceAttributes",
              "safeName": "resourceAttributes"
            },
            "snakeCase": {
              "unsafeName": "resource_attributes",
              "safeName": "resource_attributes"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ATTRIBUTES",
              "safeName": "RESOURCE_ATTRIBUTES"
            },
            "pascalCase": {
              "unsafeName": "ResourceAttributes",
              "safeName": "ResourceAttributes"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Attributes",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_resource_attributesRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listResourceAttributesRequestUnprocessableEntityError",
                    "safeName": "listResourceAttributesRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_resource_attributes_request_unprocessable_entity_error",
                    "safeName": "list_resource_attributes_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_RESOURCE_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_RESOURCE_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListResourceAttributesRequestUnprocessableEntityError",
                    "safeName": "ListResourceAttributesRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_attributesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.list_resource_attributes",
          "name": {
            "originalName": "list_resource_attributes",
            "camelCase": {
              "unsafeName": "listResourceAttributes",
              "safeName": "listResourceAttributes"
            },
            "snakeCase": {
              "unsafeName": "list_resource_attributes",
              "safeName": "list_resource_attributes"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_RESOURCE_ATTRIBUTES",
              "safeName": "LIST_RESOURCE_ATTRIBUTES"
            },
            "pascalCase": {
              "unsafeName": "ListResourceAttributes",
              "safeName": "ListResourceAttributes"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ResourceAttributeRead",
                        "camelCase": {
                          "unsafeName": "resourceAttributeRead",
                          "safeName": "resourceAttributeRead"
                        },
                        "snakeCase": {
                          "unsafeName": "resource_attribute_read",
                          "safeName": "resource_attribute_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                          "safeName": "RESOURCE_ATTRIBUTE_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ResourceAttributeRead",
                          "safeName": "ResourceAttributeRead"
                        }
                      },
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesListResourceAttributesExample": [
                      {
                        "type": "bool",
                        "description": "foo",
                        "key": "foo",
                        "id": "foo",
                        "resource_id": "foo",
                        "resource_key": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "built_in": true
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the attributes defined on the resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listResourceAttributesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "type": "bool",
                        "description": "foo",
                        "key": "foo",
                        "id": "foo",
                        "resource_id": "foo",
                        "resource_key": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "built_in": true
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Resource Attribute",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_resource_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "createResourceAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_resource_attribute_request_unprocessable_entity_error",
                    "safeName": "create_resource_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "CreateResourceAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.create_resource_attribute",
          "name": {
            "originalName": "create_resource_attribute",
            "camelCase": {
              "unsafeName": "createResourceAttribute",
              "safeName": "createResourceAttribute"
            },
            "snakeCase": {
              "unsafeName": "create_resource_attribute",
              "safeName": "create_resource_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_RESOURCE_ATTRIBUTE",
              "safeName": "CREATE_RESOURCE_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "CreateResourceAttribute",
              "safeName": "CreateResourceAttribute"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceAttributeCreate",
                "camelCase": {
                  "unsafeName": "resourceAttributeCreate",
                  "safeName": "resourceAttributeCreate"
                },
                "snakeCase": {
                  "unsafeName": "resource_attribute_create",
                  "safeName": "resource_attribute_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ATTRIBUTE_CREATE",
                  "safeName": "RESOURCE_ATTRIBUTE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceAttributeCreate",
                  "safeName": "ResourceAttributeCreate"
                }
              },
              "typeId": "ResourceAttributeCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceAttributesCreateResourceAttributeExample": {
                  "key": "private",
                  "type": "bool",
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceAttributeRead",
                    "camelCase": {
                      "unsafeName": "resourceAttributeRead",
                      "safeName": "resourceAttributeRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_attribute_read",
                      "safeName": "resource_attribute_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                      "safeName": "RESOURCE_ATTRIBUTE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceAttributeRead",
                      "safeName": "ResourceAttributeRead"
                    }
                  },
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesCreateResourceAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new attribute as part of the resource definition.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceAttributesCreateResourceAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "private",
                    "type": "bool",
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource Attribute",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resource_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "getResourceAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_attribute_request_unprocessable_entity_error",
                    "safeName": "get_resource_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "GetResourceAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.get_resource_attribute",
          "name": {
            "originalName": "get_resource_attribute",
            "camelCase": {
              "unsafeName": "getResourceAttribute",
              "safeName": "getResourceAttribute"
            },
            "snakeCase": {
              "unsafeName": "get_resource_attribute",
              "safeName": "get_resource_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE_ATTRIBUTE",
              "safeName": "GET_RESOURCE_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "GetResourceAttribute",
              "safeName": "GetResourceAttribute"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceAttributeRead",
                    "camelCase": {
                      "unsafeName": "resourceAttributeRead",
                      "safeName": "resourceAttributeRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_attribute_read",
                      "safeName": "resource_attribute_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                      "safeName": "RESOURCE_ATTRIBUTE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceAttributeRead",
                      "safeName": "ResourceAttributeRead"
                    }
                  },
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesGetResourceAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single attribute defined on the resource, if such attribute exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Resource Attribute",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_resource_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "deleteResourceAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_resource_attribute_request_unprocessable_entity_error",
                    "safeName": "delete_resource_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "DeleteResourceAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.delete_resource_attribute",
          "name": {
            "originalName": "delete_resource_attribute",
            "camelCase": {
              "unsafeName": "deleteResourceAttribute",
              "safeName": "deleteResourceAttribute"
            },
            "snakeCase": {
              "unsafeName": "delete_resource_attribute",
              "safeName": "delete_resource_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_RESOURCE_ATTRIBUTE",
              "safeName": "DELETE_RESOURCE_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "DeleteResourceAttribute",
              "safeName": "DeleteResourceAttribute"
            }
          },
          "docs": "Deletes the attribute and all its related data.\n\nNote: If the attribute is used by policies, removing it will cause the\nattribute to evaluate as `undefined`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteResourceAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Resource Attribute",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_resource_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "updateResourceAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_resource_attribute_request_unprocessable_entity_error",
                    "safeName": "update_resource_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateResourceAttributeRequestUnprocessableEntityError",
                    "safeName": "UpdateResourceAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resources/"
              },
              {
                "pathParameter": "resource_id",
                "tail": "/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "resource_id",
                "camelCase": {
                  "unsafeName": "resourceId",
                  "safeName": "resourceId"
                },
                "snakeCase": {
                  "unsafeName": "resource_id",
                  "safeName": "resource_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ID",
                  "safeName": "RESOURCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "ResourceId",
                  "safeName": "ResourceId"
                }
              },
              "docs": "Either the unique id of the resource, or the URL-friendly key of the resource (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "resource_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceAttributes.update_resource_attribute",
          "name": {
            "originalName": "update_resource_attribute",
            "camelCase": {
              "unsafeName": "updateResourceAttribute",
              "safeName": "updateResourceAttribute"
            },
            "snakeCase": {
              "unsafeName": "update_resource_attribute",
              "safeName": "update_resource_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_RESOURCE_ATTRIBUTE",
              "safeName": "UPDATE_RESOURCE_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "UpdateResourceAttribute",
              "safeName": "UpdateResourceAttribute"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceAttributeUpdate",
                "camelCase": {
                  "unsafeName": "resourceAttributeUpdate",
                  "safeName": "resourceAttributeUpdate"
                },
                "snakeCase": {
                  "unsafeName": "resource_attribute_update",
                  "safeName": "resource_attribute_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ATTRIBUTE_UPDATE",
                  "safeName": "RESOURCE_ATTRIBUTE_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceAttributeUpdate",
                  "safeName": "ResourceAttributeUpdate"
                }
              },
              "typeId": "ResourceAttributeUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceAttributesUpdateResourceAttributeExample": {
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceAttributeRead",
                    "camelCase": {
                      "unsafeName": "resourceAttributeRead",
                      "safeName": "resourceAttributeRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_attribute_read",
                      "safeName": "resource_attribute_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                      "safeName": "RESOURCE_ATTRIBUTE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceAttributeRead",
                      "safeName": "ResourceAttributeRead"
                    }
                  },
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceAttributesUpdateResourceAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the attribute defined on a resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceAttributesUpdateResourceAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/resources/resource_id/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "resource_id": "resource_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_userAttributes": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "User Attributes",
              "camelCase": {
                "unsafeName": "userAttributes",
                "safeName": "userAttributes"
              },
              "snakeCase": {
                "unsafeName": "user_attributes",
                "safeName": "user_attributes"
              },
              "screamingSnakeCase": {
                "unsafeName": "USER_ATTRIBUTES",
                "safeName": "USER_ATTRIBUTES"
              },
              "pascalCase": {
                "unsafeName": "UserAttributes",
                "safeName": "UserAttributes"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "User Attributes",
            "camelCase": {
              "unsafeName": "userAttributes",
              "safeName": "userAttributes"
            },
            "snakeCase": {
              "unsafeName": "user_attributes",
              "safeName": "user_attributes"
            },
            "screamingSnakeCase": {
              "unsafeName": "USER_ATTRIBUTES",
              "safeName": "USER_ATTRIBUTES"
            },
            "pascalCase": {
              "unsafeName": "UserAttributes",
              "safeName": "UserAttributes"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List User Attributes",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "resource_id",
                  "camelCase": {
                    "unsafeName": "resourceId",
                    "safeName": "resourceId"
                  },
                  "snakeCase": {
                    "unsafeName": "resource_id",
                    "safeName": "resource_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESOURCE_ID",
                    "safeName": "RESOURCE_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ResourceId",
                    "safeName": "ResourceId"
                  }
                },
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_user_attributesRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listUserAttributesRequestUnprocessableEntityError",
                    "safeName": "listUserAttributesRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_user_attributes_request_unprocessable_entity_error",
                    "safeName": "list_user_attributes_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_USER_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_USER_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListUserAttributesRequestUnprocessableEntityError",
                    "safeName": "ListUserAttributesRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_user_attributesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.list_user_attributes",
          "name": {
            "originalName": "list_user_attributes",
            "camelCase": {
              "unsafeName": "listUserAttributes",
              "safeName": "listUserAttributes"
            },
            "snakeCase": {
              "unsafeName": "list_user_attributes",
              "safeName": "list_user_attributes"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_USER_ATTRIBUTES",
              "safeName": "LIST_USER_ATTRIBUTES"
            },
            "pascalCase": {
              "unsafeName": "ListUserAttributes",
              "safeName": "ListUserAttributes"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ResourceAttributeRead",
                        "camelCase": {
                          "unsafeName": "resourceAttributeRead",
                          "safeName": "resourceAttributeRead"
                        },
                        "snakeCase": {
                          "unsafeName": "resource_attribute_read",
                          "safeName": "resource_attribute_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                          "safeName": "RESOURCE_ATTRIBUTE_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ResourceAttributeRead",
                          "safeName": "ResourceAttributeRead"
                        }
                      },
                      "typeId": "ResourceAttributeRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesListUserAttributesExample": [
                      {
                        "type": "bool",
                        "description": "foo",
                        "key": "foo",
                        "id": "foo",
                        "resource_id": "foo",
                        "resource_key": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "built_in": true
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the attributes defined on the User resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listUserAttributesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/users/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "type": "bool",
                        "description": "foo",
                        "key": "foo",
                        "id": "foo",
                        "resource_id": "foo",
                        "resource_key": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "built_in": true
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create User Attribute",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "resource_id",
                  "camelCase": {
                    "unsafeName": "resourceId",
                    "safeName": "resourceId"
                  },
                  "snakeCase": {
                    "unsafeName": "resource_id",
                    "safeName": "resource_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESOURCE_ID",
                    "safeName": "RESOURCE_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ResourceId",
                    "safeName": "ResourceId"
                  }
                },
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_user_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createUserAttributeRequestUnprocessableEntityError",
                    "safeName": "createUserAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_user_attribute_request_unprocessable_entity_error",
                    "safeName": "create_user_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateUserAttributeRequestUnprocessableEntityError",
                    "safeName": "CreateUserAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.create_user_attribute",
          "name": {
            "originalName": "create_user_attribute",
            "camelCase": {
              "unsafeName": "createUserAttribute",
              "safeName": "createUserAttribute"
            },
            "snakeCase": {
              "unsafeName": "create_user_attribute",
              "safeName": "create_user_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_USER_ATTRIBUTE",
              "safeName": "CREATE_USER_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "CreateUserAttribute",
              "safeName": "CreateUserAttribute"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceAttributeCreate",
                "camelCase": {
                  "unsafeName": "resourceAttributeCreate",
                  "safeName": "resourceAttributeCreate"
                },
                "snakeCase": {
                  "unsafeName": "resource_attribute_create",
                  "safeName": "resource_attribute_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ATTRIBUTE_CREATE",
                  "safeName": "RESOURCE_ATTRIBUTE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceAttributeCreate",
                  "safeName": "ResourceAttributeCreate"
                }
              },
              "typeId": "ResourceAttributeCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userAttributesCreateUserAttributeExample": {
                  "key": "private",
                  "type": "bool",
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceAttributeRead",
                    "camelCase": {
                      "unsafeName": "resourceAttributeRead",
                      "safeName": "resourceAttributeRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_attribute_read",
                      "safeName": "resource_attribute_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                      "safeName": "RESOURCE_ATTRIBUTE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceAttributeRead",
                      "safeName": "ResourceAttributeRead"
                    }
                  },
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesCreateUserAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new attribute for the User resource.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userAttributesCreateUserAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/users/attributes"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "private",
                    "type": "bool",
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get User Attribute",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "resource_id",
                  "camelCase": {
                    "unsafeName": "resourceId",
                    "safeName": "resourceId"
                  },
                  "snakeCase": {
                    "unsafeName": "resource_id",
                    "safeName": "resource_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESOURCE_ID",
                    "safeName": "RESOURCE_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ResourceId",
                    "safeName": "ResourceId"
                  }
                },
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_user_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getUserAttributeRequestUnprocessableEntityError",
                    "safeName": "getUserAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_user_attribute_request_unprocessable_entity_error",
                    "safeName": "get_user_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetUserAttributeRequestUnprocessableEntityError",
                    "safeName": "GetUserAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.get_user_attribute",
          "name": {
            "originalName": "get_user_attribute",
            "camelCase": {
              "unsafeName": "getUserAttribute",
              "safeName": "getUserAttribute"
            },
            "snakeCase": {
              "unsafeName": "get_user_attribute",
              "safeName": "get_user_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_USER_ATTRIBUTE",
              "safeName": "GET_USER_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "GetUserAttribute",
              "safeName": "GetUserAttribute"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceAttributeRead",
                    "camelCase": {
                      "unsafeName": "resourceAttributeRead",
                      "safeName": "resourceAttributeRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_attribute_read",
                      "safeName": "resource_attribute_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                      "safeName": "RESOURCE_ATTRIBUTE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceAttributeRead",
                      "safeName": "ResourceAttributeRead"
                    }
                  },
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesGetUserAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single attribute defined on the User resource, if such attribute exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getUserAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/users/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete User Attribute",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "resource_id",
                  "camelCase": {
                    "unsafeName": "resourceId",
                    "safeName": "resourceId"
                  },
                  "snakeCase": {
                    "unsafeName": "resource_id",
                    "safeName": "resource_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESOURCE_ID",
                    "safeName": "RESOURCE_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ResourceId",
                    "safeName": "ResourceId"
                  }
                },
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_user_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteUserAttributeRequestUnprocessableEntityError",
                    "safeName": "deleteUserAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_user_attribute_request_unprocessable_entity_error",
                    "safeName": "delete_user_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteUserAttributeRequestUnprocessableEntityError",
                    "safeName": "DeleteUserAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.delete_user_attribute",
          "name": {
            "originalName": "delete_user_attribute",
            "camelCase": {
              "unsafeName": "deleteUserAttribute",
              "safeName": "deleteUserAttribute"
            },
            "snakeCase": {
              "unsafeName": "delete_user_attribute",
              "safeName": "delete_user_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_USER_ATTRIBUTE",
              "safeName": "DELETE_USER_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "DeleteUserAttribute",
              "safeName": "DeleteUserAttribute"
            }
          },
          "docs": "Deletes the attribute and all its related data.\n\nNote: If the attribute is used by policies, removing it will cause the\nattribute to evaluate as `undefined`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteUserAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/users/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update User Attribute",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "resource_id",
                  "camelCase": {
                    "unsafeName": "resourceId",
                    "safeName": "resourceId"
                  },
                  "snakeCase": {
                    "unsafeName": "resource_id",
                    "safeName": "resource_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESOURCE_ID",
                    "safeName": "RESOURCE_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ResourceId",
                    "safeName": "ResourceId"
                  }
                },
                "wireValue": "resource_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "__user",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_id_example": "__user"
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_user_attributeRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateUserAttributeRequestUnprocessableEntityError",
                    "safeName": "updateUserAttributeRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_user_attribute_request_unprocessable_entity_error",
                    "safeName": "update_user_attribute_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateUserAttributeRequestUnprocessableEntityError",
                    "safeName": "UpdateUserAttributeRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_user_attributeRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/attributes/"
              },
              {
                "pathParameter": "attribute_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "attribute_id",
                "camelCase": {
                  "unsafeName": "attributeId",
                  "safeName": "attributeId"
                },
                "snakeCase": {
                  "unsafeName": "attribute_id",
                  "safeName": "attribute_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTE_ID",
                  "safeName": "ATTRIBUTE_ID"
                },
                "pascalCase": {
                  "unsafeName": "AttributeId",
                  "safeName": "AttributeId"
                }
              },
              "docs": "Either the unique id of the attribute, or the URL-friendly key of the attribute (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "attribute_id_example": "attribute_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_userAttributes.update_user_attribute",
          "name": {
            "originalName": "update_user_attribute",
            "camelCase": {
              "unsafeName": "updateUserAttribute",
              "safeName": "updateUserAttribute"
            },
            "snakeCase": {
              "unsafeName": "update_user_attribute",
              "safeName": "update_user_attribute"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_USER_ATTRIBUTE",
              "safeName": "UPDATE_USER_ATTRIBUTE"
            },
            "pascalCase": {
              "unsafeName": "UpdateUserAttribute",
              "safeName": "UpdateUserAttribute"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceAttributeUpdate",
                "camelCase": {
                  "unsafeName": "resourceAttributeUpdate",
                  "safeName": "resourceAttributeUpdate"
                },
                "snakeCase": {
                  "unsafeName": "resource_attribute_update",
                  "safeName": "resource_attribute_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_ATTRIBUTE_UPDATE",
                  "safeName": "RESOURCE_ATTRIBUTE_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceAttributeUpdate",
                  "safeName": "ResourceAttributeUpdate"
                }
              },
              "typeId": "ResourceAttributeUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "userAttributesUpdateUserAttributeExample": {
                  "description": "whether or not the github repository is private"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceAttributeRead",
                    "camelCase": {
                      "unsafeName": "resourceAttributeRead",
                      "safeName": "resourceAttributeRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_attribute_read",
                      "safeName": "resource_attribute_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_ATTRIBUTE_READ",
                      "safeName": "RESOURCE_ATTRIBUTE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceAttributeRead",
                      "safeName": "ResourceAttributeRead"
                    }
                  },
                  "typeId": "ResourceAttributeRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "userAttributesUpdateUserAttributeExample": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the attribute defined on the User resource.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "userAttributesUpdateUserAttributeExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/users/attributes/attribute_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "attribute_id": "attribute_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "whether or not the github repository is private"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "type": "bool",
                      "description": "whether or not the github repository is private",
                      "key": "private",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7dd",
                      "resource_key": "repository",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "built_in": false
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_roles": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Roles",
              "camelCase": {
                "unsafeName": "roles",
                "safeName": "roles"
              },
              "snakeCase": {
                "unsafeName": "roles",
                "safeName": "roles"
              },
              "screamingSnakeCase": {
                "unsafeName": "ROLES",
                "safeName": "ROLES"
              },
              "pascalCase": {
                "unsafeName": "Roles",
                "safeName": "Roles"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Roles",
            "camelCase": {
              "unsafeName": "roles",
              "safeName": "roles"
            },
            "snakeCase": {
              "unsafeName": "roles",
              "safeName": "roles"
            },
            "screamingSnakeCase": {
              "unsafeName": "ROLES",
              "safeName": "ROLES"
            },
            "pascalCase": {
              "unsafeName": "Roles",
              "safeName": "Roles"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Roles",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "search",
                  "camelCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "snakeCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SEARCH",
                    "safeName": "SEARCH"
                  },
                  "pascalCase": {
                    "unsafeName": "Search",
                    "safeName": "Search"
                  }
                },
                "wireValue": "search"
              },
              "docs": "Text search for the roles name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "include_total_count",
                  "camelCase": {
                    "unsafeName": "includeTotalCount",
                    "safeName": "includeTotalCount"
                  },
                  "snakeCase": {
                    "unsafeName": "include_total_count",
                    "safeName": "include_total_count"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_TOTAL_COUNT",
                    "safeName": "INCLUDE_TOTAL_COUNT"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeTotalCount",
                    "safeName": "IncludeTotalCount"
                  }
                },
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_rolesRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listRolesRequestUnprocessableEntityError",
                    "safeName": "listRolesRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_roles_request_unprocessable_entity_error",
                    "safeName": "list_roles_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListRolesRequestUnprocessableEntityError",
                    "safeName": "ListRolesRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_rolesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.list_roles",
          "name": {
            "originalName": "list_roles",
            "camelCase": {
              "unsafeName": "listRoles",
              "safeName": "listRoles"
            },
            "snakeCase": {
              "unsafeName": "list_roles",
              "safeName": "list_roles"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_ROLES",
              "safeName": "LIST_ROLES"
            },
            "pascalCase": {
              "unsafeName": "ListRoles",
              "safeName": "ListRoles"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Roles_list_roles_Response_200",
                    "camelCase": {
                      "unsafeName": "rolesListRolesResponse200",
                      "safeName": "rolesListRolesResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "roles_list_roles_response_200",
                      "safeName": "roles_list_roles_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLES_LIST_ROLES_RESPONSE_200",
                      "safeName": "ROLES_LIST_ROLES_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "RolesListRolesResponse200",
                      "safeName": "RolesListRolesResponse200"
                    }
                  },
                  "typeId": "Roles_list_roles_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesListRolesExample": {
                      "data": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all tenant roles.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listRolesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createRoleRequestUnprocessableEntityError",
                    "safeName": "createRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_role_request_unprocessable_entity_error",
                    "safeName": "create_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRoleRequestUnprocessableEntityError",
                    "safeName": "CreateRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.create_role",
          "name": {
            "originalName": "create_role",
            "camelCase": {
              "unsafeName": "createRole",
              "safeName": "createRole"
            },
            "snakeCase": {
              "unsafeName": "create_role",
              "safeName": "create_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_ROLE",
              "safeName": "CREATE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "CreateRole",
              "safeName": "CreateRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleCreate",
                "camelCase": {
                  "unsafeName": "roleCreate",
                  "safeName": "roleCreate"
                },
                "snakeCase": {
                  "unsafeName": "role_create",
                  "safeName": "role_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_CREATE",
                  "safeName": "ROLE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "RoleCreate",
                  "safeName": "RoleCreate"
                }
              },
              "typeId": "RoleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesCreateRoleExample": {
                  "key": "editor",
                  "name": "Editor",
                  "description": "the editor role can read and write to documents",
                  "permissions": [
                    "document:write"
                  ],
                  "extends": [
                    "viewer"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleRead",
                    "camelCase": {
                      "unsafeName": "roleRead",
                      "safeName": "roleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_read",
                      "safeName": "role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_READ",
                      "safeName": "ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleRead",
                      "safeName": "RoleRead"
                    }
                  },
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesCreateRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new tenant role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesCreateRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "editor",
                    "name": "Editor",
                    "description": "the editor role can read and write to documents",
                    "permissions": [
                      "document:write"
                    ],
                    "extends": [
                      "viewer"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Role",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getRoleRequestUnprocessableEntityError",
                    "safeName": "getRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_role_request_unprocessable_entity_error",
                    "safeName": "get_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRoleRequestUnprocessableEntityError",
                    "safeName": "GetRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.get_role",
          "name": {
            "originalName": "get_role",
            "camelCase": {
              "unsafeName": "getRole",
              "safeName": "getRole"
            },
            "snakeCase": {
              "unsafeName": "get_role",
              "safeName": "get_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_ROLE",
              "safeName": "GET_ROLE"
            },
            "pascalCase": {
              "unsafeName": "GetRole",
              "safeName": "GetRole"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleRead",
                    "camelCase": {
                      "unsafeName": "roleRead",
                      "safeName": "roleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_read",
                      "safeName": "role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_READ",
                      "safeName": "ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleRead",
                      "safeName": "RoleRead"
                    }
                  },
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesGetRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single tenant role, if such role exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteRoleRequestUnprocessableEntityError",
                    "safeName": "deleteRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_role_request_unprocessable_entity_error",
                    "safeName": "delete_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteRoleRequestUnprocessableEntityError",
                    "safeName": "DeleteRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.delete_role",
          "name": {
            "originalName": "delete_role",
            "camelCase": {
              "unsafeName": "deleteRole",
              "safeName": "deleteRole"
            },
            "snakeCase": {
              "unsafeName": "delete_role",
              "safeName": "delete_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_ROLE",
              "safeName": "DELETE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "DeleteRole",
              "safeName": "DeleteRole"
            }
          },
          "docs": "Deletes a tenant role and all its related data.\nThis includes any permissions granted to said role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Role",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateRoleRequestUnprocessableEntityError",
                    "safeName": "updateRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_role_request_unprocessable_entity_error",
                    "safeName": "update_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateRoleRequestUnprocessableEntityError",
                    "safeName": "UpdateRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.update_role",
          "name": {
            "originalName": "update_role",
            "camelCase": {
              "unsafeName": "updateRole",
              "safeName": "updateRole"
            },
            "snakeCase": {
              "unsafeName": "update_role",
              "safeName": "update_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_ROLE",
              "safeName": "UPDATE_ROLE"
            },
            "pascalCase": {
              "unsafeName": "UpdateRole",
              "safeName": "UpdateRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleUpdate",
                "camelCase": {
                  "unsafeName": "roleUpdate",
                  "safeName": "roleUpdate"
                },
                "snakeCase": {
                  "unsafeName": "role_update",
                  "safeName": "role_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_UPDATE",
                  "safeName": "ROLE_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "RoleUpdate",
                  "safeName": "RoleUpdate"
                }
              },
              "typeId": "RoleUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesUpdateRoleExample": {
                  "description": "the editor role can read and write to documents",
                  "permissions": [
                    "document:write"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleRead",
                    "camelCase": {
                      "unsafeName": "roleRead",
                      "safeName": "roleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_read",
                      "safeName": "role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_READ",
                      "safeName": "ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleRead",
                      "safeName": "RoleRead"
                    }
                  },
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesUpdateRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates a tenant role.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesUpdateRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "the editor role can read and write to documents",
                    "permissions": [
                      "document:write"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Assign Permissions To Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Assign_permissions_to_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "assignPermissionsToRoleRequestUnprocessableEntityError",
                    "safeName": "assignPermissionsToRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "assign_permissions_to_role_request_unprocessable_entity_error",
                    "safeName": "assign_permissions_to_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASSIGN_PERMISSIONS_TO_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "ASSIGN_PERMISSIONS_TO_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "AssignPermissionsToRoleRequestUnprocessableEntityError",
                    "safeName": "AssignPermissionsToRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_permissions_to_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.assign_permissions_to_role",
          "name": {
            "originalName": "assign_permissions_to_role",
            "camelCase": {
              "unsafeName": "assignPermissionsToRole",
              "safeName": "assignPermissionsToRole"
            },
            "snakeCase": {
              "unsafeName": "assign_permissions_to_role",
              "safeName": "assign_permissions_to_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "ASSIGN_PERMISSIONS_TO_ROLE",
              "safeName": "ASSIGN_PERMISSIONS_TO_ROLE"
            },
            "pascalCase": {
              "unsafeName": "AssignPermissionsToRole",
              "safeName": "AssignPermissionsToRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AddRolePermissions",
                "camelCase": {
                  "unsafeName": "addRolePermissions",
                  "safeName": "addRolePermissions"
                },
                "snakeCase": {
                  "unsafeName": "add_role_permissions",
                  "safeName": "add_role_permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADD_ROLE_PERMISSIONS",
                  "safeName": "ADD_ROLE_PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "AddRolePermissions",
                  "safeName": "AddRolePermissions"
                }
              },
              "typeId": "AddRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesAssignPermissionsToRoleExample": {
                  "permissions": [
                    "document:write"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleRead",
                    "camelCase": {
                      "unsafeName": "roleRead",
                      "safeName": "roleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_read",
                      "safeName": "role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_READ",
                      "safeName": "ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleRead",
                      "safeName": "RoleRead"
                    }
                  },
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesAssignPermissionsToRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assign permissions to role.\n\nIf some of the permissions specified are already assigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesAssignPermissionsToRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:write"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Remove Permissions From Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Remove_permissions_from_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "removePermissionsFromRoleRequestUnprocessableEntityError",
                    "safeName": "removePermissionsFromRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "remove_permissions_from_role_request_unprocessable_entity_error",
                    "safeName": "remove_permissions_from_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REMOVE_PERMISSIONS_FROM_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "REMOVE_PERMISSIONS_FROM_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "RemovePermissionsFromRoleRequestUnprocessableEntityError",
                    "safeName": "RemovePermissionsFromRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Remove_permissions_from_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/permissions"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.remove_permissions_from_role",
          "name": {
            "originalName": "remove_permissions_from_role",
            "camelCase": {
              "unsafeName": "removePermissionsFromRole",
              "safeName": "removePermissionsFromRole"
            },
            "snakeCase": {
              "unsafeName": "remove_permissions_from_role",
              "safeName": "remove_permissions_from_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "REMOVE_PERMISSIONS_FROM_ROLE",
              "safeName": "REMOVE_PERMISSIONS_FROM_ROLE"
            },
            "pascalCase": {
              "unsafeName": "RemovePermissionsFromRole",
              "safeName": "RemovePermissionsFromRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RemoveRolePermissions",
                "camelCase": {
                  "unsafeName": "removeRolePermissions",
                  "safeName": "removeRolePermissions"
                },
                "snakeCase": {
                  "unsafeName": "remove_role_permissions",
                  "safeName": "remove_role_permissions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REMOVE_ROLE_PERMISSIONS",
                  "safeName": "REMOVE_ROLE_PERMISSIONS"
                },
                "pascalCase": {
                  "unsafeName": "RemoveRolePermissions",
                  "safeName": "RemoveRolePermissions"
                }
              },
              "typeId": "RemoveRolePermissions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "rolesRemovePermissionsFromRoleExample": {
                  "permissions": [
                    "document:share"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleRead",
                    "camelCase": {
                      "unsafeName": "roleRead",
                      "safeName": "roleRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_read",
                      "safeName": "role_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_READ",
                      "safeName": "ROLE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleRead",
                      "safeName": "RoleRead"
                    }
                  },
                  "typeId": "RoleRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesRemovePermissionsFromRoleExample": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Remove permissions from role.\n\nIf some of the permissions specified are already unassigned, will skip them.",
          "v2Examples": {
            "autogeneratedExamples": {
              "rolesRemovePermissionsFromRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/permissions"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "permissions": [
                      "document:share"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Editor",
                      "description": "the editor role can read and write to documents",
                      "permissions": [
                        "document:write"
                      ],
                      "extends": [
                        "viewer"
                      ],
                      "key": "editor",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Role Ancestors",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_role_ancestorsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getRoleAncestorsRequestUnprocessableEntityError",
                    "safeName": "getRoleAncestorsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_role_ancestors_request_unprocessable_entity_error",
                    "safeName": "get_role_ancestors_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRoleAncestorsRequestUnprocessableEntityError",
                    "safeName": "GetRoleAncestorsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_role_ancestorsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/ancestors"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.get_role_ancestors",
          "name": {
            "originalName": "get_role_ancestors",
            "camelCase": {
              "unsafeName": "getRoleAncestors",
              "safeName": "getRoleAncestors"
            },
            "snakeCase": {
              "unsafeName": "get_role_ancestors",
              "safeName": "get_role_ancestors"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_ROLE_ANCESTORS",
              "safeName": "GET_ROLE_ANCESTORS"
            },
            "pascalCase": {
              "unsafeName": "GetRoleAncestors",
              "safeName": "GetRoleAncestors"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleList",
                    "camelCase": {
                      "unsafeName": "roleList",
                      "safeName": "roleList"
                    },
                    "snakeCase": {
                      "unsafeName": "role_list",
                      "safeName": "role_list"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_LIST",
                      "safeName": "ROLE_LIST"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleList",
                      "safeName": "RoleList"
                    }
                  },
                  "typeId": "RoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesGetRoleAncestorsExample": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getRoleAncestorsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/ancestors"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Role Descendants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_role_descendantsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getRoleDescendantsRequestUnprocessableEntityError",
                    "safeName": "getRoleDescendantsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_role_descendants_request_unprocessable_entity_error",
                    "safeName": "get_role_descendants_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRoleDescendantsRequestUnprocessableEntityError",
                    "safeName": "GetRoleDescendantsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_role_descendantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/roles/"
              },
              {
                "pathParameter": "role_id",
                "tail": "/descendants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "role_id",
                "camelCase": {
                  "unsafeName": "roleId",
                  "safeName": "roleId"
                },
                "snakeCase": {
                  "unsafeName": "role_id",
                  "safeName": "role_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ID",
                  "safeName": "ROLE_ID"
                },
                "pascalCase": {
                  "unsafeName": "RoleId",
                  "safeName": "RoleId"
                }
              },
              "docs": "Either the unique id of the role, or the URL-friendly key of the role (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_id_example": "role_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roles.get_role_descendants",
          "name": {
            "originalName": "get_role_descendants",
            "camelCase": {
              "unsafeName": "getRoleDescendants",
              "safeName": "getRoleDescendants"
            },
            "snakeCase": {
              "unsafeName": "get_role_descendants",
              "safeName": "get_role_descendants"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_ROLE_DESCENDANTS",
              "safeName": "GET_ROLE_DESCENDANTS"
            },
            "pascalCase": {
              "unsafeName": "GetRoleDescendants",
              "safeName": "GetRoleDescendants"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleList",
                    "camelCase": {
                      "unsafeName": "roleList",
                      "safeName": "roleList"
                    },
                    "snakeCase": {
                      "unsafeName": "role_list",
                      "safeName": "role_list"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_LIST",
                      "safeName": "ROLE_LIST"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleList",
                      "safeName": "RoleList"
                    }
                  },
                  "typeId": "RoleList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "rolesGetRoleDescendantsExample": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getRoleDescendantsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/roles/role_id/descendants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "role_id": "role_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "roles": [
                        {
                          "name": "foo",
                          "description": "foo",
                          "permissions": [
                            "foo"
                          ],
                          "attributes": {},
                          "extends": [
                            "foo"
                          ],
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_conditionSets": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Condition Sets",
              "camelCase": {
                "unsafeName": "conditionSets",
                "safeName": "conditionSets"
              },
              "snakeCase": {
                "unsafeName": "condition_sets",
                "safeName": "condition_sets"
              },
              "screamingSnakeCase": {
                "unsafeName": "CONDITION_SETS",
                "safeName": "CONDITION_SETS"
              },
              "pascalCase": {
                "unsafeName": "ConditionSets",
                "safeName": "ConditionSets"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Condition Sets",
            "camelCase": {
              "unsafeName": "conditionSets",
              "safeName": "conditionSets"
            },
            "snakeCase": {
              "unsafeName": "condition_sets",
              "safeName": "condition_sets"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONDITION_SETS",
              "safeName": "CONDITION_SETS"
            },
            "pascalCase": {
              "unsafeName": "ConditionSets",
              "safeName": "ConditionSets"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Condition Sets",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "search",
                  "camelCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "snakeCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SEARCH",
                    "safeName": "SEARCH"
                  },
                  "pascalCase": {
                    "unsafeName": "Search",
                    "safeName": "Search"
                  }
                },
                "wireValue": "search"
              },
              "docs": "Text search for the condition sets name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "type",
                  "camelCase": {
                    "unsafeName": "type",
                    "safeName": "type_"
                  },
                  "snakeCase": {
                    "unsafeName": "type",
                    "safeName": "type_"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TYPE",
                    "safeName": "TYPE"
                  },
                  "pascalCase": {
                    "unsafeName": "Type",
                    "safeName": "Type"
                  }
                },
                "wireValue": "type"
              },
              "docs": "if provided, will return only the condition sets of the specified type. e.g: only user sets.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "ConditionSetType",
                      "camelCase": {
                        "unsafeName": "conditionSetType",
                        "safeName": "conditionSetType"
                      },
                      "snakeCase": {
                        "unsafeName": "condition_set_type",
                        "safeName": "condition_set_type"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "CONDITION_SET_TYPE",
                        "safeName": "CONDITION_SET_TYPE"
                      },
                      "pascalCase": {
                        "unsafeName": "ConditionSetType",
                        "safeName": "ConditionSetType"
                      }
                    },
                    "typeId": "ConditionSetType",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "type_example": "userset"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "include_total_count",
                  "camelCase": {
                    "unsafeName": "includeTotalCount",
                    "safeName": "includeTotalCount"
                  },
                  "snakeCase": {
                    "unsafeName": "include_total_count",
                    "safeName": "include_total_count"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_TOTAL_COUNT",
                    "safeName": "INCLUDE_TOTAL_COUNT"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeTotalCount",
                    "safeName": "IncludeTotalCount"
                  }
                },
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_condition_setsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listConditionSetsRequestUnprocessableEntityError",
                    "safeName": "listConditionSetsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_condition_sets_request_unprocessable_entity_error",
                    "safeName": "list_condition_sets_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_CONDITION_SETS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_CONDITION_SETS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListConditionSetsRequestUnprocessableEntityError",
                    "safeName": "ListConditionSetsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_condition_setsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.list_condition_sets",
          "name": {
            "originalName": "list_condition_sets",
            "camelCase": {
              "unsafeName": "listConditionSets",
              "safeName": "listConditionSets"
            },
            "snakeCase": {
              "unsafeName": "list_condition_sets",
              "safeName": "list_condition_sets"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_CONDITION_SETS",
              "safeName": "LIST_CONDITION_SETS"
            },
            "pascalCase": {
              "unsafeName": "ListConditionSets",
              "safeName": "ListConditionSets"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Condition Sets_list_condition_sets_Response_200",
                    "camelCase": {
                      "unsafeName": "conditionSetsListConditionSetsResponse200",
                      "safeName": "conditionSetsListConditionSetsResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_sets_list_condition_sets_response_200",
                      "safeName": "condition_sets_list_condition_sets_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_200",
                      "safeName": "CONDITION_SETS_LIST_CONDITION_SETS_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetsListConditionSetsResponse200",
                      "safeName": "ConditionSetsListConditionSetsResponse200"
                    }
                  },
                  "typeId": "Condition Sets_list_condition_sets_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsListConditionSetsExample": {
                      "data": [
                        {
                          "key": "foo",
                          "type": "userset",
                          "autogenerated": false,
                          "resource_id": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "resource": {
                            "key": "foo",
                            "id": "foo",
                            "organization_id": "foo",
                            "project_id": "foo",
                            "environment_id": "foo",
                            "created_at": "foo",
                            "updated_at": "foo",
                            "name": "foo",
                            "urn": "foo",
                            "description": "foo",
                            "actions": {},
                            "attributes": {},
                            "action_groups": {}
                          },
                          "name": "foo",
                          "description": "foo",
                          "conditions": {},
                          "parent_id": "foo"
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all condition sets matching a filter.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listConditionSetsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "foo",
                          "type": "userset",
                          "autogenerated": false,
                          "resource_id": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "resource": {
                            "key": "foo",
                            "id": "foo",
                            "organization_id": "foo",
                            "project_id": "foo",
                            "environment_id": "foo",
                            "created_at": "foo",
                            "updated_at": "foo",
                            "name": "foo",
                            "urn": "foo",
                            "description": "foo",
                            "actions": {},
                            "attributes": {},
                            "action_groups": {}
                          },
                          "name": "foo",
                          "description": "foo",
                          "conditions": {},
                          "parent_id": "foo"
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Condition Set",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_condition_setRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createConditionSetRequestUnprocessableEntityError",
                    "safeName": "createConditionSetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_condition_set_request_unprocessable_entity_error",
                    "safeName": "create_condition_set_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateConditionSetRequestUnprocessableEntityError",
                    "safeName": "CreateConditionSetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.create_condition_set",
          "name": {
            "originalName": "create_condition_set",
            "camelCase": {
              "unsafeName": "createConditionSet",
              "safeName": "createConditionSet"
            },
            "snakeCase": {
              "unsafeName": "create_condition_set",
              "safeName": "create_condition_set"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_CONDITION_SET",
              "safeName": "CREATE_CONDITION_SET"
            },
            "pascalCase": {
              "unsafeName": "CreateConditionSet",
              "safeName": "CreateConditionSet"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ConditionSetCreate",
                "camelCase": {
                  "unsafeName": "conditionSetCreate",
                  "safeName": "conditionSetCreate"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_create",
                  "safeName": "condition_set_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_CREATE",
                  "safeName": "CONDITION_SET_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetCreate",
                  "safeName": "ConditionSetCreate"
                }
              },
              "typeId": "ConditionSetCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetsCreateConditionSetExample": {
                  "key": "na_based_employees",
                  "type": "userset",
                  "name": "US or Canada based employees",
                  "conditions": {
                    "allOf": [
                      {
                        "user.role": {
                          "equals": "employee"
                        }
                      },
                      {
                        "user.location": {
                          "in": [
                            "US",
                            "Canada"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetRead",
                    "camelCase": {
                      "unsafeName": "conditionSetRead",
                      "safeName": "conditionSetRead"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_read",
                      "safeName": "condition_set_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_READ",
                      "safeName": "CONDITION_SET_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetRead",
                      "safeName": "ConditionSetRead"
                    }
                  },
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsCreateConditionSetExample": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new condition set (can be either a user set or a resource set).",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetsCreateConditionSetExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/schema/proj_id/env_id/condition_sets"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "na_based_employees",
                    "type": "userset",
                    "name": "US or Canada based employees",
                    "conditions": {
                      "allOf": [
                        {
                          "user.role": {
                            "equals": "employee"
                          }
                        },
                        {
                          "user.location": {
                            "in": [
                              "US",
                              "Canada"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Condition Set",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_condition_setRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getConditionSetRequestUnprocessableEntityError",
                    "safeName": "getConditionSetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_condition_set_request_unprocessable_entity_error",
                    "safeName": "get_condition_set_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetConditionSetRequestUnprocessableEntityError",
                    "safeName": "GetConditionSetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.get_condition_set",
          "name": {
            "originalName": "get_condition_set",
            "camelCase": {
              "unsafeName": "getConditionSet",
              "safeName": "getConditionSet"
            },
            "snakeCase": {
              "unsafeName": "get_condition_set",
              "safeName": "get_condition_set"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONDITION_SET",
              "safeName": "GET_CONDITION_SET"
            },
            "pascalCase": {
              "unsafeName": "GetConditionSet",
              "safeName": "GetConditionSet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetRead",
                    "camelCase": {
                      "unsafeName": "conditionSetRead",
                      "safeName": "conditionSetRead"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_read",
                      "safeName": "condition_set_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_READ",
                      "safeName": "CONDITION_SET_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetRead",
                      "safeName": "ConditionSetRead"
                    }
                  },
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsGetConditionSetExample": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a single condition set, if such condition set exists.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getConditionSetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Condition Set",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_condition_setRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteConditionSetRequestUnprocessableEntityError",
                    "safeName": "deleteConditionSetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_condition_set_request_unprocessable_entity_error",
                    "safeName": "delete_condition_set_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteConditionSetRequestUnprocessableEntityError",
                    "safeName": "DeleteConditionSetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.delete_condition_set",
          "name": {
            "originalName": "delete_condition_set",
            "camelCase": {
              "unsafeName": "deleteConditionSet",
              "safeName": "deleteConditionSet"
            },
            "snakeCase": {
              "unsafeName": "delete_condition_set",
              "safeName": "delete_condition_set"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_CONDITION_SET",
              "safeName": "DELETE_CONDITION_SET"
            },
            "pascalCase": {
              "unsafeName": "DeleteConditionSet",
              "safeName": "DeleteConditionSet"
            }
          },
          "docs": "Deletes a condition set and all its related data.\nThis includes any permissions granted to said condition set (i.e: any matching condition set rules).",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteConditionSetExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Condition Set",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_condition_setRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateConditionSetRequestUnprocessableEntityError",
                    "safeName": "updateConditionSetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_condition_set_request_unprocessable_entity_error",
                    "safeName": "update_condition_set_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateConditionSetRequestUnprocessableEntityError",
                    "safeName": "UpdateConditionSetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_condition_setRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.update_condition_set",
          "name": {
            "originalName": "update_condition_set",
            "camelCase": {
              "unsafeName": "updateConditionSet",
              "safeName": "updateConditionSet"
            },
            "snakeCase": {
              "unsafeName": "update_condition_set",
              "safeName": "update_condition_set"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_CONDITION_SET",
              "safeName": "UPDATE_CONDITION_SET"
            },
            "pascalCase": {
              "unsafeName": "UpdateConditionSet",
              "safeName": "UpdateConditionSet"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ConditionSetUpdate",
                "camelCase": {
                  "unsafeName": "conditionSetUpdate",
                  "safeName": "conditionSetUpdate"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_update",
                  "safeName": "condition_set_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_UPDATE",
                  "safeName": "CONDITION_SET_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetUpdate",
                  "safeName": "ConditionSetUpdate"
                }
              },
              "typeId": "ConditionSetUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetsUpdateConditionSetExample": {
                  "name": "US based managers",
                  "conditions": {
                    "allOf": [
                      {
                        "user.role": {
                          "equals": "manager"
                        }
                      },
                      {
                        "user.location": {
                          "in": [
                            "US"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ConditionSetRead",
                    "camelCase": {
                      "unsafeName": "conditionSetRead",
                      "safeName": "conditionSetRead"
                    },
                    "snakeCase": {
                      "unsafeName": "condition_set_read",
                      "safeName": "condition_set_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONDITION_SET_READ",
                      "safeName": "CONDITION_SET_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ConditionSetRead",
                      "safeName": "ConditionSetRead"
                    }
                  },
                  "typeId": "ConditionSetRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsUpdateConditionSetExample": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates a condition set.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetsUpdateConditionSetExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "US based managers",
                    "conditions": {
                      "allOf": [
                        {
                          "user.role": {
                            "equals": "manager"
                          }
                        },
                        {
                          "user.location": {
                            "in": [
                              "US"
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "na_based_employees",
                      "type": "userset",
                      "autogenerated": false,
                      "resource_id": "e05f8571-f31e-20b2-2c45-15ae74cfb0f1",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "name": "US or Canada based employees",
                      "description": "All employees based in the US or Canada",
                      "conditions": {
                        "allOf": [
                          {
                            "user.role": {
                              "equals": "employee"
                            }
                          },
                          {
                            "user.location": {
                              "in": [
                                "US",
                                "Canada"
                              ]
                            }
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Condition Set Ancestors",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/ancestors"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_condition_set_ancestorsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getConditionSetAncestorsRequestUnprocessableEntityError",
                    "safeName": "getConditionSetAncestorsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_condition_set_ancestors_request_unprocessable_entity_error",
                    "safeName": "get_condition_set_ancestors_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_CONDITION_SET_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_CONDITION_SET_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetConditionSetAncestorsRequestUnprocessableEntityError",
                    "safeName": "GetConditionSetAncestorsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_condition_set_ancestorsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/ancestors"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.get_condition_set_ancestors",
          "name": {
            "originalName": "get_condition_set_ancestors",
            "camelCase": {
              "unsafeName": "getConditionSetAncestors",
              "safeName": "getConditionSetAncestors"
            },
            "snakeCase": {
              "unsafeName": "get_condition_set_ancestors",
              "safeName": "get_condition_set_ancestors"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONDITION_SET_ANCESTORS",
              "safeName": "GET_CONDITION_SET_ANCESTORS"
            },
            "pascalCase": {
              "unsafeName": "GetConditionSetAncestors",
              "safeName": "GetConditionSetAncestors"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ConditionSetRead",
                        "camelCase": {
                          "unsafeName": "conditionSetRead",
                          "safeName": "conditionSetRead"
                        },
                        "snakeCase": {
                          "unsafeName": "condition_set_read",
                          "safeName": "condition_set_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "CONDITION_SET_READ",
                          "safeName": "CONDITION_SET_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ConditionSetRead",
                          "safeName": "ConditionSetRead"
                        }
                      },
                      "typeId": "ConditionSetRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsGetConditionSetAncestorsExample": [
                      {
                        "key": "foo",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "resource": {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "name": "foo",
                          "urn": "foo",
                          "description": "foo",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "foo",
                        "description": "foo",
                        "conditions": {},
                        "parent_id": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all ancestors (parent, parent of parent, and so on)",
          "v2Examples": {
            "autogeneratedExamples": {
              "getConditionSetAncestorsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id/ancestors"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "foo",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "resource": {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "name": "foo",
                          "urn": "foo",
                          "description": "foo",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "foo",
                        "description": "foo",
                        "conditions": {},
                        "parent_id": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Condition Set Descendants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/descendants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_condition_set_descendantsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getConditionSetDescendantsRequestUnprocessableEntityError",
                    "safeName": "getConditionSetDescendantsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_condition_set_descendants_request_unprocessable_entity_error",
                    "safeName": "get_condition_set_descendants_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_CONDITION_SET_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_CONDITION_SET_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetConditionSetDescendantsRequestUnprocessableEntityError",
                    "safeName": "GetConditionSetDescendantsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_condition_set_descendantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/schema/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/condition_sets/"
              },
              {
                "pathParameter": "condition_set_id",
                "tail": "/descendants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "condition_set_id",
                "camelCase": {
                  "unsafeName": "conditionSetId",
                  "safeName": "conditionSetId"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_id",
                  "safeName": "condition_set_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_ID",
                  "safeName": "CONDITION_SET_ID"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetId",
                  "safeName": "ConditionSetId"
                }
              },
              "docs": "Either the unique id of the condition set, or the URL-friendly key of the condition set (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "condition_set_id_example": "condition_set_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSets.get_condition_set_descendants",
          "name": {
            "originalName": "get_condition_set_descendants",
            "camelCase": {
              "unsafeName": "getConditionSetDescendants",
              "safeName": "getConditionSetDescendants"
            },
            "snakeCase": {
              "unsafeName": "get_condition_set_descendants",
              "safeName": "get_condition_set_descendants"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONDITION_SET_DESCENDANTS",
              "safeName": "GET_CONDITION_SET_DESCENDANTS"
            },
            "pascalCase": {
              "unsafeName": "GetConditionSetDescendants",
              "safeName": "GetConditionSetDescendants"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ConditionSetRead",
                        "camelCase": {
                          "unsafeName": "conditionSetRead",
                          "safeName": "conditionSetRead"
                        },
                        "snakeCase": {
                          "unsafeName": "condition_set_read",
                          "safeName": "condition_set_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "CONDITION_SET_READ",
                          "safeName": "CONDITION_SET_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ConditionSetRead",
                          "safeName": "ConditionSetRead"
                        }
                      },
                      "typeId": "ConditionSetRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetsGetConditionSetDescendantsExample": [
                      {
                        "key": "foo",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "resource": {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "name": "foo",
                          "urn": "foo",
                          "description": "foo",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "foo",
                        "description": "foo",
                        "conditions": {},
                        "parent_id": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all descendants (children, children of children, and so on)",
          "v2Examples": {
            "autogeneratedExamples": {
              "getConditionSetDescendantsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/schema/proj_id/env_id/condition_sets/condition_set_id/descendants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "condition_set_id": "condition_set_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "foo",
                        "type": "userset",
                        "autogenerated": false,
                        "resource_id": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "resource": {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "name": "foo",
                          "urn": "foo",
                          "description": "foo",
                          "actions": {},
                          "attributes": {},
                          "action_groups": {}
                        },
                        "name": "foo",
                        "description": "foo",
                        "conditions": {},
                        "parent_id": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_users": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Users",
              "camelCase": {
                "unsafeName": "users",
                "safeName": "users"
              },
              "snakeCase": {
                "unsafeName": "users",
                "safeName": "users"
              },
              "screamingSnakeCase": {
                "unsafeName": "USERS",
                "safeName": "USERS"
              },
              "pascalCase": {
                "unsafeName": "Users",
                "safeName": "Users"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Users",
            "camelCase": {
              "unsafeName": "users",
              "safeName": "users"
            },
            "snakeCase": {
              "unsafeName": "users",
              "safeName": "users"
            },
            "screamingSnakeCase": {
              "unsafeName": "USERS",
              "safeName": "USERS"
            },
            "pascalCase": {
              "unsafeName": "Users",
              "safeName": "Users"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Users",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "search",
                  "camelCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "snakeCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SEARCH",
                    "safeName": "SEARCH"
                  },
                  "pascalCase": {
                    "unsafeName": "Search",
                    "safeName": "Search"
                  }
                },
                "wireValue": "search"
              },
              "docs": "Text search for the email field",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "role",
                  "camelCase": {
                    "unsafeName": "role",
                    "safeName": "role"
                  },
                  "snakeCase": {
                    "unsafeName": "role",
                    "safeName": "role"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ROLE",
                    "safeName": "ROLE"
                  },
                  "pascalCase": {
                    "unsafeName": "Role",
                    "safeName": "Role"
                  }
                },
                "wireValue": "role"
              },
              "docs": "Match users with a specific role",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_example": "role"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_usersRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listUsersRequestUnprocessableEntityError",
                    "safeName": "listUsersRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_users_request_unprocessable_entity_error",
                    "safeName": "list_users_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListUsersRequestUnprocessableEntityError",
                    "safeName": "ListUsersRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.list_users",
          "name": {
            "originalName": "list_users",
            "camelCase": {
              "unsafeName": "listUsers",
              "safeName": "listUsers"
            },
            "snakeCase": {
              "unsafeName": "list_users",
              "safeName": "list_users"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_USERS",
              "safeName": "LIST_USERS"
            },
            "pascalCase": {
              "unsafeName": "ListUsers",
              "safeName": "ListUsers"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "PaginatedResult_UserRead_",
                    "camelCase": {
                      "unsafeName": "paginatedResultUserRead",
                      "safeName": "paginatedResultUserRead"
                    },
                    "snakeCase": {
                      "unsafeName": "paginated_result_user_read",
                      "safeName": "paginated_result_user_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PAGINATED_RESULT_USER_READ",
                      "safeName": "PAGINATED_RESULT_USER_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "PaginatedResultUserRead",
                      "safeName": "PaginatedResultUserRead"
                    }
                  },
                  "typeId": "PaginatedResult_UserRead_",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersListUsersExample": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "associated_tenants": [
                            {
                              "tenant": "foo",
                              "roles": [
                                "foo"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "foo",
                              "tenant": "foo"
                            }
                          ],
                          "email": "foo",
                          "first_name": "foo",
                          "last_name": "foo",
                          "attributes": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the users defined within an environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listUsersExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "associated_tenants": [
                            {
                              "tenant": "foo",
                              "roles": [
                                "foo"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "foo",
                              "tenant": "foo"
                            }
                          ],
                          "email": "foo",
                          "first_name": "foo",
                          "last_name": "foo",
                          "attributes": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create User",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createUserRequestUnprocessableEntityError",
                    "safeName": "createUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_user_request_unprocessable_entity_error",
                    "safeName": "create_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateUserRequestUnprocessableEntityError",
                    "safeName": "CreateUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.create_user",
          "name": {
            "originalName": "create_user",
            "camelCase": {
              "unsafeName": "createUser",
              "safeName": "createUser"
            },
            "snakeCase": {
              "unsafeName": "create_user",
              "safeName": "create_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_USER",
              "safeName": "CREATE_USER"
            },
            "pascalCase": {
              "unsafeName": "CreateUser",
              "safeName": "CreateUser"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserCreate",
                "camelCase": {
                  "unsafeName": "userCreate",
                  "safeName": "userCreate"
                },
                "snakeCase": {
                  "unsafeName": "user_create",
                  "safeName": "user_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_CREATE",
                  "safeName": "USER_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "UserCreate",
                  "safeName": "UserCreate"
                }
              },
              "typeId": "UserCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersCreateUserExample": {
                  "key": "user|892179821739812389327",
                  "email": "jane@coolcompany.com",
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "attributes": {
                    "department": "marketing",
                    "age": 30,
                    "subscription": {
                      "tier": "pro",
                      "expired": false
                    }
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserRead",
                    "camelCase": {
                      "unsafeName": "userRead",
                      "safeName": "userRead"
                    },
                    "snakeCase": {
                      "unsafeName": "user_read",
                      "safeName": "user_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_READ",
                      "safeName": "USER_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "UserRead",
                      "safeName": "UserRead"
                    }
                  },
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersCreateUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new user inside the Permit.io system, from that point forward\nyou may run permission checks on that user.\n\nIf the user is already created: will return 200 instead of 201,\nand will return the existing user object in the response body.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersCreateUserExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "user|892179821739812389327",
                    "email": "jane@coolcompany.com",
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "attributes": {
                      "department": "marketing",
                      "age": 30,
                      "subscription": {
                        "tier": "pro",
                        "expired": false
                      }
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get User",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getUserRequestUnprocessableEntityError",
                    "safeName": "getUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_user_request_unprocessable_entity_error",
                    "safeName": "get_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetUserRequestUnprocessableEntityError",
                    "safeName": "GetUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.get_user",
          "name": {
            "originalName": "get_user",
            "camelCase": {
              "unsafeName": "getUser",
              "safeName": "getUser"
            },
            "snakeCase": {
              "unsafeName": "get_user",
              "safeName": "get_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_USER",
              "safeName": "GET_USER"
            },
            "pascalCase": {
              "unsafeName": "GetUser",
              "safeName": "GetUser"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserRead",
                    "camelCase": {
                      "unsafeName": "userRead",
                      "safeName": "userRead"
                    },
                    "snakeCase": {
                      "unsafeName": "user_read",
                      "safeName": "user_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_READ",
                      "safeName": "USER_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "UserRead",
                      "safeName": "UserRead"
                    }
                  },
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersGetUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a user, if such user exists. Otherwise returns 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getUserExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Replace User",
          "method": "PUT",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Replace_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "replaceUserRequestUnprocessableEntityError",
                    "safeName": "replaceUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "replace_user_request_unprocessable_entity_error",
                    "safeName": "replace_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REPLACE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "REPLACE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ReplaceUserRequestUnprocessableEntityError",
                    "safeName": "ReplaceUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Replace_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.replace_user",
          "name": {
            "originalName": "replace_user",
            "camelCase": {
              "unsafeName": "replaceUser",
              "safeName": "replaceUser"
            },
            "snakeCase": {
              "unsafeName": "replace_user",
              "safeName": "replace_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "REPLACE_USER",
              "safeName": "REPLACE_USER"
            },
            "pascalCase": {
              "unsafeName": "ReplaceUser",
              "safeName": "ReplaceUser"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserCreate",
                "camelCase": {
                  "unsafeName": "userCreate",
                  "safeName": "userCreate"
                },
                "snakeCase": {
                  "unsafeName": "user_create",
                  "safeName": "user_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_CREATE",
                  "safeName": "USER_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "UserCreate",
                  "safeName": "UserCreate"
                }
              },
              "typeId": "UserCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersReplaceUserExample": {
                  "key": "user|892179821739812389327",
                  "email": "jane@coolcompany.com",
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "attributes": {
                    "department": "marketing",
                    "age": 30,
                    "subscription": {
                      "tier": "pro",
                      "expired": false
                    }
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserRead",
                    "camelCase": {
                      "unsafeName": "userRead",
                      "safeName": "userRead"
                    },
                    "snakeCase": {
                      "unsafeName": "user_read",
                      "safeName": "user_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_READ",
                      "safeName": "USER_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "UserRead",
                      "safeName": "UserRead"
                    }
                  },
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "An existing user was replaced",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersReplaceUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "usersReplaceUserExample": {
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "user|892179821739812389327",
                    "email": "jane@coolcompany.com",
                    "first_name": "Jane",
                    "last_name": "Doe",
                    "attributes": {
                      "department": "marketing",
                      "age": 30,
                      "subscription": {
                        "tier": "pro",
                        "expired": false
                      }
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete User",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteUserRequestUnprocessableEntityError",
                    "safeName": "deleteUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_user_request_unprocessable_entity_error",
                    "safeName": "delete_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteUserRequestUnprocessableEntityError",
                    "safeName": "DeleteUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.delete_user",
          "name": {
            "originalName": "delete_user",
            "camelCase": {
              "unsafeName": "deleteUser",
              "safeName": "deleteUser"
            },
            "snakeCase": {
              "unsafeName": "delete_user",
              "safeName": "delete_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_USER",
              "safeName": "DELETE_USER"
            },
            "pascalCase": {
              "unsafeName": "DeleteUser",
              "safeName": "DeleteUser"
            }
          },
          "docs": "Deletes the user and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteUserExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update User",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateUserRequestUnprocessableEntityError",
                    "safeName": "updateUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_user_request_unprocessable_entity_error",
                    "safeName": "update_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateUserRequestUnprocessableEntityError",
                    "safeName": "UpdateUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.update_user",
          "name": {
            "originalName": "update_user",
            "camelCase": {
              "unsafeName": "updateUser",
              "safeName": "updateUser"
            },
            "snakeCase": {
              "unsafeName": "update_user",
              "safeName": "update_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_USER",
              "safeName": "UPDATE_USER"
            },
            "pascalCase": {
              "unsafeName": "UpdateUser",
              "safeName": "UpdateUser"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserUpdate",
                "camelCase": {
                  "unsafeName": "userUpdate",
                  "safeName": "userUpdate"
                },
                "snakeCase": {
                  "unsafeName": "user_update",
                  "safeName": "user_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_UPDATE",
                  "safeName": "USER_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "UserUpdate",
                  "safeName": "UserUpdate"
                }
              },
              "typeId": "UserUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersUpdateUserExample": {}
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserRead",
                    "camelCase": {
                      "unsafeName": "userRead",
                      "safeName": "userRead"
                    },
                    "snakeCase": {
                      "unsafeName": "user_read",
                      "safeName": "user_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_READ",
                      "safeName": "USER_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "UserRead",
                      "safeName": "UserRead"
                    }
                  },
                  "typeId": "UserRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersUpdateUserExample": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the user definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersUpdateUserExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/facts/proj_id/env_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "user|892179821739812389327",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "associated_tenants": [
                        {
                          "tenant": "stripe-inc",
                          "roles": [
                            "admin"
                          ],
                          "status": "active"
                        },
                        {
                          "tenant": "othercompany.com",
                          "roles": [
                            "viewer"
                          ],
                          "status": "pending"
                        }
                      ],
                      "roles": [
                        {
                          "role": "admin",
                          "tenant": "stripe-inc"
                        },
                        {
                          "role": "viewer",
                          "tenant": "othercompany.com"
                        }
                      ],
                      "email": "jane@coolcompany.com",
                      "first_name": "Jane",
                      "last_name": "Doe",
                      "attributes": {
                        "department": "marketing",
                        "age": 30,
                        "subscription": {
                          "tier": "pro",
                          "expired": false
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Assign Role To User",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Assign_role_to_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "assignRoleToUserRequestUnprocessableEntityError",
                    "safeName": "assignRoleToUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "assign_role_to_user_request_unprocessable_entity_error",
                    "safeName": "assign_role_to_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASSIGN_ROLE_TO_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "ASSIGN_ROLE_TO_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "AssignRoleToUserRequestUnprocessableEntityError",
                    "safeName": "AssignRoleToUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_role_to_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.assign_role_to_user",
          "name": {
            "originalName": "assign_role_to_user",
            "camelCase": {
              "unsafeName": "assignRoleToUser",
              "safeName": "assignRoleToUser"
            },
            "snakeCase": {
              "unsafeName": "assign_role_to_user",
              "safeName": "assign_role_to_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "ASSIGN_ROLE_TO_USER",
              "safeName": "ASSIGN_ROLE_TO_USER"
            },
            "pascalCase": {
              "unsafeName": "AssignRoleToUser",
              "safeName": "AssignRoleToUser"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserRoleCreate",
                "camelCase": {
                  "unsafeName": "userRoleCreate",
                  "safeName": "userRoleCreate"
                },
                "snakeCase": {
                  "unsafeName": "user_role_create",
                  "safeName": "user_role_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ROLE_CREATE",
                  "safeName": "USER_ROLE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "UserRoleCreate",
                  "safeName": "UserRoleCreate"
                }
              },
              "typeId": "UserRoleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersAssignRoleToUserExample": {
                  "role": "admin",
                  "tenant": "stripe-inc"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleAssignmentRead",
                    "camelCase": {
                      "unsafeName": "roleAssignmentRead",
                      "safeName": "roleAssignmentRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_assignment_read",
                      "safeName": "role_assignment_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_ASSIGNMENT_READ",
                      "safeName": "ROLE_ASSIGNMENT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleAssignmentRead",
                      "safeName": "RoleAssignmentRead"
                    }
                  },
                  "typeId": "RoleAssignmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "usersAssignRoleToUserExample": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assigns a role to the user within the tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersAssignRoleToUserExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/users/user_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "admin",
                    "tenant": "stripe-inc"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Unassign Role From User",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Unassign_role_from_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "unassignRoleFromUserRequestUnprocessableEntityError",
                    "safeName": "unassignRoleFromUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "unassign_role_from_user_request_unprocessable_entity_error",
                    "safeName": "unassign_role_from_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UNASSIGN_ROLE_FROM_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UNASSIGN_ROLE_FROM_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UnassignRoleFromUserRequestUnprocessableEntityError",
                    "safeName": "UnassignRoleFromUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Unassign_role_from_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": "/roles"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_users.unassign_role_from_user",
          "name": {
            "originalName": "unassign_role_from_user",
            "camelCase": {
              "unsafeName": "unassignRoleFromUser",
              "safeName": "unassignRoleFromUser"
            },
            "snakeCase": {
              "unsafeName": "unassign_role_from_user",
              "safeName": "unassign_role_from_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "UNASSIGN_ROLE_FROM_USER",
              "safeName": "UNASSIGN_ROLE_FROM_USER"
            },
            "pascalCase": {
              "unsafeName": "UnassignRoleFromUser",
              "safeName": "UnassignRoleFromUser"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserRoleRemove",
                "camelCase": {
                  "unsafeName": "userRoleRemove",
                  "safeName": "userRoleRemove"
                },
                "snakeCase": {
                  "unsafeName": "user_role_remove",
                  "safeName": "user_role_remove"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ROLE_REMOVE",
                  "safeName": "USER_ROLE_REMOVE"
                },
                "pascalCase": {
                  "unsafeName": "UserRoleRemove",
                  "safeName": "UserRoleRemove"
                }
              },
              "typeId": "UserRoleRemove",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "usersUnassignRoleFromUserExample": {
                  "role": "editor",
                  "tenant": "google-inc"
                }
              }
            },
            "type": "reference"
          },
          "docs": "Unassigns the role from the user within the tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n\nIf the role is not actually assigned, will return 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "usersUnassignRoleFromUserExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/users/user_id/roles"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "editor",
                    "tenant": "google-inc"
                  }
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_tenants": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Tenants",
              "camelCase": {
                "unsafeName": "tenants",
                "safeName": "tenants"
              },
              "snakeCase": {
                "unsafeName": "tenants",
                "safeName": "tenants"
              },
              "screamingSnakeCase": {
                "unsafeName": "TENANTS",
                "safeName": "TENANTS"
              },
              "pascalCase": {
                "unsafeName": "Tenants",
                "safeName": "Tenants"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Tenants",
            "camelCase": {
              "unsafeName": "tenants",
              "safeName": "tenants"
            },
            "snakeCase": {
              "unsafeName": "tenants",
              "safeName": "tenants"
            },
            "screamingSnakeCase": {
              "unsafeName": "TENANTS",
              "safeName": "TENANTS"
            },
            "pascalCase": {
              "unsafeName": "Tenants",
              "safeName": "Tenants"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Tenant Users",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "search",
                  "camelCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "snakeCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SEARCH",
                    "safeName": "SEARCH"
                  },
                  "pascalCase": {
                    "unsafeName": "Search",
                    "safeName": "Search"
                  }
                },
                "wireValue": "search"
              },
              "docs": "Text search for the email field",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "role",
                  "camelCase": {
                    "unsafeName": "role",
                    "safeName": "role"
                  },
                  "snakeCase": {
                    "unsafeName": "role",
                    "safeName": "role"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ROLE",
                    "safeName": "ROLE"
                  },
                  "pascalCase": {
                    "unsafeName": "Role",
                    "safeName": "Role"
                  }
                },
                "wireValue": "role"
              },
              "docs": "Match users with a specific role",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_example": "role"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_tenant_usersRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listTenantUsersRequestUnprocessableEntityError",
                    "safeName": "listTenantUsersRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_tenant_users_request_unprocessable_entity_error",
                    "safeName": "list_tenant_users_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TENANT_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_TENANT_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTenantUsersRequestUnprocessableEntityError",
                    "safeName": "ListTenantUsersRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_tenant_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.list_tenant_users",
          "name": {
            "originalName": "list_tenant_users",
            "camelCase": {
              "unsafeName": "listTenantUsers",
              "safeName": "listTenantUsers"
            },
            "snakeCase": {
              "unsafeName": "list_tenant_users",
              "safeName": "list_tenant_users"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_TENANT_USERS",
              "safeName": "LIST_TENANT_USERS"
            },
            "pascalCase": {
              "unsafeName": "ListTenantUsers",
              "safeName": "ListTenantUsers"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "PaginatedResult_UserRead_",
                    "camelCase": {
                      "unsafeName": "paginatedResultUserRead",
                      "safeName": "paginatedResultUserRead"
                    },
                    "snakeCase": {
                      "unsafeName": "paginated_result_user_read",
                      "safeName": "paginated_result_user_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PAGINATED_RESULT_USER_READ",
                      "safeName": "PAGINATED_RESULT_USER_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "PaginatedResultUserRead",
                      "safeName": "PaginatedResultUserRead"
                    }
                  },
                  "typeId": "PaginatedResult_UserRead_",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsListTenantUsersExample": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "associated_tenants": [
                            {
                              "tenant": "foo",
                              "roles": [
                                "foo"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "foo",
                              "tenant": "foo"
                            }
                          ],
                          "email": "foo",
                          "first_name": "foo",
                          "last_name": "foo",
                          "attributes": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "listTenantUsersExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "tenant_id": "tenant_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "associated_tenants": [
                            {
                              "tenant": "foo",
                              "roles": [
                                "foo"
                              ],
                              "status": "active"
                            }
                          ],
                          "roles": [
                            {
                              "role": "foo",
                              "tenant": "foo"
                            }
                          ],
                          "email": "foo",
                          "first_name": "foo",
                          "last_name": "foo",
                          "attributes": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List Tenants",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "search",
                  "camelCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "snakeCase": {
                    "unsafeName": "search",
                    "safeName": "search"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SEARCH",
                    "safeName": "SEARCH"
                  },
                  "pascalCase": {
                    "unsafeName": "Search",
                    "safeName": "Search"
                  }
                },
                "wireValue": "search"
              },
              "docs": "Text search for the tenant name or key",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "search_example": "search"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "include_total_count",
                  "camelCase": {
                    "unsafeName": "includeTotalCount",
                    "safeName": "includeTotalCount"
                  },
                  "snakeCase": {
                    "unsafeName": "include_total_count",
                    "safeName": "include_total_count"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_TOTAL_COUNT",
                    "safeName": "INCLUDE_TOTAL_COUNT"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeTotalCount",
                    "safeName": "IncludeTotalCount"
                  }
                },
                "wireValue": "include_total_count"
              },
              "docs": "Include total count in response",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_total_count_example": false
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_tenantsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listTenantsRequestUnprocessableEntityError",
                    "safeName": "listTenantsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_tenants_request_unprocessable_entity_error",
                    "safeName": "list_tenants_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTenantsRequestUnprocessableEntityError",
                    "safeName": "ListTenantsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_tenantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.list_tenants",
          "name": {
            "originalName": "list_tenants",
            "camelCase": {
              "unsafeName": "listTenants",
              "safeName": "listTenants"
            },
            "snakeCase": {
              "unsafeName": "list_tenants",
              "safeName": "list_tenants"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_TENANTS",
              "safeName": "LIST_TENANTS"
            },
            "pascalCase": {
              "unsafeName": "ListTenants",
              "safeName": "ListTenants"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Tenants_list_tenants_Response_200",
                    "camelCase": {
                      "unsafeName": "tenantsListTenantsResponse200",
                      "safeName": "tenantsListTenantsResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "tenants_list_tenants_response_200",
                      "safeName": "tenants_list_tenants_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANTS_LIST_TENANTS_RESPONSE_200",
                      "safeName": "TENANTS_LIST_TENANTS_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantsListTenantsResponse200",
                      "safeName": "TenantsListTenantsResponse200"
                    }
                  },
                  "typeId": "Tenants_list_tenants_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsListTenantsExample": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "last_action_at": "foo",
                          "name": "foo",
                          "description": "foo",
                          "attributes": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the tenants defined within an environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listTenantsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "data": [
                        {
                          "key": "foo",
                          "id": "foo",
                          "organization_id": "foo",
                          "project_id": "foo",
                          "environment_id": "foo",
                          "created_at": "foo",
                          "updated_at": "foo",
                          "last_action_at": "foo",
                          "name": "foo",
                          "description": "foo",
                          "attributes": {}
                        }
                      ],
                      "total_count": 42,
                      "page_count": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Tenant",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_tenantRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createTenantRequestUnprocessableEntityError",
                    "safeName": "createTenantRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_tenant_request_unprocessable_entity_error",
                    "safeName": "create_tenant_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTenantRequestUnprocessableEntityError",
                    "safeName": "CreateTenantRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.create_tenant",
          "name": {
            "originalName": "create_tenant",
            "camelCase": {
              "unsafeName": "createTenant",
              "safeName": "createTenant"
            },
            "snakeCase": {
              "unsafeName": "create_tenant",
              "safeName": "create_tenant"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_TENANT",
              "safeName": "CREATE_TENANT"
            },
            "pascalCase": {
              "unsafeName": "CreateTenant",
              "safeName": "CreateTenant"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TenantCreate",
                "camelCase": {
                  "unsafeName": "tenantCreate",
                  "safeName": "tenantCreate"
                },
                "snakeCase": {
                  "unsafeName": "tenant_create",
                  "safeName": "tenant_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_CREATE",
                  "safeName": "TENANT_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "TenantCreate",
                  "safeName": "TenantCreate"
                }
              },
              "typeId": "TenantCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "tenantsCreateTenantExample": {
                  "key": "stripeinc",
                  "name": "Stripe Inc",
                  "attributes": {
                    "allowed_locations": [
                      "US",
                      "CA"
                    ]
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantRead",
                    "camelCase": {
                      "unsafeName": "tenantRead",
                      "safeName": "tenantRead"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_read",
                      "safeName": "tenant_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_READ",
                      "safeName": "TENANT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantRead",
                      "safeName": "TenantRead"
                    }
                  },
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsCreateTenantExample": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new tenant inside the Permit.io system.\n\nIf the tenant is already created: will return 200 instead of 201,\nand will return the existing tenant object in the response body.",
          "v2Examples": {
            "autogeneratedExamples": {
              "tenantsCreateTenantExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "stripeinc",
                    "name": "Stripe Inc",
                    "attributes": {
                      "allowed_locations": [
                        "US",
                        "CA"
                      ]
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Tenant",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_tenantRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getTenantRequestUnprocessableEntityError",
                    "safeName": "getTenantRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_tenant_request_unprocessable_entity_error",
                    "safeName": "get_tenant_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTenantRequestUnprocessableEntityError",
                    "safeName": "GetTenantRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.get_tenant",
          "name": {
            "originalName": "get_tenant",
            "camelCase": {
              "unsafeName": "getTenant",
              "safeName": "getTenant"
            },
            "snakeCase": {
              "unsafeName": "get_tenant",
              "safeName": "get_tenant"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_TENANT",
              "safeName": "GET_TENANT"
            },
            "pascalCase": {
              "unsafeName": "GetTenant",
              "safeName": "GetTenant"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantRead",
                    "camelCase": {
                      "unsafeName": "tenantRead",
                      "safeName": "tenantRead"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_read",
                      "safeName": "tenant_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_READ",
                      "safeName": "TENANT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantRead",
                      "safeName": "TenantRead"
                    }
                  },
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsGetTenantExample": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a tenant, if such tenant exists. Otherwise returns 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getTenantExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Tenant",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_tenantRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteTenantRequestUnprocessableEntityError",
                    "safeName": "deleteTenantRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_tenant_request_unprocessable_entity_error",
                    "safeName": "delete_tenant_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTenantRequestUnprocessableEntityError",
                    "safeName": "DeleteTenantRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.delete_tenant",
          "name": {
            "originalName": "delete_tenant",
            "camelCase": {
              "unsafeName": "deleteTenant",
              "safeName": "deleteTenant"
            },
            "snakeCase": {
              "unsafeName": "delete_tenant",
              "safeName": "delete_tenant"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_TENANT",
              "safeName": "DELETE_TENANT"
            },
            "pascalCase": {
              "unsafeName": "DeleteTenant",
              "safeName": "DeleteTenant"
            }
          },
          "docs": "Deletes the tenant and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteTenantExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Tenant",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_tenantRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateTenantRequestUnprocessableEntityError",
                    "safeName": "updateTenantRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_tenant_request_unprocessable_entity_error",
                    "safeName": "update_tenant_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateTenantRequestUnprocessableEntityError",
                    "safeName": "UpdateTenantRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_tenantRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.update_tenant",
          "name": {
            "originalName": "update_tenant",
            "camelCase": {
              "unsafeName": "updateTenant",
              "safeName": "updateTenant"
            },
            "snakeCase": {
              "unsafeName": "update_tenant",
              "safeName": "update_tenant"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_TENANT",
              "safeName": "UPDATE_TENANT"
            },
            "pascalCase": {
              "unsafeName": "UpdateTenant",
              "safeName": "UpdateTenant"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TenantUpdate",
                "camelCase": {
                  "unsafeName": "tenantUpdate",
                  "safeName": "tenantUpdate"
                },
                "snakeCase": {
                  "unsafeName": "tenant_update",
                  "safeName": "tenant_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_UPDATE",
                  "safeName": "TENANT_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "TenantUpdate",
                  "safeName": "TenantUpdate"
                }
              },
              "typeId": "TenantUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "tenantsUpdateTenantExample": {}
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantRead",
                    "camelCase": {
                      "unsafeName": "tenantRead",
                      "safeName": "tenantRead"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_read",
                      "safeName": "tenant_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_READ",
                      "safeName": "TENANT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantRead",
                      "safeName": "TenantRead"
                    }
                  },
                  "typeId": "TenantRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "tenantsUpdateTenantExample": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the tenant definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "tenantsUpdateTenantExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "stripeinc",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "last_action_at": "2019-08-24T14:15:22Z",
                      "name": "Stripe Inc",
                      "attributes": {
                        "allowed_locations": [
                          "US",
                          "CA"
                        ]
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Tenant User",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_tenant_userRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteTenantUserRequestUnprocessableEntityError",
                    "safeName": "deleteTenantUserRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_tenant_user_request_unprocessable_entity_error",
                    "safeName": "delete_tenant_user_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TENANT_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_TENANT_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTenantUserRequestUnprocessableEntityError",
                    "safeName": "DeleteTenantUserRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_tenant_userRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/tenants/"
              },
              {
                "pathParameter": "tenant_id",
                "tail": "/users/"
              },
              {
                "pathParameter": "user_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "tenant_id",
                "camelCase": {
                  "unsafeName": "tenantId",
                  "safeName": "tenantId"
                },
                "snakeCase": {
                  "unsafeName": "tenant_id",
                  "safeName": "tenant_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_ID",
                  "safeName": "TENANT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TenantId",
                  "safeName": "TenantId"
                }
              },
              "docs": "Either the unique id of the tenant, or the URL-friendly key of the tenant (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_id_example": "tenant_id"
                }
              }
            },
            {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "docs": "Either the unique id of the user, or the URL-friendly key of the user (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_id_example": "user_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_tenants.delete_tenant_user",
          "name": {
            "originalName": "delete_tenant_user",
            "camelCase": {
              "unsafeName": "deleteTenantUser",
              "safeName": "deleteTenantUser"
            },
            "snakeCase": {
              "unsafeName": "delete_tenant_user",
              "safeName": "delete_tenant_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_TENANT_USER",
              "safeName": "DELETE_TENANT_USER"
            },
            "pascalCase": {
              "unsafeName": "DeleteTenantUser",
              "safeName": "DeleteTenantUser"
            }
          },
          "docs": "Deletes a user under a tenant.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteTenantUserExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/tenants/tenant_id/users/user_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "tenant_id": "tenant_id",
                    "user_id": "user_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_roleAssignments": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Role Assignments",
              "camelCase": {
                "unsafeName": "roleAssignments",
                "safeName": "roleAssignments"
              },
              "snakeCase": {
                "unsafeName": "role_assignments",
                "safeName": "role_assignments"
              },
              "screamingSnakeCase": {
                "unsafeName": "ROLE_ASSIGNMENTS",
                "safeName": "ROLE_ASSIGNMENTS"
              },
              "pascalCase": {
                "unsafeName": "RoleAssignments",
                "safeName": "RoleAssignments"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Role Assignments",
            "camelCase": {
              "unsafeName": "roleAssignments",
              "safeName": "roleAssignments"
            },
            "snakeCase": {
              "unsafeName": "role_assignments",
              "safeName": "role_assignments"
            },
            "screamingSnakeCase": {
              "unsafeName": "ROLE_ASSIGNMENTS",
              "safeName": "ROLE_ASSIGNMENTS"
            },
            "pascalCase": {
              "unsafeName": "RoleAssignments",
              "safeName": "RoleAssignments"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Role Assignments",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "user",
                  "camelCase": {
                    "unsafeName": "user",
                    "safeName": "user"
                  },
                  "snakeCase": {
                    "unsafeName": "user",
                    "safeName": "user"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "USER",
                    "safeName": "USER"
                  },
                  "pascalCase": {
                    "unsafeName": "User",
                    "safeName": "User"
                  }
                },
                "wireValue": "user"
              },
              "docs": "optional user filter, will only return role assignments granted to this user.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_example": "user"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "role",
                  "camelCase": {
                    "unsafeName": "role",
                    "safeName": "role"
                  },
                  "snakeCase": {
                    "unsafeName": "role",
                    "safeName": "role"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ROLE",
                    "safeName": "ROLE"
                  },
                  "pascalCase": {
                    "unsafeName": "Role",
                    "safeName": "Role"
                  }
                },
                "wireValue": "role"
              },
              "docs": "optional role filter, will only return role assignments granting this role.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "role_example": "role"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tenant",
                  "camelCase": {
                    "unsafeName": "tenant",
                    "safeName": "tenant"
                  },
                  "snakeCase": {
                    "unsafeName": "tenant",
                    "safeName": "tenant"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TENANT",
                    "safeName": "TENANT"
                  },
                  "pascalCase": {
                    "unsafeName": "Tenant",
                    "safeName": "Tenant"
                  }
                },
                "wireValue": "tenant"
              },
              "docs": "optional tenant filter, will only return role assignments granted in that tenant.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tenant_example": "tenant"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_role_assignmentsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listRoleAssignmentsRequestUnprocessableEntityError",
                    "safeName": "listRoleAssignmentsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_role_assignments_request_unprocessable_entity_error",
                    "safeName": "list_role_assignments_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_ROLE_ASSIGNMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_ROLE_ASSIGNMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListRoleAssignmentsRequestUnprocessableEntityError",
                    "safeName": "ListRoleAssignmentsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_role_assignmentsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.list_role_assignments",
          "name": {
            "originalName": "list_role_assignments",
            "camelCase": {
              "unsafeName": "listRoleAssignments",
              "safeName": "listRoleAssignments"
            },
            "snakeCase": {
              "unsafeName": "list_role_assignments",
              "safeName": "list_role_assignments"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_ROLE_ASSIGNMENTS",
              "safeName": "LIST_ROLE_ASSIGNMENTS"
            },
            "pascalCase": {
              "unsafeName": "ListRoleAssignments",
              "safeName": "ListRoleAssignments"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "RoleAssignmentRead",
                        "camelCase": {
                          "unsafeName": "roleAssignmentRead",
                          "safeName": "roleAssignmentRead"
                        },
                        "snakeCase": {
                          "unsafeName": "role_assignment_read",
                          "safeName": "role_assignment_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ROLE_ASSIGNMENT_READ",
                          "safeName": "ROLE_ASSIGNMENT_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "RoleAssignmentRead",
                          "safeName": "RoleAssignmentRead"
                        }
                      },
                      "typeId": "RoleAssignmentRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsListRoleAssignmentsExample": [
                      {
                        "id": "foo",
                        "user": "foo",
                        "role": "foo",
                        "tenant": "foo",
                        "user_id": "foo",
                        "role_id": "foo",
                        "tenant_id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists the role assignments defined within an environment.\n\n- If the `user` filter is present, will only return the role assignments of that user.\n- If the `tenant` filter is present, will only return the role assignments in that tenant.\n- If the `role` filter is present, will only return role assignments that are granting that role.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listRoleAssignmentsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/role_assignments"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": "foo",
                        "user": "foo",
                        "role": "foo",
                        "tenant": "foo",
                        "user_id": "foo",
                        "role_id": "foo",
                        "tenant_id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Assign Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Assign_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "assignRoleRequestUnprocessableEntityError",
                    "safeName": "assignRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "assign_role_request_unprocessable_entity_error",
                    "safeName": "assign_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "AssignRoleRequestUnprocessableEntityError",
                    "safeName": "AssignRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.assign_role",
          "name": {
            "originalName": "assign_role",
            "camelCase": {
              "unsafeName": "assignRole",
              "safeName": "assignRole"
            },
            "snakeCase": {
              "unsafeName": "assign_role",
              "safeName": "assign_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "ASSIGN_ROLE",
              "safeName": "ASSIGN_ROLE"
            },
            "pascalCase": {
              "unsafeName": "AssignRole",
              "safeName": "AssignRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleAssignmentCreate",
                "camelCase": {
                  "unsafeName": "roleAssignmentCreate",
                  "safeName": "roleAssignmentCreate"
                },
                "snakeCase": {
                  "unsafeName": "role_assignment_create",
                  "safeName": "role_assignment_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ASSIGNMENT_CREATE",
                  "safeName": "ROLE_ASSIGNMENT_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "RoleAssignmentCreate",
                  "safeName": "RoleAssignmentCreate"
                }
              },
              "typeId": "RoleAssignmentCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsAssignRoleExample": {
                  "role": "admin",
                  "tenant": "stripe-inc",
                  "user": "jane@coolcompany.com"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleAssignmentRead",
                    "camelCase": {
                      "unsafeName": "roleAssignmentRead",
                      "safeName": "roleAssignmentRead"
                    },
                    "snakeCase": {
                      "unsafeName": "role_assignment_read",
                      "safeName": "role_assignment_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_ASSIGNMENT_READ",
                      "safeName": "ROLE_ASSIGNMENT_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleAssignmentRead",
                      "safeName": "RoleAssignmentRead"
                    }
                  },
                  "typeId": "RoleAssignmentRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsAssignRoleExample": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Assigns a role to a user within a tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.",
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsAssignRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/role_assignments"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "admin",
                    "tenant": "stripe-inc",
                    "user": "jane@coolcompany.com"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "user": "jane@coolcompany.com",
                      "role": "admin",
                      "tenant": "stripe-inc",
                      "user_id": "7c60d51f-b44e-4682-87d6-449835ea4d11",
                      "role_id": "405d8375-3514-403b-8c43-83ae74cfe022",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e733",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Unassign Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Unassign_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "unassignRoleRequestUnprocessableEntityError",
                    "safeName": "unassignRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "unassign_role_request_unprocessable_entity_error",
                    "safeName": "unassign_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UnassignRoleRequestUnprocessableEntityError",
                    "safeName": "UnassignRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Unassign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.unassign_role",
          "name": {
            "originalName": "unassign_role",
            "camelCase": {
              "unsafeName": "unassignRole",
              "safeName": "unassignRole"
            },
            "snakeCase": {
              "unsafeName": "unassign_role",
              "safeName": "unassign_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "UNASSIGN_ROLE",
              "safeName": "UNASSIGN_ROLE"
            },
            "pascalCase": {
              "unsafeName": "UnassignRole",
              "safeName": "UnassignRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RoleAssignmentRemove",
                "camelCase": {
                  "unsafeName": "roleAssignmentRemove",
                  "safeName": "roleAssignmentRemove"
                },
                "snakeCase": {
                  "unsafeName": "role_assignment_remove",
                  "safeName": "role_assignment_remove"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE_ASSIGNMENT_REMOVE",
                  "safeName": "ROLE_ASSIGNMENT_REMOVE"
                },
                "pascalCase": {
                  "unsafeName": "RoleAssignmentRemove",
                  "safeName": "RoleAssignmentRemove"
                }
              },
              "typeId": "RoleAssignmentRemove",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsUnassignRoleExample": {
                  "role": "editor",
                  "tenant": "google-inc",
                  "user": "jane@coolcompany.com"
                }
              }
            },
            "type": "reference"
          },
          "docs": "Unassigns a user role within a tenant.\n\nThe tenant defines the scope of the assignment. In other words, the role is effective only within the tenant.\n\nIf the role is not actually assigned, will return 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsUnassignRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/role_assignments"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "role": "editor",
                    "tenant": "google-inc",
                    "user": "jane@coolcompany.com"
                  }
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Bulk Assign Role",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Bulk_assign_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "bulkAssignRoleRequestUnprocessableEntityError",
                    "safeName": "bulkAssignRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "bulk_assign_role_request_unprocessable_entity_error",
                    "safeName": "bulk_assign_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BULK_ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "BULK_ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "BulkAssignRoleRequestUnprocessableEntityError",
                    "safeName": "BulkAssignRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_assign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.bulk_assign_role",
          "name": {
            "originalName": "bulk_assign_role",
            "camelCase": {
              "unsafeName": "bulkAssignRole",
              "safeName": "bulkAssignRole"
            },
            "snakeCase": {
              "unsafeName": "bulk_assign_role",
              "safeName": "bulk_assign_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_ASSIGN_ROLE",
              "safeName": "BULK_ASSIGN_ROLE"
            },
            "pascalCase": {
              "unsafeName": "BulkAssignRole",
              "safeName": "BulkAssignRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleAssignmentCreate",
                    "camelCase": {
                      "unsafeName": "roleAssignmentCreate",
                      "safeName": "roleAssignmentCreate"
                    },
                    "snakeCase": {
                      "unsafeName": "role_assignment_create",
                      "safeName": "role_assignment_create"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_ASSIGNMENT_CREATE",
                      "safeName": "ROLE_ASSIGNMENT_CREATE"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleAssignmentCreate",
                      "safeName": "RoleAssignmentCreate"
                    }
                  },
                  "typeId": "RoleAssignmentCreate",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsBulkAssignRoleExample": [
                  {
                    "role": "foo",
                    "tenant": "foo",
                    "user": "foo"
                  }
                ]
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "BulkRoleAssignmentReport",
                    "camelCase": {
                      "unsafeName": "bulkRoleAssignmentReport",
                      "safeName": "bulkRoleAssignmentReport"
                    },
                    "snakeCase": {
                      "unsafeName": "bulk_role_assignment_report",
                      "safeName": "bulk_role_assignment_report"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BULK_ROLE_ASSIGNMENT_REPORT",
                      "safeName": "BULK_ROLE_ASSIGNMENT_REPORT"
                    },
                    "pascalCase": {
                      "unsafeName": "BulkRoleAssignmentReport",
                      "safeName": "BulkRoleAssignmentReport"
                    }
                  },
                  "typeId": "BulkRoleAssignmentReport",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsBulkAssignRoleExample": {
                      "assignments_created": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsBulkAssignRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/role_assignments/bulk"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "role": "foo",
                      "tenant": "foo",
                      "user": "foo"
                    }
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "assignments_created": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Bulk Unassign Role",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Bulk_unassign_roleRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "bulkUnassignRoleRequestUnprocessableEntityError",
                    "safeName": "bulkUnassignRoleRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "bulk_unassign_role_request_unprocessable_entity_error",
                    "safeName": "bulk_unassign_role_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BULK_UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "BULK_UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "BulkUnassignRoleRequestUnprocessableEntityError",
                    "safeName": "BulkUnassignRoleRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_unassign_roleRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/role_assignments/bulk"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_roleAssignments.bulk_unassign_role",
          "name": {
            "originalName": "bulk_unassign_role",
            "camelCase": {
              "unsafeName": "bulkUnassignRole",
              "safeName": "bulkUnassignRole"
            },
            "snakeCase": {
              "unsafeName": "bulk_unassign_role",
              "safeName": "bulk_unassign_role"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_UNASSIGN_ROLE",
              "safeName": "BULK_UNASSIGN_ROLE"
            },
            "pascalCase": {
              "unsafeName": "BulkUnassignRole",
              "safeName": "BulkUnassignRole"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RoleAssignmentRemove",
                    "camelCase": {
                      "unsafeName": "roleAssignmentRemove",
                      "safeName": "roleAssignmentRemove"
                    },
                    "snakeCase": {
                      "unsafeName": "role_assignment_remove",
                      "safeName": "role_assignment_remove"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ROLE_ASSIGNMENT_REMOVE",
                      "safeName": "ROLE_ASSIGNMENT_REMOVE"
                    },
                    "pascalCase": {
                      "unsafeName": "RoleAssignmentRemove",
                      "safeName": "RoleAssignmentRemove"
                    }
                  },
                  "typeId": "RoleAssignmentRemove",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "roleAssignmentsBulkUnassignRoleExample": [
                  {
                    "role": "foo",
                    "tenant": "foo",
                    "user": "foo"
                  }
                ]
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "BulkRoleUnAssignmentReport",
                    "camelCase": {
                      "unsafeName": "bulkRoleUnAssignmentReport",
                      "safeName": "bulkRoleUnAssignmentReport"
                    },
                    "snakeCase": {
                      "unsafeName": "bulk_role_un_assignment_report",
                      "safeName": "bulk_role_un_assignment_report"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BULK_ROLE_UN_ASSIGNMENT_REPORT",
                      "safeName": "BULK_ROLE_UN_ASSIGNMENT_REPORT"
                    },
                    "pascalCase": {
                      "unsafeName": "BulkRoleUnAssignmentReport",
                      "safeName": "BulkRoleUnAssignmentReport"
                    }
                  },
                  "typeId": "BulkRoleUnAssignmentReport",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "roleAssignmentsBulkUnassignRoleExample": {
                      "assignments_removed": 0
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "roleAssignmentsBulkUnassignRoleExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/role_assignments/bulk"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "role": "foo",
                      "tenant": "foo",
                      "user": "foo"
                    }
                  ]
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "assignments_removed": 0
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_conditionSetRules": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Condition Set Rules",
              "camelCase": {
                "unsafeName": "conditionSetRules",
                "safeName": "conditionSetRules"
              },
              "snakeCase": {
                "unsafeName": "condition_set_rules",
                "safeName": "condition_set_rules"
              },
              "screamingSnakeCase": {
                "unsafeName": "CONDITION_SET_RULES",
                "safeName": "CONDITION_SET_RULES"
              },
              "pascalCase": {
                "unsafeName": "ConditionSetRules",
                "safeName": "ConditionSetRules"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Condition Set Rules",
            "camelCase": {
              "unsafeName": "conditionSetRules",
              "safeName": "conditionSetRules"
            },
            "snakeCase": {
              "unsafeName": "condition_set_rules",
              "safeName": "condition_set_rules"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONDITION_SET_RULES",
              "safeName": "CONDITION_SET_RULES"
            },
            "pascalCase": {
              "unsafeName": "ConditionSetRules",
              "safeName": "ConditionSetRules"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Set Permissions",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "user_set",
                  "camelCase": {
                    "unsafeName": "userSet",
                    "safeName": "userSet"
                  },
                  "snakeCase": {
                    "unsafeName": "user_set",
                    "safeName": "user_set"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "USER_SET",
                    "safeName": "USER_SET"
                  },
                  "pascalCase": {
                    "unsafeName": "UserSet",
                    "safeName": "UserSet"
                  }
                },
                "wireValue": "user_set"
              },
              "docs": "optional user set filter, will only return rules where the permission is granted to this user set",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "user_set_example": "user_set"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "permission",
                  "camelCase": {
                    "unsafeName": "permission",
                    "safeName": "permission"
                  },
                  "snakeCase": {
                    "unsafeName": "permission",
                    "safeName": "permission"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PERMISSION",
                    "safeName": "PERMISSION"
                  },
                  "pascalCase": {
                    "unsafeName": "Permission",
                    "safeName": "Permission"
                  }
                },
                "wireValue": "permission"
              },
              "docs": "optional permission filter, will only return condition set rules granting this permission",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "permission_example": "permission"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "resource_set",
                  "camelCase": {
                    "unsafeName": "resourceSet",
                    "safeName": "resourceSet"
                  },
                  "snakeCase": {
                    "unsafeName": "resource_set",
                    "safeName": "resource_set"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESOURCE_SET",
                    "safeName": "RESOURCE_SET"
                  },
                  "pascalCase": {
                    "unsafeName": "ResourceSet",
                    "safeName": "ResourceSet"
                  }
                },
                "wireValue": "resource_set"
              },
              "docs": "optional resource set filter, will only return rules where the permission is granted on this resource set",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "resource_set_example": "resource_set"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_set_permissionsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listSetPermissionsRequestUnprocessableEntityError",
                    "safeName": "listSetPermissionsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_set_permissions_request_unprocessable_entity_error",
                    "safeName": "list_set_permissions_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListSetPermissionsRequestUnprocessableEntityError",
                    "safeName": "ListSetPermissionsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_set_permissionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSetRules.list_set_permissions",
          "name": {
            "originalName": "list_set_permissions",
            "camelCase": {
              "unsafeName": "listSetPermissions",
              "safeName": "listSetPermissions"
            },
            "snakeCase": {
              "unsafeName": "list_set_permissions",
              "safeName": "list_set_permissions"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_SET_PERMISSIONS",
              "safeName": "LIST_SET_PERMISSIONS"
            },
            "pascalCase": {
              "unsafeName": "ListSetPermissions",
              "safeName": "ListSetPermissions"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ConditionSetRuleRead",
                        "camelCase": {
                          "unsafeName": "conditionSetRuleRead",
                          "safeName": "conditionSetRuleRead"
                        },
                        "snakeCase": {
                          "unsafeName": "condition_set_rule_read",
                          "safeName": "condition_set_rule_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "CONDITION_SET_RULE_READ",
                          "safeName": "CONDITION_SET_RULE_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ConditionSetRuleRead",
                          "safeName": "ConditionSetRuleRead"
                        }
                      },
                      "typeId": "ConditionSetRuleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetRulesListSetPermissionsExample": [
                      {
                        "id": "foo",
                        "key": "foo",
                        "user_set": "foo",
                        "permission": "foo",
                        "resource_set": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists the condition set rules matching the filter.\n- If the `user_set` filter is present, will only return the permissions set of that user set.\n- If the `permission` filter is present, will only return the permissions sets that equals to the queried permission.\n- If the `resource_set` filter is present, will only return the permissions set of that resource set.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listSetPermissionsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/set_rules"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": "foo",
                        "key": "foo",
                        "user_set": "foo",
                        "permission": "foo",
                        "resource_set": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Assign Set Permissions",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Assign_set_permissionsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "assignSetPermissionsRequestUnprocessableEntityError",
                    "safeName": "assignSetPermissionsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "assign_set_permissions_request_unprocessable_entity_error",
                    "safeName": "assign_set_permissions_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "ASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "AssignSetPermissionsRequestUnprocessableEntityError",
                    "safeName": "AssignSetPermissionsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Assign_set_permissionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSetRules.assign_set_permissions",
          "name": {
            "originalName": "assign_set_permissions",
            "camelCase": {
              "unsafeName": "assignSetPermissions",
              "safeName": "assignSetPermissions"
            },
            "snakeCase": {
              "unsafeName": "assign_set_permissions",
              "safeName": "assign_set_permissions"
            },
            "screamingSnakeCase": {
              "unsafeName": "ASSIGN_SET_PERMISSIONS",
              "safeName": "ASSIGN_SET_PERMISSIONS"
            },
            "pascalCase": {
              "unsafeName": "AssignSetPermissions",
              "safeName": "AssignSetPermissions"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ConditionSetRuleCreate",
                "camelCase": {
                  "unsafeName": "conditionSetRuleCreate",
                  "safeName": "conditionSetRuleCreate"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_rule_create",
                  "safeName": "condition_set_rule_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_RULE_CREATE",
                  "safeName": "CONDITION_SET_RULE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetRuleCreate",
                  "safeName": "ConditionSetRuleCreate"
                }
              },
              "typeId": "ConditionSetRuleCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetRulesAssignSetPermissionsExample": {
                  "user_set": "us_based_employees",
                  "permission": "repository:clone",
                  "resource_set": "private_repos"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ConditionSetRuleRead",
                        "camelCase": {
                          "unsafeName": "conditionSetRuleRead",
                          "safeName": "conditionSetRuleRead"
                        },
                        "snakeCase": {
                          "unsafeName": "condition_set_rule_read",
                          "safeName": "condition_set_rule_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "CONDITION_SET_RULE_READ",
                          "safeName": "CONDITION_SET_RULE_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ConditionSetRuleRead",
                          "safeName": "ConditionSetRuleRead"
                        }
                      },
                      "typeId": "ConditionSetRuleRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "conditionSetRulesAssignSetPermissionsExample": [
                      {
                        "id": "foo",
                        "key": "foo",
                        "user_set": "foo",
                        "permission": "foo",
                        "resource_set": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Grant permissions to a user set *on* a resource set.\n\nIf the permission is already granted, it is skipped.",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetRulesAssignSetPermissionsExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/set_rules"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "user_set": "us_based_employees",
                    "permission": "repository:clone",
                    "resource_set": "private_repos"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "id": "foo",
                        "key": "foo",
                        "user_set": "foo",
                        "permission": "foo",
                        "resource_set": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Unassign Set Permissions",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Unassign_set_permissionsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "unassignSetPermissionsRequestUnprocessableEntityError",
                    "safeName": "unassignSetPermissionsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "unassign_set_permissions_request_unprocessable_entity_error",
                    "safeName": "unassign_set_permissions_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UNASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UNASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UnassignSetPermissionsRequestUnprocessableEntityError",
                    "safeName": "UnassignSetPermissionsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Unassign_set_permissionsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/set_rules"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_conditionSetRules.unassign_set_permissions",
          "name": {
            "originalName": "unassign_set_permissions",
            "camelCase": {
              "unsafeName": "unassignSetPermissions",
              "safeName": "unassignSetPermissions"
            },
            "snakeCase": {
              "unsafeName": "unassign_set_permissions",
              "safeName": "unassign_set_permissions"
            },
            "screamingSnakeCase": {
              "unsafeName": "UNASSIGN_SET_PERMISSIONS",
              "safeName": "UNASSIGN_SET_PERMISSIONS"
            },
            "pascalCase": {
              "unsafeName": "UnassignSetPermissions",
              "safeName": "UnassignSetPermissions"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ConditionSetRuleRemove",
                "camelCase": {
                  "unsafeName": "conditionSetRuleRemove",
                  "safeName": "conditionSetRuleRemove"
                },
                "snakeCase": {
                  "unsafeName": "condition_set_rule_remove",
                  "safeName": "condition_set_rule_remove"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONDITION_SET_RULE_REMOVE",
                  "safeName": "CONDITION_SET_RULE_REMOVE"
                },
                "pascalCase": {
                  "unsafeName": "ConditionSetRuleRemove",
                  "safeName": "ConditionSetRuleRemove"
                }
              },
              "typeId": "ConditionSetRuleRemove",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "conditionSetRulesUnassignSetPermissionsExample": {
                  "user_set": "us_based_employees",
                  "permission": "repository:clone",
                  "resource_set": "private_repos"
                }
              }
            },
            "type": "reference"
          },
          "docs": "Revokes permissions to a user set *on* a resource set.\n\nIf the permission is not granted, it is skipped.",
          "v2Examples": {
            "autogeneratedExamples": {
              "conditionSetRulesUnassignSetPermissionsExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/set_rules"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "user_set": "us_based_employees",
                    "permission": "repository:clone",
                    "resource_set": "private_repos"
                  }
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_resourceInstances": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Resource Instances",
              "camelCase": {
                "unsafeName": "resourceInstances",
                "safeName": "resourceInstances"
              },
              "snakeCase": {
                "unsafeName": "resource_instances",
                "safeName": "resource_instances"
              },
              "screamingSnakeCase": {
                "unsafeName": "RESOURCE_INSTANCES",
                "safeName": "RESOURCE_INSTANCES"
              },
              "pascalCase": {
                "unsafeName": "ResourceInstances",
                "safeName": "ResourceInstances"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Resource Instances",
            "camelCase": {
              "unsafeName": "resourceInstances",
              "safeName": "resourceInstances"
            },
            "snakeCase": {
              "unsafeName": "resource_instances",
              "safeName": "resource_instances"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_INSTANCES",
              "safeName": "RESOURCE_INSTANCES"
            },
            "pascalCase": {
              "unsafeName": "ResourceInstances",
              "safeName": "ResourceInstances"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Resource Instances",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page",
                  "camelCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "snakeCase": {
                    "unsafeName": "page",
                    "safeName": "page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE",
                    "safeName": "PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "Page",
                    "safeName": "Page"
                  }
                },
                "wireValue": "page"
              },
              "docs": "Page number of the results to fetch, starting at 1.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 1,
                        "validation": {
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_example": 1
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "per_page",
                  "camelCase": {
                    "unsafeName": "perPage",
                    "safeName": "perPage"
                  },
                  "snakeCase": {
                    "unsafeName": "per_page",
                    "safeName": "per_page"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PER_PAGE",
                    "safeName": "PER_PAGE"
                  },
                  "pascalCase": {
                    "unsafeName": "PerPage",
                    "safeName": "PerPage"
                  }
                },
                "wireValue": "per_page"
              },
              "docs": "The number of results per page (max 100).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 30,
                        "validation": {
                          "max": 100,
                          "min": 1
                        },
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "per_page_example": 30
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "List_resource_instancesRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "listResourceInstancesRequestUnprocessableEntityError",
                    "safeName": "listResourceInstancesRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_resource_instances_request_unprocessable_entity_error",
                    "safeName": "list_resource_instances_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_RESOURCE_INSTANCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "LIST_RESOURCE_INSTANCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListResourceInstancesRequestUnprocessableEntityError",
                    "safeName": "ListResourceInstancesRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "List_resource_instancesRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.list_resource_instances",
          "name": {
            "originalName": "list_resource_instances",
            "camelCase": {
              "unsafeName": "listResourceInstances",
              "safeName": "listResourceInstances"
            },
            "snakeCase": {
              "unsafeName": "list_resource_instances",
              "safeName": "list_resource_instances"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_RESOURCE_INSTANCES",
              "safeName": "LIST_RESOURCE_INSTANCES"
            },
            "pascalCase": {
              "unsafeName": "ListResourceInstances",
              "safeName": "ListResourceInstances"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ResourceInstanceRead",
                        "camelCase": {
                          "unsafeName": "resourceInstanceRead",
                          "safeName": "resourceInstanceRead"
                        },
                        "snakeCase": {
                          "unsafeName": "resource_instance_read",
                          "safeName": "resource_instance_read"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "RESOURCE_INSTANCE_READ",
                          "safeName": "RESOURCE_INSTANCE_READ"
                        },
                        "pascalCase": {
                          "unsafeName": "ResourceInstanceRead",
                          "safeName": "ResourceInstanceRead"
                        }
                      },
                      "typeId": "ResourceInstanceRead",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesListResourceInstancesExample": [
                      {
                        "key": "foo",
                        "tenant": "foo",
                        "resource": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "resource_id": "foo",
                        "tenant_id": "foo",
                        "attributes": {}
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Lists all the resource instances defined within an environment.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listResourceInstancesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/resource_instances"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "key": "foo",
                        "tenant": "foo",
                        "resource": "foo",
                        "id": "foo",
                        "organization_id": "foo",
                        "project_id": "foo",
                        "environment_id": "foo",
                        "created_at": "foo",
                        "updated_at": "foo",
                        "resource_id": "foo",
                        "tenant_id": "foo",
                        "attributes": {}
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Resource Instance",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_resource_instanceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "createResourceInstanceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_resource_instance_request_unprocessable_entity_error",
                    "safeName": "create_resource_instance_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "CreateResourceInstanceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.create_resource_instance",
          "name": {
            "originalName": "create_resource_instance",
            "camelCase": {
              "unsafeName": "createResourceInstance",
              "safeName": "createResourceInstance"
            },
            "snakeCase": {
              "unsafeName": "create_resource_instance",
              "safeName": "create_resource_instance"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_RESOURCE_INSTANCE",
              "safeName": "CREATE_RESOURCE_INSTANCE"
            },
            "pascalCase": {
              "unsafeName": "CreateResourceInstance",
              "safeName": "CreateResourceInstance"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceInstanceCreate",
                "camelCase": {
                  "unsafeName": "resourceInstanceCreate",
                  "safeName": "resourceInstanceCreate"
                },
                "snakeCase": {
                  "unsafeName": "resource_instance_create",
                  "safeName": "resource_instance_create"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_INSTANCE_CREATE",
                  "safeName": "RESOURCE_INSTANCE_CREATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceInstanceCreate",
                  "safeName": "ResourceInstanceCreate"
                }
              },
              "typeId": "ResourceInstanceCreate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceInstancesCreateResourceInstanceExample": {
                  "key": "react",
                  "tenant": "default",
                  "resource": "repository",
                  "attributes": {
                    "private": "false",
                    "owner": "facebook"
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceInstanceRead",
                    "camelCase": {
                      "unsafeName": "resourceInstanceRead",
                      "safeName": "resourceInstanceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_instance_read",
                      "safeName": "resource_instance_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_INSTANCE_READ",
                      "safeName": "RESOURCE_INSTANCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceInstanceRead",
                      "safeName": "ResourceInstanceRead"
                    }
                  },
                  "typeId": "ResourceInstanceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesCreateResourceInstanceExample": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a new instance inside the Permit.io system.\n\nIf the instance is already created: will return 200 instead of 201,\nand will return the existing instance object in the response body.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceInstancesCreateResourceInstanceExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/resource_instances"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "key": "react",
                    "tenant": "default",
                    "resource": "repository",
                    "attributes": {
                      "private": "false",
                      "owner": "facebook"
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Resource Instance",
          "method": "GET",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "instance_id",
                "camelCase": {
                  "unsafeName": "instanceId",
                  "safeName": "instanceId"
                },
                "snakeCase": {
                  "unsafeName": "instance_id",
                  "safeName": "instance_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INSTANCE_ID",
                  "safeName": "INSTANCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "InstanceId",
                  "safeName": "InstanceId"
                }
              },
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_resource_instanceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "getResourceInstanceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_resource_instance_request_unprocessable_entity_error",
                    "safeName": "get_resource_instance_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "GetResourceInstanceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "instance_id",
                "camelCase": {
                  "unsafeName": "instanceId",
                  "safeName": "instanceId"
                },
                "snakeCase": {
                  "unsafeName": "instance_id",
                  "safeName": "instance_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INSTANCE_ID",
                  "safeName": "INSTANCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "InstanceId",
                  "safeName": "InstanceId"
                }
              },
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.get_resource_instance",
          "name": {
            "originalName": "get_resource_instance",
            "camelCase": {
              "unsafeName": "getResourceInstance",
              "safeName": "getResourceInstance"
            },
            "snakeCase": {
              "unsafeName": "get_resource_instance",
              "safeName": "get_resource_instance"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RESOURCE_INSTANCE",
              "safeName": "GET_RESOURCE_INSTANCE"
            },
            "pascalCase": {
              "unsafeName": "GetResourceInstance",
              "safeName": "GetResourceInstance"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceInstanceRead",
                    "camelCase": {
                      "unsafeName": "resourceInstanceRead",
                      "safeName": "resourceInstanceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_instance_read",
                      "safeName": "resource_instance_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_INSTANCE_READ",
                      "safeName": "RESOURCE_INSTANCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceInstanceRead",
                      "safeName": "ResourceInstanceRead"
                    }
                  },
                  "typeId": "ResourceInstanceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesGetResourceInstanceExample": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets a instance, if such instance exists. Otherwise returns 404.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getResourceInstanceExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/facts/proj_id/env_id/resource_instances/instance_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "instance_id": "instance_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Resource Instance",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "instance_id",
                "camelCase": {
                  "unsafeName": "instanceId",
                  "safeName": "instanceId"
                },
                "snakeCase": {
                  "unsafeName": "instance_id",
                  "safeName": "instance_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INSTANCE_ID",
                  "safeName": "INSTANCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "InstanceId",
                  "safeName": "InstanceId"
                }
              },
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_resource_instanceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "deleteResourceInstanceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_resource_instance_request_unprocessable_entity_error",
                    "safeName": "delete_resource_instance_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "DeleteResourceInstanceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "instance_id",
                "camelCase": {
                  "unsafeName": "instanceId",
                  "safeName": "instanceId"
                },
                "snakeCase": {
                  "unsafeName": "instance_id",
                  "safeName": "instance_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INSTANCE_ID",
                  "safeName": "INSTANCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "InstanceId",
                  "safeName": "InstanceId"
                }
              },
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.delete_resource_instance",
          "name": {
            "originalName": "delete_resource_instance",
            "camelCase": {
              "unsafeName": "deleteResourceInstance",
              "safeName": "deleteResourceInstance"
            },
            "snakeCase": {
              "unsafeName": "delete_resource_instance",
              "safeName": "delete_resource_instance"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_RESOURCE_INSTANCE",
              "safeName": "DELETE_RESOURCE_INSTANCE"
            },
            "pascalCase": {
              "unsafeName": "DeleteResourceInstance",
              "safeName": "DeleteResourceInstance"
            }
          },
          "docs": "Deletes the instance and all its related data.",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteResourceInstanceExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/resource_instances/instance_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "instance_id": "instance_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update Resource Instance",
          "method": "PATCH",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "instance_id",
                "camelCase": {
                  "unsafeName": "instanceId",
                  "safeName": "instanceId"
                },
                "snakeCase": {
                  "unsafeName": "instance_id",
                  "safeName": "instance_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INSTANCE_ID",
                  "safeName": "INSTANCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "InstanceId",
                  "safeName": "InstanceId"
                }
              },
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Update_resource_instanceRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "updateResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "updateResourceInstanceRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "update_resource_instance_request_unprocessable_entity_error",
                    "safeName": "update_resource_instance_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPDATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "UPDATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UpdateResourceInstanceRequestUnprocessableEntityError",
                    "safeName": "UpdateResourceInstanceRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Update_resource_instanceRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/resource_instances/"
              },
              {
                "pathParameter": "instance_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            },
            {
              "name": {
                "originalName": "instance_id",
                "camelCase": {
                  "unsafeName": "instanceId",
                  "safeName": "instanceId"
                },
                "snakeCase": {
                  "unsafeName": "instance_id",
                  "safeName": "instance_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INSTANCE_ID",
                  "safeName": "INSTANCE_ID"
                },
                "pascalCase": {
                  "unsafeName": "InstanceId",
                  "safeName": "InstanceId"
                }
              },
              "docs": "Either the unique id of the resource instance, or the URL-friendly key of the resource instance (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "instance_id_example": "instance_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_resourceInstances.update_resource_instance",
          "name": {
            "originalName": "update_resource_instance",
            "camelCase": {
              "unsafeName": "updateResourceInstance",
              "safeName": "updateResourceInstance"
            },
            "snakeCase": {
              "unsafeName": "update_resource_instance",
              "safeName": "update_resource_instance"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_RESOURCE_INSTANCE",
              "safeName": "UPDATE_RESOURCE_INSTANCE"
            },
            "pascalCase": {
              "unsafeName": "UpdateResourceInstance",
              "safeName": "UpdateResourceInstance"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResourceInstanceUpdate",
                "camelCase": {
                  "unsafeName": "resourceInstanceUpdate",
                  "safeName": "resourceInstanceUpdate"
                },
                "snakeCase": {
                  "unsafeName": "resource_instance_update",
                  "safeName": "resource_instance_update"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_INSTANCE_UPDATE",
                  "safeName": "RESOURCE_INSTANCE_UPDATE"
                },
                "pascalCase": {
                  "unsafeName": "ResourceInstanceUpdate",
                  "safeName": "ResourceInstanceUpdate"
                }
              },
              "typeId": "ResourceInstanceUpdate",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "resourceInstancesUpdateResourceInstanceExample": {
                  "attributes": {
                    "private": "false",
                    "owner": "facebook"
                  }
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ResourceInstanceRead",
                    "camelCase": {
                      "unsafeName": "resourceInstanceRead",
                      "safeName": "resourceInstanceRead"
                    },
                    "snakeCase": {
                      "unsafeName": "resource_instance_read",
                      "safeName": "resource_instance_read"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RESOURCE_INSTANCE_READ",
                      "safeName": "RESOURCE_INSTANCE_READ"
                    },
                    "pascalCase": {
                      "unsafeName": "ResourceInstanceRead",
                      "safeName": "ResourceInstanceRead"
                    }
                  },
                  "typeId": "ResourceInstanceRead",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "resourceInstancesUpdateResourceInstanceExample": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Partially updates the instance definition.\nFields that will be provided will be completely overwritten.",
          "v2Examples": {
            "autogeneratedExamples": {
              "resourceInstancesUpdateResourceInstanceExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v2/facts/proj_id/env_id/resource_instances/instance_id"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id",
                    "instance_id": "instance_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "attributes": {
                      "private": "false",
                      "owner": "facebook"
                    }
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "key": "react",
                      "tenant": "default",
                      "resource": "repository",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "organization_id": "7c60d51f-b44e-4682-87d6-449835ea4de6",
                      "project_id": "405d8375-3514-403b-8c43-83ae74cfe0e9",
                      "environment_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c4",
                      "created_at": "2019-08-24T14:15:22Z",
                      "updated_at": "2019-08-24T14:15:22Z",
                      "resource_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c5",
                      "tenant_id": "40ef0e48-a11f-4963-a229-e396c9f7e7c3",
                      "attributes": {
                        "private": "false",
                        "owner": "facebook"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_bulkOperations": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Bulk Operations",
              "camelCase": {
                "unsafeName": "bulkOperations",
                "safeName": "bulkOperations"
              },
              "snakeCase": {
                "unsafeName": "bulk_operations",
                "safeName": "bulk_operations"
              },
              "screamingSnakeCase": {
                "unsafeName": "BULK_OPERATIONS",
                "safeName": "BULK_OPERATIONS"
              },
              "pascalCase": {
                "unsafeName": "BulkOperations",
                "safeName": "BulkOperations"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Bulk Operations",
            "camelCase": {
              "unsafeName": "bulkOperations",
              "safeName": "bulkOperations"
            },
            "snakeCase": {
              "unsafeName": "bulk_operations",
              "safeName": "bulk_operations"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_OPERATIONS",
              "safeName": "BULK_OPERATIONS"
            },
            "pascalCase": {
              "unsafeName": "BulkOperations",
              "safeName": "BulkOperations"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Bulk Create Users",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Bulk_create_usersRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "bulkCreateUsersRequestUnprocessableEntityError",
                    "safeName": "bulkCreateUsersRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "bulk_create_users_request_unprocessable_entity_error",
                    "safeName": "bulk_create_users_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BULK_CREATE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "BULK_CREATE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "BulkCreateUsersRequestUnprocessableEntityError",
                    "safeName": "BulkCreateUsersRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_create_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_create_users",
          "name": {
            "originalName": "bulk_create_users",
            "camelCase": {
              "unsafeName": "bulkCreateUsers",
              "safeName": "bulkCreateUsers"
            },
            "snakeCase": {
              "unsafeName": "bulk_create_users",
              "safeName": "bulk_create_users"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_CREATE_USERS",
              "safeName": "BULK_CREATE_USERS"
            },
            "pascalCase": {
              "unsafeName": "BulkCreateUsers",
              "safeName": "BulkCreateUsers"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserCreateBulkOperation",
                "camelCase": {
                  "unsafeName": "userCreateBulkOperation",
                  "safeName": "userCreateBulkOperation"
                },
                "snakeCase": {
                  "unsafeName": "user_create_bulk_operation",
                  "safeName": "user_create_bulk_operation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_CREATE_BULK_OPERATION",
                  "safeName": "USER_CREATE_BULK_OPERATION"
                },
                "pascalCase": {
                  "unsafeName": "UserCreateBulkOperation",
                  "safeName": "UserCreateBulkOperation"
                }
              },
              "typeId": "UserCreateBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkCreateUsersExample": {
                  "operations": [
                    {
                      "key": "foo"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserCreateBulkOperationResult",
                    "camelCase": {
                      "unsafeName": "userCreateBulkOperationResult",
                      "safeName": "userCreateBulkOperationResult"
                    },
                    "snakeCase": {
                      "unsafeName": "user_create_bulk_operation_result",
                      "safeName": "user_create_bulk_operation_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_CREATE_BULK_OPERATION_RESULT",
                      "safeName": "USER_CREATE_BULK_OPERATION_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "UserCreateBulkOperationResult",
                      "safeName": "UserCreateBulkOperationResult"
                    }
                  },
                  "typeId": "UserCreateBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkCreateUsersExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkCreateUsersExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/bulk/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "operations": [
                      {
                        "key": "foo"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Bulk Replace Users",
          "method": "PUT",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Bulk_replace_usersRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "bulkReplaceUsersRequestUnprocessableEntityError",
                    "safeName": "bulkReplaceUsersRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "bulk_replace_users_request_unprocessable_entity_error",
                    "safeName": "bulk_replace_users_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BULK_REPLACE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "BULK_REPLACE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "BulkReplaceUsersRequestUnprocessableEntityError",
                    "safeName": "BulkReplaceUsersRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_replace_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_replace_users",
          "name": {
            "originalName": "bulk_replace_users",
            "camelCase": {
              "unsafeName": "bulkReplaceUsers",
              "safeName": "bulkReplaceUsers"
            },
            "snakeCase": {
              "unsafeName": "bulk_replace_users",
              "safeName": "bulk_replace_users"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_REPLACE_USERS",
              "safeName": "BULK_REPLACE_USERS"
            },
            "pascalCase": {
              "unsafeName": "BulkReplaceUsers",
              "safeName": "BulkReplaceUsers"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserReplaceBulkOperation",
                "camelCase": {
                  "unsafeName": "userReplaceBulkOperation",
                  "safeName": "userReplaceBulkOperation"
                },
                "snakeCase": {
                  "unsafeName": "user_replace_bulk_operation",
                  "safeName": "user_replace_bulk_operation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_REPLACE_BULK_OPERATION",
                  "safeName": "USER_REPLACE_BULK_OPERATION"
                },
                "pascalCase": {
                  "unsafeName": "UserReplaceBulkOperation",
                  "safeName": "UserReplaceBulkOperation"
                }
              },
              "typeId": "UserReplaceBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkReplaceUsersExample": {
                  "operations": [
                    {
                      "key": "foo"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserReplaceBulkOperationResult",
                    "camelCase": {
                      "unsafeName": "userReplaceBulkOperationResult",
                      "safeName": "userReplaceBulkOperationResult"
                    },
                    "snakeCase": {
                      "unsafeName": "user_replace_bulk_operation_result",
                      "safeName": "user_replace_bulk_operation_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_REPLACE_BULK_OPERATION_RESULT",
                      "safeName": "USER_REPLACE_BULK_OPERATION_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "UserReplaceBulkOperationResult",
                      "safeName": "UserReplaceBulkOperationResult"
                    }
                  },
                  "typeId": "UserReplaceBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkReplaceUsersExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkReplaceUsersExample": {
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/v2/facts/proj_id/env_id/bulk/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "operations": [
                      {
                        "key": "foo"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Bulk Delete Users",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Bulk_delete_usersRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "bulkDeleteUsersRequestUnprocessableEntityError",
                    "safeName": "bulkDeleteUsersRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "bulk_delete_users_request_unprocessable_entity_error",
                    "safeName": "bulk_delete_users_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BULK_DELETE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "BULK_DELETE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "BulkDeleteUsersRequestUnprocessableEntityError",
                    "safeName": "BulkDeleteUsersRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_delete_usersRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/users"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_delete_users",
          "name": {
            "originalName": "bulk_delete_users",
            "camelCase": {
              "unsafeName": "bulkDeleteUsers",
              "safeName": "bulkDeleteUsers"
            },
            "snakeCase": {
              "unsafeName": "bulk_delete_users",
              "safeName": "bulk_delete_users"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_DELETE_USERS",
              "safeName": "BULK_DELETE_USERS"
            },
            "pascalCase": {
              "unsafeName": "BulkDeleteUsers",
              "safeName": "BulkDeleteUsers"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserDeleteBulkOperation",
                "camelCase": {
                  "unsafeName": "userDeleteBulkOperation",
                  "safeName": "userDeleteBulkOperation"
                },
                "snakeCase": {
                  "unsafeName": "user_delete_bulk_operation",
                  "safeName": "user_delete_bulk_operation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_DELETE_BULK_OPERATION",
                  "safeName": "USER_DELETE_BULK_OPERATION"
                },
                "pascalCase": {
                  "unsafeName": "UserDeleteBulkOperation",
                  "safeName": "UserDeleteBulkOperation"
                }
              },
              "typeId": "UserDeleteBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkDeleteUsersExample": {
                  "idents": [
                    "foo"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UserDeleteBulkOperationResult",
                    "camelCase": {
                      "unsafeName": "userDeleteBulkOperationResult",
                      "safeName": "userDeleteBulkOperationResult"
                    },
                    "snakeCase": {
                      "unsafeName": "user_delete_bulk_operation_result",
                      "safeName": "user_delete_bulk_operation_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "USER_DELETE_BULK_OPERATION_RESULT",
                      "safeName": "USER_DELETE_BULK_OPERATION_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "UserDeleteBulkOperationResult",
                      "safeName": "UserDeleteBulkOperationResult"
                    }
                  },
                  "typeId": "UserDeleteBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkDeleteUsersExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkDeleteUsersExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/bulk/users"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "idents": [
                      "foo"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Bulk Create Tenants",
          "method": "POST",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Bulk_create_tenantsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "bulkCreateTenantsRequestUnprocessableEntityError",
                    "safeName": "bulkCreateTenantsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "bulk_create_tenants_request_unprocessable_entity_error",
                    "safeName": "bulk_create_tenants_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BULK_CREATE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "BULK_CREATE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "BulkCreateTenantsRequestUnprocessableEntityError",
                    "safeName": "BulkCreateTenantsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_create_tenantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_create_tenants",
          "name": {
            "originalName": "bulk_create_tenants",
            "camelCase": {
              "unsafeName": "bulkCreateTenants",
              "safeName": "bulkCreateTenants"
            },
            "snakeCase": {
              "unsafeName": "bulk_create_tenants",
              "safeName": "bulk_create_tenants"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_CREATE_TENANTS",
              "safeName": "BULK_CREATE_TENANTS"
            },
            "pascalCase": {
              "unsafeName": "BulkCreateTenants",
              "safeName": "BulkCreateTenants"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TenantCreateBulkOperation",
                "camelCase": {
                  "unsafeName": "tenantCreateBulkOperation",
                  "safeName": "tenantCreateBulkOperation"
                },
                "snakeCase": {
                  "unsafeName": "tenant_create_bulk_operation",
                  "safeName": "tenant_create_bulk_operation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_CREATE_BULK_OPERATION",
                  "safeName": "TENANT_CREATE_BULK_OPERATION"
                },
                "pascalCase": {
                  "unsafeName": "TenantCreateBulkOperation",
                  "safeName": "TenantCreateBulkOperation"
                }
              },
              "typeId": "TenantCreateBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkCreateTenantsExample": {
                  "operations": [
                    {
                      "key": "foo",
                      "name": "foo"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantCreateBulkOperationResult",
                    "camelCase": {
                      "unsafeName": "tenantCreateBulkOperationResult",
                      "safeName": "tenantCreateBulkOperationResult"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_create_bulk_operation_result",
                      "safeName": "tenant_create_bulk_operation_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_CREATE_BULK_OPERATION_RESULT",
                      "safeName": "TENANT_CREATE_BULK_OPERATION_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantCreateBulkOperationResult",
                      "safeName": "TenantCreateBulkOperationResult"
                    }
                  },
                  "typeId": "TenantCreateBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkCreateTenantsExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkCreateTenantsExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/facts/proj_id/env_id/bulk/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "operations": [
                      {
                        "key": "foo",
                        "name": "foo"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Bulk Delete Tenants",
          "method": "DELETE",
          "baseUrl": "https://api.permit.io",
          "path": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Bulk_delete_tenantsRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "bulkDeleteTenantsRequestUnprocessableEntityError",
                    "safeName": "bulkDeleteTenantsRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "bulk_delete_tenants_request_unprocessable_entity_error",
                    "safeName": "bulk_delete_tenants_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BULK_DELETE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "BULK_DELETE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "BulkDeleteTenantsRequestUnprocessableEntityError",
                    "safeName": "BulkDeleteTenantsRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Bulk_delete_tenantsRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/facts/",
            "parts": [
              {
                "pathParameter": "proj_id",
                "tail": "/"
              },
              {
                "pathParameter": "env_id",
                "tail": "/bulk/tenants"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "proj_id",
                "camelCase": {
                  "unsafeName": "projId",
                  "safeName": "projId"
                },
                "snakeCase": {
                  "unsafeName": "proj_id",
                  "safeName": "proj_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROJ_ID",
                  "safeName": "PROJ_ID"
                },
                "pascalCase": {
                  "unsafeName": "ProjId",
                  "safeName": "ProjId"
                }
              },
              "docs": "Either the unique id of the project, or the URL-friendly key of the project (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "proj_id_example": "proj_id"
                }
              }
            },
            {
              "name": {
                "originalName": "env_id",
                "camelCase": {
                  "unsafeName": "envId",
                  "safeName": "envId"
                },
                "snakeCase": {
                  "unsafeName": "env_id",
                  "safeName": "env_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENV_ID",
                  "safeName": "ENV_ID"
                },
                "pascalCase": {
                  "unsafeName": "EnvId",
                  "safeName": "EnvId"
                }
              },
              "docs": "Either the unique id of the environment, or the URL-friendly key of the environment (i.e: the \"slug\").",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "env_id_example": "env_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bulkOperations.bulk_delete_tenants",
          "name": {
            "originalName": "bulk_delete_tenants",
            "camelCase": {
              "unsafeName": "bulkDeleteTenants",
              "safeName": "bulkDeleteTenants"
            },
            "snakeCase": {
              "unsafeName": "bulk_delete_tenants",
              "safeName": "bulk_delete_tenants"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_DELETE_TENANTS",
              "safeName": "BULK_DELETE_TENANTS"
            },
            "pascalCase": {
              "unsafeName": "BulkDeleteTenants",
              "safeName": "BulkDeleteTenants"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TenantDeleteBulkOperation",
                "camelCase": {
                  "unsafeName": "tenantDeleteBulkOperation",
                  "safeName": "tenantDeleteBulkOperation"
                },
                "snakeCase": {
                  "unsafeName": "tenant_delete_bulk_operation",
                  "safeName": "tenant_delete_bulk_operation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TENANT_DELETE_BULK_OPERATION",
                  "safeName": "TENANT_DELETE_BULK_OPERATION"
                },
                "pascalCase": {
                  "unsafeName": "TenantDeleteBulkOperation",
                  "safeName": "TenantDeleteBulkOperation"
                }
              },
              "typeId": "TenantDeleteBulkOperation",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "bulkOperationsBulkDeleteTenantsExample": {
                  "idents": [
                    "foo"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TenantDeleteBulkOperationResult",
                    "camelCase": {
                      "unsafeName": "tenantDeleteBulkOperationResult",
                      "safeName": "tenantDeleteBulkOperationResult"
                    },
                    "snakeCase": {
                      "unsafeName": "tenant_delete_bulk_operation_result",
                      "safeName": "tenant_delete_bulk_operation_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TENANT_DELETE_BULK_OPERATION_RESULT",
                      "safeName": "TENANT_DELETE_BULK_OPERATION_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "TenantDeleteBulkOperationResult",
                      "safeName": "TenantDeleteBulkOperationResult"
                    }
                  },
                  "typeId": "TenantDeleteBulkOperationResult",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bulkOperationsBulkDeleteTenantsExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "bulkOperationsBulkDeleteTenantsExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/facts/proj_id/env_id/bulk/tenants"
                  },
                  "environment": "https://api.permit.io",
                  "pathParameters": {
                    "proj_id": "proj_id",
                    "env_id": "env_id"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "idents": [
                      "foo"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    }
  },
  "errors": {
    "List_organizationsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_organizationsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listOrganizationsRequestUnprocessableEntityError",
            "safeName": "listOrganizationsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_organizations_request_unprocessable_entity_error",
            "safeName": "list_organizations_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ORGANIZATIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ORGANIZATIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListOrganizationsRequestUnprocessableEntityError",
            "safeName": "ListOrganizationsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_organizationsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_organizationsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listOrganizationsRequestUnprocessableEntityError",
            "safeName": "listOrganizationsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_organizations_request_unprocessable_entity_error",
            "safeName": "list_organizations_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ORGANIZATIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ORGANIZATIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListOrganizationsRequestUnprocessableEntityError",
            "safeName": "ListOrganizationsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_organizationsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createOrganizationRequestUnprocessableEntityError",
            "safeName": "createOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_organization_request_unprocessable_entity_error",
            "safeName": "create_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateOrganizationRequestUnprocessableEntityError",
            "safeName": "CreateOrganizationRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createOrganizationRequestUnprocessableEntityError",
            "safeName": "createOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_organization_request_unprocessable_entity_error",
            "safeName": "create_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateOrganizationRequestUnprocessableEntityError",
            "safeName": "CreateOrganizationRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getOrganizationRequestUnprocessableEntityError",
            "safeName": "getOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_organization_request_unprocessable_entity_error",
            "safeName": "get_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetOrganizationRequestUnprocessableEntityError",
            "safeName": "GetOrganizationRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getOrganizationRequestUnprocessableEntityError",
            "safeName": "getOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_organization_request_unprocessable_entity_error",
            "safeName": "get_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetOrganizationRequestUnprocessableEntityError",
            "safeName": "GetOrganizationRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteOrganizationRequestUnprocessableEntityError",
            "safeName": "deleteOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_organization_request_unprocessable_entity_error",
            "safeName": "delete_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteOrganizationRequestUnprocessableEntityError",
            "safeName": "DeleteOrganizationRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteOrganizationRequestUnprocessableEntityError",
            "safeName": "deleteOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_organization_request_unprocessable_entity_error",
            "safeName": "delete_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteOrganizationRequestUnprocessableEntityError",
            "safeName": "DeleteOrganizationRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateOrganizationRequestUnprocessableEntityError",
            "safeName": "updateOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_organization_request_unprocessable_entity_error",
            "safeName": "update_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateOrganizationRequestUnprocessableEntityError",
            "safeName": "UpdateOrganizationRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateOrganizationRequestUnprocessableEntityError",
            "safeName": "updateOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_organization_request_unprocessable_entity_error",
            "safeName": "update_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateOrganizationRequestUnprocessableEntityError",
            "safeName": "UpdateOrganizationRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_active_organizationRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_active_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getActiveOrganizationRequestUnprocessableEntityError",
            "safeName": "getActiveOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_active_organization_request_unprocessable_entity_error",
            "safeName": "get_active_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ACTIVE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ACTIVE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetActiveOrganizationRequestUnprocessableEntityError",
            "safeName": "GetActiveOrganizationRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_active_organizationRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_active_organizationRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getActiveOrganizationRequestUnprocessableEntityError",
            "safeName": "getActiveOrganizationRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_active_organization_request_unprocessable_entity_error",
            "safeName": "get_active_organization_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ACTIVE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ACTIVE_ORGANIZATION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetActiveOrganizationRequestUnprocessableEntityError",
            "safeName": "GetActiveOrganizationRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_active_organizationRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_projectsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_projectsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listProjectsRequestUnprocessableEntityError",
            "safeName": "listProjectsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_projects_request_unprocessable_entity_error",
            "safeName": "list_projects_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_PROJECTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_PROJECTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListProjectsRequestUnprocessableEntityError",
            "safeName": "ListProjectsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_projectsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_projectsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listProjectsRequestUnprocessableEntityError",
            "safeName": "listProjectsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_projects_request_unprocessable_entity_error",
            "safeName": "list_projects_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_PROJECTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_PROJECTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListProjectsRequestUnprocessableEntityError",
            "safeName": "ListProjectsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_projectsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_projectRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createProjectRequestUnprocessableEntityError",
            "safeName": "createProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_project_request_unprocessable_entity_error",
            "safeName": "create_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateProjectRequestUnprocessableEntityError",
            "safeName": "CreateProjectRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createProjectRequestUnprocessableEntityError",
            "safeName": "createProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_project_request_unprocessable_entity_error",
            "safeName": "create_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateProjectRequestUnprocessableEntityError",
            "safeName": "CreateProjectRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_projectRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getProjectRequestUnprocessableEntityError",
            "safeName": "getProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_project_request_unprocessable_entity_error",
            "safeName": "get_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetProjectRequestUnprocessableEntityError",
            "safeName": "GetProjectRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getProjectRequestUnprocessableEntityError",
            "safeName": "getProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_project_request_unprocessable_entity_error",
            "safeName": "get_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetProjectRequestUnprocessableEntityError",
            "safeName": "GetProjectRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_projectRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteProjectRequestUnprocessableEntityError",
            "safeName": "deleteProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_project_request_unprocessable_entity_error",
            "safeName": "delete_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteProjectRequestUnprocessableEntityError",
            "safeName": "DeleteProjectRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteProjectRequestUnprocessableEntityError",
            "safeName": "deleteProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_project_request_unprocessable_entity_error",
            "safeName": "delete_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteProjectRequestUnprocessableEntityError",
            "safeName": "DeleteProjectRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_projectRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateProjectRequestUnprocessableEntityError",
            "safeName": "updateProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_project_request_unprocessable_entity_error",
            "safeName": "update_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateProjectRequestUnprocessableEntityError",
            "safeName": "UpdateProjectRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_projectRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_projectRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateProjectRequestUnprocessableEntityError",
            "safeName": "updateProjectRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_project_request_unprocessable_entity_error",
            "safeName": "update_project_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_PROJECT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateProjectRequestUnprocessableEntityError",
            "safeName": "UpdateProjectRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_projectRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Stats_environmentsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Stats_environmentsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "statsEnvironmentsRequestUnprocessableEntityError",
            "safeName": "statsEnvironmentsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "stats_environments_request_unprocessable_entity_error",
            "safeName": "stats_environments_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "STATS_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "STATS_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "StatsEnvironmentsRequestUnprocessableEntityError",
            "safeName": "StatsEnvironmentsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Stats_environmentsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Stats_environmentsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "statsEnvironmentsRequestUnprocessableEntityError",
            "safeName": "statsEnvironmentsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "stats_environments_request_unprocessable_entity_error",
            "safeName": "stats_environments_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "STATS_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "STATS_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "StatsEnvironmentsRequestUnprocessableEntityError",
            "safeName": "StatsEnvironmentsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Stats_environmentsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_environmentsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_environmentsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listEnvironmentsRequestUnprocessableEntityError",
            "safeName": "listEnvironmentsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_environments_request_unprocessable_entity_error",
            "safeName": "list_environments_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListEnvironmentsRequestUnprocessableEntityError",
            "safeName": "ListEnvironmentsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_environmentsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_environmentsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listEnvironmentsRequestUnprocessableEntityError",
            "safeName": "listEnvironmentsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_environments_request_unprocessable_entity_error",
            "safeName": "list_environments_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ENVIRONMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListEnvironmentsRequestUnprocessableEntityError",
            "safeName": "ListEnvironmentsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_environmentsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createEnvironmentRequestUnprocessableEntityError",
            "safeName": "createEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_environment_request_unprocessable_entity_error",
            "safeName": "create_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateEnvironmentRequestUnprocessableEntityError",
            "safeName": "CreateEnvironmentRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createEnvironmentRequestUnprocessableEntityError",
            "safeName": "createEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_environment_request_unprocessable_entity_error",
            "safeName": "create_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateEnvironmentRequestUnprocessableEntityError",
            "safeName": "CreateEnvironmentRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getEnvironmentRequestUnprocessableEntityError",
            "safeName": "getEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_environment_request_unprocessable_entity_error",
            "safeName": "get_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetEnvironmentRequestUnprocessableEntityError",
            "safeName": "GetEnvironmentRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getEnvironmentRequestUnprocessableEntityError",
            "safeName": "getEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_environment_request_unprocessable_entity_error",
            "safeName": "get_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetEnvironmentRequestUnprocessableEntityError",
            "safeName": "GetEnvironmentRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteEnvironmentRequestUnprocessableEntityError",
            "safeName": "deleteEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_environment_request_unprocessable_entity_error",
            "safeName": "delete_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteEnvironmentRequestUnprocessableEntityError",
            "safeName": "DeleteEnvironmentRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteEnvironmentRequestUnprocessableEntityError",
            "safeName": "deleteEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_environment_request_unprocessable_entity_error",
            "safeName": "delete_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteEnvironmentRequestUnprocessableEntityError",
            "safeName": "DeleteEnvironmentRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateEnvironmentRequestUnprocessableEntityError",
            "safeName": "updateEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_environment_request_unprocessable_entity_error",
            "safeName": "update_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateEnvironmentRequestUnprocessableEntityError",
            "safeName": "UpdateEnvironmentRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateEnvironmentRequestUnprocessableEntityError",
            "safeName": "updateEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_environment_request_unprocessable_entity_error",
            "safeName": "update_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateEnvironmentRequestUnprocessableEntityError",
            "safeName": "UpdateEnvironmentRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Copy_environmentRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Copy_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "copyEnvironmentRequestUnprocessableEntityError",
            "safeName": "copyEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "copy_environment_request_unprocessable_entity_error",
            "safeName": "copy_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "COPY_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "COPY_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CopyEnvironmentRequestUnprocessableEntityError",
            "safeName": "CopyEnvironmentRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Copy_environmentRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Copy_environmentRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "copyEnvironmentRequestUnprocessableEntityError",
            "safeName": "copyEnvironmentRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "copy_environment_request_unprocessable_entity_error",
            "safeName": "copy_environment_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "COPY_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "COPY_ENVIRONMENT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CopyEnvironmentRequestUnprocessableEntityError",
            "safeName": "CopyEnvironmentRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Copy_environmentRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_resourcesRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_resourcesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourcesRequestUnprocessableEntityError",
            "safeName": "listResourcesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resources_request_unprocessable_entity_error",
            "safeName": "list_resources_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourcesRequestUnprocessableEntityError",
            "safeName": "ListResourcesRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resourcesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_resourcesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourcesRequestUnprocessableEntityError",
            "safeName": "listResourcesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resources_request_unprocessable_entity_error",
            "safeName": "list_resources_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourcesRequestUnprocessableEntityError",
            "safeName": "ListResourcesRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_resourcesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceRequestUnprocessableEntityError",
            "safeName": "createResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_request_unprocessable_entity_error",
            "safeName": "create_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceRequestUnprocessableEntityError",
            "safeName": "CreateResourceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceRequestUnprocessableEntityError",
            "safeName": "createResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_request_unprocessable_entity_error",
            "safeName": "create_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceRequestUnprocessableEntityError",
            "safeName": "CreateResourceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRequestUnprocessableEntityError",
            "safeName": "getResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_request_unprocessable_entity_error",
            "safeName": "get_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRequestUnprocessableEntityError",
            "safeName": "GetResourceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRequestUnprocessableEntityError",
            "safeName": "getResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_request_unprocessable_entity_error",
            "safeName": "get_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRequestUnprocessableEntityError",
            "safeName": "GetResourceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Replace_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Replace_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "replaceResourceRequestUnprocessableEntityError",
            "safeName": "replaceResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "replace_resource_request_unprocessable_entity_error",
            "safeName": "replace_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REPLACE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REPLACE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ReplaceResourceRequestUnprocessableEntityError",
            "safeName": "ReplaceResourceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Replace_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Replace_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "replaceResourceRequestUnprocessableEntityError",
            "safeName": "replaceResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "replace_resource_request_unprocessable_entity_error",
            "safeName": "replace_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REPLACE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REPLACE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ReplaceResourceRequestUnprocessableEntityError",
            "safeName": "ReplaceResourceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Replace_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceRequestUnprocessableEntityError",
            "safeName": "deleteResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_request_unprocessable_entity_error",
            "safeName": "delete_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceRequestUnprocessableEntityError",
            "safeName": "DeleteResourceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceRequestUnprocessableEntityError",
            "safeName": "deleteResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_request_unprocessable_entity_error",
            "safeName": "delete_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceRequestUnprocessableEntityError",
            "safeName": "DeleteResourceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_resourceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceRequestUnprocessableEntityError",
            "safeName": "updateResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_request_unprocessable_entity_error",
            "safeName": "update_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceRequestUnprocessableEntityError",
            "safeName": "UpdateResourceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resourceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_resourceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceRequestUnprocessableEntityError",
            "safeName": "updateResourceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_request_unprocessable_entity_error",
            "safeName": "update_resource_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceRequestUnprocessableEntityError",
            "safeName": "UpdateResourceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_resourceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_resource_actionsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_resource_actionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceActionsRequestUnprocessableEntityError",
            "safeName": "listResourceActionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_actions_request_unprocessable_entity_error",
            "safeName": "list_resource_actions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ACTIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ACTIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceActionsRequestUnprocessableEntityError",
            "safeName": "ListResourceActionsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_actionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_resource_actionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceActionsRequestUnprocessableEntityError",
            "safeName": "listResourceActionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_actions_request_unprocessable_entity_error",
            "safeName": "list_resource_actions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ACTIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ACTIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceActionsRequestUnprocessableEntityError",
            "safeName": "ListResourceActionsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_resource_actionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceActionRequestUnprocessableEntityError",
            "safeName": "createResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_action_request_unprocessable_entity_error",
            "safeName": "create_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceActionRequestUnprocessableEntityError",
            "safeName": "CreateResourceActionRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceActionRequestUnprocessableEntityError",
            "safeName": "createResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_action_request_unprocessable_entity_error",
            "safeName": "create_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceActionRequestUnprocessableEntityError",
            "safeName": "CreateResourceActionRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceActionRequestUnprocessableEntityError",
            "safeName": "getResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_action_request_unprocessable_entity_error",
            "safeName": "get_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceActionRequestUnprocessableEntityError",
            "safeName": "GetResourceActionRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceActionRequestUnprocessableEntityError",
            "safeName": "getResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_action_request_unprocessable_entity_error",
            "safeName": "get_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceActionRequestUnprocessableEntityError",
            "safeName": "GetResourceActionRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceActionRequestUnprocessableEntityError",
            "safeName": "deleteResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_action_request_unprocessable_entity_error",
            "safeName": "delete_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceActionRequestUnprocessableEntityError",
            "safeName": "DeleteResourceActionRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceActionRequestUnprocessableEntityError",
            "safeName": "deleteResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_action_request_unprocessable_entity_error",
            "safeName": "delete_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceActionRequestUnprocessableEntityError",
            "safeName": "DeleteResourceActionRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_resource_actionRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceActionRequestUnprocessableEntityError",
            "safeName": "updateResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_action_request_unprocessable_entity_error",
            "safeName": "update_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceActionRequestUnprocessableEntityError",
            "safeName": "UpdateResourceActionRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_actionRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_resource_actionRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceActionRequestUnprocessableEntityError",
            "safeName": "updateResourceActionRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_action_request_unprocessable_entity_error",
            "safeName": "update_resource_action_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ACTION_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceActionRequestUnprocessableEntityError",
            "safeName": "UpdateResourceActionRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_resource_actionRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_resource_action_groupsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_resource_action_groupsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceActionGroupsRequestUnprocessableEntityError",
            "safeName": "listResourceActionGroupsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_action_groups_request_unprocessable_entity_error",
            "safeName": "list_resource_action_groups_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ACTION_GROUPS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ACTION_GROUPS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceActionGroupsRequestUnprocessableEntityError",
            "safeName": "ListResourceActionGroupsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_action_groupsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_resource_action_groupsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceActionGroupsRequestUnprocessableEntityError",
            "safeName": "listResourceActionGroupsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_action_groups_request_unprocessable_entity_error",
            "safeName": "list_resource_action_groups_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ACTION_GROUPS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ACTION_GROUPS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceActionGroupsRequestUnprocessableEntityError",
            "safeName": "ListResourceActionGroupsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_resource_action_groupsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "createResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_action_group_request_unprocessable_entity_error",
            "safeName": "create_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "CreateResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "createResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_action_group_request_unprocessable_entity_error",
            "safeName": "create_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "CreateResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "getResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_action_group_request_unprocessable_entity_error",
            "safeName": "get_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "GetResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "getResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_action_group_request_unprocessable_entity_error",
            "safeName": "get_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "GetResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "deleteResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_action_group_request_unprocessable_entity_error",
            "safeName": "delete_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "DeleteResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "deleteResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_action_group_request_unprocessable_entity_error",
            "safeName": "delete_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "DeleteResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_resource_action_groupRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "updateResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_action_group_request_unprocessable_entity_error",
            "safeName": "update_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "UpdateResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_action_groupRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_resource_action_groupRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "updateResourceActionGroupRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_action_group_request_unprocessable_entity_error",
            "safeName": "update_resource_action_group_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ACTION_GROUP_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceActionGroupRequestUnprocessableEntityError",
            "safeName": "UpdateResourceActionGroupRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_resource_action_groupRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_resource_rolesRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_resource_rolesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceRolesRequestUnprocessableEntityError",
            "safeName": "listResourceRolesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_roles_request_unprocessable_entity_error",
            "safeName": "list_resource_roles_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceRolesRequestUnprocessableEntityError",
            "safeName": "ListResourceRolesRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_rolesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_resource_rolesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceRolesRequestUnprocessableEntityError",
            "safeName": "listResourceRolesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_roles_request_unprocessable_entity_error",
            "safeName": "list_resource_roles_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceRolesRequestUnprocessableEntityError",
            "safeName": "ListResourceRolesRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_resource_rolesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceRoleRequestUnprocessableEntityError",
            "safeName": "createResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_role_request_unprocessable_entity_error",
            "safeName": "create_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceRoleRequestUnprocessableEntityError",
            "safeName": "CreateResourceRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceRoleRequestUnprocessableEntityError",
            "safeName": "createResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_role_request_unprocessable_entity_error",
            "safeName": "create_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceRoleRequestUnprocessableEntityError",
            "safeName": "CreateResourceRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRoleRequestUnprocessableEntityError",
            "safeName": "getResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_role_request_unprocessable_entity_error",
            "safeName": "get_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRoleRequestUnprocessableEntityError",
            "safeName": "GetResourceRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRoleRequestUnprocessableEntityError",
            "safeName": "getResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_role_request_unprocessable_entity_error",
            "safeName": "get_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRoleRequestUnprocessableEntityError",
            "safeName": "GetResourceRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceRoleRequestUnprocessableEntityError",
            "safeName": "deleteResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_role_request_unprocessable_entity_error",
            "safeName": "delete_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceRoleRequestUnprocessableEntityError",
            "safeName": "DeleteResourceRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceRoleRequestUnprocessableEntityError",
            "safeName": "deleteResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_role_request_unprocessable_entity_error",
            "safeName": "delete_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceRoleRequestUnprocessableEntityError",
            "safeName": "DeleteResourceRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceRoleRequestUnprocessableEntityError",
            "safeName": "updateResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_role_request_unprocessable_entity_error",
            "safeName": "update_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceRoleRequestUnprocessableEntityError",
            "safeName": "UpdateResourceRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceRoleRequestUnprocessableEntityError",
            "safeName": "updateResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_role_request_unprocessable_entity_error",
            "safeName": "update_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceRoleRequestUnprocessableEntityError",
            "safeName": "UpdateResourceRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Assign_permissions_to_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignPermissionsToResourceRoleRequestUnprocessableEntityError",
            "safeName": "assignPermissionsToResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_permissions_to_resource_role_request_unprocessable_entity_error",
            "safeName": "assign_permissions_to_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignPermissionsToResourceRoleRequestUnprocessableEntityError",
            "safeName": "AssignPermissionsToResourceRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignPermissionsToResourceRoleRequestUnprocessableEntityError",
            "safeName": "assignPermissionsToResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_permissions_to_resource_role_request_unprocessable_entity_error",
            "safeName": "assign_permissions_to_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_PERMISSIONS_TO_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignPermissionsToResourceRoleRequestUnprocessableEntityError",
            "safeName": "AssignPermissionsToResourceRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Assign_permissions_to_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Remove_permissions_from_resource_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "removePermissionsFromResourceRoleRequestUnprocessableEntityError",
            "safeName": "removePermissionsFromResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "remove_permissions_from_resource_role_request_unprocessable_entity_error",
            "safeName": "remove_permissions_from_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "RemovePermissionsFromResourceRoleRequestUnprocessableEntityError",
            "safeName": "RemovePermissionsFromResourceRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "removePermissionsFromResourceRoleRequestUnprocessableEntityError",
            "safeName": "removePermissionsFromResourceRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "remove_permissions_from_resource_role_request_unprocessable_entity_error",
            "safeName": "remove_permissions_from_resource_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REMOVE_PERMISSIONS_FROM_RESOURCE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "RemovePermissionsFromResourceRoleRequestUnprocessableEntityError",
            "safeName": "RemovePermissionsFromResourceRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Remove_permissions_from_resource_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resource_role_ancestorsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resource_role_ancestorsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "getResourceRoleAncestorsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_role_ancestors_request_unprocessable_entity_error",
            "safeName": "get_resource_role_ancestors_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "GetResourceRoleAncestorsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_role_ancestorsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resource_role_ancestorsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "getResourceRoleAncestorsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_role_ancestors_request_unprocessable_entity_error",
            "safeName": "get_resource_role_ancestors_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "GetResourceRoleAncestorsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resource_role_ancestorsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resource_role_descendantsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resource_role_descendantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "getResourceRoleDescendantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_role_descendants_request_unprocessable_entity_error",
            "safeName": "get_resource_role_descendants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "GetResourceRoleDescendantsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_role_descendantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resource_role_descendantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "getResourceRoleDescendantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_role_descendants_request_unprocessable_entity_error",
            "safeName": "get_resource_role_descendants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "GetResourceRoleDescendantsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resource_role_descendantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_resource_attributesRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_resource_attributesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceAttributesRequestUnprocessableEntityError",
            "safeName": "listResourceAttributesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_attributes_request_unprocessable_entity_error",
            "safeName": "list_resource_attributes_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceAttributesRequestUnprocessableEntityError",
            "safeName": "ListResourceAttributesRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_attributesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_resource_attributesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceAttributesRequestUnprocessableEntityError",
            "safeName": "listResourceAttributesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_attributes_request_unprocessable_entity_error",
            "safeName": "list_resource_attributes_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceAttributesRequestUnprocessableEntityError",
            "safeName": "ListResourceAttributesRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_resource_attributesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceAttributeRequestUnprocessableEntityError",
            "safeName": "createResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_attribute_request_unprocessable_entity_error",
            "safeName": "create_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceAttributeRequestUnprocessableEntityError",
            "safeName": "CreateResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceAttributeRequestUnprocessableEntityError",
            "safeName": "createResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_attribute_request_unprocessable_entity_error",
            "safeName": "create_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceAttributeRequestUnprocessableEntityError",
            "safeName": "CreateResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceAttributeRequestUnprocessableEntityError",
            "safeName": "getResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_attribute_request_unprocessable_entity_error",
            "safeName": "get_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceAttributeRequestUnprocessableEntityError",
            "safeName": "GetResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceAttributeRequestUnprocessableEntityError",
            "safeName": "getResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_attribute_request_unprocessable_entity_error",
            "safeName": "get_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceAttributeRequestUnprocessableEntityError",
            "safeName": "GetResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceAttributeRequestUnprocessableEntityError",
            "safeName": "deleteResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_attribute_request_unprocessable_entity_error",
            "safeName": "delete_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceAttributeRequestUnprocessableEntityError",
            "safeName": "DeleteResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceAttributeRequestUnprocessableEntityError",
            "safeName": "deleteResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_attribute_request_unprocessable_entity_error",
            "safeName": "delete_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceAttributeRequestUnprocessableEntityError",
            "safeName": "DeleteResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_resource_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceAttributeRequestUnprocessableEntityError",
            "safeName": "updateResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_attribute_request_unprocessable_entity_error",
            "safeName": "update_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceAttributeRequestUnprocessableEntityError",
            "safeName": "UpdateResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_resource_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceAttributeRequestUnprocessableEntityError",
            "safeName": "updateResourceAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_attribute_request_unprocessable_entity_error",
            "safeName": "update_resource_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceAttributeRequestUnprocessableEntityError",
            "safeName": "UpdateResourceAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_resource_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_user_attributesRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_user_attributesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listUserAttributesRequestUnprocessableEntityError",
            "safeName": "listUserAttributesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_user_attributes_request_unprocessable_entity_error",
            "safeName": "list_user_attributes_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_USER_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_USER_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListUserAttributesRequestUnprocessableEntityError",
            "safeName": "ListUserAttributesRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_user_attributesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_user_attributesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listUserAttributesRequestUnprocessableEntityError",
            "safeName": "listUserAttributesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_user_attributes_request_unprocessable_entity_error",
            "safeName": "list_user_attributes_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_USER_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_USER_ATTRIBUTES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListUserAttributesRequestUnprocessableEntityError",
            "safeName": "ListUserAttributesRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_user_attributesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createUserAttributeRequestUnprocessableEntityError",
            "safeName": "createUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_user_attribute_request_unprocessable_entity_error",
            "safeName": "create_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateUserAttributeRequestUnprocessableEntityError",
            "safeName": "CreateUserAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createUserAttributeRequestUnprocessableEntityError",
            "safeName": "createUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_user_attribute_request_unprocessable_entity_error",
            "safeName": "create_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateUserAttributeRequestUnprocessableEntityError",
            "safeName": "CreateUserAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getUserAttributeRequestUnprocessableEntityError",
            "safeName": "getUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_user_attribute_request_unprocessable_entity_error",
            "safeName": "get_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetUserAttributeRequestUnprocessableEntityError",
            "safeName": "GetUserAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getUserAttributeRequestUnprocessableEntityError",
            "safeName": "getUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_user_attribute_request_unprocessable_entity_error",
            "safeName": "get_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetUserAttributeRequestUnprocessableEntityError",
            "safeName": "GetUserAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteUserAttributeRequestUnprocessableEntityError",
            "safeName": "deleteUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_user_attribute_request_unprocessable_entity_error",
            "safeName": "delete_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteUserAttributeRequestUnprocessableEntityError",
            "safeName": "DeleteUserAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteUserAttributeRequestUnprocessableEntityError",
            "safeName": "deleteUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_user_attribute_request_unprocessable_entity_error",
            "safeName": "delete_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteUserAttributeRequestUnprocessableEntityError",
            "safeName": "DeleteUserAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_user_attributeRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateUserAttributeRequestUnprocessableEntityError",
            "safeName": "updateUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_user_attribute_request_unprocessable_entity_error",
            "safeName": "update_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateUserAttributeRequestUnprocessableEntityError",
            "safeName": "UpdateUserAttributeRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_user_attributeRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_user_attributeRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateUserAttributeRequestUnprocessableEntityError",
            "safeName": "updateUserAttributeRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_user_attribute_request_unprocessable_entity_error",
            "safeName": "update_user_attribute_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_USER_ATTRIBUTE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateUserAttributeRequestUnprocessableEntityError",
            "safeName": "UpdateUserAttributeRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_user_attributeRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_rolesRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_rolesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listRolesRequestUnprocessableEntityError",
            "safeName": "listRolesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_roles_request_unprocessable_entity_error",
            "safeName": "list_roles_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRolesRequestUnprocessableEntityError",
            "safeName": "ListRolesRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_rolesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_rolesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listRolesRequestUnprocessableEntityError",
            "safeName": "listRolesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_roles_request_unprocessable_entity_error",
            "safeName": "list_roles_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ROLES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRolesRequestUnprocessableEntityError",
            "safeName": "ListRolesRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_rolesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createRoleRequestUnprocessableEntityError",
            "safeName": "createRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_role_request_unprocessable_entity_error",
            "safeName": "create_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRoleRequestUnprocessableEntityError",
            "safeName": "CreateRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createRoleRequestUnprocessableEntityError",
            "safeName": "createRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_role_request_unprocessable_entity_error",
            "safeName": "create_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRoleRequestUnprocessableEntityError",
            "safeName": "CreateRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getRoleRequestUnprocessableEntityError",
            "safeName": "getRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_role_request_unprocessable_entity_error",
            "safeName": "get_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRoleRequestUnprocessableEntityError",
            "safeName": "GetRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getRoleRequestUnprocessableEntityError",
            "safeName": "getRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_role_request_unprocessable_entity_error",
            "safeName": "get_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRoleRequestUnprocessableEntityError",
            "safeName": "GetRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteRoleRequestUnprocessableEntityError",
            "safeName": "deleteRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_role_request_unprocessable_entity_error",
            "safeName": "delete_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteRoleRequestUnprocessableEntityError",
            "safeName": "DeleteRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteRoleRequestUnprocessableEntityError",
            "safeName": "deleteRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_role_request_unprocessable_entity_error",
            "safeName": "delete_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteRoleRequestUnprocessableEntityError",
            "safeName": "DeleteRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateRoleRequestUnprocessableEntityError",
            "safeName": "updateRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_role_request_unprocessable_entity_error",
            "safeName": "update_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateRoleRequestUnprocessableEntityError",
            "safeName": "UpdateRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateRoleRequestUnprocessableEntityError",
            "safeName": "updateRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_role_request_unprocessable_entity_error",
            "safeName": "update_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateRoleRequestUnprocessableEntityError",
            "safeName": "UpdateRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Assign_permissions_to_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Assign_permissions_to_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignPermissionsToRoleRequestUnprocessableEntityError",
            "safeName": "assignPermissionsToRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_permissions_to_role_request_unprocessable_entity_error",
            "safeName": "assign_permissions_to_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_PERMISSIONS_TO_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_PERMISSIONS_TO_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignPermissionsToRoleRequestUnprocessableEntityError",
            "safeName": "AssignPermissionsToRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_permissions_to_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Assign_permissions_to_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignPermissionsToRoleRequestUnprocessableEntityError",
            "safeName": "assignPermissionsToRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_permissions_to_role_request_unprocessable_entity_error",
            "safeName": "assign_permissions_to_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_PERMISSIONS_TO_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_PERMISSIONS_TO_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignPermissionsToRoleRequestUnprocessableEntityError",
            "safeName": "AssignPermissionsToRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Assign_permissions_to_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Remove_permissions_from_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Remove_permissions_from_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "removePermissionsFromRoleRequestUnprocessableEntityError",
            "safeName": "removePermissionsFromRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "remove_permissions_from_role_request_unprocessable_entity_error",
            "safeName": "remove_permissions_from_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REMOVE_PERMISSIONS_FROM_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REMOVE_PERMISSIONS_FROM_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "RemovePermissionsFromRoleRequestUnprocessableEntityError",
            "safeName": "RemovePermissionsFromRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Remove_permissions_from_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Remove_permissions_from_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "removePermissionsFromRoleRequestUnprocessableEntityError",
            "safeName": "removePermissionsFromRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "remove_permissions_from_role_request_unprocessable_entity_error",
            "safeName": "remove_permissions_from_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REMOVE_PERMISSIONS_FROM_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REMOVE_PERMISSIONS_FROM_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "RemovePermissionsFromRoleRequestUnprocessableEntityError",
            "safeName": "RemovePermissionsFromRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Remove_permissions_from_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_role_ancestorsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_role_ancestorsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "getRoleAncestorsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_role_ancestors_request_unprocessable_entity_error",
            "safeName": "get_role_ancestors_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "GetRoleAncestorsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_role_ancestorsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_role_ancestorsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "getRoleAncestorsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_role_ancestors_request_unprocessable_entity_error",
            "safeName": "get_role_ancestors_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ROLE_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRoleAncestorsRequestUnprocessableEntityError",
            "safeName": "GetRoleAncestorsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_role_ancestorsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_role_descendantsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_role_descendantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "getRoleDescendantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_role_descendants_request_unprocessable_entity_error",
            "safeName": "get_role_descendants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "GetRoleDescendantsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_role_descendantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_role_descendantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "getRoleDescendantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_role_descendants_request_unprocessable_entity_error",
            "safeName": "get_role_descendants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_ROLE_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRoleDescendantsRequestUnprocessableEntityError",
            "safeName": "GetRoleDescendantsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_role_descendantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_condition_setsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_condition_setsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listConditionSetsRequestUnprocessableEntityError",
            "safeName": "listConditionSetsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_condition_sets_request_unprocessable_entity_error",
            "safeName": "list_condition_sets_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_CONDITION_SETS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_CONDITION_SETS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListConditionSetsRequestUnprocessableEntityError",
            "safeName": "ListConditionSetsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_condition_setsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_condition_setsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listConditionSetsRequestUnprocessableEntityError",
            "safeName": "listConditionSetsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_condition_sets_request_unprocessable_entity_error",
            "safeName": "list_condition_sets_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_CONDITION_SETS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_CONDITION_SETS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListConditionSetsRequestUnprocessableEntityError",
            "safeName": "ListConditionSetsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_condition_setsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createConditionSetRequestUnprocessableEntityError",
            "safeName": "createConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_condition_set_request_unprocessable_entity_error",
            "safeName": "create_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateConditionSetRequestUnprocessableEntityError",
            "safeName": "CreateConditionSetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createConditionSetRequestUnprocessableEntityError",
            "safeName": "createConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_condition_set_request_unprocessable_entity_error",
            "safeName": "create_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateConditionSetRequestUnprocessableEntityError",
            "safeName": "CreateConditionSetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getConditionSetRequestUnprocessableEntityError",
            "safeName": "getConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_condition_set_request_unprocessable_entity_error",
            "safeName": "get_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetConditionSetRequestUnprocessableEntityError",
            "safeName": "GetConditionSetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getConditionSetRequestUnprocessableEntityError",
            "safeName": "getConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_condition_set_request_unprocessable_entity_error",
            "safeName": "get_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetConditionSetRequestUnprocessableEntityError",
            "safeName": "GetConditionSetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteConditionSetRequestUnprocessableEntityError",
            "safeName": "deleteConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_condition_set_request_unprocessable_entity_error",
            "safeName": "delete_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteConditionSetRequestUnprocessableEntityError",
            "safeName": "DeleteConditionSetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteConditionSetRequestUnprocessableEntityError",
            "safeName": "deleteConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_condition_set_request_unprocessable_entity_error",
            "safeName": "delete_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteConditionSetRequestUnprocessableEntityError",
            "safeName": "DeleteConditionSetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_condition_setRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateConditionSetRequestUnprocessableEntityError",
            "safeName": "updateConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_condition_set_request_unprocessable_entity_error",
            "safeName": "update_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateConditionSetRequestUnprocessableEntityError",
            "safeName": "UpdateConditionSetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_condition_setRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_condition_setRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateConditionSetRequestUnprocessableEntityError",
            "safeName": "updateConditionSetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_condition_set_request_unprocessable_entity_error",
            "safeName": "update_condition_set_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_CONDITION_SET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateConditionSetRequestUnprocessableEntityError",
            "safeName": "UpdateConditionSetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_condition_setRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_condition_set_ancestorsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_condition_set_ancestorsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getConditionSetAncestorsRequestUnprocessableEntityError",
            "safeName": "getConditionSetAncestorsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_condition_set_ancestors_request_unprocessable_entity_error",
            "safeName": "get_condition_set_ancestors_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_CONDITION_SET_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_CONDITION_SET_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetConditionSetAncestorsRequestUnprocessableEntityError",
            "safeName": "GetConditionSetAncestorsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_condition_set_ancestorsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_condition_set_ancestorsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getConditionSetAncestorsRequestUnprocessableEntityError",
            "safeName": "getConditionSetAncestorsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_condition_set_ancestors_request_unprocessable_entity_error",
            "safeName": "get_condition_set_ancestors_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_CONDITION_SET_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_CONDITION_SET_ANCESTORS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetConditionSetAncestorsRequestUnprocessableEntityError",
            "safeName": "GetConditionSetAncestorsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_condition_set_ancestorsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_condition_set_descendantsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_condition_set_descendantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getConditionSetDescendantsRequestUnprocessableEntityError",
            "safeName": "getConditionSetDescendantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_condition_set_descendants_request_unprocessable_entity_error",
            "safeName": "get_condition_set_descendants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_CONDITION_SET_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_CONDITION_SET_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetConditionSetDescendantsRequestUnprocessableEntityError",
            "safeName": "GetConditionSetDescendantsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_condition_set_descendantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_condition_set_descendantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getConditionSetDescendantsRequestUnprocessableEntityError",
            "safeName": "getConditionSetDescendantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_condition_set_descendants_request_unprocessable_entity_error",
            "safeName": "get_condition_set_descendants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_CONDITION_SET_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_CONDITION_SET_DESCENDANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetConditionSetDescendantsRequestUnprocessableEntityError",
            "safeName": "GetConditionSetDescendantsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_condition_set_descendantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_usersRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listUsersRequestUnprocessableEntityError",
            "safeName": "listUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_users_request_unprocessable_entity_error",
            "safeName": "list_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListUsersRequestUnprocessableEntityError",
            "safeName": "ListUsersRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listUsersRequestUnprocessableEntityError",
            "safeName": "listUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_users_request_unprocessable_entity_error",
            "safeName": "list_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListUsersRequestUnprocessableEntityError",
            "safeName": "ListUsersRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createUserRequestUnprocessableEntityError",
            "safeName": "createUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_user_request_unprocessable_entity_error",
            "safeName": "create_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateUserRequestUnprocessableEntityError",
            "safeName": "CreateUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createUserRequestUnprocessableEntityError",
            "safeName": "createUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_user_request_unprocessable_entity_error",
            "safeName": "create_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateUserRequestUnprocessableEntityError",
            "safeName": "CreateUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getUserRequestUnprocessableEntityError",
            "safeName": "getUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_user_request_unprocessable_entity_error",
            "safeName": "get_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetUserRequestUnprocessableEntityError",
            "safeName": "GetUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getUserRequestUnprocessableEntityError",
            "safeName": "getUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_user_request_unprocessable_entity_error",
            "safeName": "get_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetUserRequestUnprocessableEntityError",
            "safeName": "GetUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Replace_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Replace_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "replaceUserRequestUnprocessableEntityError",
            "safeName": "replaceUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "replace_user_request_unprocessable_entity_error",
            "safeName": "replace_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REPLACE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REPLACE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ReplaceUserRequestUnprocessableEntityError",
            "safeName": "ReplaceUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Replace_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Replace_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "replaceUserRequestUnprocessableEntityError",
            "safeName": "replaceUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "replace_user_request_unprocessable_entity_error",
            "safeName": "replace_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REPLACE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "REPLACE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ReplaceUserRequestUnprocessableEntityError",
            "safeName": "ReplaceUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Replace_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteUserRequestUnprocessableEntityError",
            "safeName": "deleteUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_user_request_unprocessable_entity_error",
            "safeName": "delete_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteUserRequestUnprocessableEntityError",
            "safeName": "DeleteUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteUserRequestUnprocessableEntityError",
            "safeName": "deleteUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_user_request_unprocessable_entity_error",
            "safeName": "delete_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteUserRequestUnprocessableEntityError",
            "safeName": "DeleteUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateUserRequestUnprocessableEntityError",
            "safeName": "updateUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_user_request_unprocessable_entity_error",
            "safeName": "update_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateUserRequestUnprocessableEntityError",
            "safeName": "UpdateUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateUserRequestUnprocessableEntityError",
            "safeName": "updateUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_user_request_unprocessable_entity_error",
            "safeName": "update_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateUserRequestUnprocessableEntityError",
            "safeName": "UpdateUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Assign_role_to_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Assign_role_to_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignRoleToUserRequestUnprocessableEntityError",
            "safeName": "assignRoleToUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_role_to_user_request_unprocessable_entity_error",
            "safeName": "assign_role_to_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_ROLE_TO_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_ROLE_TO_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignRoleToUserRequestUnprocessableEntityError",
            "safeName": "AssignRoleToUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_role_to_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Assign_role_to_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignRoleToUserRequestUnprocessableEntityError",
            "safeName": "assignRoleToUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_role_to_user_request_unprocessable_entity_error",
            "safeName": "assign_role_to_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_ROLE_TO_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_ROLE_TO_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignRoleToUserRequestUnprocessableEntityError",
            "safeName": "AssignRoleToUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Assign_role_to_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Unassign_role_from_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Unassign_role_from_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "unassignRoleFromUserRequestUnprocessableEntityError",
            "safeName": "unassignRoleFromUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "unassign_role_from_user_request_unprocessable_entity_error",
            "safeName": "unassign_role_from_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UNASSIGN_ROLE_FROM_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UNASSIGN_ROLE_FROM_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UnassignRoleFromUserRequestUnprocessableEntityError",
            "safeName": "UnassignRoleFromUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Unassign_role_from_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Unassign_role_from_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "unassignRoleFromUserRequestUnprocessableEntityError",
            "safeName": "unassignRoleFromUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "unassign_role_from_user_request_unprocessable_entity_error",
            "safeName": "unassign_role_from_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UNASSIGN_ROLE_FROM_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UNASSIGN_ROLE_FROM_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UnassignRoleFromUserRequestUnprocessableEntityError",
            "safeName": "UnassignRoleFromUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Unassign_role_from_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_tenant_usersRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_tenant_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listTenantUsersRequestUnprocessableEntityError",
            "safeName": "listTenantUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_tenant_users_request_unprocessable_entity_error",
            "safeName": "list_tenant_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TENANT_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_TENANT_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTenantUsersRequestUnprocessableEntityError",
            "safeName": "ListTenantUsersRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_tenant_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_tenant_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listTenantUsersRequestUnprocessableEntityError",
            "safeName": "listTenantUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_tenant_users_request_unprocessable_entity_error",
            "safeName": "list_tenant_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TENANT_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_TENANT_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTenantUsersRequestUnprocessableEntityError",
            "safeName": "ListTenantUsersRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_tenant_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_tenantsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_tenantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listTenantsRequestUnprocessableEntityError",
            "safeName": "listTenantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_tenants_request_unprocessable_entity_error",
            "safeName": "list_tenants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTenantsRequestUnprocessableEntityError",
            "safeName": "ListTenantsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_tenantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_tenantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listTenantsRequestUnprocessableEntityError",
            "safeName": "listTenantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_tenants_request_unprocessable_entity_error",
            "safeName": "list_tenants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTenantsRequestUnprocessableEntityError",
            "safeName": "ListTenantsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_tenantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createTenantRequestUnprocessableEntityError",
            "safeName": "createTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_tenant_request_unprocessable_entity_error",
            "safeName": "create_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTenantRequestUnprocessableEntityError",
            "safeName": "CreateTenantRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createTenantRequestUnprocessableEntityError",
            "safeName": "createTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_tenant_request_unprocessable_entity_error",
            "safeName": "create_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTenantRequestUnprocessableEntityError",
            "safeName": "CreateTenantRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getTenantRequestUnprocessableEntityError",
            "safeName": "getTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_tenant_request_unprocessable_entity_error",
            "safeName": "get_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTenantRequestUnprocessableEntityError",
            "safeName": "GetTenantRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getTenantRequestUnprocessableEntityError",
            "safeName": "getTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_tenant_request_unprocessable_entity_error",
            "safeName": "get_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTenantRequestUnprocessableEntityError",
            "safeName": "GetTenantRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteTenantRequestUnprocessableEntityError",
            "safeName": "deleteTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_tenant_request_unprocessable_entity_error",
            "safeName": "delete_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTenantRequestUnprocessableEntityError",
            "safeName": "DeleteTenantRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteTenantRequestUnprocessableEntityError",
            "safeName": "deleteTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_tenant_request_unprocessable_entity_error",
            "safeName": "delete_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTenantRequestUnprocessableEntityError",
            "safeName": "DeleteTenantRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_tenantRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateTenantRequestUnprocessableEntityError",
            "safeName": "updateTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_tenant_request_unprocessable_entity_error",
            "safeName": "update_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateTenantRequestUnprocessableEntityError",
            "safeName": "UpdateTenantRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_tenantRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_tenantRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateTenantRequestUnprocessableEntityError",
            "safeName": "updateTenantRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_tenant_request_unprocessable_entity_error",
            "safeName": "update_tenant_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_TENANT_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateTenantRequestUnprocessableEntityError",
            "safeName": "UpdateTenantRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_tenantRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_tenant_userRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_tenant_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteTenantUserRequestUnprocessableEntityError",
            "safeName": "deleteTenantUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_tenant_user_request_unprocessable_entity_error",
            "safeName": "delete_tenant_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TENANT_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_TENANT_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTenantUserRequestUnprocessableEntityError",
            "safeName": "DeleteTenantUserRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_tenant_userRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_tenant_userRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteTenantUserRequestUnprocessableEntityError",
            "safeName": "deleteTenantUserRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_tenant_user_request_unprocessable_entity_error",
            "safeName": "delete_tenant_user_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TENANT_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_TENANT_USER_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTenantUserRequestUnprocessableEntityError",
            "safeName": "DeleteTenantUserRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_tenant_userRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_role_assignmentsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_role_assignmentsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listRoleAssignmentsRequestUnprocessableEntityError",
            "safeName": "listRoleAssignmentsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_role_assignments_request_unprocessable_entity_error",
            "safeName": "list_role_assignments_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ROLE_ASSIGNMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ROLE_ASSIGNMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRoleAssignmentsRequestUnprocessableEntityError",
            "safeName": "ListRoleAssignmentsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_role_assignmentsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_role_assignmentsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listRoleAssignmentsRequestUnprocessableEntityError",
            "safeName": "listRoleAssignmentsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_role_assignments_request_unprocessable_entity_error",
            "safeName": "list_role_assignments_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_ROLE_ASSIGNMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_ROLE_ASSIGNMENTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRoleAssignmentsRequestUnprocessableEntityError",
            "safeName": "ListRoleAssignmentsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_role_assignmentsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Assign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Assign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignRoleRequestUnprocessableEntityError",
            "safeName": "assignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_role_request_unprocessable_entity_error",
            "safeName": "assign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignRoleRequestUnprocessableEntityError",
            "safeName": "AssignRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Assign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignRoleRequestUnprocessableEntityError",
            "safeName": "assignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_role_request_unprocessable_entity_error",
            "safeName": "assign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignRoleRequestUnprocessableEntityError",
            "safeName": "AssignRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Assign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Unassign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Unassign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "unassignRoleRequestUnprocessableEntityError",
            "safeName": "unassignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "unassign_role_request_unprocessable_entity_error",
            "safeName": "unassign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UnassignRoleRequestUnprocessableEntityError",
            "safeName": "UnassignRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Unassign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Unassign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "unassignRoleRequestUnprocessableEntityError",
            "safeName": "unassignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "unassign_role_request_unprocessable_entity_error",
            "safeName": "unassign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UnassignRoleRequestUnprocessableEntityError",
            "safeName": "UnassignRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Unassign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Bulk_assign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Bulk_assign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkAssignRoleRequestUnprocessableEntityError",
            "safeName": "bulkAssignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_assign_role_request_unprocessable_entity_error",
            "safeName": "bulk_assign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkAssignRoleRequestUnprocessableEntityError",
            "safeName": "BulkAssignRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_assign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Bulk_assign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkAssignRoleRequestUnprocessableEntityError",
            "safeName": "bulkAssignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_assign_role_request_unprocessable_entity_error",
            "safeName": "bulk_assign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_ASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkAssignRoleRequestUnprocessableEntityError",
            "safeName": "BulkAssignRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Bulk_assign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Bulk_unassign_roleRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Bulk_unassign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkUnassignRoleRequestUnprocessableEntityError",
            "safeName": "bulkUnassignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_unassign_role_request_unprocessable_entity_error",
            "safeName": "bulk_unassign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkUnassignRoleRequestUnprocessableEntityError",
            "safeName": "BulkUnassignRoleRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_unassign_roleRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Bulk_unassign_roleRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkUnassignRoleRequestUnprocessableEntityError",
            "safeName": "bulkUnassignRoleRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_unassign_role_request_unprocessable_entity_error",
            "safeName": "bulk_unassign_role_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_UNASSIGN_ROLE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkUnassignRoleRequestUnprocessableEntityError",
            "safeName": "BulkUnassignRoleRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Bulk_unassign_roleRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_set_permissionsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_set_permissionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listSetPermissionsRequestUnprocessableEntityError",
            "safeName": "listSetPermissionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_set_permissions_request_unprocessable_entity_error",
            "safeName": "list_set_permissions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListSetPermissionsRequestUnprocessableEntityError",
            "safeName": "ListSetPermissionsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_set_permissionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_set_permissionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listSetPermissionsRequestUnprocessableEntityError",
            "safeName": "listSetPermissionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_set_permissions_request_unprocessable_entity_error",
            "safeName": "list_set_permissions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListSetPermissionsRequestUnprocessableEntityError",
            "safeName": "ListSetPermissionsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_set_permissionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Assign_set_permissionsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Assign_set_permissionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "assignSetPermissionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_set_permissions_request_unprocessable_entity_error",
            "safeName": "assign_set_permissions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "AssignSetPermissionsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Assign_set_permissionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Assign_set_permissionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "assignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "assignSetPermissionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "assign_set_permissions_request_unprocessable_entity_error",
            "safeName": "assign_set_permissions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "ASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AssignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "AssignSetPermissionsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Assign_set_permissionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Unassign_set_permissionsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Unassign_set_permissionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "unassignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "unassignSetPermissionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "unassign_set_permissions_request_unprocessable_entity_error",
            "safeName": "unassign_set_permissions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UNASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UNASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UnassignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "UnassignSetPermissionsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Unassign_set_permissionsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Unassign_set_permissionsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "unassignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "unassignSetPermissionsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "unassign_set_permissions_request_unprocessable_entity_error",
            "safeName": "unassign_set_permissions_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UNASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UNASSIGN_SET_PERMISSIONS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UnassignSetPermissionsRequestUnprocessableEntityError",
            "safeName": "UnassignSetPermissionsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Unassign_set_permissionsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "List_resource_instancesRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "List_resource_instancesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceInstancesRequestUnprocessableEntityError",
            "safeName": "listResourceInstancesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_instances_request_unprocessable_entity_error",
            "safeName": "list_resource_instances_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_INSTANCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_INSTANCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceInstancesRequestUnprocessableEntityError",
            "safeName": "ListResourceInstancesRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "List_resource_instancesRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "List_resource_instancesRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "listResourceInstancesRequestUnprocessableEntityError",
            "safeName": "listResourceInstancesRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "list_resource_instances_request_unprocessable_entity_error",
            "safeName": "list_resource_instances_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_RESOURCE_INSTANCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "LIST_RESOURCE_INSTANCES_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListResourceInstancesRequestUnprocessableEntityError",
            "safeName": "ListResourceInstancesRequestUnprocessableEntityError"
          }
        },
        "wireValue": "List_resource_instancesRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceInstanceRequestUnprocessableEntityError",
            "safeName": "createResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_instance_request_unprocessable_entity_error",
            "safeName": "create_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceInstanceRequestUnprocessableEntityError",
            "safeName": "CreateResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createResourceInstanceRequestUnprocessableEntityError",
            "safeName": "createResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_resource_instance_request_unprocessable_entity_error",
            "safeName": "create_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateResourceInstanceRequestUnprocessableEntityError",
            "safeName": "CreateResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceInstanceRequestUnprocessableEntityError",
            "safeName": "getResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_instance_request_unprocessable_entity_error",
            "safeName": "get_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceInstanceRequestUnprocessableEntityError",
            "safeName": "GetResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getResourceInstanceRequestUnprocessableEntityError",
            "safeName": "getResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_resource_instance_request_unprocessable_entity_error",
            "safeName": "get_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetResourceInstanceRequestUnprocessableEntityError",
            "safeName": "GetResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceInstanceRequestUnprocessableEntityError",
            "safeName": "deleteResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_instance_request_unprocessable_entity_error",
            "safeName": "delete_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceInstanceRequestUnprocessableEntityError",
            "safeName": "DeleteResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteResourceInstanceRequestUnprocessableEntityError",
            "safeName": "deleteResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_resource_instance_request_unprocessable_entity_error",
            "safeName": "delete_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteResourceInstanceRequestUnprocessableEntityError",
            "safeName": "DeleteResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Update_resource_instanceRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Update_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceInstanceRequestUnprocessableEntityError",
            "safeName": "updateResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_instance_request_unprocessable_entity_error",
            "safeName": "update_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceInstanceRequestUnprocessableEntityError",
            "safeName": "UpdateResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Update_resource_instanceRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Update_resource_instanceRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "updateResourceInstanceRequestUnprocessableEntityError",
            "safeName": "updateResourceInstanceRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "update_resource_instance_request_unprocessable_entity_error",
            "safeName": "update_resource_instance_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPDATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "UPDATE_RESOURCE_INSTANCE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UpdateResourceInstanceRequestUnprocessableEntityError",
            "safeName": "UpdateResourceInstanceRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Update_resource_instanceRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Bulk_create_usersRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Bulk_create_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkCreateUsersRequestUnprocessableEntityError",
            "safeName": "bulkCreateUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_create_users_request_unprocessable_entity_error",
            "safeName": "bulk_create_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_CREATE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_CREATE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkCreateUsersRequestUnprocessableEntityError",
            "safeName": "BulkCreateUsersRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_create_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Bulk_create_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkCreateUsersRequestUnprocessableEntityError",
            "safeName": "bulkCreateUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_create_users_request_unprocessable_entity_error",
            "safeName": "bulk_create_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_CREATE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_CREATE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkCreateUsersRequestUnprocessableEntityError",
            "safeName": "BulkCreateUsersRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Bulk_create_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Bulk_replace_usersRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Bulk_replace_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkReplaceUsersRequestUnprocessableEntityError",
            "safeName": "bulkReplaceUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_replace_users_request_unprocessable_entity_error",
            "safeName": "bulk_replace_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_REPLACE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_REPLACE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkReplaceUsersRequestUnprocessableEntityError",
            "safeName": "BulkReplaceUsersRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_replace_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Bulk_replace_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkReplaceUsersRequestUnprocessableEntityError",
            "safeName": "bulkReplaceUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_replace_users_request_unprocessable_entity_error",
            "safeName": "bulk_replace_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_REPLACE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_REPLACE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkReplaceUsersRequestUnprocessableEntityError",
            "safeName": "BulkReplaceUsersRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Bulk_replace_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Bulk_delete_usersRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Bulk_delete_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkDeleteUsersRequestUnprocessableEntityError",
            "safeName": "bulkDeleteUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_delete_users_request_unprocessable_entity_error",
            "safeName": "bulk_delete_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_DELETE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_DELETE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkDeleteUsersRequestUnprocessableEntityError",
            "safeName": "BulkDeleteUsersRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_delete_usersRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Bulk_delete_usersRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkDeleteUsersRequestUnprocessableEntityError",
            "safeName": "bulkDeleteUsersRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_delete_users_request_unprocessable_entity_error",
            "safeName": "bulk_delete_users_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_DELETE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_DELETE_USERS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkDeleteUsersRequestUnprocessableEntityError",
            "safeName": "BulkDeleteUsersRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Bulk_delete_usersRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Bulk_create_tenantsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Bulk_create_tenantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkCreateTenantsRequestUnprocessableEntityError",
            "safeName": "bulkCreateTenantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_create_tenants_request_unprocessable_entity_error",
            "safeName": "bulk_create_tenants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_CREATE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_CREATE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkCreateTenantsRequestUnprocessableEntityError",
            "safeName": "BulkCreateTenantsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_create_tenantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Bulk_create_tenantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkCreateTenantsRequestUnprocessableEntityError",
            "safeName": "bulkCreateTenantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_create_tenants_request_unprocessable_entity_error",
            "safeName": "bulk_create_tenants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_CREATE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_CREATE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkCreateTenantsRequestUnprocessableEntityError",
            "safeName": "BulkCreateTenantsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Bulk_create_tenantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Bulk_delete_tenantsRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Bulk_delete_tenantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkDeleteTenantsRequestUnprocessableEntityError",
            "safeName": "bulkDeleteTenantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_delete_tenants_request_unprocessable_entity_error",
            "safeName": "bulk_delete_tenants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_DELETE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_DELETE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkDeleteTenantsRequestUnprocessableEntityError",
            "safeName": "BulkDeleteTenantsRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Bulk_delete_tenantsRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Bulk_delete_tenantsRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "bulkDeleteTenantsRequestUnprocessableEntityError",
            "safeName": "bulkDeleteTenantsRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "bulk_delete_tenants_request_unprocessable_entity_error",
            "safeName": "bulk_delete_tenants_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_DELETE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "BULK_DELETE_TENANTS_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "BulkDeleteTenantsRequestUnprocessableEntityError",
            "safeName": "BulkDeleteTenantsRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Bulk_delete_tenantsRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    }
  },
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "https://api.permit.io",
    "environments": {
      "environments": [
        {
          "id": "https://api.permit.io",
          "name": {
            "originalName": "https://api.permit.io",
            "camelCase": {
              "unsafeName": "httpsApiPermitIo",
              "safeName": "httpsApiPermitIo"
            },
            "snakeCase": {
              "unsafeName": "https_api_permit_io",
              "safeName": "https_api_permit_io"
            },
            "screamingSnakeCase": {
              "unsafeName": "HTTPS_API_PERMIT_IO",
              "safeName": "HTTPS_API_PERMIT_IO"
            },
            "pascalCase": {
              "unsafeName": "HttpsApiPermitIo",
              "safeName": "HttpsApiPermitIo"
            }
          },
          "url": "https://api.permit.io"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "ActionBlockEditable",
      "ActionBlockRead",
      "AddRolePermissions",
      "AttributeBlockEditable",
      "AttributeBlockRead",
      "AttributeType",
      "BulkRoleAssignmentReport",
      "BulkRoleUnAssignmentReport",
      "ConditionSetCreate",
      "ConditionSetRead",
      "ConditionSetRuleCreate",
      "ConditionSetRuleRead",
      "ConditionSetRuleRemove",
      "ConditionSetType",
      "ConditionSetUpdate",
      "EnvironmentCopy",
      "EnvironmentCopyScope",
      "EnvironmentCopyScopeFilters",
      "EnvironmentCopyTarget",
      "EnvironmentCreate",
      "EnvironmentRead",
      "EnvironmentStats",
      "EnvironmentUpdate",
      "HTTPValidationError",
      "IdentityRead",
      "InviteRead",
      "InviteStatus",
      "JwksObj",
      "MemberAccessLevel",
      "MemberAccessObj",
      "OnboardingStep",
      "OrgMemberReadWithGrants",
      "OrganizationCreate",
      "OrganizationRead",
      "OrganizationReadWithAPIKey",
      "OrganizationUpdate",
      "PDPConfigRead",
      "PaginatedResult_ConditionSetRead_",
      "PaginatedResult_ResourceRead_",
      "PaginatedResult_ResourceRoleRead_",
      "PaginatedResult_RoleRead_",
      "PaginatedResult_TenantRead_",
      "PaginatedResult_UserRead_",
      "Permission",
      "ProjectCreate",
      "ProjectRead",
      "ProjectUpdate",
      "RelationsBlock",
      "RemoveRolePermissions",
      "ResourceActionCreate",
      "ResourceActionGroupCreate",
      "ResourceActionGroupRead",
      "ResourceActionGroupUpdate",
      "ResourceActionRead",
      "ResourceActionUpdate",
      "ResourceAttributeCreate",
      "ResourceAttributeRead",
      "ResourceAttributeUpdate",
      "ResourceCreate",
      "ResourceInstanceCreate",
      "ResourceInstanceRead",
      "ResourceInstanceUpdate",
      "ResourceRead",
      "ResourceReplace",
      "ResourceRoleCreate",
      "ResourceRoleList",
      "ResourceRoleRead",
      "ResourceRoleUpdate",
      "ResourceUpdate",
      "RoleAssignmentCreate",
      "RoleAssignmentRead",
      "RoleAssignmentRemove",
      "RoleBlock",
      "RoleCreate",
      "RoleList",
      "RoleRead",
      "RoleUpdate",
      "RolesBlock",
      "Statistics",
      "TenantCreate",
      "TenantCreateBulkOperation",
      "TenantCreateBulkOperationResult",
      "TenantDeleteBulkOperation",
      "TenantDeleteBulkOperationResult",
      "TenantRead",
      "TenantUpdate",
      "UserCreate",
      "UserCreateBulkOperation",
      "UserCreateBulkOperationResult",
      "UserDeleteBulkOperation",
      "UserDeleteBulkOperationResult",
      "UserInTenant",
      "UserRead",
      "UserReplaceBulkOperation",
      "UserReplaceBulkOperationResult",
      "UserRole",
      "UserRoleCreate",
      "UserRoleRemove",
      "UserStatus",
      "UserUpdate",
      "ValidationError"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_organizations",
      "subpackage_projects",
      "subpackage_environments",
      "subpackage_resources",
      "subpackage_resourceActions",
      "subpackage_resourceActionGroups",
      "subpackage_resourceRoles",
      "subpackage_resourceAttributes",
      "subpackage_userAttributes",
      "subpackage_roles",
      "subpackage_conditionSets",
      "subpackage_users",
      "subpackage_tenants",
      "subpackage_roleAssignments",
      "subpackage_conditionSetRules",
      "subpackage_resourceInstances",
      "subpackage_bulkOperations"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_organizations": {
      "name": {
        "originalName": "organizations",
        "camelCase": {
          "unsafeName": "organizations",
          "safeName": "organizations"
        },
        "snakeCase": {
          "unsafeName": "organizations",
          "safeName": "organizations"
        },
        "screamingSnakeCase": {
          "unsafeName": "ORGANIZATIONS",
          "safeName": "ORGANIZATIONS"
        },
        "pascalCase": {
          "unsafeName": "Organizations",
          "safeName": "Organizations"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "organizations",
            "camelCase": {
              "unsafeName": "organizations",
              "safeName": "organizations"
            },
            "snakeCase": {
              "unsafeName": "organizations",
              "safeName": "organizations"
            },
            "screamingSnakeCase": {
              "unsafeName": "ORGANIZATIONS",
              "safeName": "ORGANIZATIONS"
            },
            "pascalCase": {
              "unsafeName": "Organizations",
              "safeName": "Organizations"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "organizations",
          "camelCase": {
            "unsafeName": "organizations",
            "safeName": "organizations"
          },
          "snakeCase": {
            "unsafeName": "organizations",
            "safeName": "organizations"
          },
          "screamingSnakeCase": {
            "unsafeName": "ORGANIZATIONS",
            "safeName": "ORGANIZATIONS"
          },
          "pascalCase": {
            "unsafeName": "Organizations",
            "safeName": "Organizations"
          }
        }
      },
      "service": "service_organizations",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_projects": {
      "name": {
        "originalName": "projects",
        "camelCase": {
          "unsafeName": "projects",
          "safeName": "projects"
        },
        "snakeCase": {
          "unsafeName": "projects",
          "safeName": "projects"
        },
        "screamingSnakeCase": {
          "unsafeName": "PROJECTS",
          "safeName": "PROJECTS"
        },
        "pascalCase": {
          "unsafeName": "Projects",
          "safeName": "Projects"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "projects",
            "camelCase": {
              "unsafeName": "projects",
              "safeName": "projects"
            },
            "snakeCase": {
              "unsafeName": "projects",
              "safeName": "projects"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROJECTS",
              "safeName": "PROJECTS"
            },
            "pascalCase": {
              "unsafeName": "Projects",
              "safeName": "Projects"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "projects",
          "camelCase": {
            "unsafeName": "projects",
            "safeName": "projects"
          },
          "snakeCase": {
            "unsafeName": "projects",
            "safeName": "projects"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROJECTS",
            "safeName": "PROJECTS"
          },
          "pascalCase": {
            "unsafeName": "Projects",
            "safeName": "Projects"
          }
        }
      },
      "service": "service_projects",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_environments": {
      "name": {
        "originalName": "environments",
        "camelCase": {
          "unsafeName": "environments",
          "safeName": "environments"
        },
        "snakeCase": {
          "unsafeName": "environments",
          "safeName": "environments"
        },
        "screamingSnakeCase": {
          "unsafeName": "ENVIRONMENTS",
          "safeName": "ENVIRONMENTS"
        },
        "pascalCase": {
          "unsafeName": "Environments",
          "safeName": "Environments"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "environments",
            "camelCase": {
              "unsafeName": "environments",
              "safeName": "environments"
            },
            "snakeCase": {
              "unsafeName": "environments",
              "safeName": "environments"
            },
            "screamingSnakeCase": {
              "unsafeName": "ENVIRONMENTS",
              "safeName": "ENVIRONMENTS"
            },
            "pascalCase": {
              "unsafeName": "Environments",
              "safeName": "Environments"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "environments",
          "camelCase": {
            "unsafeName": "environments",
            "safeName": "environments"
          },
          "snakeCase": {
            "unsafeName": "environments",
            "safeName": "environments"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENVIRONMENTS",
            "safeName": "ENVIRONMENTS"
          },
          "pascalCase": {
            "unsafeName": "Environments",
            "safeName": "Environments"
          }
        }
      },
      "service": "service_environments",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resources": {
      "name": {
        "originalName": "resources",
        "camelCase": {
          "unsafeName": "resources",
          "safeName": "resources"
        },
        "snakeCase": {
          "unsafeName": "resources",
          "safeName": "resources"
        },
        "screamingSnakeCase": {
          "unsafeName": "RESOURCES",
          "safeName": "RESOURCES"
        },
        "pascalCase": {
          "unsafeName": "Resources",
          "safeName": "Resources"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "resources",
            "camelCase": {
              "unsafeName": "resources",
              "safeName": "resources"
            },
            "snakeCase": {
              "unsafeName": "resources",
              "safeName": "resources"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCES",
              "safeName": "RESOURCES"
            },
            "pascalCase": {
              "unsafeName": "Resources",
              "safeName": "Resources"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "resources",
          "camelCase": {
            "unsafeName": "resources",
            "safeName": "resources"
          },
          "snakeCase": {
            "unsafeName": "resources",
            "safeName": "resources"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCES",
            "safeName": "RESOURCES"
          },
          "pascalCase": {
            "unsafeName": "Resources",
            "safeName": "Resources"
          }
        }
      },
      "service": "service_resources",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceActions": {
      "name": {
        "originalName": "resourceActions",
        "camelCase": {
          "unsafeName": "resourceActions",
          "safeName": "resourceActions"
        },
        "snakeCase": {
          "unsafeName": "resource_actions",
          "safeName": "resource_actions"
        },
        "screamingSnakeCase": {
          "unsafeName": "RESOURCE_ACTIONS",
          "safeName": "RESOURCE_ACTIONS"
        },
        "pascalCase": {
          "unsafeName": "ResourceActions",
          "safeName": "ResourceActions"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "resourceActions",
            "camelCase": {
              "unsafeName": "resourceActions",
              "safeName": "resourceActions"
            },
            "snakeCase": {
              "unsafeName": "resource_actions",
              "safeName": "resource_actions"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ACTIONS",
              "safeName": "RESOURCE_ACTIONS"
            },
            "pascalCase": {
              "unsafeName": "ResourceActions",
              "safeName": "ResourceActions"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "resourceActions",
          "camelCase": {
            "unsafeName": "resourceActions",
            "safeName": "resourceActions"
          },
          "snakeCase": {
            "unsafeName": "resource_actions",
            "safeName": "resource_actions"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTIONS",
            "safeName": "RESOURCE_ACTIONS"
          },
          "pascalCase": {
            "unsafeName": "ResourceActions",
            "safeName": "ResourceActions"
          }
        }
      },
      "service": "service_resourceActions",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceActionGroups": {
      "name": {
        "originalName": "resourceActionGroups",
        "camelCase": {
          "unsafeName": "resourceActionGroups",
          "safeName": "resourceActionGroups"
        },
        "snakeCase": {
          "unsafeName": "resource_action_groups",
          "safeName": "resource_action_groups"
        },
        "screamingSnakeCase": {
          "unsafeName": "RESOURCE_ACTION_GROUPS",
          "safeName": "RESOURCE_ACTION_GROUPS"
        },
        "pascalCase": {
          "unsafeName": "ResourceActionGroups",
          "safeName": "ResourceActionGroups"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "resourceActionGroups",
            "camelCase": {
              "unsafeName": "resourceActionGroups",
              "safeName": "resourceActionGroups"
            },
            "snakeCase": {
              "unsafeName": "resource_action_groups",
              "safeName": "resource_action_groups"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ACTION_GROUPS",
              "safeName": "RESOURCE_ACTION_GROUPS"
            },
            "pascalCase": {
              "unsafeName": "ResourceActionGroups",
              "safeName": "ResourceActionGroups"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "resourceActionGroups",
          "camelCase": {
            "unsafeName": "resourceActionGroups",
            "safeName": "resourceActionGroups"
          },
          "snakeCase": {
            "unsafeName": "resource_action_groups",
            "safeName": "resource_action_groups"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ACTION_GROUPS",
            "safeName": "RESOURCE_ACTION_GROUPS"
          },
          "pascalCase": {
            "unsafeName": "ResourceActionGroups",
            "safeName": "ResourceActionGroups"
          }
        }
      },
      "service": "service_resourceActionGroups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceRoles": {
      "name": {
        "originalName": "resourceRoles",
        "camelCase": {
          "unsafeName": "resourceRoles",
          "safeName": "resourceRoles"
        },
        "snakeCase": {
          "unsafeName": "resource_roles",
          "safeName": "resource_roles"
        },
        "screamingSnakeCase": {
          "unsafeName": "RESOURCE_ROLES",
          "safeName": "RESOURCE_ROLES"
        },
        "pascalCase": {
          "unsafeName": "ResourceRoles",
          "safeName": "ResourceRoles"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "resourceRoles",
            "camelCase": {
              "unsafeName": "resourceRoles",
              "safeName": "resourceRoles"
            },
            "snakeCase": {
              "unsafeName": "resource_roles",
              "safeName": "resource_roles"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ROLES",
              "safeName": "RESOURCE_ROLES"
            },
            "pascalCase": {
              "unsafeName": "ResourceRoles",
              "safeName": "ResourceRoles"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "resourceRoles",
          "camelCase": {
            "unsafeName": "resourceRoles",
            "safeName": "resourceRoles"
          },
          "snakeCase": {
            "unsafeName": "resource_roles",
            "safeName": "resource_roles"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ROLES",
            "safeName": "RESOURCE_ROLES"
          },
          "pascalCase": {
            "unsafeName": "ResourceRoles",
            "safeName": "ResourceRoles"
          }
        }
      },
      "service": "service_resourceRoles",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceAttributes": {
      "name": {
        "originalName": "resourceAttributes",
        "camelCase": {
          "unsafeName": "resourceAttributes",
          "safeName": "resourceAttributes"
        },
        "snakeCase": {
          "unsafeName": "resource_attributes",
          "safeName": "resource_attributes"
        },
        "screamingSnakeCase": {
          "unsafeName": "RESOURCE_ATTRIBUTES",
          "safeName": "RESOURCE_ATTRIBUTES"
        },
        "pascalCase": {
          "unsafeName": "ResourceAttributes",
          "safeName": "ResourceAttributes"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "resourceAttributes",
            "camelCase": {
              "unsafeName": "resourceAttributes",
              "safeName": "resourceAttributes"
            },
            "snakeCase": {
              "unsafeName": "resource_attributes",
              "safeName": "resource_attributes"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_ATTRIBUTES",
              "safeName": "RESOURCE_ATTRIBUTES"
            },
            "pascalCase": {
              "unsafeName": "ResourceAttributes",
              "safeName": "ResourceAttributes"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "resourceAttributes",
          "camelCase": {
            "unsafeName": "resourceAttributes",
            "safeName": "resourceAttributes"
          },
          "snakeCase": {
            "unsafeName": "resource_attributes",
            "safeName": "resource_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_ATTRIBUTES",
            "safeName": "RESOURCE_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "ResourceAttributes",
            "safeName": "ResourceAttributes"
          }
        }
      },
      "service": "service_resourceAttributes",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_userAttributes": {
      "name": {
        "originalName": "userAttributes",
        "camelCase": {
          "unsafeName": "userAttributes",
          "safeName": "userAttributes"
        },
        "snakeCase": {
          "unsafeName": "user_attributes",
          "safeName": "user_attributes"
        },
        "screamingSnakeCase": {
          "unsafeName": "USER_ATTRIBUTES",
          "safeName": "USER_ATTRIBUTES"
        },
        "pascalCase": {
          "unsafeName": "UserAttributes",
          "safeName": "UserAttributes"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "userAttributes",
            "camelCase": {
              "unsafeName": "userAttributes",
              "safeName": "userAttributes"
            },
            "snakeCase": {
              "unsafeName": "user_attributes",
              "safeName": "user_attributes"
            },
            "screamingSnakeCase": {
              "unsafeName": "USER_ATTRIBUTES",
              "safeName": "USER_ATTRIBUTES"
            },
            "pascalCase": {
              "unsafeName": "UserAttributes",
              "safeName": "UserAttributes"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "userAttributes",
          "camelCase": {
            "unsafeName": "userAttributes",
            "safeName": "userAttributes"
          },
          "snakeCase": {
            "unsafeName": "user_attributes",
            "safeName": "user_attributes"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_ATTRIBUTES",
            "safeName": "USER_ATTRIBUTES"
          },
          "pascalCase": {
            "unsafeName": "UserAttributes",
            "safeName": "UserAttributes"
          }
        }
      },
      "service": "service_userAttributes",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_roles": {
      "name": {
        "originalName": "roles",
        "camelCase": {
          "unsafeName": "roles",
          "safeName": "roles"
        },
        "snakeCase": {
          "unsafeName": "roles",
          "safeName": "roles"
        },
        "screamingSnakeCase": {
          "unsafeName": "ROLES",
          "safeName": "ROLES"
        },
        "pascalCase": {
          "unsafeName": "Roles",
          "safeName": "Roles"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "roles",
            "camelCase": {
              "unsafeName": "roles",
              "safeName": "roles"
            },
            "snakeCase": {
              "unsafeName": "roles",
              "safeName": "roles"
            },
            "screamingSnakeCase": {
              "unsafeName": "ROLES",
              "safeName": "ROLES"
            },
            "pascalCase": {
              "unsafeName": "Roles",
              "safeName": "Roles"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "roles",
          "camelCase": {
            "unsafeName": "roles",
            "safeName": "roles"
          },
          "snakeCase": {
            "unsafeName": "roles",
            "safeName": "roles"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLES",
            "safeName": "ROLES"
          },
          "pascalCase": {
            "unsafeName": "Roles",
            "safeName": "Roles"
          }
        }
      },
      "service": "service_roles",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_conditionSets": {
      "name": {
        "originalName": "conditionSets",
        "camelCase": {
          "unsafeName": "conditionSets",
          "safeName": "conditionSets"
        },
        "snakeCase": {
          "unsafeName": "condition_sets",
          "safeName": "condition_sets"
        },
        "screamingSnakeCase": {
          "unsafeName": "CONDITION_SETS",
          "safeName": "CONDITION_SETS"
        },
        "pascalCase": {
          "unsafeName": "ConditionSets",
          "safeName": "ConditionSets"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "conditionSets",
            "camelCase": {
              "unsafeName": "conditionSets",
              "safeName": "conditionSets"
            },
            "snakeCase": {
              "unsafeName": "condition_sets",
              "safeName": "condition_sets"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONDITION_SETS",
              "safeName": "CONDITION_SETS"
            },
            "pascalCase": {
              "unsafeName": "ConditionSets",
              "safeName": "ConditionSets"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "conditionSets",
          "camelCase": {
            "unsafeName": "conditionSets",
            "safeName": "conditionSets"
          },
          "snakeCase": {
            "unsafeName": "condition_sets",
            "safeName": "condition_sets"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SETS",
            "safeName": "CONDITION_SETS"
          },
          "pascalCase": {
            "unsafeName": "ConditionSets",
            "safeName": "ConditionSets"
          }
        }
      },
      "service": "service_conditionSets",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_users": {
      "name": {
        "originalName": "users",
        "camelCase": {
          "unsafeName": "users",
          "safeName": "users"
        },
        "snakeCase": {
          "unsafeName": "users",
          "safeName": "users"
        },
        "screamingSnakeCase": {
          "unsafeName": "USERS",
          "safeName": "USERS"
        },
        "pascalCase": {
          "unsafeName": "Users",
          "safeName": "Users"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "users",
            "camelCase": {
              "unsafeName": "users",
              "safeName": "users"
            },
            "snakeCase": {
              "unsafeName": "users",
              "safeName": "users"
            },
            "screamingSnakeCase": {
              "unsafeName": "USERS",
              "safeName": "USERS"
            },
            "pascalCase": {
              "unsafeName": "Users",
              "safeName": "Users"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "users",
          "camelCase": {
            "unsafeName": "users",
            "safeName": "users"
          },
          "snakeCase": {
            "unsafeName": "users",
            "safeName": "users"
          },
          "screamingSnakeCase": {
            "unsafeName": "USERS",
            "safeName": "USERS"
          },
          "pascalCase": {
            "unsafeName": "Users",
            "safeName": "Users"
          }
        }
      },
      "service": "service_users",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_tenants": {
      "name": {
        "originalName": "tenants",
        "camelCase": {
          "unsafeName": "tenants",
          "safeName": "tenants"
        },
        "snakeCase": {
          "unsafeName": "tenants",
          "safeName": "tenants"
        },
        "screamingSnakeCase": {
          "unsafeName": "TENANTS",
          "safeName": "TENANTS"
        },
        "pascalCase": {
          "unsafeName": "Tenants",
          "safeName": "Tenants"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "tenants",
            "camelCase": {
              "unsafeName": "tenants",
              "safeName": "tenants"
            },
            "snakeCase": {
              "unsafeName": "tenants",
              "safeName": "tenants"
            },
            "screamingSnakeCase": {
              "unsafeName": "TENANTS",
              "safeName": "TENANTS"
            },
            "pascalCase": {
              "unsafeName": "Tenants",
              "safeName": "Tenants"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "tenants",
          "camelCase": {
            "unsafeName": "tenants",
            "safeName": "tenants"
          },
          "snakeCase": {
            "unsafeName": "tenants",
            "safeName": "tenants"
          },
          "screamingSnakeCase": {
            "unsafeName": "TENANTS",
            "safeName": "TENANTS"
          },
          "pascalCase": {
            "unsafeName": "Tenants",
            "safeName": "Tenants"
          }
        }
      },
      "service": "service_tenants",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_roleAssignments": {
      "name": {
        "originalName": "roleAssignments",
        "camelCase": {
          "unsafeName": "roleAssignments",
          "safeName": "roleAssignments"
        },
        "snakeCase": {
          "unsafeName": "role_assignments",
          "safeName": "role_assignments"
        },
        "screamingSnakeCase": {
          "unsafeName": "ROLE_ASSIGNMENTS",
          "safeName": "ROLE_ASSIGNMENTS"
        },
        "pascalCase": {
          "unsafeName": "RoleAssignments",
          "safeName": "RoleAssignments"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "roleAssignments",
            "camelCase": {
              "unsafeName": "roleAssignments",
              "safeName": "roleAssignments"
            },
            "snakeCase": {
              "unsafeName": "role_assignments",
              "safeName": "role_assignments"
            },
            "screamingSnakeCase": {
              "unsafeName": "ROLE_ASSIGNMENTS",
              "safeName": "ROLE_ASSIGNMENTS"
            },
            "pascalCase": {
              "unsafeName": "RoleAssignments",
              "safeName": "RoleAssignments"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "roleAssignments",
          "camelCase": {
            "unsafeName": "roleAssignments",
            "safeName": "roleAssignments"
          },
          "snakeCase": {
            "unsafeName": "role_assignments",
            "safeName": "role_assignments"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE_ASSIGNMENTS",
            "safeName": "ROLE_ASSIGNMENTS"
          },
          "pascalCase": {
            "unsafeName": "RoleAssignments",
            "safeName": "RoleAssignments"
          }
        }
      },
      "service": "service_roleAssignments",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_conditionSetRules": {
      "name": {
        "originalName": "conditionSetRules",
        "camelCase": {
          "unsafeName": "conditionSetRules",
          "safeName": "conditionSetRules"
        },
        "snakeCase": {
          "unsafeName": "condition_set_rules",
          "safeName": "condition_set_rules"
        },
        "screamingSnakeCase": {
          "unsafeName": "CONDITION_SET_RULES",
          "safeName": "CONDITION_SET_RULES"
        },
        "pascalCase": {
          "unsafeName": "ConditionSetRules",
          "safeName": "ConditionSetRules"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "conditionSetRules",
            "camelCase": {
              "unsafeName": "conditionSetRules",
              "safeName": "conditionSetRules"
            },
            "snakeCase": {
              "unsafeName": "condition_set_rules",
              "safeName": "condition_set_rules"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONDITION_SET_RULES",
              "safeName": "CONDITION_SET_RULES"
            },
            "pascalCase": {
              "unsafeName": "ConditionSetRules",
              "safeName": "ConditionSetRules"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "conditionSetRules",
          "camelCase": {
            "unsafeName": "conditionSetRules",
            "safeName": "conditionSetRules"
          },
          "snakeCase": {
            "unsafeName": "condition_set_rules",
            "safeName": "condition_set_rules"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONDITION_SET_RULES",
            "safeName": "CONDITION_SET_RULES"
          },
          "pascalCase": {
            "unsafeName": "ConditionSetRules",
            "safeName": "ConditionSetRules"
          }
        }
      },
      "service": "service_conditionSetRules",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_resourceInstances": {
      "name": {
        "originalName": "resourceInstances",
        "camelCase": {
          "unsafeName": "resourceInstances",
          "safeName": "resourceInstances"
        },
        "snakeCase": {
          "unsafeName": "resource_instances",
          "safeName": "resource_instances"
        },
        "screamingSnakeCase": {
          "unsafeName": "RESOURCE_INSTANCES",
          "safeName": "RESOURCE_INSTANCES"
        },
        "pascalCase": {
          "unsafeName": "ResourceInstances",
          "safeName": "ResourceInstances"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "resourceInstances",
            "camelCase": {
              "unsafeName": "resourceInstances",
              "safeName": "resourceInstances"
            },
            "snakeCase": {
              "unsafeName": "resource_instances",
              "safeName": "resource_instances"
            },
            "screamingSnakeCase": {
              "unsafeName": "RESOURCE_INSTANCES",
              "safeName": "RESOURCE_INSTANCES"
            },
            "pascalCase": {
              "unsafeName": "ResourceInstances",
              "safeName": "ResourceInstances"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "resourceInstances",
          "camelCase": {
            "unsafeName": "resourceInstances",
            "safeName": "resourceInstances"
          },
          "snakeCase": {
            "unsafeName": "resource_instances",
            "safeName": "resource_instances"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESOURCE_INSTANCES",
            "safeName": "RESOURCE_INSTANCES"
          },
          "pascalCase": {
            "unsafeName": "ResourceInstances",
            "safeName": "ResourceInstances"
          }
        }
      },
      "service": "service_resourceInstances",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_bulkOperations": {
      "name": {
        "originalName": "bulkOperations",
        "camelCase": {
          "unsafeName": "bulkOperations",
          "safeName": "bulkOperations"
        },
        "snakeCase": {
          "unsafeName": "bulk_operations",
          "safeName": "bulk_operations"
        },
        "screamingSnakeCase": {
          "unsafeName": "BULK_OPERATIONS",
          "safeName": "BULK_OPERATIONS"
        },
        "pascalCase": {
          "unsafeName": "BulkOperations",
          "safeName": "BulkOperations"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "bulkOperations",
            "camelCase": {
              "unsafeName": "bulkOperations",
              "safeName": "bulkOperations"
            },
            "snakeCase": {
              "unsafeName": "bulk_operations",
              "safeName": "bulk_operations"
            },
            "screamingSnakeCase": {
              "unsafeName": "BULK_OPERATIONS",
              "safeName": "BULK_OPERATIONS"
            },
            "pascalCase": {
              "unsafeName": "BulkOperations",
              "safeName": "BulkOperations"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "bulkOperations",
          "camelCase": {
            "unsafeName": "bulkOperations",
            "safeName": "bulkOperations"
          },
          "snakeCase": {
            "unsafeName": "bulk_operations",
            "safeName": "bulk_operations"
          },
          "screamingSnakeCase": {
            "unsafeName": "BULK_OPERATIONS",
            "safeName": "BULK_OPERATIONS"
          },
          "pascalCase": {
            "unsafeName": "BulkOperations",
            "safeName": "BulkOperations"
          }
        }
      },
      "service": "service_bulkOperations",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": {
    "originalName": "",
    "camelCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "snakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "screamingSnakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "pascalCase": {
      "unsafeName": "",
      "safeName": ""
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceId",
          "safeName": "errorInstanceId"
        },
        "snakeCase": {
          "unsafeName": "error_instance_id",
          "safeName": "error_instance_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "ERROR_INSTANCE_ID",
          "safeName": "ERROR_INSTANCE_ID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceId",
          "safeName": "ErrorInstanceId"
        }
      },
      "wireValue": "errorInstanceId"
    }
  }
}