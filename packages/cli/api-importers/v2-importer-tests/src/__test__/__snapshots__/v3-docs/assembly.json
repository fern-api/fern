{
  "apiName": {
    "originalName": "",
    "camelCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "snakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "screamingSnakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "pascalCase": {
      "unsafeName": "",
      "safeName": ""
    }
  },
  "selfHosted": false,
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "name": {
          "name": {
            "originalName": "apiKey",
            "camelCase": {
              "unsafeName": "apiKey",
              "safeName": "apiKey"
            },
            "snakeCase": {
              "unsafeName": "api_key",
              "safeName": "api_key"
            },
            "screamingSnakeCase": {
              "unsafeName": "API_KEY",
              "safeName": "API_KEY"
            },
            "pascalCase": {
              "unsafeName": "ApiKey",
              "safeName": "ApiKey"
            }
          },
          "wireValue": "Authorization"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "header"
      }
    ]
  },
  "headers": [],
  "environments": {
    "defaultEnvironment": "AssemblyAI API",
    "environments": {
      "baseUrls": [
        {
          "id": "Base",
          "name": {
            "originalName": "Base",
            "camelCase": {
              "unsafeName": "base",
              "safeName": "base"
            },
            "snakeCase": {
              "unsafeName": "base",
              "safeName": "base"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE",
              "safeName": "BASE"
            },
            "pascalCase": {
              "unsafeName": "Base",
              "safeName": "Base"
            }
          }
        },
        {
          "id": "API",
          "name": {
            "originalName": "API",
            "camelCase": {
              "unsafeName": "api",
              "safeName": "api"
            },
            "snakeCase": {
              "unsafeName": "api",
              "safeName": "api"
            },
            "screamingSnakeCase": {
              "unsafeName": "API",
              "safeName": "API"
            },
            "pascalCase": {
              "unsafeName": "Api",
              "safeName": "Api"
            }
          }
        }
      ],
      "environments": [
        {
          "id": "AssemblyAI API",
          "name": {
            "originalName": "AssemblyAI API",
            "camelCase": {
              "unsafeName": "assemblyAiApi",
              "safeName": "assemblyAiApi"
            },
            "snakeCase": {
              "unsafeName": "assembly_ai_api",
              "safeName": "assembly_ai_api"
            },
            "screamingSnakeCase": {
              "unsafeName": "ASSEMBLY_AI_API",
              "safeName": "ASSEMBLY_AI_API"
            },
            "pascalCase": {
              "unsafeName": "AssemblyAiApi",
              "safeName": "AssemblyAiApi"
            }
          },
          "urls": {
            "Base": "https://api.assemblyai.com",
            "API": "wss://api.assemblyai.com/v2/realtime/ws"
          }
        }
      ],
      "type": "multipleBaseUrls"
    }
  },
  "types": {
    "RedactedAudioResponse": {
      "name": {
        "typeId": "RedactedAudioResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RedactedAudioResponse",
          "camelCase": {
            "unsafeName": "redactedAudioResponse",
            "safeName": "redactedAudioResponse"
          },
          "snakeCase": {
            "unsafeName": "redacted_audio_response",
            "safeName": "redacted_audio_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "REDACTED_AUDIO_RESPONSE",
            "safeName": "REDACTED_AUDIO_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "RedactedAudioResponse",
            "safeName": "RedactedAudioResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RedactedAudioStatus",
                "camelCase": {
                  "unsafeName": "redactedAudioStatus",
                  "safeName": "redactedAudioStatus"
                },
                "snakeCase": {
                  "unsafeName": "redacted_audio_status",
                  "safeName": "redacted_audio_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACTED_AUDIO_STATUS",
                  "safeName": "REDACTED_AUDIO_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "RedactedAudioStatus",
                  "safeName": "RedactedAudioStatus"
                }
              },
              "typeId": "RedactedAudioStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The status of the redacted audio",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redacted_audio_url",
                "camelCase": {
                  "unsafeName": "redactedAudioUrl",
                  "safeName": "redactedAudioUrl"
                },
                "snakeCase": {
                  "unsafeName": "redacted_audio_url",
                  "safeName": "redacted_audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACTED_AUDIO_URL",
                  "safeName": "REDACTED_AUDIO_URL"
                },
                "pascalCase": {
                  "unsafeName": "RedactedAudioUrl",
                  "safeName": "RedactedAudioUrl"
                }
              },
              "wireValue": "redacted_audio_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The URL of the redacted audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RedactedAudioResponseRedactedAudioUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RedactedAudioResponse_example_autogenerated": {
            "status": "redacted_audio_ready",
            "redacted_audio_url": "foo"
          }
        }
      }
    },
    "RedactedAudioStatus": {
      "name": {
        "typeId": "RedactedAudioStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RedactedAudioStatus",
          "camelCase": {
            "unsafeName": "redactedAudioStatus",
            "safeName": "redactedAudioStatus"
          },
          "snakeCase": {
            "unsafeName": "redacted_audio_status",
            "safeName": "redacted_audio_status"
          },
          "screamingSnakeCase": {
            "unsafeName": "REDACTED_AUDIO_STATUS",
            "safeName": "REDACTED_AUDIO_STATUS"
          },
          "pascalCase": {
            "unsafeName": "RedactedAudioStatus",
            "safeName": "RedactedAudioStatus"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "redacted_audio_ready",
                "camelCase": {
                  "unsafeName": "redactedAudioReady",
                  "safeName": "redactedAudioReady"
                },
                "snakeCase": {
                  "unsafeName": "redacted_audio_ready",
                  "safeName": "redacted_audio_ready"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACTED_AUDIO_READY",
                  "safeName": "REDACTED_AUDIO_READY"
                },
                "pascalCase": {
                  "unsafeName": "RedactedAudioReady",
                  "safeName": "RedactedAudioReady"
                }
              },
              "wireValue": "redacted_audio_ready"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The status of the redacted audio",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RedactedAudioStatus_example_autogenerated": "redacted_audio_ready"
        }
      }
    },
    "SubtitleFormat": {
      "name": {
        "typeId": "SubtitleFormat",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SubtitleFormat",
          "camelCase": {
            "unsafeName": "subtitleFormat",
            "safeName": "subtitleFormat"
          },
          "snakeCase": {
            "unsafeName": "subtitle_format",
            "safeName": "subtitle_format"
          },
          "screamingSnakeCase": {
            "unsafeName": "SUBTITLE_FORMAT",
            "safeName": "SUBTITLE_FORMAT"
          },
          "pascalCase": {
            "unsafeName": "SubtitleFormat",
            "safeName": "SubtitleFormat"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "srt",
                "camelCase": {
                  "unsafeName": "srt",
                  "safeName": "srt"
                },
                "snakeCase": {
                  "unsafeName": "srt",
                  "safeName": "srt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SRT",
                  "safeName": "SRT"
                },
                "pascalCase": {
                  "unsafeName": "Srt",
                  "safeName": "Srt"
                }
              },
              "wireValue": "srt"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "vtt",
                "camelCase": {
                  "unsafeName": "vtt",
                  "safeName": "vtt"
                },
                "snakeCase": {
                  "unsafeName": "vtt",
                  "safeName": "vtt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VTT",
                  "safeName": "VTT"
                },
                "pascalCase": {
                  "unsafeName": "Vtt",
                  "safeName": "Vtt"
                }
              },
              "wireValue": "vtt"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Format of the subtitles",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SubtitleFormat_example_autogenerated": "srt"
        }
      }
    },
    "WordSearchResponse": {
      "name": {
        "typeId": "WordSearchResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "WordSearchResponse",
          "camelCase": {
            "unsafeName": "wordSearchResponse",
            "safeName": "wordSearchResponse"
          },
          "snakeCase": {
            "unsafeName": "word_search_response",
            "safeName": "word_search_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_RESPONSE",
            "safeName": "WORD_SEARCH_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "WordSearchResponse",
            "safeName": "WordSearchResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID of the transcript",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordSearchResponseId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The total count of all matched instances. For e.g., word 1 matched 2 times, and word 2 matched 3 times, `total_count` will equal 5.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordSearchResponseTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "matches",
                "camelCase": {
                  "unsafeName": "matches",
                  "safeName": "matches"
                },
                "snakeCase": {
                  "unsafeName": "matches",
                  "safeName": "matches"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MATCHES",
                  "safeName": "MATCHES"
                },
                "pascalCase": {
                  "unsafeName": "Matches",
                  "safeName": "Matches"
                }
              },
              "wireValue": "matches"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "WordSearchMatch",
                    "camelCase": {
                      "unsafeName": "wordSearchMatch",
                      "safeName": "wordSearchMatch"
                    },
                    "snakeCase": {
                      "unsafeName": "word_search_match",
                      "safeName": "word_search_match"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WORD_SEARCH_MATCH",
                      "safeName": "WORD_SEARCH_MATCH"
                    },
                    "pascalCase": {
                      "unsafeName": "WordSearchMatch",
                      "safeName": "WordSearchMatch"
                    }
                  },
                  "typeId": "WordSearchMatch",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The matches of the search",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordSearchResponseMatches_example_autogenerated": [
                  {
                    "text": "foo",
                    "count": 42,
                    "timestamps": [
                      [
                        42
                      ]
                    ],
                    "indexes": [
                      42
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WordSearchResponse_example_autogenerated": {
            "id": "foo",
            "total_count": 42,
            "matches": [
              {
                "text": "foo",
                "count": 42,
                "timestamps": [
                  [
                    42
                  ]
                ],
                "indexes": [
                  42
                ]
              }
            ]
          }
        }
      }
    },
    "WordSearchMatch": {
      "name": {
        "typeId": "WordSearchMatch",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "WordSearchMatch",
          "camelCase": {
            "unsafeName": "wordSearchMatch",
            "safeName": "wordSearchMatch"
          },
          "snakeCase": {
            "unsafeName": "word_search_match",
            "safeName": "word_search_match"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_MATCH",
            "safeName": "WORD_SEARCH_MATCH"
          },
          "pascalCase": {
            "unsafeName": "WordSearchMatch",
            "safeName": "WordSearchMatch"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The matched word",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordSearchMatchText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "count",
                "camelCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "snakeCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COUNT",
                  "safeName": "COUNT"
                },
                "pascalCase": {
                  "unsafeName": "Count",
                  "safeName": "Count"
                }
              },
              "wireValue": "count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The total amount of times the word is in the transcript",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordSearchMatchCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamps",
                "camelCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "snakeCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMPS",
                  "safeName": "TIMESTAMPS"
                },
                "pascalCase": {
                  "unsafeName": "Timestamps",
                  "safeName": "Timestamps"
                }
              },
              "wireValue": "timestamps"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "WordSearchTimestamp",
                    "camelCase": {
                      "unsafeName": "wordSearchTimestamp",
                      "safeName": "wordSearchTimestamp"
                    },
                    "snakeCase": {
                      "unsafeName": "word_search_timestamp",
                      "safeName": "word_search_timestamp"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WORD_SEARCH_TIMESTAMP",
                      "safeName": "WORD_SEARCH_TIMESTAMP"
                    },
                    "pascalCase": {
                      "unsafeName": "WordSearchTimestamp",
                      "safeName": "WordSearchTimestamp"
                    }
                  },
                  "typeId": "WordSearchTimestamp",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "An array of timestamps",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordSearchMatchTimestamps_example_autogenerated": [
                  [
                    42
                  ]
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "indexes",
                "camelCase": {
                  "unsafeName": "indexes",
                  "safeName": "indexes"
                },
                "snakeCase": {
                  "unsafeName": "indexes",
                  "safeName": "indexes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INDEXES",
                  "safeName": "INDEXES"
                },
                "pascalCase": {
                  "unsafeName": "Indexes",
                  "safeName": "Indexes"
                }
              },
              "wireValue": "indexes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "An array of all index locations for that word within the `words` array of the completed transcript",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordSearchMatchIndexes_example_autogenerated": [
                  42
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WordSearchMatch_example_autogenerated": {
            "text": "foo",
            "count": 42,
            "timestamps": [
              [
                42
              ]
            ],
            "indexes": [
              42
            ]
          }
        }
      }
    },
    "WordSearchTimestamp": {
      "name": {
        "typeId": "WordSearchTimestamp",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "WordSearchTimestamp",
          "camelCase": {
            "unsafeName": "wordSearchTimestamp",
            "safeName": "wordSearchTimestamp"
          },
          "snakeCase": {
            "unsafeName": "word_search_timestamp",
            "safeName": "word_search_timestamp"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_TIMESTAMP",
            "safeName": "WORD_SEARCH_TIMESTAMP"
          },
          "pascalCase": {
            "unsafeName": "WordSearchTimestamp",
            "safeName": "WordSearchTimestamp"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An array of timestamps structured as [`start_time`, `end_time`] in milliseconds",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WordSearchTimestamp_example_autogenerated": [
            42
          ]
        }
      }
    },
    "Timestamp": {
      "name": {
        "typeId": "Timestamp",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Timestamp",
          "camelCase": {
            "unsafeName": "timestamp",
            "safeName": "timestamp"
          },
          "snakeCase": {
            "unsafeName": "timestamp",
            "safeName": "timestamp"
          },
          "screamingSnakeCase": {
            "unsafeName": "TIMESTAMP",
            "safeName": "TIMESTAMP"
          },
          "pascalCase": {
            "unsafeName": "Timestamp",
            "safeName": "Timestamp"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The start time in milliseconds",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimestampStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The end time in milliseconds",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimestampEnd_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Timestamp containing a start and end property in milliseconds.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Timestamp_example_autogenerated": {
            "start": 42,
            "end": 42
          }
        }
      }
    },
    "CreateTranscriptOptionalParameters": {
      "name": {
        "typeId": "CreateTranscriptOptionalParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "CreateTranscriptOptionalParameters",
          "camelCase": {
            "unsafeName": "createTranscriptOptionalParameters",
            "safeName": "createTranscriptOptionalParameters"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_optional_parameters",
            "safeName": "create_transcript_optional_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_OPTIONAL_PARAMETERS",
            "safeName": "CREATE_TRANSCRIPT_OPTIONAL_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptOptionalParameters",
            "safeName": "CreateTranscriptOptionalParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "language_code",
                "camelCase": {
                  "unsafeName": "languageCode",
                  "safeName": "languageCode"
                },
                "snakeCase": {
                  "unsafeName": "language_code",
                  "safeName": "language_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_CODE",
                  "safeName": "LANGUAGE_CODE"
                },
                "pascalCase": {
                  "unsafeName": "LanguageCode",
                  "safeName": "LanguageCode"
                }
              },
              "wireValue": "language_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptLanguageCode",
                    "camelCase": {
                      "unsafeName": "transcriptLanguageCode",
                      "safeName": "transcriptLanguageCode"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_language_code",
                      "safeName": "transcript_language_code"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_LANGUAGE_CODE",
                      "safeName": "TRANSCRIPT_LANGUAGE_CODE"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptLanguageCode",
                      "safeName": "TranscriptLanguageCode"
                    }
                  },
                  "typeId": "TranscriptLanguageCode",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/Concepts/supported_languages).\nThe default value is 'en_us'.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "punctuate",
                "camelCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "snakeCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PUNCTUATE",
                  "safeName": "PUNCTUATE"
                },
                "pascalCase": {
                  "unsafeName": "Punctuate",
                  "safeName": "Punctuate"
                }
              },
              "wireValue": "punctuate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable Automatic Punctuation, can be true or false.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersPunctuate_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format_text",
                "camelCase": {
                  "unsafeName": "formatText",
                  "safeName": "formatText"
                },
                "snakeCase": {
                  "unsafeName": "format_text",
                  "safeName": "format_text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT_TEXT",
                  "safeName": "FORMAT_TEXT"
                },
                "pascalCase": {
                  "unsafeName": "FormatText",
                  "safeName": "FormatText"
                }
              },
              "wireValue": "format_text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable Text Formatting, can be true or false.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersFormatText_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "dual_channel",
                "camelCase": {
                  "unsafeName": "dualChannel",
                  "safeName": "dualChannel"
                },
                "snakeCase": {
                  "unsafeName": "dual_channel",
                  "safeName": "dual_channel"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DUAL_CHANNEL",
                  "safeName": "DUAL_CHANNEL"
                },
                "pascalCase": {
                  "unsafeName": "DualChannel",
                  "safeName": "DualChannel"
                }
              },
              "wireValue": "dual_channel"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Dual Channel](https://assemblyai.com/docs/Models/speech_recognition#dual-channel-transcription) transcription, can be true or false.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersDualChannel_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_url",
                "camelCase": {
                  "unsafeName": "webhookUrl",
                  "safeName": "webhookUrl"
                },
                "snakeCase": {
                  "unsafeName": "webhook_url",
                  "safeName": "webhook_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_URL",
                  "safeName": "WEBHOOK_URL"
                },
                "pascalCase": {
                  "unsafeName": "WebhookUrl",
                  "safeName": "WebhookUrl"
                }
              },
              "wireValue": "webhook_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The URL to which we send webhooks upon trancription completion, if provided in the transcription request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersWebhookUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth_header_name",
                "camelCase": {
                  "unsafeName": "webhookAuthHeaderName",
                  "safeName": "webhookAuthHeaderName"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth_header_name",
                  "safeName": "webhook_auth_header_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH_HEADER_NAME",
                  "safeName": "WEBHOOK_AUTH_HEADER_NAME"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuthHeaderName",
                  "safeName": "WebhookAuthHeaderName"
                }
              },
              "wireValue": "webhook_auth_header_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The header name which should be sent back with webhook calls, if provided in the transcription request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersWebhookAuthHeaderName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth_header_value",
                "camelCase": {
                  "unsafeName": "webhookAuthHeaderValue",
                  "safeName": "webhookAuthHeaderValue"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth_header_value",
                  "safeName": "webhook_auth_header_value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH_HEADER_VALUE",
                  "safeName": "WEBHOOK_AUTH_HEADER_VALUE"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuthHeaderValue",
                  "safeName": "WebhookAuthHeaderValue"
                }
              },
              "wireValue": "webhook_auth_header_value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Defaults to null. Optionally allows a user to specify a header name and value to send back with a webhook call for added security.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersWebhookAuthHeaderValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_highlights",
                "camelCase": {
                  "unsafeName": "autoHighlights",
                  "safeName": "autoHighlights"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights",
                  "safeName": "auto_highlights"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS",
                  "safeName": "AUTO_HIGHLIGHTS"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlights",
                  "safeName": "AutoHighlights"
                }
              },
              "wireValue": "auto_highlights"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether Key Phrases was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersAutoHighlights_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_start_from",
                "camelCase": {
                  "unsafeName": "audioStartFrom",
                  "safeName": "audioStartFrom"
                },
                "snakeCase": {
                  "unsafeName": "audio_start_from",
                  "safeName": "audio_start_from"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START_FROM",
                  "safeName": "AUDIO_START_FROM"
                },
                "pascalCase": {
                  "unsafeName": "AudioStartFrom",
                  "safeName": "AudioStartFrom"
                }
              },
              "wireValue": "audio_start_from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The point in time, in milliseconds, to begin transcription from in your media file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersAudioStartFrom_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end_at",
                "camelCase": {
                  "unsafeName": "audioEndAt",
                  "safeName": "audioEndAt"
                },
                "snakeCase": {
                  "unsafeName": "audio_end_at",
                  "safeName": "audio_end_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END_AT",
                  "safeName": "AUDIO_END_AT"
                },
                "pascalCase": {
                  "unsafeName": "AudioEndAt",
                  "safeName": "AudioEndAt"
                }
              },
              "wireValue": "audio_end_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The point in time, in milliseconds, to stop transcribing in your media file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersAudioEndAt_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "word_boost",
                "camelCase": {
                  "unsafeName": "wordBoost",
                  "safeName": "wordBoost"
                },
                "snakeCase": {
                  "unsafeName": "word_boost",
                  "safeName": "word_boost"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORD_BOOST",
                  "safeName": "WORD_BOOST"
                },
                "pascalCase": {
                  "unsafeName": "WordBoost",
                  "safeName": "WordBoost"
                }
              },
              "wireValue": "word_boost"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The list of custom vocabulary to boost transcription probability for, if provided in the transcription request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersWordBoost_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "boost_param",
                "camelCase": {
                  "unsafeName": "boostParam",
                  "safeName": "boostParam"
                },
                "snakeCase": {
                  "unsafeName": "boost_param",
                  "safeName": "boost_param"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BOOST_PARAM",
                  "safeName": "BOOST_PARAM"
                },
                "pascalCase": {
                  "unsafeName": "BoostParam",
                  "safeName": "BoostParam"
                }
              },
              "wireValue": "boost_param"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptBoostParam",
                    "camelCase": {
                      "unsafeName": "transcriptBoostParam",
                      "safeName": "transcriptBoostParam"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_boost_param",
                      "safeName": "transcript_boost_param"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_BOOST_PARAM",
                      "safeName": "TRANSCRIPT_BOOST_PARAM"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptBoostParam",
                      "safeName": "TranscriptBoostParam"
                    }
                  },
                  "typeId": "TranscriptBoostParam",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The word boost parameter value, if provided in the transcription request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "filter_profanity",
                "camelCase": {
                  "unsafeName": "filterProfanity",
                  "safeName": "filterProfanity"
                },
                "snakeCase": {
                  "unsafeName": "filter_profanity",
                  "safeName": "filter_profanity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILTER_PROFANITY",
                  "safeName": "FILTER_PROFANITY"
                },
                "pascalCase": {
                  "unsafeName": "FilterProfanity",
                  "safeName": "FilterProfanity"
                }
              },
              "wireValue": "filter_profanity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter profanity from the transcribed text, can be true or false.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersFilterProfanity_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii",
                "camelCase": {
                  "unsafeName": "redactPii",
                  "safeName": "redactPii"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii",
                  "safeName": "redact_pii"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII",
                  "safeName": "REDACT_PII"
                },
                "pascalCase": {
                  "unsafeName": "RedactPii",
                  "safeName": "RedactPii"
                }
              },
              "wireValue": "redact_pii"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Redact PII from the transcribed text using the Redact PII model, can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersRedactPii_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio",
                "camelCase": {
                  "unsafeName": "redactPiiAudio",
                  "safeName": "redactPiiAudio"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio",
                  "safeName": "redact_pii_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO",
                  "safeName": "REDACT_PII_AUDIO"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudio",
                  "safeName": "RedactPiiAudio"
                }
              },
              "wireValue": "redact_pii_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Generate a copy of the original media file with spoken PII \"beeped\" out, can be true or false. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersRedactPiiAudio_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio_quality",
                "camelCase": {
                  "unsafeName": "redactPiiAudioQuality",
                  "safeName": "redactPiiAudioQuality"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio_quality",
                  "safeName": "redact_pii_audio_quality"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO_QUALITY",
                  "safeName": "REDACT_PII_AUDIO_QUALITY"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudioQuality",
                  "safeName": "RedactPiiAudioQuality"
                }
              },
              "wireValue": "redact_pii_audio_quality"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "mp3",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersRedactPiiAudioQuality_example_autogenerated": "mp3"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_policies",
                "camelCase": {
                  "unsafeName": "redactPiiPolicies",
                  "safeName": "redactPiiPolicies"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_policies",
                  "safeName": "redact_pii_policies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_POLICIES",
                  "safeName": "REDACT_PII_POLICIES"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiPolicies",
                  "safeName": "RedactPiiPolicies"
                }
              },
              "wireValue": "redact_pii_policies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "PiiPolicy",
                        "camelCase": {
                          "unsafeName": "piiPolicy",
                          "safeName": "piiPolicy"
                        },
                        "snakeCase": {
                          "unsafeName": "pii_policy",
                          "safeName": "pii_policy"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "PII_POLICY",
                          "safeName": "PII_POLICY"
                        },
                        "pascalCase": {
                          "unsafeName": "PiiPolicy",
                          "safeName": "PiiPolicy"
                        }
                      },
                      "typeId": "PiiPolicy",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The list of PII Redaction policies to enable. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersRedactPiiPolicies_example_autogenerated": [
                  "medical_process"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_sub",
                "camelCase": {
                  "unsafeName": "redactPiiSub",
                  "safeName": "redactPiiSub"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_sub",
                  "safeName": "redact_pii_sub"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_SUB",
                  "safeName": "REDACT_PII_SUB"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiSub",
                  "safeName": "RedactPiiSub"
                }
              },
              "wireValue": "redact_pii_sub"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "SubstitutionPolicy",
                    "camelCase": {
                      "unsafeName": "substitutionPolicy",
                      "safeName": "substitutionPolicy"
                    },
                    "snakeCase": {
                      "unsafeName": "substitution_policy",
                      "safeName": "substitution_policy"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SUBSTITUTION_POLICY",
                      "safeName": "SUBSTITUTION_POLICY"
                    },
                    "pascalCase": {
                      "unsafeName": "SubstitutionPolicy",
                      "safeName": "SubstitutionPolicy"
                    }
                  },
                  "typeId": "SubstitutionPolicy",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The replacement logic for detected PII, can be \"entity_type\" or \"hash\". See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker_labels",
                "camelCase": {
                  "unsafeName": "speakerLabels",
                  "safeName": "speakerLabels"
                },
                "snakeCase": {
                  "unsafeName": "speaker_labels",
                  "safeName": "speaker_labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER_LABELS",
                  "safeName": "SPEAKER_LABELS"
                },
                "pascalCase": {
                  "unsafeName": "SpeakerLabels",
                  "safeName": "SpeakerLabels"
                }
              },
              "wireValue": "speaker_labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersSpeakerLabels_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speakers_expected",
                "camelCase": {
                  "unsafeName": "speakersExpected",
                  "safeName": "speakersExpected"
                },
                "snakeCase": {
                  "unsafeName": "speakers_expected",
                  "safeName": "speakers_expected"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKERS_EXPECTED",
                  "safeName": "SPEAKERS_EXPECTED"
                },
                "pascalCase": {
                  "unsafeName": "SpeakersExpected",
                  "safeName": "SpeakersExpected"
                }
              },
              "wireValue": "speakers_expected"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Tells the speaker label model how many speakers it should attempt to identify, up to 10. See [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization) for more details.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersSpeakersExpected_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_safety",
                "camelCase": {
                  "unsafeName": "contentSafety",
                  "safeName": "contentSafety"
                },
                "snakeCase": {
                  "unsafeName": "content_safety",
                  "safeName": "content_safety"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_SAFETY",
                  "safeName": "CONTENT_SAFETY"
                },
                "pascalCase": {
                  "unsafeName": "ContentSafety",
                  "safeName": "ContentSafety"
                }
              },
              "wireValue": "content_safety"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Content Moderation](https://www.assemblyai.com/docs/Models/content_moderation), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersContentSafety_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "iab_categories",
                "camelCase": {
                  "unsafeName": "iabCategories",
                  "safeName": "iabCategories"
                },
                "snakeCase": {
                  "unsafeName": "iab_categories",
                  "safeName": "iab_categories"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IAB_CATEGORIES",
                  "safeName": "IAB_CATEGORIES"
                },
                "pascalCase": {
                  "unsafeName": "IabCategories",
                  "safeName": "IabCategories"
                }
              },
              "wireValue": "iab_categories"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersIabCategories_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_detection",
                "camelCase": {
                  "unsafeName": "languageDetection",
                  "safeName": "languageDetection"
                },
                "snakeCase": {
                  "unsafeName": "language_detection",
                  "safeName": "language_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_DETECTION",
                  "safeName": "LANGUAGE_DETECTION"
                },
                "pascalCase": {
                  "unsafeName": "LanguageDetection",
                  "safeName": "LanguageDetection"
                }
              },
              "wireValue": "language_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether [Automatic language detection](https://www.assemblyai.com/docs/Models/speech_recognition#automatic-language-detection) was enabled in the transcription request, either true or false.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersLanguageDetection_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_spelling",
                "camelCase": {
                  "unsafeName": "customSpelling",
                  "safeName": "customSpelling"
                },
                "snakeCase": {
                  "unsafeName": "custom_spelling",
                  "safeName": "custom_spelling"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SPELLING",
                  "safeName": "CUSTOM_SPELLING"
                },
                "pascalCase": {
                  "unsafeName": "CustomSpelling",
                  "safeName": "CustomSpelling"
                }
              },
              "wireValue": "custom_spelling"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "TranscriptCustomSpelling",
                        "camelCase": {
                          "unsafeName": "transcriptCustomSpelling",
                          "safeName": "transcriptCustomSpelling"
                        },
                        "snakeCase": {
                          "unsafeName": "transcript_custom_spelling",
                          "safeName": "transcript_custom_spelling"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "TRANSCRIPT_CUSTOM_SPELLING",
                          "safeName": "TRANSCRIPT_CUSTOM_SPELLING"
                        },
                        "pascalCase": {
                          "unsafeName": "TranscriptCustomSpelling",
                          "safeName": "TranscriptCustomSpelling"
                        }
                      },
                      "typeId": "TranscriptCustomSpelling",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Customize how words are spelled and formatted using to and from values",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersCustomSpelling_example_autogenerated": [
                  {
                    "from": [
                      "foo"
                    ],
                    "to": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "disfluencies",
                "camelCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "snakeCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISFLUENCIES",
                  "safeName": "DISFLUENCIES"
                },
                "pascalCase": {
                  "unsafeName": "Disfluencies",
                  "safeName": "Disfluencies"
                }
              },
              "wireValue": "disfluencies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersDisfluencies_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment_analysis",
                "camelCase": {
                  "unsafeName": "sentimentAnalysis",
                  "safeName": "sentimentAnalysis"
                },
                "snakeCase": {
                  "unsafeName": "sentiment_analysis",
                  "safeName": "sentiment_analysis"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT_ANALYSIS",
                  "safeName": "SENTIMENT_ANALYSIS"
                },
                "pascalCase": {
                  "unsafeName": "SentimentAnalysis",
                  "safeName": "SentimentAnalysis"
                }
              },
              "wireValue": "sentiment_analysis"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Sentiment Analysis](https://www.assemblyai.com/docs/Models/sentiment_analysis), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersSentimentAnalysis_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_chapters",
                "camelCase": {
                  "unsafeName": "autoChapters",
                  "safeName": "autoChapters"
                },
                "snakeCase": {
                  "unsafeName": "auto_chapters",
                  "safeName": "auto_chapters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_CHAPTERS",
                  "safeName": "AUTO_CHAPTERS"
                },
                "pascalCase": {
                  "unsafeName": "AutoChapters",
                  "safeName": "AutoChapters"
                }
              },
              "wireValue": "auto_chapters"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Auto Chapters](https://www.assemblyai.com/docs/Models/auto_chapters), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersAutoChapters_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "entity_detection",
                "camelCase": {
                  "unsafeName": "entityDetection",
                  "safeName": "entityDetection"
                },
                "snakeCase": {
                  "unsafeName": "entity_detection",
                  "safeName": "entity_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_DETECTION",
                  "safeName": "ENTITY_DETECTION"
                },
                "pascalCase": {
                  "unsafeName": "EntityDetection",
                  "safeName": "EntityDetection"
                }
              },
              "wireValue": "entity_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Entity Detection](https://www.assemblyai.com/docs/Models/entity_detection), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersEntityDetection_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speech_threshold",
                "camelCase": {
                  "unsafeName": "speechThreshold",
                  "safeName": "speechThreshold"
                },
                "snakeCase": {
                  "unsafeName": "speech_threshold",
                  "safeName": "speech_threshold"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEECH_THRESHOLD",
                  "safeName": "SPEECH_THRESHOLD"
                },
                "pascalCase": {
                  "unsafeName": "SpeechThreshold",
                  "safeName": "SpeechThreshold"
                }
              },
              "wireValue": "speech_threshold"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "FLOAT",
                        "v2": {
                          "validation": {
                            "max": 1,
                            "min": 0
                          },
                          "type": "float"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersSpeechThreshold_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summarization",
                "camelCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "snakeCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARIZATION",
                  "safeName": "SUMMARIZATION"
                },
                "pascalCase": {
                  "unsafeName": "Summarization",
                  "safeName": "Summarization"
                }
              },
              "wireValue": "summarization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Summarization](https://www.assemblyai.com/docs/Models/summarization), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersSummarization_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_model",
                "camelCase": {
                  "unsafeName": "summaryModel",
                  "safeName": "summaryModel"
                },
                "snakeCase": {
                  "unsafeName": "summary_model",
                  "safeName": "summary_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_MODEL",
                  "safeName": "SUMMARY_MODEL"
                },
                "pascalCase": {
                  "unsafeName": "SummaryModel",
                  "safeName": "SummaryModel"
                }
              },
              "wireValue": "summary_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "SummaryModel",
                    "camelCase": {
                      "unsafeName": "summaryModel",
                      "safeName": "summaryModel"
                    },
                    "snakeCase": {
                      "unsafeName": "summary_model",
                      "safeName": "summary_model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SUMMARY_MODEL",
                      "safeName": "SUMMARY_MODEL"
                    },
                    "pascalCase": {
                      "unsafeName": "SummaryModel",
                      "safeName": "SummaryModel"
                    }
                  },
                  "typeId": "SummaryModel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The model to summarize the transcript",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_type",
                "camelCase": {
                  "unsafeName": "summaryType",
                  "safeName": "summaryType"
                },
                "snakeCase": {
                  "unsafeName": "summary_type",
                  "safeName": "summary_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_TYPE",
                  "safeName": "SUMMARY_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "SummaryType",
                  "safeName": "SummaryType"
                }
              },
              "wireValue": "summary_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "SummaryType",
                    "camelCase": {
                      "unsafeName": "summaryType",
                      "safeName": "summaryType"
                    },
                    "snakeCase": {
                      "unsafeName": "summary_type",
                      "safeName": "summary_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SUMMARY_TYPE",
                      "safeName": "SUMMARY_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "SummaryType",
                      "safeName": "SummaryType"
                    }
                  },
                  "typeId": "SummaryType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of summary",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_topics",
                "camelCase": {
                  "unsafeName": "customTopics",
                  "safeName": "customTopics"
                },
                "snakeCase": {
                  "unsafeName": "custom_topics",
                  "safeName": "custom_topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_TOPICS",
                  "safeName": "CUSTOM_TOPICS"
                },
                "pascalCase": {
                  "unsafeName": "CustomTopics",
                  "safeName": "CustomTopics"
                }
              },
              "wireValue": "custom_topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether custom topics was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersCustomTopics_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "topics",
                "camelCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "snakeCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOPICS",
                  "safeName": "TOPICS"
                },
                "pascalCase": {
                  "unsafeName": "Topics",
                  "safeName": "Topics"
                }
              },
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The list of custom topics provided if custom topics was enabled in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptOptionalParametersTopics_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The parameters for creating a transcript",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateTranscriptOptionalParameters_example_autogenerated": {}
        }
      }
    },
    "CreateTranscriptParameters": {
      "name": {
        "typeId": "CreateTranscriptParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "CreateTranscriptParameters",
          "camelCase": {
            "unsafeName": "createTranscriptParameters",
            "safeName": "createTranscriptParameters"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_parameters",
            "safeName": "create_transcript_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_PARAMETERS",
            "safeName": "CREATE_TRANSCRIPT_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptParameters",
            "safeName": "CreateTranscriptParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioUrl",
                  "safeName": "audioUrl"
                },
                "snakeCase": {
                  "unsafeName": "audio_url",
                  "safeName": "audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_URL",
                  "safeName": "AUDIO_URL"
                },
                "pascalCase": {
                  "unsafeName": "AudioUrl",
                  "safeName": "AudioUrl"
                }
              },
              "wireValue": "audio_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The URL of the audio or video file to transcribe.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateTranscriptParametersAudioUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "CreateTranscriptOptionalParameters",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "CreateTranscriptOptionalParameters",
              "camelCase": {
                "unsafeName": "createTranscriptOptionalParameters",
                "safeName": "createTranscriptOptionalParameters"
              },
              "snakeCase": {
                "unsafeName": "create_transcript_optional_parameters",
                "safeName": "create_transcript_optional_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREATE_TRANSCRIPT_OPTIONAL_PARAMETERS",
                "safeName": "CREATE_TRANSCRIPT_OPTIONAL_PARAMETERS"
              },
              "pascalCase": {
                "unsafeName": "CreateTranscriptOptionalParameters",
                "safeName": "CreateTranscriptOptionalParameters"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The parameters for creating a transcript",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateTranscriptParameters_example_autogenerated": {
            "audio_url": "foo"
          }
        }
      }
    },
    "SummaryModel": {
      "name": {
        "typeId": "SummaryModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SummaryModel",
          "camelCase": {
            "unsafeName": "summaryModel",
            "safeName": "summaryModel"
          },
          "snakeCase": {
            "unsafeName": "summary_model",
            "safeName": "summary_model"
          },
          "screamingSnakeCase": {
            "unsafeName": "SUMMARY_MODEL",
            "safeName": "SUMMARY_MODEL"
          },
          "pascalCase": {
            "unsafeName": "SummaryModel",
            "safeName": "SummaryModel"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "informative",
              "camelCase": {
                "unsafeName": "informative",
                "safeName": "informative"
              },
              "snakeCase": {
                "unsafeName": "informative",
                "safeName": "informative"
              },
              "screamingSnakeCase": {
                "unsafeName": "INFORMATIVE",
                "safeName": "INFORMATIVE"
              },
              "pascalCase": {
                "unsafeName": "Informative",
                "safeName": "Informative"
              }
            },
            "wireValue": "informative"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "informative",
                "camelCase": {
                  "unsafeName": "informative",
                  "safeName": "informative"
                },
                "snakeCase": {
                  "unsafeName": "informative",
                  "safeName": "informative"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INFORMATIVE",
                  "safeName": "INFORMATIVE"
                },
                "pascalCase": {
                  "unsafeName": "Informative",
                  "safeName": "Informative"
                }
              },
              "wireValue": "informative"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "conversational",
                "camelCase": {
                  "unsafeName": "conversational",
                  "safeName": "conversational"
                },
                "snakeCase": {
                  "unsafeName": "conversational",
                  "safeName": "conversational"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONVERSATIONAL",
                  "safeName": "CONVERSATIONAL"
                },
                "pascalCase": {
                  "unsafeName": "Conversational",
                  "safeName": "Conversational"
                }
              },
              "wireValue": "conversational"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "catchy",
                "camelCase": {
                  "unsafeName": "catchy",
                  "safeName": "catchy"
                },
                "snakeCase": {
                  "unsafeName": "catchy",
                  "safeName": "catchy"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CATCHY",
                  "safeName": "CATCHY"
                },
                "pascalCase": {
                  "unsafeName": "Catchy",
                  "safeName": "Catchy"
                }
              },
              "wireValue": "catchy"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The model to summarize the transcript",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SummaryModel_example_autogenerated": "informative"
        }
      }
    },
    "SummaryType": {
      "name": {
        "typeId": "SummaryType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SummaryType",
          "camelCase": {
            "unsafeName": "summaryType",
            "safeName": "summaryType"
          },
          "snakeCase": {
            "unsafeName": "summary_type",
            "safeName": "summary_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "SUMMARY_TYPE",
            "safeName": "SUMMARY_TYPE"
          },
          "pascalCase": {
            "unsafeName": "SummaryType",
            "safeName": "SummaryType"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "bullets",
              "camelCase": {
                "unsafeName": "bullets",
                "safeName": "bullets"
              },
              "snakeCase": {
                "unsafeName": "bullets",
                "safeName": "bullets"
              },
              "screamingSnakeCase": {
                "unsafeName": "BULLETS",
                "safeName": "BULLETS"
              },
              "pascalCase": {
                "unsafeName": "Bullets",
                "safeName": "Bullets"
              }
            },
            "wireValue": "bullets"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "bullets",
                "camelCase": {
                  "unsafeName": "bullets",
                  "safeName": "bullets"
                },
                "snakeCase": {
                  "unsafeName": "bullets",
                  "safeName": "bullets"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BULLETS",
                  "safeName": "BULLETS"
                },
                "pascalCase": {
                  "unsafeName": "Bullets",
                  "safeName": "Bullets"
                }
              },
              "wireValue": "bullets"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bullets_verbose",
                "camelCase": {
                  "unsafeName": "bulletsVerbose",
                  "safeName": "bulletsVerbose"
                },
                "snakeCase": {
                  "unsafeName": "bullets_verbose",
                  "safeName": "bullets_verbose"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BULLETS_VERBOSE",
                  "safeName": "BULLETS_VERBOSE"
                },
                "pascalCase": {
                  "unsafeName": "BulletsVerbose",
                  "safeName": "BulletsVerbose"
                }
              },
              "wireValue": "bullets_verbose"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gist",
                "camelCase": {
                  "unsafeName": "gist",
                  "safeName": "gist"
                },
                "snakeCase": {
                  "unsafeName": "gist",
                  "safeName": "gist"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GIST",
                  "safeName": "GIST"
                },
                "pascalCase": {
                  "unsafeName": "Gist",
                  "safeName": "Gist"
                }
              },
              "wireValue": "gist"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "headline",
                "camelCase": {
                  "unsafeName": "headline",
                  "safeName": "headline"
                },
                "snakeCase": {
                  "unsafeName": "headline",
                  "safeName": "headline"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HEADLINE",
                  "safeName": "HEADLINE"
                },
                "pascalCase": {
                  "unsafeName": "Headline",
                  "safeName": "Headline"
                }
              },
              "wireValue": "headline"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "paragraph",
                "camelCase": {
                  "unsafeName": "paragraph",
                  "safeName": "paragraph"
                },
                "snakeCase": {
                  "unsafeName": "paragraph",
                  "safeName": "paragraph"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARAGRAPH",
                  "safeName": "PARAGRAPH"
                },
                "pascalCase": {
                  "unsafeName": "Paragraph",
                  "safeName": "Paragraph"
                }
              },
              "wireValue": "paragraph"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The type of summary",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SummaryType_example_autogenerated": "bullets"
        }
      }
    },
    "TranscriptBoostParam": {
      "name": {
        "typeId": "TranscriptBoostParam",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptBoostParam",
          "camelCase": {
            "unsafeName": "transcriptBoostParam",
            "safeName": "transcriptBoostParam"
          },
          "snakeCase": {
            "unsafeName": "transcript_boost_param",
            "safeName": "transcript_boost_param"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_BOOST_PARAM",
            "safeName": "TRANSCRIPT_BOOST_PARAM"
          },
          "pascalCase": {
            "unsafeName": "TranscriptBoostParam",
            "safeName": "TranscriptBoostParam"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "low",
                "camelCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "snakeCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOW",
                  "safeName": "LOW"
                },
                "pascalCase": {
                  "unsafeName": "Low",
                  "safeName": "Low"
                }
              },
              "wireValue": "low"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "default",
                "camelCase": {
                  "unsafeName": "default",
                  "safeName": "default_"
                },
                "snakeCase": {
                  "unsafeName": "default",
                  "safeName": "default_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEFAULT",
                  "safeName": "DEFAULT"
                },
                "pascalCase": {
                  "unsafeName": "Default",
                  "safeName": "Default"
                }
              },
              "wireValue": "default"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "high",
                "camelCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "snakeCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGH",
                  "safeName": "HIGH"
                },
                "pascalCase": {
                  "unsafeName": "High",
                  "safeName": "High"
                }
              },
              "wireValue": "high"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The word boost parameter value, if provided in the transcription request.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptBoostParam_example_autogenerated": "low"
        }
      }
    },
    "TranscriptCustomSpelling": {
      "name": {
        "typeId": "TranscriptCustomSpelling",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptCustomSpelling",
          "camelCase": {
            "unsafeName": "transcriptCustomSpelling",
            "safeName": "transcriptCustomSpelling"
          },
          "snakeCase": {
            "unsafeName": "transcript_custom_spelling",
            "safeName": "transcript_custom_spelling"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_CUSTOM_SPELLING",
            "safeName": "TRANSCRIPT_CUSTOM_SPELLING"
          },
          "pascalCase": {
            "unsafeName": "TranscriptCustomSpelling",
            "safeName": "TranscriptCustomSpelling"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "Words or phrases to replace",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptCustomSpellingFrom_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Word or phrase to replace with",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptCustomSpellingTo_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object containing words or phrases to replace, and the word or phrase to replace with",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptCustomSpelling_example_autogenerated": {
            "from": [
              "foo"
            ],
            "to": "foo"
          }
        }
      }
    },
    "TranscriptUtterance": {
      "name": {
        "typeId": "TranscriptUtterance",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptUtterance",
          "camelCase": {
            "unsafeName": "transcriptUtterance",
            "safeName": "transcriptUtterance"
          },
          "snakeCase": {
            "unsafeName": "transcript_utterance",
            "safeName": "transcript_utterance"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_UTTERANCE",
            "safeName": "TRANSCRIPT_UTTERANCE"
          },
          "pascalCase": {
            "unsafeName": "TranscriptUtterance",
            "safeName": "TranscriptUtterance"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "channel",
                "camelCase": {
                  "unsafeName": "channel",
                  "safeName": "channel"
                },
                "snakeCase": {
                  "unsafeName": "channel",
                  "safeName": "channel"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHANNEL",
                  "safeName": "CHANNEL"
                },
                "pascalCase": {
                  "unsafeName": "Channel",
                  "safeName": "Channel"
                }
              },
              "wireValue": "channel"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptUtteranceChannel_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptUtteranceConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptUtteranceStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptUtteranceEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptUtteranceText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                }
              },
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptWord",
                    "camelCase": {
                      "unsafeName": "transcriptWord",
                      "safeName": "transcriptWord"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_word",
                      "safeName": "transcript_word"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_WORD",
                      "safeName": "TRANSCRIPT_WORD"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptWord",
                      "safeName": "TranscriptWord"
                    }
                  },
                  "typeId": "TranscriptWord",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptUtteranceWords_example_autogenerated": [
                  {
                    "confidence": 42,
                    "start": 42,
                    "end": 42,
                    "text": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptUtterance_example_autogenerated": {
            "channel": "foo",
            "confidence": 42,
            "start": 42,
            "end": 42,
            "text": "foo",
            "words": [
              {
                "confidence": 42,
                "start": 42,
                "end": 42,
                "text": "foo"
              }
            ]
          }
        }
      }
    },
    "SubstitutionPolicy": {
      "name": {
        "typeId": "SubstitutionPolicy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SubstitutionPolicy",
          "camelCase": {
            "unsafeName": "substitutionPolicy",
            "safeName": "substitutionPolicy"
          },
          "snakeCase": {
            "unsafeName": "substitution_policy",
            "safeName": "substitution_policy"
          },
          "screamingSnakeCase": {
            "unsafeName": "SUBSTITUTION_POLICY",
            "safeName": "SUBSTITUTION_POLICY"
          },
          "pascalCase": {
            "unsafeName": "SubstitutionPolicy",
            "safeName": "SubstitutionPolicy"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "entity_type",
                "camelCase": {
                  "unsafeName": "entityType",
                  "safeName": "entityType"
                },
                "snakeCase": {
                  "unsafeName": "entity_type",
                  "safeName": "entity_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_TYPE",
                  "safeName": "ENTITY_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "EntityType",
                  "safeName": "EntityType"
                }
              },
              "wireValue": "entity_type"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The replacement logic for detected PII, can be \"entity_type\" or \"hash\". See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SubstitutionPolicy_example_autogenerated": "entity_type"
        }
      }
    },
    "PiiPolicy": {
      "name": {
        "typeId": "PiiPolicy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PiiPolicy",
          "camelCase": {
            "unsafeName": "piiPolicy",
            "safeName": "piiPolicy"
          },
          "snakeCase": {
            "unsafeName": "pii_policy",
            "safeName": "pii_policy"
          },
          "screamingSnakeCase": {
            "unsafeName": "PII_POLICY",
            "safeName": "PII_POLICY"
          },
          "pascalCase": {
            "unsafeName": "PiiPolicy",
            "safeName": "PiiPolicy"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "medical_process",
                "camelCase": {
                  "unsafeName": "medicalProcess",
                  "safeName": "medicalProcess"
                },
                "snakeCase": {
                  "unsafeName": "medical_process",
                  "safeName": "medical_process"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDICAL_PROCESS",
                  "safeName": "MEDICAL_PROCESS"
                },
                "pascalCase": {
                  "unsafeName": "MedicalProcess",
                  "safeName": "MedicalProcess"
                }
              },
              "wireValue": "medical_process"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "medical_condition",
                "camelCase": {
                  "unsafeName": "medicalCondition",
                  "safeName": "medicalCondition"
                },
                "snakeCase": {
                  "unsafeName": "medical_condition",
                  "safeName": "medical_condition"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDICAL_CONDITION",
                  "safeName": "MEDICAL_CONDITION"
                },
                "pascalCase": {
                  "unsafeName": "MedicalCondition",
                  "safeName": "MedicalCondition"
                }
              },
              "wireValue": "medical_condition"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blood_type",
                "camelCase": {
                  "unsafeName": "bloodType",
                  "safeName": "bloodType"
                },
                "snakeCase": {
                  "unsafeName": "blood_type",
                  "safeName": "blood_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOOD_TYPE",
                  "safeName": "BLOOD_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "BloodType",
                  "safeName": "BloodType"
                }
              },
              "wireValue": "blood_type"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "drug",
                "camelCase": {
                  "unsafeName": "drug",
                  "safeName": "drug"
                },
                "snakeCase": {
                  "unsafeName": "drug",
                  "safeName": "drug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DRUG",
                  "safeName": "DRUG"
                },
                "pascalCase": {
                  "unsafeName": "Drug",
                  "safeName": "Drug"
                }
              },
              "wireValue": "drug"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "injury",
                "camelCase": {
                  "unsafeName": "injury",
                  "safeName": "injury"
                },
                "snakeCase": {
                  "unsafeName": "injury",
                  "safeName": "injury"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INJURY",
                  "safeName": "INJURY"
                },
                "pascalCase": {
                  "unsafeName": "Injury",
                  "safeName": "Injury"
                }
              },
              "wireValue": "injury"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "number_sequence",
                "camelCase": {
                  "unsafeName": "numberSequence",
                  "safeName": "numberSequence"
                },
                "snakeCase": {
                  "unsafeName": "number_sequence",
                  "safeName": "number_sequence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUMBER_SEQUENCE",
                  "safeName": "NUMBER_SEQUENCE"
                },
                "pascalCase": {
                  "unsafeName": "NumberSequence",
                  "safeName": "NumberSequence"
                }
              },
              "wireValue": "number_sequence"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "email_address",
                "camelCase": {
                  "unsafeName": "emailAddress",
                  "safeName": "emailAddress"
                },
                "snakeCase": {
                  "unsafeName": "email_address",
                  "safeName": "email_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL_ADDRESS",
                  "safeName": "EMAIL_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "EmailAddress",
                  "safeName": "EmailAddress"
                }
              },
              "wireValue": "email_address"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "date_of_birth",
                "camelCase": {
                  "unsafeName": "dateOfBirth",
                  "safeName": "dateOfBirth"
                },
                "snakeCase": {
                  "unsafeName": "date_of_birth",
                  "safeName": "date_of_birth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATE_OF_BIRTH",
                  "safeName": "DATE_OF_BIRTH"
                },
                "pascalCase": {
                  "unsafeName": "DateOfBirth",
                  "safeName": "DateOfBirth"
                }
              },
              "wireValue": "date_of_birth"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "phone_number",
                "camelCase": {
                  "unsafeName": "phoneNumber",
                  "safeName": "phoneNumber"
                },
                "snakeCase": {
                  "unsafeName": "phone_number",
                  "safeName": "phone_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PHONE_NUMBER",
                  "safeName": "PHONE_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "PhoneNumber",
                  "safeName": "PhoneNumber"
                }
              },
              "wireValue": "phone_number"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "us_social_security_number",
                "camelCase": {
                  "unsafeName": "usSocialSecurityNumber",
                  "safeName": "usSocialSecurityNumber"
                },
                "snakeCase": {
                  "unsafeName": "us_social_security_number",
                  "safeName": "us_social_security_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "US_SOCIAL_SECURITY_NUMBER",
                  "safeName": "US_SOCIAL_SECURITY_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "UsSocialSecurityNumber",
                  "safeName": "UsSocialSecurityNumber"
                }
              },
              "wireValue": "us_social_security_number"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "credit_card_number",
                "camelCase": {
                  "unsafeName": "creditCardNumber",
                  "safeName": "creditCardNumber"
                },
                "snakeCase": {
                  "unsafeName": "credit_card_number",
                  "safeName": "credit_card_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREDIT_CARD_NUMBER",
                  "safeName": "CREDIT_CARD_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "CreditCardNumber",
                  "safeName": "CreditCardNumber"
                }
              },
              "wireValue": "credit_card_number"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "credit_card_expiration",
                "camelCase": {
                  "unsafeName": "creditCardExpiration",
                  "safeName": "creditCardExpiration"
                },
                "snakeCase": {
                  "unsafeName": "credit_card_expiration",
                  "safeName": "credit_card_expiration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREDIT_CARD_EXPIRATION",
                  "safeName": "CREDIT_CARD_EXPIRATION"
                },
                "pascalCase": {
                  "unsafeName": "CreditCardExpiration",
                  "safeName": "CreditCardExpiration"
                }
              },
              "wireValue": "credit_card_expiration"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "credit_card_cvv",
                "camelCase": {
                  "unsafeName": "creditCardCvv",
                  "safeName": "creditCardCvv"
                },
                "snakeCase": {
                  "unsafeName": "credit_card_cvv",
                  "safeName": "credit_card_cvv"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREDIT_CARD_CVV",
                  "safeName": "CREDIT_CARD_CVV"
                },
                "pascalCase": {
                  "unsafeName": "CreditCardCvv",
                  "safeName": "CreditCardCvv"
                }
              },
              "wireValue": "credit_card_cvv"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "date",
                "camelCase": {
                  "unsafeName": "date",
                  "safeName": "date"
                },
                "snakeCase": {
                  "unsafeName": "date",
                  "safeName": "date"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATE",
                  "safeName": "DATE"
                },
                "pascalCase": {
                  "unsafeName": "Date",
                  "safeName": "Date_"
                }
              },
              "wireValue": "date"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nationality",
                "camelCase": {
                  "unsafeName": "nationality",
                  "safeName": "nationality"
                },
                "snakeCase": {
                  "unsafeName": "nationality",
                  "safeName": "nationality"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NATIONALITY",
                  "safeName": "NATIONALITY"
                },
                "pascalCase": {
                  "unsafeName": "Nationality",
                  "safeName": "Nationality"
                }
              },
              "wireValue": "nationality"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "event",
                "camelCase": {
                  "unsafeName": "event",
                  "safeName": "event"
                },
                "snakeCase": {
                  "unsafeName": "event",
                  "safeName": "event"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EVENT",
                  "safeName": "EVENT"
                },
                "pascalCase": {
                  "unsafeName": "Event",
                  "safeName": "Event"
                }
              },
              "wireValue": "event"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language",
                "camelCase": {
                  "unsafeName": "language",
                  "safeName": "language"
                },
                "snakeCase": {
                  "unsafeName": "language",
                  "safeName": "language"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE",
                  "safeName": "LANGUAGE"
                },
                "pascalCase": {
                  "unsafeName": "Language",
                  "safeName": "Language"
                }
              },
              "wireValue": "language"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "location",
                "camelCase": {
                  "unsafeName": "location",
                  "safeName": "location"
                },
                "snakeCase": {
                  "unsafeName": "location",
                  "safeName": "location"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOCATION",
                  "safeName": "LOCATION"
                },
                "pascalCase": {
                  "unsafeName": "Location",
                  "safeName": "Location"
                }
              },
              "wireValue": "location"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "money_amount",
                "camelCase": {
                  "unsafeName": "moneyAmount",
                  "safeName": "moneyAmount"
                },
                "snakeCase": {
                  "unsafeName": "money_amount",
                  "safeName": "money_amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MONEY_AMOUNT",
                  "safeName": "MONEY_AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "MoneyAmount",
                  "safeName": "MoneyAmount"
                }
              },
              "wireValue": "money_amount"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "person_name",
                "camelCase": {
                  "unsafeName": "personName",
                  "safeName": "personName"
                },
                "snakeCase": {
                  "unsafeName": "person_name",
                  "safeName": "person_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERSON_NAME",
                  "safeName": "PERSON_NAME"
                },
                "pascalCase": {
                  "unsafeName": "PersonName",
                  "safeName": "PersonName"
                }
              },
              "wireValue": "person_name"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "person_age",
                "camelCase": {
                  "unsafeName": "personAge",
                  "safeName": "personAge"
                },
                "snakeCase": {
                  "unsafeName": "person_age",
                  "safeName": "person_age"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERSON_AGE",
                  "safeName": "PERSON_AGE"
                },
                "pascalCase": {
                  "unsafeName": "PersonAge",
                  "safeName": "PersonAge"
                }
              },
              "wireValue": "person_age"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "organization",
                "camelCase": {
                  "unsafeName": "organization",
                  "safeName": "organization"
                },
                "snakeCase": {
                  "unsafeName": "organization",
                  "safeName": "organization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION",
                  "safeName": "ORGANIZATION"
                },
                "pascalCase": {
                  "unsafeName": "Organization",
                  "safeName": "Organization"
                }
              },
              "wireValue": "organization"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "political_affiliation",
                "camelCase": {
                  "unsafeName": "politicalAffiliation",
                  "safeName": "politicalAffiliation"
                },
                "snakeCase": {
                  "unsafeName": "political_affiliation",
                  "safeName": "political_affiliation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "POLITICAL_AFFILIATION",
                  "safeName": "POLITICAL_AFFILIATION"
                },
                "pascalCase": {
                  "unsafeName": "PoliticalAffiliation",
                  "safeName": "PoliticalAffiliation"
                }
              },
              "wireValue": "political_affiliation"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "occupation",
                "camelCase": {
                  "unsafeName": "occupation",
                  "safeName": "occupation"
                },
                "snakeCase": {
                  "unsafeName": "occupation",
                  "safeName": "occupation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OCCUPATION",
                  "safeName": "OCCUPATION"
                },
                "pascalCase": {
                  "unsafeName": "Occupation",
                  "safeName": "Occupation"
                }
              },
              "wireValue": "occupation"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "religion",
                "camelCase": {
                  "unsafeName": "religion",
                  "safeName": "religion"
                },
                "snakeCase": {
                  "unsafeName": "religion",
                  "safeName": "religion"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RELIGION",
                  "safeName": "RELIGION"
                },
                "pascalCase": {
                  "unsafeName": "Religion",
                  "safeName": "Religion"
                }
              },
              "wireValue": "religion"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "drivers_license",
                "camelCase": {
                  "unsafeName": "driversLicense",
                  "safeName": "driversLicense"
                },
                "snakeCase": {
                  "unsafeName": "drivers_license",
                  "safeName": "drivers_license"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DRIVERS_LICENSE",
                  "safeName": "DRIVERS_LICENSE"
                },
                "pascalCase": {
                  "unsafeName": "DriversLicense",
                  "safeName": "DriversLicense"
                }
              },
              "wireValue": "drivers_license"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "banking_information",
                "camelCase": {
                  "unsafeName": "bankingInformation",
                  "safeName": "bankingInformation"
                },
                "snakeCase": {
                  "unsafeName": "banking_information",
                  "safeName": "banking_information"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BANKING_INFORMATION",
                  "safeName": "BANKING_INFORMATION"
                },
                "pascalCase": {
                  "unsafeName": "BankingInformation",
                  "safeName": "BankingInformation"
                }
              },
              "wireValue": "banking_information"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PiiPolicy_example_autogenerated": "medical_process"
        }
      }
    },
    "TranscriptLanguageCode": {
      "name": {
        "typeId": "TranscriptLanguageCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptLanguageCode",
          "camelCase": {
            "unsafeName": "transcriptLanguageCode",
            "safeName": "transcriptLanguageCode"
          },
          "snakeCase": {
            "unsafeName": "transcript_language_code",
            "safeName": "transcript_language_code"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LANGUAGE_CODE",
            "safeName": "TRANSCRIPT_LANGUAGE_CODE"
          },
          "pascalCase": {
            "unsafeName": "TranscriptLanguageCode",
            "safeName": "TranscriptLanguageCode"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "en_us",
              "camelCase": {
                "unsafeName": "enUs",
                "safeName": "enUs"
              },
              "snakeCase": {
                "unsafeName": "en_us",
                "safeName": "en_us"
              },
              "screamingSnakeCase": {
                "unsafeName": "EN_US",
                "safeName": "EN_US"
              },
              "pascalCase": {
                "unsafeName": "EnUs",
                "safeName": "EnUs"
              }
            },
            "wireValue": "en_us"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "en",
                "camelCase": {
                  "unsafeName": "en",
                  "safeName": "en"
                },
                "snakeCase": {
                  "unsafeName": "en",
                  "safeName": "en"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EN",
                  "safeName": "EN"
                },
                "pascalCase": {
                  "unsafeName": "En",
                  "safeName": "En"
                }
              },
              "wireValue": "en"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "en_au",
                "camelCase": {
                  "unsafeName": "enAu",
                  "safeName": "enAu"
                },
                "snakeCase": {
                  "unsafeName": "en_au",
                  "safeName": "en_au"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EN_AU",
                  "safeName": "EN_AU"
                },
                "pascalCase": {
                  "unsafeName": "EnAu",
                  "safeName": "EnAu"
                }
              },
              "wireValue": "en_au"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "en_uk",
                "camelCase": {
                  "unsafeName": "enUk",
                  "safeName": "enUk"
                },
                "snakeCase": {
                  "unsafeName": "en_uk",
                  "safeName": "en_uk"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EN_UK",
                  "safeName": "EN_UK"
                },
                "pascalCase": {
                  "unsafeName": "EnUk",
                  "safeName": "EnUk"
                }
              },
              "wireValue": "en_uk"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "en_us",
                "camelCase": {
                  "unsafeName": "enUs",
                  "safeName": "enUs"
                },
                "snakeCase": {
                  "unsafeName": "en_us",
                  "safeName": "en_us"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EN_US",
                  "safeName": "EN_US"
                },
                "pascalCase": {
                  "unsafeName": "EnUs",
                  "safeName": "EnUs"
                }
              },
              "wireValue": "en_us"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "es",
                "camelCase": {
                  "unsafeName": "es",
                  "safeName": "es"
                },
                "snakeCase": {
                  "unsafeName": "es",
                  "safeName": "es"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ES",
                  "safeName": "ES"
                },
                "pascalCase": {
                  "unsafeName": "Es",
                  "safeName": "Es"
                }
              },
              "wireValue": "es"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "fr",
                "camelCase": {
                  "unsafeName": "fr",
                  "safeName": "fr"
                },
                "snakeCase": {
                  "unsafeName": "fr",
                  "safeName": "fr"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FR",
                  "safeName": "FR"
                },
                "pascalCase": {
                  "unsafeName": "Fr",
                  "safeName": "Fr"
                }
              },
              "wireValue": "fr"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "de",
                "camelCase": {
                  "unsafeName": "de",
                  "safeName": "de"
                },
                "snakeCase": {
                  "unsafeName": "de",
                  "safeName": "de"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DE",
                  "safeName": "DE"
                },
                "pascalCase": {
                  "unsafeName": "De",
                  "safeName": "De"
                }
              },
              "wireValue": "de"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "it",
                "camelCase": {
                  "unsafeName": "it",
                  "safeName": "it"
                },
                "snakeCase": {
                  "unsafeName": "it",
                  "safeName": "it"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IT",
                  "safeName": "IT"
                },
                "pascalCase": {
                  "unsafeName": "It",
                  "safeName": "It"
                }
              },
              "wireValue": "it"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pt",
                "camelCase": {
                  "unsafeName": "pt",
                  "safeName": "pt"
                },
                "snakeCase": {
                  "unsafeName": "pt",
                  "safeName": "pt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PT",
                  "safeName": "PT"
                },
                "pascalCase": {
                  "unsafeName": "Pt",
                  "safeName": "Pt"
                }
              },
              "wireValue": "pt"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nl",
                "camelCase": {
                  "unsafeName": "nl",
                  "safeName": "nl"
                },
                "snakeCase": {
                  "unsafeName": "nl",
                  "safeName": "nl"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NL",
                  "safeName": "NL"
                },
                "pascalCase": {
                  "unsafeName": "Nl",
                  "safeName": "Nl"
                }
              },
              "wireValue": "nl"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hi",
                "camelCase": {
                  "unsafeName": "hi",
                  "safeName": "hi"
                },
                "snakeCase": {
                  "unsafeName": "hi",
                  "safeName": "hi"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HI",
                  "safeName": "HI"
                },
                "pascalCase": {
                  "unsafeName": "Hi",
                  "safeName": "Hi"
                }
              },
              "wireValue": "hi"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ja",
                "camelCase": {
                  "unsafeName": "ja",
                  "safeName": "ja"
                },
                "snakeCase": {
                  "unsafeName": "ja",
                  "safeName": "ja"
                },
                "screamingSnakeCase": {
                  "unsafeName": "JA",
                  "safeName": "JA"
                },
                "pascalCase": {
                  "unsafeName": "Ja",
                  "safeName": "Ja"
                }
              },
              "wireValue": "ja"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "zh",
                "camelCase": {
                  "unsafeName": "zh",
                  "safeName": "zh"
                },
                "snakeCase": {
                  "unsafeName": "zh",
                  "safeName": "zh"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ZH",
                  "safeName": "ZH"
                },
                "pascalCase": {
                  "unsafeName": "Zh",
                  "safeName": "Zh"
                }
              },
              "wireValue": "zh"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "fi",
                "camelCase": {
                  "unsafeName": "fi",
                  "safeName": "fi"
                },
                "snakeCase": {
                  "unsafeName": "fi",
                  "safeName": "fi"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FI",
                  "safeName": "FI"
                },
                "pascalCase": {
                  "unsafeName": "Fi",
                  "safeName": "Fi"
                }
              },
              "wireValue": "fi"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ko",
                "camelCase": {
                  "unsafeName": "ko",
                  "safeName": "ko"
                },
                "snakeCase": {
                  "unsafeName": "ko",
                  "safeName": "ko"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KO",
                  "safeName": "KO"
                },
                "pascalCase": {
                  "unsafeName": "Ko",
                  "safeName": "Ko"
                }
              },
              "wireValue": "ko"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pl",
                "camelCase": {
                  "unsafeName": "pl",
                  "safeName": "pl"
                },
                "snakeCase": {
                  "unsafeName": "pl",
                  "safeName": "pl"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PL",
                  "safeName": "PL"
                },
                "pascalCase": {
                  "unsafeName": "Pl",
                  "safeName": "Pl"
                }
              },
              "wireValue": "pl"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ru",
                "camelCase": {
                  "unsafeName": "ru",
                  "safeName": "ru"
                },
                "snakeCase": {
                  "unsafeName": "ru",
                  "safeName": "ru"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RU",
                  "safeName": "RU"
                },
                "pascalCase": {
                  "unsafeName": "Ru",
                  "safeName": "Ru"
                }
              },
              "wireValue": "ru"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tr",
                "camelCase": {
                  "unsafeName": "tr",
                  "safeName": "tr"
                },
                "snakeCase": {
                  "unsafeName": "tr",
                  "safeName": "tr"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TR",
                  "safeName": "TR"
                },
                "pascalCase": {
                  "unsafeName": "Tr",
                  "safeName": "Tr"
                }
              },
              "wireValue": "tr"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "uk",
                "camelCase": {
                  "unsafeName": "uk",
                  "safeName": "uk"
                },
                "snakeCase": {
                  "unsafeName": "uk",
                  "safeName": "uk"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UK",
                  "safeName": "UK"
                },
                "pascalCase": {
                  "unsafeName": "Uk",
                  "safeName": "Uk"
                }
              },
              "wireValue": "uk"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "vi",
                "camelCase": {
                  "unsafeName": "vi",
                  "safeName": "vi"
                },
                "snakeCase": {
                  "unsafeName": "vi",
                  "safeName": "vi"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VI",
                  "safeName": "VI"
                },
                "pascalCase": {
                  "unsafeName": "Vi",
                  "safeName": "Vi"
                }
              },
              "wireValue": "vi"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/Concepts/supported_languages).\nThe default value is 'en_us'.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptLanguageCode_example_autogenerated": "en_us"
        }
      }
    },
    "TranscriptStatus": {
      "name": {
        "typeId": "TranscriptStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptStatus",
          "camelCase": {
            "unsafeName": "transcriptStatus",
            "safeName": "transcriptStatus"
          },
          "snakeCase": {
            "unsafeName": "transcript_status",
            "safeName": "transcript_status"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_STATUS",
            "safeName": "TRANSCRIPT_STATUS"
          },
          "pascalCase": {
            "unsafeName": "TranscriptStatus",
            "safeName": "TranscriptStatus"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "queued",
                "camelCase": {
                  "unsafeName": "queued",
                  "safeName": "queued"
                },
                "snakeCase": {
                  "unsafeName": "queued",
                  "safeName": "queued"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUEUED",
                  "safeName": "QUEUED"
                },
                "pascalCase": {
                  "unsafeName": "Queued",
                  "safeName": "Queued"
                }
              },
              "wireValue": "queued"
            },
            "docs": "The audio file is in the queue to be processed by the API."
          },
          {
            "name": {
              "name": {
                "originalName": "processing",
                "camelCase": {
                  "unsafeName": "processing",
                  "safeName": "processing"
                },
                "snakeCase": {
                  "unsafeName": "processing",
                  "safeName": "processing"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROCESSING",
                  "safeName": "PROCESSING"
                },
                "pascalCase": {
                  "unsafeName": "Processing",
                  "safeName": "Processing"
                }
              },
              "wireValue": "processing"
            },
            "docs": "The audio file is being processed by the API."
          },
          {
            "name": {
              "name": {
                "originalName": "completed",
                "camelCase": {
                  "unsafeName": "completed",
                  "safeName": "completed"
                },
                "snakeCase": {
                  "unsafeName": "completed",
                  "safeName": "completed"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COMPLETED",
                  "safeName": "COMPLETED"
                },
                "pascalCase": {
                  "unsafeName": "Completed",
                  "safeName": "Completed"
                }
              },
              "wireValue": "completed"
            },
            "docs": "The transcription job has been completed successfully."
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "docs": "An error occurred while processing the audio file."
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The status of your transcription. Possible values are queued, processing, completed, or error.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptStatus_example_autogenerated": "queued"
        }
      }
    },
    "TranscriptContentSafetyLabels": {
      "name": {
        "typeId": "TranscriptContentSafetyLabels",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptContentSafetyLabels",
          "camelCase": {
            "unsafeName": "transcriptContentSafetyLabels",
            "safeName": "transcriptContentSafetyLabels"
          },
          "snakeCase": {
            "unsafeName": "transcript_content_safety_labels",
            "safeName": "transcript_content_safety_labels"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_CONTENT_SAFETY_LABELS",
            "safeName": "TRANSCRIPT_CONTENT_SAFETY_LABELS"
          },
          "pascalCase": {
            "unsafeName": "TranscriptContentSafetyLabels",
            "safeName": "TranscriptContentSafetyLabels"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AudioIntelligenceModelStatus",
                "camelCase": {
                  "unsafeName": "audioIntelligenceModelStatus",
                  "safeName": "audioIntelligenceModelStatus"
                },
                "snakeCase": {
                  "unsafeName": "audio_intelligence_model_status",
                  "safeName": "audio_intelligence_model_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_INTELLIGENCE_MODEL_STATUS",
                  "safeName": "AUDIO_INTELLIGENCE_MODEL_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "AudioIntelligenceModelStatus",
                  "safeName": "AudioIntelligenceModelStatus"
                }
              },
              "typeId": "AudioIntelligenceModelStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "Will be either success, or unavailable in the rare case that the Content Safety Labels model failed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "results",
                "camelCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "snakeCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESULTS",
                  "safeName": "RESULTS"
                },
                "pascalCase": {
                  "unsafeName": "Results",
                  "safeName": "Results"
                }
              },
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ContentSafetyLabelResult",
                    "camelCase": {
                      "unsafeName": "contentSafetyLabelResult",
                      "safeName": "contentSafetyLabelResult"
                    },
                    "snakeCase": {
                      "unsafeName": "content_safety_label_result",
                      "safeName": "content_safety_label_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTENT_SAFETY_LABEL_RESULT",
                      "safeName": "CONTENT_SAFETY_LABEL_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "ContentSafetyLabelResult",
                      "safeName": "ContentSafetyLabelResult"
                    }
                  },
                  "typeId": "ContentSafetyLabelResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptContentSafetyLabelsResults_example_autogenerated": [
                  {
                    "text": "foo",
                    "labels": [
                      {
                        "label": "foo",
                        "confidence": 42,
                        "severity": 42
                      }
                    ],
                    "sentences_idx_start": 42,
                    "sentences_idx_end": 42,
                    "timestamp": {
                      "start": 42,
                      "end": 42
                    },
                    "summary": {},
                    "severity_score_summary": {}
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An array of results for the Content Moderation model, if it was enabled during the transcription request.\nSee [Content moderation](https://www.assemblyai.com/docs/Models/content_moderation) for more information.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptContentSafetyLabels_example_autogenerated": {
            "status": "success",
            "results": [
              {
                "text": "foo",
                "labels": [
                  {
                    "label": "foo",
                    "confidence": 42,
                    "severity": 42
                  }
                ],
                "sentences_idx_start": 42,
                "sentences_idx_end": 42,
                "timestamp": {
                  "start": 42,
                  "end": 42
                },
                "summary": {},
                "severity_score_summary": {}
              }
            ]
          }
        }
      }
    },
    "TranscriptIabCategoriesResult": {
      "name": {
        "typeId": "TranscriptIabCategoriesResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptIabCategoriesResult",
          "camelCase": {
            "unsafeName": "transcriptIabCategoriesResult",
            "safeName": "transcriptIabCategoriesResult"
          },
          "snakeCase": {
            "unsafeName": "transcript_iab_categories_result",
            "safeName": "transcript_iab_categories_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_IAB_CATEGORIES_RESULT",
            "safeName": "TRANSCRIPT_IAB_CATEGORIES_RESULT"
          },
          "pascalCase": {
            "unsafeName": "TranscriptIabCategoriesResult",
            "safeName": "TranscriptIabCategoriesResult"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AudioIntelligenceModelStatus",
                "camelCase": {
                  "unsafeName": "audioIntelligenceModelStatus",
                  "safeName": "audioIntelligenceModelStatus"
                },
                "snakeCase": {
                  "unsafeName": "audio_intelligence_model_status",
                  "safeName": "audio_intelligence_model_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_INTELLIGENCE_MODEL_STATUS",
                  "safeName": "AUDIO_INTELLIGENCE_MODEL_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "AudioIntelligenceModelStatus",
                  "safeName": "AudioIntelligenceModelStatus"
                }
              },
              "typeId": "AudioIntelligenceModelStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "Will be either success, or unavailable in the rare case that the Content Moderation model failed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "results",
                "camelCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "snakeCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESULTS",
                  "safeName": "RESULTS"
                },
                "pascalCase": {
                  "unsafeName": "Results",
                  "safeName": "Results"
                }
              },
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TopicDetectionResult",
                    "camelCase": {
                      "unsafeName": "topicDetectionResult",
                      "safeName": "topicDetectionResult"
                    },
                    "snakeCase": {
                      "unsafeName": "topic_detection_result",
                      "safeName": "topic_detection_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOPIC_DETECTION_RESULT",
                      "safeName": "TOPIC_DETECTION_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "TopicDetectionResult",
                      "safeName": "TopicDetectionResult"
                    }
                  },
                  "typeId": "TopicDetectionResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "An array of results for the Topic Detection model.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptIabCategoriesResultResults_example_autogenerated": [
                  {
                    "text": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                }
              },
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {
                        "max": 1,
                        "min": 0
                      },
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "map"
              },
              "type": "container"
            },
            "docs": "The overall relevance of topic to the entire audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptIabCategoriesResultSummary_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An array of results for the Topic Detection model, if it was enabled during the transcription request.\nSee [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification) for more information.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptIabCategoriesResult_example_autogenerated": {
            "status": "success",
            "results": [
              {
                "text": "foo"
              }
            ],
            "summary": {}
          }
        }
      }
    },
    "Transcript": {
      "name": {
        "typeId": "Transcript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Transcript",
          "camelCase": {
            "unsafeName": "transcript",
            "safeName": "transcript"
          },
          "snakeCase": {
            "unsafeName": "transcript",
            "safeName": "transcript"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT",
            "safeName": "TRANSCRIPT"
          },
          "pascalCase": {
            "unsafeName": "Transcript",
            "safeName": "Transcript"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier of your transcription",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_model",
                "camelCase": {
                  "unsafeName": "languageModel",
                  "safeName": "languageModel"
                },
                "snakeCase": {
                  "unsafeName": "language_model",
                  "safeName": "language_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_MODEL",
                  "safeName": "LANGUAGE_MODEL"
                },
                "pascalCase": {
                  "unsafeName": "LanguageModel",
                  "safeName": "LanguageModel"
                }
              },
              "wireValue": "language_model"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The language model that was used for the transcription",
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptLanguageModel_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acoustic_model",
                "camelCase": {
                  "unsafeName": "acousticModel",
                  "safeName": "acousticModel"
                },
                "snakeCase": {
                  "unsafeName": "acoustic_model",
                  "safeName": "acoustic_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACOUSTIC_MODEL",
                  "safeName": "ACOUSTIC_MODEL"
                },
                "pascalCase": {
                  "unsafeName": "AcousticModel",
                  "safeName": "AcousticModel"
                }
              },
              "wireValue": "acoustic_model"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The acoustic model that was used for the transcription",
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptAcousticModel_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TranscriptStatus",
                "camelCase": {
                  "unsafeName": "transcriptStatus",
                  "safeName": "transcriptStatus"
                },
                "snakeCase": {
                  "unsafeName": "transcript_status",
                  "safeName": "transcript_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_STATUS",
                  "safeName": "TRANSCRIPT_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptStatus",
                  "safeName": "TranscriptStatus"
                }
              },
              "typeId": "TranscriptStatus",
              "inline": false,
              "type": "named"
            },
            "docs": "The status of your transcription. Possible values are queued, processing, completed, or error.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_code",
                "camelCase": {
                  "unsafeName": "languageCode",
                  "safeName": "languageCode"
                },
                "snakeCase": {
                  "unsafeName": "language_code",
                  "safeName": "language_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_CODE",
                  "safeName": "LANGUAGE_CODE"
                },
                "pascalCase": {
                  "unsafeName": "LanguageCode",
                  "safeName": "LanguageCode"
                }
              },
              "wireValue": "language_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptLanguageCode",
                    "camelCase": {
                      "unsafeName": "transcriptLanguageCode",
                      "safeName": "transcriptLanguageCode"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_language_code",
                      "safeName": "transcript_language_code"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_LANGUAGE_CODE",
                      "safeName": "TRANSCRIPT_LANGUAGE_CODE"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptLanguageCode",
                      "safeName": "TranscriptLanguageCode"
                    }
                  },
                  "typeId": "TranscriptLanguageCode",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The language of your audio file.\nPossible values are found in [Supported Languages](https://www.assemblyai.com/docs/Concepts/supported_languages).\nThe default value is 'en_us'.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioUrl",
                  "safeName": "audioUrl"
                },
                "snakeCase": {
                  "unsafeName": "audio_url",
                  "safeName": "audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_URL",
                  "safeName": "AUDIO_URL"
                },
                "pascalCase": {
                  "unsafeName": "AudioUrl",
                  "safeName": "AudioUrl"
                }
              },
              "wireValue": "audio_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The URL of the media that was transcribed",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptAudioUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The textual transcript of your media file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                }
              },
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "TranscriptWord",
                            "camelCase": {
                              "unsafeName": "transcriptWord",
                              "safeName": "transcriptWord"
                            },
                            "snakeCase": {
                              "unsafeName": "transcript_word",
                              "safeName": "transcript_word"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "TRANSCRIPT_WORD",
                              "safeName": "TRANSCRIPT_WORD"
                            },
                            "pascalCase": {
                              "unsafeName": "TranscriptWord",
                              "safeName": "TranscriptWord"
                            }
                          },
                          "typeId": "TranscriptWord",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of temporally-sequential word objects, one for each word in the transcript.\nSee [Speech recognition](https://www.assemblyai.com/docs/Models/speech_recognition) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWords_example_autogenerated": [
                  {
                    "confidence": 42,
                    "start": 42,
                    "end": 42,
                    "text": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "utterances",
                "camelCase": {
                  "unsafeName": "utterances",
                  "safeName": "utterances"
                },
                "snakeCase": {
                  "unsafeName": "utterances",
                  "safeName": "utterances"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UTTERANCES",
                  "safeName": "UTTERANCES"
                },
                "pascalCase": {
                  "unsafeName": "Utterances",
                  "safeName": "Utterances"
                }
              },
              "wireValue": "utterances"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "TranscriptUtterance",
                            "camelCase": {
                              "unsafeName": "transcriptUtterance",
                              "safeName": "transcriptUtterance"
                            },
                            "snakeCase": {
                              "unsafeName": "transcript_utterance",
                              "safeName": "transcript_utterance"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "TRANSCRIPT_UTTERANCE",
                              "safeName": "TRANSCRIPT_UTTERANCE"
                            },
                            "pascalCase": {
                              "unsafeName": "TranscriptUtterance",
                              "safeName": "TranscriptUtterance"
                            }
                          },
                          "typeId": "TranscriptUtterance",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "When dual_channel or speaker_labels is enabled, a list of turn-by-turn utterance objects.\nSee [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptUtterances_example_autogenerated": [
                  {
                    "channel": "foo",
                    "confidence": 42,
                    "start": 42,
                    "end": 42,
                    "text": "foo",
                    "words": [
                      {
                        "confidence": 42,
                        "start": 42,
                        "end": 42,
                        "text": "foo"
                      }
                    ]
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {
                            "max": 1,
                            "min": 0
                          },
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The confidence score for the transcript, between 0.0 (low confidence) and 1.0 (high confidence)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_duration",
                "camelCase": {
                  "unsafeName": "audioDuration",
                  "safeName": "audioDuration"
                },
                "snakeCase": {
                  "unsafeName": "audio_duration",
                  "safeName": "audio_duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DURATION",
                  "safeName": "AUDIO_DURATION"
                },
                "pascalCase": {
                  "unsafeName": "AudioDuration",
                  "safeName": "AudioDuration"
                }
              },
              "wireValue": "audio_duration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "FLOAT",
                        "v2": {
                          "validation": {},
                          "type": "float"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The duration of this transcript object's media file, in seconds",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptAudioDuration_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "punctuate",
                "camelCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "snakeCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PUNCTUATE",
                  "safeName": "PUNCTUATE"
                },
                "pascalCase": {
                  "unsafeName": "Punctuate",
                  "safeName": "Punctuate"
                }
              },
              "wireValue": "punctuate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether Automatic Punctuation was enabled in the transcription request, either true or false.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptPunctuate_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format_text",
                "camelCase": {
                  "unsafeName": "formatText",
                  "safeName": "formatText"
                },
                "snakeCase": {
                  "unsafeName": "format_text",
                  "safeName": "format_text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT_TEXT",
                  "safeName": "FORMAT_TEXT"
                },
                "pascalCase": {
                  "unsafeName": "FormatText",
                  "safeName": "FormatText"
                }
              },
              "wireValue": "format_text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether Text Formatting was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptFormatText_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "dual_channel",
                "camelCase": {
                  "unsafeName": "dualChannel",
                  "safeName": "dualChannel"
                },
                "snakeCase": {
                  "unsafeName": "dual_channel",
                  "safeName": "dual_channel"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DUAL_CHANNEL",
                  "safeName": "DUAL_CHANNEL"
                },
                "pascalCase": {
                  "unsafeName": "DualChannel",
                  "safeName": "DualChannel"
                }
              },
              "wireValue": "dual_channel"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether [Dual channel transcription](https://www.assemblyai.com/docs/Models/speech_recognition#dual-channel-transcription) was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptDualChannel_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_url",
                "camelCase": {
                  "unsafeName": "webhookUrl",
                  "safeName": "webhookUrl"
                },
                "snakeCase": {
                  "unsafeName": "webhook_url",
                  "safeName": "webhook_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_URL",
                  "safeName": "WEBHOOK_URL"
                },
                "pascalCase": {
                  "unsafeName": "WebhookUrl",
                  "safeName": "WebhookUrl"
                }
              },
              "wireValue": "webhook_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The URL to which we send webhooks upon trancription completion, if provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWebhookUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_status_code",
                "camelCase": {
                  "unsafeName": "webhookStatusCode",
                  "safeName": "webhookStatusCode"
                },
                "snakeCase": {
                  "unsafeName": "webhook_status_code",
                  "safeName": "webhook_status_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_STATUS_CODE",
                  "safeName": "WEBHOOK_STATUS_CODE"
                },
                "pascalCase": {
                  "unsafeName": "WebhookStatusCode",
                  "safeName": "WebhookStatusCode"
                }
              },
              "wireValue": "webhook_status_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The status code we received from your server when delivering your webhook, if a webhook URL was provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWebhookStatusCode_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth",
                "camelCase": {
                  "unsafeName": "webhookAuth",
                  "safeName": "webhookAuth"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth",
                  "safeName": "webhook_auth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH",
                  "safeName": "WEBHOOK_AUTH"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuth",
                  "safeName": "WebhookAuth"
                }
              },
              "wireValue": "webhook_auth"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether webhook authentication details were provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWebhookAuth_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth_header_name",
                "camelCase": {
                  "unsafeName": "webhookAuthHeaderName",
                  "safeName": "webhookAuthHeaderName"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth_header_name",
                  "safeName": "webhook_auth_header_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH_HEADER_NAME",
                  "safeName": "WEBHOOK_AUTH_HEADER_NAME"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuthHeaderName",
                  "safeName": "WebhookAuthHeaderName"
                }
              },
              "wireValue": "webhook_auth_header_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The header name which should be sent back with webhook calls, if provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWebhookAuthHeaderName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speed_boost",
                "camelCase": {
                  "unsafeName": "speedBoost",
                  "safeName": "speedBoost"
                },
                "snakeCase": {
                  "unsafeName": "speed_boost",
                  "safeName": "speed_boost"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEED_BOOST",
                  "safeName": "SPEED_BOOST"
                },
                "pascalCase": {
                  "unsafeName": "SpeedBoost",
                  "safeName": "SpeedBoost"
                }
              },
              "wireValue": "speed_boost"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether speed boost was enabled in the transcription request",
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSpeedBoost_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_highlights",
                "camelCase": {
                  "unsafeName": "autoHighlights",
                  "safeName": "autoHighlights"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights",
                  "safeName": "auto_highlights"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS",
                  "safeName": "AUTO_HIGHLIGHTS"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlights",
                  "safeName": "AutoHighlights"
                }
              },
              "wireValue": "auto_highlights"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether Key Phrases was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptAutoHighlights_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_highlights_result",
                "camelCase": {
                  "unsafeName": "autoHighlightsResult",
                  "safeName": "autoHighlightsResult"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights_result",
                  "safeName": "auto_highlights_result"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS_RESULT",
                  "safeName": "AUTO_HIGHLIGHTS_RESULT"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlightsResult",
                  "safeName": "AutoHighlightsResult"
                }
              },
              "wireValue": "auto_highlights_result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "AutoHighlightsResult",
                    "camelCase": {
                      "unsafeName": "autoHighlightsResult",
                      "safeName": "autoHighlightsResult"
                    },
                    "snakeCase": {
                      "unsafeName": "auto_highlights_result",
                      "safeName": "auto_highlights_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AUTO_HIGHLIGHTS_RESULT",
                      "safeName": "AUTO_HIGHLIGHTS_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "AutoHighlightsResult",
                      "safeName": "AutoHighlightsResult"
                    }
                  },
                  "typeId": "AutoHighlightsResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of results for the Key Phrases model, if it was enabled during the transcription request.\nSee [Key phrases](https://www.assemblyai.com/docs/Models/key_phrases) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_start_from",
                "camelCase": {
                  "unsafeName": "audioStartFrom",
                  "safeName": "audioStartFrom"
                },
                "snakeCase": {
                  "unsafeName": "audio_start_from",
                  "safeName": "audio_start_from"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START_FROM",
                  "safeName": "AUDIO_START_FROM"
                },
                "pascalCase": {
                  "unsafeName": "AudioStartFrom",
                  "safeName": "AudioStartFrom"
                }
              },
              "wireValue": "audio_start_from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The point in time, in milliseconds, in the file at which the transcription was started, if provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptAudioStartFrom_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end_at",
                "camelCase": {
                  "unsafeName": "audioEndAt",
                  "safeName": "audioEndAt"
                },
                "snakeCase": {
                  "unsafeName": "audio_end_at",
                  "safeName": "audio_end_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END_AT",
                  "safeName": "AUDIO_END_AT"
                },
                "pascalCase": {
                  "unsafeName": "AudioEndAt",
                  "safeName": "AudioEndAt"
                }
              },
              "wireValue": "audio_end_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The point in time, in milliseconds, in the file at which the transcription was terminated, if provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptAudioEndAt_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "word_boost",
                "camelCase": {
                  "unsafeName": "wordBoost",
                  "safeName": "wordBoost"
                },
                "snakeCase": {
                  "unsafeName": "word_boost",
                  "safeName": "word_boost"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORD_BOOST",
                  "safeName": "WORD_BOOST"
                },
                "pascalCase": {
                  "unsafeName": "WordBoost",
                  "safeName": "WordBoost"
                }
              },
              "wireValue": "word_boost"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The list of custom vocabulary to boost transcription probability for, if provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWordBoost_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "boost_param",
                "camelCase": {
                  "unsafeName": "boostParam",
                  "safeName": "boostParam"
                },
                "snakeCase": {
                  "unsafeName": "boost_param",
                  "safeName": "boost_param"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BOOST_PARAM",
                  "safeName": "BOOST_PARAM"
                },
                "pascalCase": {
                  "unsafeName": "BoostParam",
                  "safeName": "BoostParam"
                }
              },
              "wireValue": "boost_param"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The word boost parameter value, if provided in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptBoostParam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "filter_profanity",
                "camelCase": {
                  "unsafeName": "filterProfanity",
                  "safeName": "filterProfanity"
                },
                "snakeCase": {
                  "unsafeName": "filter_profanity",
                  "safeName": "filter_profanity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILTER_PROFANITY",
                  "safeName": "FILTER_PROFANITY"
                },
                "pascalCase": {
                  "unsafeName": "FilterProfanity",
                  "safeName": "FilterProfanity"
                }
              },
              "wireValue": "filter_profanity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether [Profanity Filtering](https://www.assemblyai.com/docs/Models/speech_recognition#profanity-filtering) was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptFilterProfanity_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii",
                "camelCase": {
                  "unsafeName": "redactPii",
                  "safeName": "redactPii"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii",
                  "safeName": "redact_pii"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII",
                  "safeName": "REDACT_PII"
                },
                "pascalCase": {
                  "unsafeName": "RedactPii",
                  "safeName": "RedactPii"
                }
              },
              "wireValue": "redact_pii"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether [PII Redaction](https://www.assemblyai.com/docs/Models/pii_redaction) was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptRedactPii_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio",
                "camelCase": {
                  "unsafeName": "redactPiiAudio",
                  "safeName": "redactPiiAudio"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio",
                  "safeName": "redact_pii_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO",
                  "safeName": "REDACT_PII_AUDIO"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudio",
                  "safeName": "RedactPiiAudio"
                }
              },
              "wireValue": "redact_pii_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether a redacted version of the audio file was generated (enabled or disabled in the transcription request),\neither true or false. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptRedactPiiAudio_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio_quality",
                "camelCase": {
                  "unsafeName": "redactPiiAudioQuality",
                  "safeName": "redactPiiAudioQuality"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio_quality",
                  "safeName": "redact_pii_audio_quality"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO_QUALITY",
                  "safeName": "REDACT_PII_AUDIO_QUALITY"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudioQuality",
                  "safeName": "RedactPiiAudioQuality"
                }
              },
              "wireValue": "redact_pii_audio_quality"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The audio quality of the PII-redacted audio file, if enabled in the transcription request.\nSee [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptRedactPiiAudioQuality_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_policies",
                "camelCase": {
                  "unsafeName": "redactPiiPolicies",
                  "safeName": "redactPiiPolicies"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_policies",
                  "safeName": "redact_pii_policies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_POLICIES",
                  "safeName": "REDACT_PII_POLICIES"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiPolicies",
                  "safeName": "RedactPiiPolicies"
                }
              },
              "wireValue": "redact_pii_policies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "PiiPolicy",
                            "camelCase": {
                              "unsafeName": "piiPolicy",
                              "safeName": "piiPolicy"
                            },
                            "snakeCase": {
                              "unsafeName": "pii_policy",
                              "safeName": "pii_policy"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "PII_POLICY",
                              "safeName": "PII_POLICY"
                            },
                            "pascalCase": {
                              "unsafeName": "PiiPolicy",
                              "safeName": "PiiPolicy"
                            }
                          },
                          "typeId": "PiiPolicy",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The list of PII Redaction policies that were enabled, if PII Redaction is enabled.\nSee [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptRedactPiiPolicies_example_autogenerated": [
                  "medical_process"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_sub",
                "camelCase": {
                  "unsafeName": "redactPiiSub",
                  "safeName": "redactPiiSub"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_sub",
                  "safeName": "redact_pii_sub"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_SUB",
                  "safeName": "REDACT_PII_SUB"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiSub",
                  "safeName": "RedactPiiSub"
                }
              },
              "wireValue": "redact_pii_sub"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "SubstitutionPolicy",
                    "camelCase": {
                      "unsafeName": "substitutionPolicy",
                      "safeName": "substitutionPolicy"
                    },
                    "snakeCase": {
                      "unsafeName": "substitution_policy",
                      "safeName": "substitution_policy"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SUBSTITUTION_POLICY",
                      "safeName": "SUBSTITUTION_POLICY"
                    },
                    "pascalCase": {
                      "unsafeName": "SubstitutionPolicy",
                      "safeName": "SubstitutionPolicy"
                    }
                  },
                  "typeId": "SubstitutionPolicy",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The replacement logic for detected PII, can be \"entity_type\" or \"hash\". See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker_labels",
                "camelCase": {
                  "unsafeName": "speakerLabels",
                  "safeName": "speakerLabels"
                },
                "snakeCase": {
                  "unsafeName": "speaker_labels",
                  "safeName": "speaker_labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER_LABELS",
                  "safeName": "SPEAKER_LABELS"
                },
                "pascalCase": {
                  "unsafeName": "SpeakerLabels",
                  "safeName": "SpeakerLabels"
                }
              },
              "wireValue": "speaker_labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSpeakerLabels_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speakers_expected",
                "camelCase": {
                  "unsafeName": "speakersExpected",
                  "safeName": "speakersExpected"
                },
                "snakeCase": {
                  "unsafeName": "speakers_expected",
                  "safeName": "speakers_expected"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKERS_EXPECTED",
                  "safeName": "SPEAKERS_EXPECTED"
                },
                "pascalCase": {
                  "unsafeName": "SpeakersExpected",
                  "safeName": "SpeakersExpected"
                }
              },
              "wireValue": "speakers_expected"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Defaults to null. Tells the speaker label model how many speakers it should attempt to identify, up to 10. See [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization) for more details.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSpeakersExpected_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_safety",
                "camelCase": {
                  "unsafeName": "contentSafety",
                  "safeName": "contentSafety"
                },
                "snakeCase": {
                  "unsafeName": "content_safety",
                  "safeName": "content_safety"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_SAFETY",
                  "safeName": "CONTENT_SAFETY"
                },
                "pascalCase": {
                  "unsafeName": "ContentSafety",
                  "safeName": "ContentSafety"
                }
              },
              "wireValue": "content_safety"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Content Moderation](https://www.assemblyai.com/docs/Models/content_moderation), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptContentSafety_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_safety_labels",
                "camelCase": {
                  "unsafeName": "contentSafetyLabels",
                  "safeName": "contentSafetyLabels"
                },
                "snakeCase": {
                  "unsafeName": "content_safety_labels",
                  "safeName": "content_safety_labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_SAFETY_LABELS",
                  "safeName": "CONTENT_SAFETY_LABELS"
                },
                "pascalCase": {
                  "unsafeName": "ContentSafetyLabels",
                  "safeName": "ContentSafetyLabels"
                }
              },
              "wireValue": "content_safety_labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "TranscriptContentSafetyLabels",
                        "camelCase": {
                          "unsafeName": "transcriptContentSafetyLabels",
                          "safeName": "transcriptContentSafetyLabels"
                        },
                        "snakeCase": {
                          "unsafeName": "transcript_content_safety_labels",
                          "safeName": "transcript_content_safety_labels"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "TRANSCRIPT_CONTENT_SAFETY_LABELS",
                          "safeName": "TRANSCRIPT_CONTENT_SAFETY_LABELS"
                        },
                        "pascalCase": {
                          "unsafeName": "TranscriptContentSafetyLabels",
                          "safeName": "TranscriptContentSafetyLabels"
                        }
                      },
                      "typeId": "TranscriptContentSafetyLabels",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of results for the Content Moderation model, if it was enabled during the transcription request.\nSee [Content moderation](https://www.assemblyai.com/docs/Models/content_moderation) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptContentSafetyLabels_example_autogenerated": {
                  "status": "success",
                  "results": [
                    {
                      "text": "foo",
                      "labels": [
                        {
                          "label": "foo",
                          "confidence": 42,
                          "severity": 42
                        }
                      ],
                      "sentences_idx_start": 42,
                      "sentences_idx_end": 42,
                      "timestamp": {
                        "start": 42,
                        "end": 42
                      },
                      "summary": {},
                      "severity_score_summary": {}
                    }
                  ]
                }
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "iab_categories",
                "camelCase": {
                  "unsafeName": "iabCategories",
                  "safeName": "iabCategories"
                },
                "snakeCase": {
                  "unsafeName": "iab_categories",
                  "safeName": "iab_categories"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IAB_CATEGORIES",
                  "safeName": "IAB_CATEGORIES"
                },
                "pascalCase": {
                  "unsafeName": "IabCategories",
                  "safeName": "IabCategories"
                }
              },
              "wireValue": "iab_categories"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptIabCategories_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "iab_categories_result",
                "camelCase": {
                  "unsafeName": "iabCategoriesResult",
                  "safeName": "iabCategoriesResult"
                },
                "snakeCase": {
                  "unsafeName": "iab_categories_result",
                  "safeName": "iab_categories_result"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IAB_CATEGORIES_RESULT",
                  "safeName": "IAB_CATEGORIES_RESULT"
                },
                "pascalCase": {
                  "unsafeName": "IabCategoriesResult",
                  "safeName": "IabCategoriesResult"
                }
              },
              "wireValue": "iab_categories_result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "TranscriptIabCategoriesResult",
                        "camelCase": {
                          "unsafeName": "transcriptIabCategoriesResult",
                          "safeName": "transcriptIabCategoriesResult"
                        },
                        "snakeCase": {
                          "unsafeName": "transcript_iab_categories_result",
                          "safeName": "transcript_iab_categories_result"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "TRANSCRIPT_IAB_CATEGORIES_RESULT",
                          "safeName": "TRANSCRIPT_IAB_CATEGORIES_RESULT"
                        },
                        "pascalCase": {
                          "unsafeName": "TranscriptIabCategoriesResult",
                          "safeName": "TranscriptIabCategoriesResult"
                        }
                      },
                      "typeId": "TranscriptIabCategoriesResult",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of results for the Topic Detection model, if it was enabled during the transcription request.\nSee [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptIabCategoriesResult_example_autogenerated": {
                  "status": "success",
                  "results": [
                    {
                      "text": "foo"
                    }
                  ],
                  "summary": {}
                }
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_detection",
                "camelCase": {
                  "unsafeName": "languageDetection",
                  "safeName": "languageDetection"
                },
                "snakeCase": {
                  "unsafeName": "language_detection",
                  "safeName": "language_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_DETECTION",
                  "safeName": "LANGUAGE_DETECTION"
                },
                "pascalCase": {
                  "unsafeName": "LanguageDetection",
                  "safeName": "LanguageDetection"
                }
              },
              "wireValue": "language_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether [Automatic language detection](https://www.assemblyai.com/docs/Models/speech_recognition#automatic-language-detection) was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptLanguageDetection_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_spelling",
                "camelCase": {
                  "unsafeName": "customSpelling",
                  "safeName": "customSpelling"
                },
                "snakeCase": {
                  "unsafeName": "custom_spelling",
                  "safeName": "custom_spelling"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SPELLING",
                  "safeName": "CUSTOM_SPELLING"
                },
                "pascalCase": {
                  "unsafeName": "CustomSpelling",
                  "safeName": "CustomSpelling"
                }
              },
              "wireValue": "custom_spelling"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "TranscriptCustomSpelling",
                            "camelCase": {
                              "unsafeName": "transcriptCustomSpelling",
                              "safeName": "transcriptCustomSpelling"
                            },
                            "snakeCase": {
                              "unsafeName": "transcript_custom_spelling",
                              "safeName": "transcript_custom_spelling"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "TRANSCRIPT_CUSTOM_SPELLING",
                              "safeName": "TRANSCRIPT_CUSTOM_SPELLING"
                            },
                            "pascalCase": {
                              "unsafeName": "TranscriptCustomSpelling",
                              "safeName": "TranscriptCustomSpelling"
                            }
                          },
                          "typeId": "TranscriptCustomSpelling",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Customize how words are spelled and formatted using to and from values",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptCustomSpelling_example_autogenerated": [
                  {
                    "from": [
                      "foo"
                    ],
                    "to": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_chapters",
                "camelCase": {
                  "unsafeName": "autoChapters",
                  "safeName": "autoChapters"
                },
                "snakeCase": {
                  "unsafeName": "auto_chapters",
                  "safeName": "auto_chapters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_CHAPTERS",
                  "safeName": "AUTO_CHAPTERS"
                },
                "pascalCase": {
                  "unsafeName": "AutoChapters",
                  "safeName": "AutoChapters"
                }
              },
              "wireValue": "auto_chapters"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Auto Chapters](https://www.assemblyai.com/docs/Models/auto_chapters), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptAutoChapters_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chapters",
                "camelCase": {
                  "unsafeName": "chapters",
                  "safeName": "chapters"
                },
                "snakeCase": {
                  "unsafeName": "chapters",
                  "safeName": "chapters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAPTERS",
                  "safeName": "CHAPTERS"
                },
                "pascalCase": {
                  "unsafeName": "Chapters",
                  "safeName": "Chapters"
                }
              },
              "wireValue": "chapters"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "Chapter",
                            "camelCase": {
                              "unsafeName": "chapter",
                              "safeName": "chapter"
                            },
                            "snakeCase": {
                              "unsafeName": "chapter",
                              "safeName": "chapter"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "CHAPTER",
                              "safeName": "CHAPTER"
                            },
                            "pascalCase": {
                              "unsafeName": "Chapter",
                              "safeName": "Chapter"
                            }
                          },
                          "typeId": "Chapter",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of temporally sequential chapters for the audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptChapters_example_autogenerated": [
                  {
                    "gist": "foo",
                    "headline": "foo",
                    "summary": "foo",
                    "start": 42,
                    "end": 42
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summarization",
                "camelCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "snakeCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARIZATION",
                  "safeName": "SUMMARIZATION"
                },
                "pascalCase": {
                  "unsafeName": "Summarization",
                  "safeName": "Summarization"
                }
              },
              "wireValue": "summarization"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSummarization_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_type",
                "camelCase": {
                  "unsafeName": "summaryType",
                  "safeName": "summaryType"
                },
                "snakeCase": {
                  "unsafeName": "summary_type",
                  "safeName": "summary_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_TYPE",
                  "safeName": "SUMMARY_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "SummaryType",
                  "safeName": "SummaryType"
                }
              },
              "wireValue": "summary_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of summary generated, if [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSummaryType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_model",
                "camelCase": {
                  "unsafeName": "summaryModel",
                  "safeName": "summaryModel"
                },
                "snakeCase": {
                  "unsafeName": "summary_model",
                  "safeName": "summary_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_MODEL",
                  "safeName": "SUMMARY_MODEL"
                },
                "pascalCase": {
                  "unsafeName": "SummaryModel",
                  "safeName": "SummaryModel"
                }
              },
              "wireValue": "summary_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Summarization model used to generate the summary,\nif [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSummaryModel_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                }
              },
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The generated summary of the media file, if [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSummary_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_topics",
                "camelCase": {
                  "unsafeName": "customTopics",
                  "safeName": "customTopics"
                },
                "snakeCase": {
                  "unsafeName": "custom_topics",
                  "safeName": "custom_topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_TOPICS",
                  "safeName": "CUSTOM_TOPICS"
                },
                "pascalCase": {
                  "unsafeName": "CustomTopics",
                  "safeName": "CustomTopics"
                }
              },
              "wireValue": "custom_topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether custom topics was enabled in the transcription request, either true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptCustomTopics_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "topics",
                "camelCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "snakeCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOPICS",
                  "safeName": "TOPICS"
                },
                "pascalCase": {
                  "unsafeName": "Topics",
                  "safeName": "Topics"
                }
              },
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The list of custom topics provided if custom topics was enabled in the transcription request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptTopics_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "disfluencies",
                "camelCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "snakeCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISFLUENCIES",
                  "safeName": "DISFLUENCIES"
                },
                "pascalCase": {
                  "unsafeName": "Disfluencies",
                  "safeName": "Disfluencies"
                }
              },
              "wireValue": "disfluencies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptDisfluencies_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment_analysis",
                "camelCase": {
                  "unsafeName": "sentimentAnalysis",
                  "safeName": "sentimentAnalysis"
                },
                "snakeCase": {
                  "unsafeName": "sentiment_analysis",
                  "safeName": "sentiment_analysis"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT_ANALYSIS",
                  "safeName": "SENTIMENT_ANALYSIS"
                },
                "pascalCase": {
                  "unsafeName": "SentimentAnalysis",
                  "safeName": "SentimentAnalysis"
                }
              },
              "wireValue": "sentiment_analysis"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Sentiment Analysis](https://www.assemblyai.com/docs/Models/sentiment_analysis), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSentimentAnalysis_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment_analysis_results",
                "camelCase": {
                  "unsafeName": "sentimentAnalysisResults",
                  "safeName": "sentimentAnalysisResults"
                },
                "snakeCase": {
                  "unsafeName": "sentiment_analysis_results",
                  "safeName": "sentiment_analysis_results"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT_ANALYSIS_RESULTS",
                  "safeName": "SENTIMENT_ANALYSIS_RESULTS"
                },
                "pascalCase": {
                  "unsafeName": "SentimentAnalysisResults",
                  "safeName": "SentimentAnalysisResults"
                }
              },
              "wireValue": "sentiment_analysis_results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "SentimentAnalysisResult",
                            "camelCase": {
                              "unsafeName": "sentimentAnalysisResult",
                              "safeName": "sentimentAnalysisResult"
                            },
                            "snakeCase": {
                              "unsafeName": "sentiment_analysis_result",
                              "safeName": "sentiment_analysis_result"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "SENTIMENT_ANALYSIS_RESULT",
                              "safeName": "SENTIMENT_ANALYSIS_RESULT"
                            },
                            "pascalCase": {
                              "unsafeName": "SentimentAnalysisResult",
                              "safeName": "SentimentAnalysisResult"
                            }
                          },
                          "typeId": "SentimentAnalysisResult",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of results for the Sentiment Analysis model, if it was enabled during the transcription request.\nSee [Sentiment analysis](https://www.assemblyai.com/docs/Models/sentiment_analysis) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSentimentAnalysisResults_example_autogenerated": [
                  {
                    "text": "foo",
                    "start": 42,
                    "end": 42,
                    "sentiment": "POSITIVE",
                    "confidence": 42
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "entity_detection",
                "camelCase": {
                  "unsafeName": "entityDetection",
                  "safeName": "entityDetection"
                },
                "snakeCase": {
                  "unsafeName": "entity_detection",
                  "safeName": "entity_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_DETECTION",
                  "safeName": "ENTITY_DETECTION"
                },
                "pascalCase": {
                  "unsafeName": "EntityDetection",
                  "safeName": "EntityDetection"
                }
              },
              "wireValue": "entity_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Enable [Entity Detection](https://www.assemblyai.com/docs/Models/entity_detection), can be true or false",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptEntityDetection_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "entities",
                "camelCase": {
                  "unsafeName": "entities",
                  "safeName": "entities"
                },
                "snakeCase": {
                  "unsafeName": "entities",
                  "safeName": "entities"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITIES",
                  "safeName": "ENTITIES"
                },
                "pascalCase": {
                  "unsafeName": "Entities",
                  "safeName": "Entities"
                }
              },
              "wireValue": "entities"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "Entity",
                            "camelCase": {
                              "unsafeName": "entity",
                              "safeName": "entity"
                            },
                            "snakeCase": {
                              "unsafeName": "entity",
                              "safeName": "entity"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "ENTITY",
                              "safeName": "ENTITY"
                            },
                            "pascalCase": {
                              "unsafeName": "Entity",
                              "safeName": "Entity"
                            }
                          },
                          "typeId": "Entity",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of results for the Entity Detection model, if it was enabled during the transcription request.\nSee [Entity detection](https://www.assemblyai.com/docs/Models/entity_detection) for more information.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptEntities_example_autogenerated": [
                  {
                    "entity_type": "banking_information",
                    "text": "foo",
                    "start": 42,
                    "end": 42
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speech_threshold",
                "camelCase": {
                  "unsafeName": "speechThreshold",
                  "safeName": "speechThreshold"
                },
                "snakeCase": {
                  "unsafeName": "speech_threshold",
                  "safeName": "speech_threshold"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEECH_THRESHOLD",
                  "safeName": "SPEECH_THRESHOLD"
                },
                "pascalCase": {
                  "unsafeName": "SpeechThreshold",
                  "safeName": "SpeechThreshold"
                }
              },
              "wireValue": "speech_threshold"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "FLOAT",
                        "v2": {
                          "validation": {
                            "max": 1,
                            "min": 0
                          },
                          "type": "float"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Defaults to null. Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSpeechThreshold_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "throttled",
                "camelCase": {
                  "unsafeName": "throttled",
                  "safeName": "throttled"
                },
                "snakeCase": {
                  "unsafeName": "throttled",
                  "safeName": "throttled"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THROTTLED",
                  "safeName": "THROTTLED"
                },
                "pascalCase": {
                  "unsafeName": "Throttled",
                  "safeName": "Throttled"
                }
              },
              "wireValue": "throttled"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "True while a request is throttled and false when a request is no longer throttled",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptThrottled_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Error message of why the transcript failed",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "A transcript object",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Transcript_example_autogenerated": {
            "id": "foo",
            "language_model": "foo",
            "acoustic_model": "foo",
            "status": "queued",
            "audio_url": "foo",
            "webhook_auth": true,
            "auto_highlights": true,
            "redact_pii": true,
            "summarization": true
          }
        }
      }
    },
    "Chapter": {
      "name": {
        "typeId": "Chapter",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Chapter",
          "camelCase": {
            "unsafeName": "chapter",
            "safeName": "chapter"
          },
          "snakeCase": {
            "unsafeName": "chapter",
            "safeName": "chapter"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAPTER",
            "safeName": "CHAPTER"
          },
          "pascalCase": {
            "unsafeName": "Chapter",
            "safeName": "Chapter"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "gist",
                "camelCase": {
                  "unsafeName": "gist",
                  "safeName": "gist"
                },
                "snakeCase": {
                  "unsafeName": "gist",
                  "safeName": "gist"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GIST",
                  "safeName": "GIST"
                },
                "pascalCase": {
                  "unsafeName": "Gist",
                  "safeName": "Gist"
                }
              },
              "wireValue": "gist"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "An ultra-short summary (just a few words) of the content spoken in the chapter",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChapterGist_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "headline",
                "camelCase": {
                  "unsafeName": "headline",
                  "safeName": "headline"
                },
                "snakeCase": {
                  "unsafeName": "headline",
                  "safeName": "headline"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HEADLINE",
                  "safeName": "HEADLINE"
                },
                "pascalCase": {
                  "unsafeName": "Headline",
                  "safeName": "Headline"
                }
              },
              "wireValue": "headline"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A single sentence summary of the content spoken during the chapter",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChapterHeadline_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                }
              },
              "wireValue": "summary"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A one paragraph summary of the content spoken during the chapter",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChapterSummary_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The starting time, in milliseconds, for the chapter",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChapterStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The starting time, in milliseconds, for the chapter",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChapterEnd_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Chapter of the audio file",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Chapter_example_autogenerated": {
            "gist": "foo",
            "headline": "foo",
            "summary": "foo",
            "start": 42,
            "end": 42
          }
        }
      }
    },
    "Entity": {
      "name": {
        "typeId": "Entity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Entity",
          "camelCase": {
            "unsafeName": "entity",
            "safeName": "entity"
          },
          "snakeCase": {
            "unsafeName": "entity",
            "safeName": "entity"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENTITY",
            "safeName": "ENTITY"
          },
          "pascalCase": {
            "unsafeName": "Entity",
            "safeName": "Entity"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "entity_type",
                "camelCase": {
                  "unsafeName": "entityType",
                  "safeName": "entityType"
                },
                "snakeCase": {
                  "unsafeName": "entity_type",
                  "safeName": "entity_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_TYPE",
                  "safeName": "ENTITY_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "EntityType",
                  "safeName": "EntityType"
                }
              },
              "wireValue": "entity_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EntityType",
                "camelCase": {
                  "unsafeName": "entityType",
                  "safeName": "entityType"
                },
                "snakeCase": {
                  "unsafeName": "entity_type",
                  "safeName": "entity_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_TYPE",
                  "safeName": "ENTITY_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "EntityType",
                  "safeName": "EntityType"
                }
              },
              "typeId": "EntityType",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of entity for the detected entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The text for the detected entity",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The starting time, in milliseconds, at which the detected entity appears in the audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The ending time, in milliseconds, for the detected entity in the audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EntityEnd_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "A detected entity",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Entity_example_autogenerated": {
            "entity_type": "banking_information",
            "text": "foo",
            "start": 42,
            "end": 42
          }
        }
      }
    },
    "EntityType": {
      "name": {
        "typeId": "EntityType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EntityType",
          "camelCase": {
            "unsafeName": "entityType",
            "safeName": "entityType"
          },
          "snakeCase": {
            "unsafeName": "entity_type",
            "safeName": "entity_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENTITY_TYPE",
            "safeName": "ENTITY_TYPE"
          },
          "pascalCase": {
            "unsafeName": "EntityType",
            "safeName": "EntityType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "banking_information",
                "camelCase": {
                  "unsafeName": "bankingInformation",
                  "safeName": "bankingInformation"
                },
                "snakeCase": {
                  "unsafeName": "banking_information",
                  "safeName": "banking_information"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BANKING_INFORMATION",
                  "safeName": "BANKING_INFORMATION"
                },
                "pascalCase": {
                  "unsafeName": "BankingInformation",
                  "safeName": "BankingInformation"
                }
              },
              "wireValue": "banking_information"
            },
            "docs": "Banking information, including account and routing numbers"
          },
          {
            "name": {
              "name": {
                "originalName": "blood_type",
                "camelCase": {
                  "unsafeName": "bloodType",
                  "safeName": "bloodType"
                },
                "snakeCase": {
                  "unsafeName": "blood_type",
                  "safeName": "blood_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOOD_TYPE",
                  "safeName": "BLOOD_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "BloodType",
                  "safeName": "BloodType"
                }
              },
              "wireValue": "blood_type"
            },
            "docs": "Blood type (e.g., O-, AB positive)"
          },
          {
            "name": {
              "name": {
                "originalName": "credit_card_cvv",
                "camelCase": {
                  "unsafeName": "creditCardCvv",
                  "safeName": "creditCardCvv"
                },
                "snakeCase": {
                  "unsafeName": "credit_card_cvv",
                  "safeName": "credit_card_cvv"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREDIT_CARD_CVV",
                  "safeName": "CREDIT_CARD_CVV"
                },
                "pascalCase": {
                  "unsafeName": "CreditCardCvv",
                  "safeName": "CreditCardCvv"
                }
              },
              "wireValue": "credit_card_cvv"
            },
            "docs": "Credit card verification code (e.g., CVV: 080)\n"
          },
          {
            "name": {
              "name": {
                "originalName": "credit_card_expiration",
                "camelCase": {
                  "unsafeName": "creditCardExpiration",
                  "safeName": "creditCardExpiration"
                },
                "snakeCase": {
                  "unsafeName": "credit_card_expiration",
                  "safeName": "credit_card_expiration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREDIT_CARD_EXPIRATION",
                  "safeName": "CREDIT_CARD_EXPIRATION"
                },
                "pascalCase": {
                  "unsafeName": "CreditCardExpiration",
                  "safeName": "CreditCardExpiration"
                }
              },
              "wireValue": "credit_card_expiration"
            },
            "docs": "Expiration date of a credit card"
          },
          {
            "name": {
              "name": {
                "originalName": "credit_card_number",
                "camelCase": {
                  "unsafeName": "creditCardNumber",
                  "safeName": "creditCardNumber"
                },
                "snakeCase": {
                  "unsafeName": "credit_card_number",
                  "safeName": "credit_card_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREDIT_CARD_NUMBER",
                  "safeName": "CREDIT_CARD_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "CreditCardNumber",
                  "safeName": "CreditCardNumber"
                }
              },
              "wireValue": "credit_card_number"
            },
            "docs": "Credit card number"
          },
          {
            "name": {
              "name": {
                "originalName": "date",
                "camelCase": {
                  "unsafeName": "date",
                  "safeName": "date"
                },
                "snakeCase": {
                  "unsafeName": "date",
                  "safeName": "date"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATE",
                  "safeName": "DATE"
                },
                "pascalCase": {
                  "unsafeName": "Date",
                  "safeName": "Date_"
                }
              },
              "wireValue": "date"
            },
            "docs": "Specific calendar date (e.g., December 18)"
          },
          {
            "name": {
              "name": {
                "originalName": "date_of_birth",
                "camelCase": {
                  "unsafeName": "dateOfBirth",
                  "safeName": "dateOfBirth"
                },
                "snakeCase": {
                  "unsafeName": "date_of_birth",
                  "safeName": "date_of_birth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATE_OF_BIRTH",
                  "safeName": "DATE_OF_BIRTH"
                },
                "pascalCase": {
                  "unsafeName": "DateOfBirth",
                  "safeName": "DateOfBirth"
                }
              },
              "wireValue": "date_of_birth"
            },
            "docs": "Date of Birth (e.g., Date of Birth: March 7, 1961)\n"
          },
          {
            "name": {
              "name": {
                "originalName": "drivers_license",
                "camelCase": {
                  "unsafeName": "driversLicense",
                  "safeName": "driversLicense"
                },
                "snakeCase": {
                  "unsafeName": "drivers_license",
                  "safeName": "drivers_license"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DRIVERS_LICENSE",
                  "safeName": "DRIVERS_LICENSE"
                },
                "pascalCase": {
                  "unsafeName": "DriversLicense",
                  "safeName": "DriversLicense"
                }
              },
              "wireValue": "drivers_license"
            },
            "docs": "Driver's license number (e.g., DL #356933-540)\n"
          },
          {
            "name": {
              "name": {
                "originalName": "drug",
                "camelCase": {
                  "unsafeName": "drug",
                  "safeName": "drug"
                },
                "snakeCase": {
                  "unsafeName": "drug",
                  "safeName": "drug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DRUG",
                  "safeName": "DRUG"
                },
                "pascalCase": {
                  "unsafeName": "Drug",
                  "safeName": "Drug"
                }
              },
              "wireValue": "drug"
            },
            "docs": "Medications, vitamins, or supplements (e.g., Advil, Acetaminophen, Panadol)"
          },
          {
            "name": {
              "name": {
                "originalName": "email_address",
                "camelCase": {
                  "unsafeName": "emailAddress",
                  "safeName": "emailAddress"
                },
                "snakeCase": {
                  "unsafeName": "email_address",
                  "safeName": "email_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL_ADDRESS",
                  "safeName": "EMAIL_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "EmailAddress",
                  "safeName": "EmailAddress"
                }
              },
              "wireValue": "email_address"
            },
            "docs": "Email address (e.g., support@assemblyai.com)"
          },
          {
            "name": {
              "name": {
                "originalName": "event",
                "camelCase": {
                  "unsafeName": "event",
                  "safeName": "event"
                },
                "snakeCase": {
                  "unsafeName": "event",
                  "safeName": "event"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EVENT",
                  "safeName": "EVENT"
                },
                "pascalCase": {
                  "unsafeName": "Event",
                  "safeName": "Event"
                }
              },
              "wireValue": "event"
            },
            "docs": "Name of an event or holiday (e.g., Olympics, Yom Kippur)"
          },
          {
            "name": {
              "name": {
                "originalName": "injury",
                "camelCase": {
                  "unsafeName": "injury",
                  "safeName": "injury"
                },
                "snakeCase": {
                  "unsafeName": "injury",
                  "safeName": "injury"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INJURY",
                  "safeName": "INJURY"
                },
                "pascalCase": {
                  "unsafeName": "Injury",
                  "safeName": "Injury"
                }
              },
              "wireValue": "injury"
            },
            "docs": "Bodily injury (e.g., I broke my arm, I have a sprained wrist)"
          },
          {
            "name": {
              "name": {
                "originalName": "language",
                "camelCase": {
                  "unsafeName": "language",
                  "safeName": "language"
                },
                "snakeCase": {
                  "unsafeName": "language",
                  "safeName": "language"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE",
                  "safeName": "LANGUAGE"
                },
                "pascalCase": {
                  "unsafeName": "Language",
                  "safeName": "Language"
                }
              },
              "wireValue": "language"
            },
            "docs": "Name of a natural language (e.g., Spanish, French)"
          },
          {
            "name": {
              "name": {
                "originalName": "location",
                "camelCase": {
                  "unsafeName": "location",
                  "safeName": "location"
                },
                "snakeCase": {
                  "unsafeName": "location",
                  "safeName": "location"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOCATION",
                  "safeName": "LOCATION"
                },
                "pascalCase": {
                  "unsafeName": "Location",
                  "safeName": "Location"
                }
              },
              "wireValue": "location"
            },
            "docs": "Any location reference including mailing address, postal code, city, state, province, or country"
          },
          {
            "name": {
              "name": {
                "originalName": "medical_condition",
                "camelCase": {
                  "unsafeName": "medicalCondition",
                  "safeName": "medicalCondition"
                },
                "snakeCase": {
                  "unsafeName": "medical_condition",
                  "safeName": "medical_condition"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDICAL_CONDITION",
                  "safeName": "MEDICAL_CONDITION"
                },
                "pascalCase": {
                  "unsafeName": "MedicalCondition",
                  "safeName": "MedicalCondition"
                }
              },
              "wireValue": "medical_condition"
            },
            "docs": "Name of a medical condition, disease, syndrome, deficit, or disorder (e.g., chronic fatigue syndrome, arrhythmia, depression)"
          },
          {
            "name": {
              "name": {
                "originalName": "medical_process",
                "camelCase": {
                  "unsafeName": "medicalProcess",
                  "safeName": "medicalProcess"
                },
                "snakeCase": {
                  "unsafeName": "medical_process",
                  "safeName": "medical_process"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDICAL_PROCESS",
                  "safeName": "MEDICAL_PROCESS"
                },
                "pascalCase": {
                  "unsafeName": "MedicalProcess",
                  "safeName": "MedicalProcess"
                }
              },
              "wireValue": "medical_process"
            },
            "docs": "Medical process, including treatments, procedures, and tests (e.g., heart surgery, CT scan)"
          },
          {
            "name": {
              "name": {
                "originalName": "money_amount",
                "camelCase": {
                  "unsafeName": "moneyAmount",
                  "safeName": "moneyAmount"
                },
                "snakeCase": {
                  "unsafeName": "money_amount",
                  "safeName": "money_amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MONEY_AMOUNT",
                  "safeName": "MONEY_AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "MoneyAmount",
                  "safeName": "MoneyAmount"
                }
              },
              "wireValue": "money_amount"
            },
            "docs": "Name and/or amount of currency (e.g., 15 pesos, $94.50)"
          },
          {
            "name": {
              "name": {
                "originalName": "nationality",
                "camelCase": {
                  "unsafeName": "nationality",
                  "safeName": "nationality"
                },
                "snakeCase": {
                  "unsafeName": "nationality",
                  "safeName": "nationality"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NATIONALITY",
                  "safeName": "NATIONALITY"
                },
                "pascalCase": {
                  "unsafeName": "Nationality",
                  "safeName": "Nationality"
                }
              },
              "wireValue": "nationality"
            },
            "docs": "Terms indicating nationality, ethnicity, or race (e.g., American, Asian, Caucasian)"
          },
          {
            "name": {
              "name": {
                "originalName": "occupation",
                "camelCase": {
                  "unsafeName": "occupation",
                  "safeName": "occupation"
                },
                "snakeCase": {
                  "unsafeName": "occupation",
                  "safeName": "occupation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OCCUPATION",
                  "safeName": "OCCUPATION"
                },
                "pascalCase": {
                  "unsafeName": "Occupation",
                  "safeName": "Occupation"
                }
              },
              "wireValue": "occupation"
            },
            "docs": "Job title or profession (e.g., professor, actors, engineer, CPA)"
          },
          {
            "name": {
              "name": {
                "originalName": "organization",
                "camelCase": {
                  "unsafeName": "organization",
                  "safeName": "organization"
                },
                "snakeCase": {
                  "unsafeName": "organization",
                  "safeName": "organization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORGANIZATION",
                  "safeName": "ORGANIZATION"
                },
                "pascalCase": {
                  "unsafeName": "Organization",
                  "safeName": "Organization"
                }
              },
              "wireValue": "organization"
            },
            "docs": "Name of an organization (e.g., CNN, McDonalds, University of Alaska)"
          },
          {
            "name": {
              "name": {
                "originalName": "password",
                "camelCase": {
                  "unsafeName": "password",
                  "safeName": "password"
                },
                "snakeCase": {
                  "unsafeName": "password",
                  "safeName": "password"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PASSWORD",
                  "safeName": "PASSWORD"
                },
                "pascalCase": {
                  "unsafeName": "Password",
                  "safeName": "Password"
                }
              },
              "wireValue": "password"
            },
            "docs": "Account passwords, PINs, access keys, or verification answers (e.g., 27%alfalfa, temp1234, My mother's maiden name is Smith)"
          },
          {
            "name": {
              "name": {
                "originalName": "person_age",
                "camelCase": {
                  "unsafeName": "personAge",
                  "safeName": "personAge"
                },
                "snakeCase": {
                  "unsafeName": "person_age",
                  "safeName": "person_age"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERSON_AGE",
                  "safeName": "PERSON_AGE"
                },
                "pascalCase": {
                  "unsafeName": "PersonAge",
                  "safeName": "PersonAge"
                }
              },
              "wireValue": "person_age"
            },
            "docs": "Number associated with an age (e.g., 27, 75)"
          },
          {
            "name": {
              "name": {
                "originalName": "person_name",
                "camelCase": {
                  "unsafeName": "personName",
                  "safeName": "personName"
                },
                "snakeCase": {
                  "unsafeName": "person_name",
                  "safeName": "person_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERSON_NAME",
                  "safeName": "PERSON_NAME"
                },
                "pascalCase": {
                  "unsafeName": "PersonName",
                  "safeName": "PersonName"
                }
              },
              "wireValue": "person_name"
            },
            "docs": "Name of a person (e.g., Bob, Doug Jones)"
          },
          {
            "name": {
              "name": {
                "originalName": "phone_number",
                "camelCase": {
                  "unsafeName": "phoneNumber",
                  "safeName": "phoneNumber"
                },
                "snakeCase": {
                  "unsafeName": "phone_number",
                  "safeName": "phone_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PHONE_NUMBER",
                  "safeName": "PHONE_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "PhoneNumber",
                  "safeName": "PhoneNumber"
                }
              },
              "wireValue": "phone_number"
            },
            "docs": "Telephone or fax number"
          },
          {
            "name": {
              "name": {
                "originalName": "political_affiliation",
                "camelCase": {
                  "unsafeName": "politicalAffiliation",
                  "safeName": "politicalAffiliation"
                },
                "snakeCase": {
                  "unsafeName": "political_affiliation",
                  "safeName": "political_affiliation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "POLITICAL_AFFILIATION",
                  "safeName": "POLITICAL_AFFILIATION"
                },
                "pascalCase": {
                  "unsafeName": "PoliticalAffiliation",
                  "safeName": "PoliticalAffiliation"
                }
              },
              "wireValue": "political_affiliation"
            },
            "docs": "Terms referring to a political party, movement, or ideology (e.g., Republican, Liberal)"
          },
          {
            "name": {
              "name": {
                "originalName": "religion",
                "camelCase": {
                  "unsafeName": "religion",
                  "safeName": "religion"
                },
                "snakeCase": {
                  "unsafeName": "religion",
                  "safeName": "religion"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RELIGION",
                  "safeName": "RELIGION"
                },
                "pascalCase": {
                  "unsafeName": "Religion",
                  "safeName": "Religion"
                }
              },
              "wireValue": "religion"
            },
            "docs": "Terms indicating religious affiliation (e.g., Hindu, Catholic)"
          },
          {
            "name": {
              "name": {
                "originalName": "time",
                "camelCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "snakeCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME",
                  "safeName": "TIME"
                },
                "pascalCase": {
                  "unsafeName": "Time",
                  "safeName": "Time"
                }
              },
              "wireValue": "time"
            },
            "docs": "Expressions indicating clock times (e.g., 19:37:28, 10pm EST)"
          },
          {
            "name": {
              "name": {
                "originalName": "url",
                "camelCase": {
                  "unsafeName": "url",
                  "safeName": "url"
                },
                "snakeCase": {
                  "unsafeName": "url",
                  "safeName": "url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URL",
                  "safeName": "URL"
                },
                "pascalCase": {
                  "unsafeName": "Url",
                  "safeName": "Url"
                }
              },
              "wireValue": "url"
            },
            "docs": "Internet addresses (e.g., www.assemblyai.com)"
          },
          {
            "name": {
              "name": {
                "originalName": "us_social_security_number",
                "camelCase": {
                  "unsafeName": "usSocialSecurityNumber",
                  "safeName": "usSocialSecurityNumber"
                },
                "snakeCase": {
                  "unsafeName": "us_social_security_number",
                  "safeName": "us_social_security_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "US_SOCIAL_SECURITY_NUMBER",
                  "safeName": "US_SOCIAL_SECURITY_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "UsSocialSecurityNumber",
                  "safeName": "UsSocialSecurityNumber"
                }
              },
              "wireValue": "us_social_security_number"
            },
            "docs": "Social Security Number or equivalent"
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The type of entity for the detected entity",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EntityType_example_autogenerated": "banking_information"
        }
      }
    },
    "SentimentAnalysisResult": {
      "name": {
        "typeId": "SentimentAnalysisResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SentimentAnalysisResult",
          "camelCase": {
            "unsafeName": "sentimentAnalysisResult",
            "safeName": "sentimentAnalysisResult"
          },
          "snakeCase": {
            "unsafeName": "sentiment_analysis_result",
            "safeName": "sentiment_analysis_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "SENTIMENT_ANALYSIS_RESULT",
            "safeName": "SENTIMENT_ANALYSIS_RESULT"
          },
          "pascalCase": {
            "unsafeName": "SentimentAnalysisResult",
            "safeName": "SentimentAnalysisResult"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The transcript of the sentence",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentAnalysisResultText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The starting time, in milliseconds, of the sentence",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentAnalysisResultStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The ending time, in milliseconds, of the sentence",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentAnalysisResultEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment",
                "camelCase": {
                  "unsafeName": "sentiment",
                  "safeName": "sentiment"
                },
                "snakeCase": {
                  "unsafeName": "sentiment",
                  "safeName": "sentiment"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT",
                  "safeName": "SENTIMENT"
                },
                "pascalCase": {
                  "unsafeName": "Sentiment",
                  "safeName": "Sentiment"
                }
              },
              "wireValue": "sentiment"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Sentiment",
                "camelCase": {
                  "unsafeName": "sentiment",
                  "safeName": "sentiment"
                },
                "snakeCase": {
                  "unsafeName": "sentiment",
                  "safeName": "sentiment"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT",
                  "safeName": "SENTIMENT"
                },
                "pascalCase": {
                  "unsafeName": "Sentiment",
                  "safeName": "Sentiment"
                }
              },
              "typeId": "Sentiment",
              "inline": false,
              "type": "named"
            },
            "docs": "The detected sentiment for the sentence, one of POSITIVE, NEUTRAL, NEGATIVE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The confidence score for the detected sentiment of the sentence, from 0 to 1",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentAnalysisResultConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker",
                "camelCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "snakeCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER",
                  "safeName": "SPEAKER"
                },
                "pascalCase": {
                  "unsafeName": "Speaker",
                  "safeName": "Speaker"
                }
              },
              "wireValue": "speaker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The speaker of the sentence if Speaker Diarization is enabled, else null",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentimentAnalysisResultSpeaker_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The result of the sentiment analysis model.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SentimentAnalysisResult_example_autogenerated": {
            "text": "foo",
            "start": 42,
            "end": 42,
            "sentiment": "POSITIVE",
            "confidence": 42
          }
        }
      }
    },
    "Sentiment": {
      "name": {
        "typeId": "Sentiment",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Sentiment",
          "camelCase": {
            "unsafeName": "sentiment",
            "safeName": "sentiment"
          },
          "snakeCase": {
            "unsafeName": "sentiment",
            "safeName": "sentiment"
          },
          "screamingSnakeCase": {
            "unsafeName": "SENTIMENT",
            "safeName": "SENTIMENT"
          },
          "pascalCase": {
            "unsafeName": "Sentiment",
            "safeName": "Sentiment"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "POSITIVE",
                "camelCase": {
                  "unsafeName": "positive",
                  "safeName": "positive"
                },
                "snakeCase": {
                  "unsafeName": "positive",
                  "safeName": "positive"
                },
                "screamingSnakeCase": {
                  "unsafeName": "POSITIVE",
                  "safeName": "POSITIVE"
                },
                "pascalCase": {
                  "unsafeName": "Positive",
                  "safeName": "Positive"
                }
              },
              "wireValue": "POSITIVE"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NEUTRAL",
                "camelCase": {
                  "unsafeName": "neutral",
                  "safeName": "neutral"
                },
                "snakeCase": {
                  "unsafeName": "neutral",
                  "safeName": "neutral"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NEUTRAL",
                  "safeName": "NEUTRAL"
                },
                "pascalCase": {
                  "unsafeName": "Neutral",
                  "safeName": "Neutral"
                }
              },
              "wireValue": "NEUTRAL"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NEGATIVE",
                "camelCase": {
                  "unsafeName": "negative",
                  "safeName": "negative"
                },
                "snakeCase": {
                  "unsafeName": "negative",
                  "safeName": "negative"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NEGATIVE",
                  "safeName": "NEGATIVE"
                },
                "pascalCase": {
                  "unsafeName": "Negative",
                  "safeName": "Negative"
                }
              },
              "wireValue": "NEGATIVE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Sentiment_example_autogenerated": "POSITIVE"
        }
      }
    },
    "TopicDetectionResultLabelsItems": {
      "name": {
        "typeId": "TopicDetectionResultLabelsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TopicDetectionResultLabelsItems",
          "camelCase": {
            "unsafeName": "topicDetectionResultLabelsItems",
            "safeName": "topicDetectionResultLabelsItems"
          },
          "snakeCase": {
            "unsafeName": "topic_detection_result_labels_items",
            "safeName": "topic_detection_result_labels_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOPIC_DETECTION_RESULT_LABELS_ITEMS",
            "safeName": "TOPIC_DETECTION_RESULT_LABELS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "TopicDetectionResultLabelsItems",
            "safeName": "TopicDetectionResultLabelsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "relevance",
                "camelCase": {
                  "unsafeName": "relevance",
                  "safeName": "relevance"
                },
                "snakeCase": {
                  "unsafeName": "relevance",
                  "safeName": "relevance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RELEVANCE",
                  "safeName": "RELEVANCE"
                },
                "pascalCase": {
                  "unsafeName": "Relevance",
                  "safeName": "Relevance"
                }
              },
              "wireValue": "relevance"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "How relevant the detected topic is of a detected topic",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicDetectionResultLabelsItemsRelevance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "label",
                "camelCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "snakeCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABEL",
                  "safeName": "LABEL"
                },
                "pascalCase": {
                  "unsafeName": "Label",
                  "safeName": "Label"
                }
              },
              "wireValue": "label"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The IAB taxonomical label for the label of the detected topic, where > denotes supertopic/subtopic relationship",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicDetectionResultLabelsItemsLabel_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TopicDetectionResultLabelsItems_example_autogenerated": {
            "relevance": 42,
            "label": "foo"
          }
        }
      }
    },
    "TopicDetectionResult": {
      "name": {
        "typeId": "TopicDetectionResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TopicDetectionResult",
          "camelCase": {
            "unsafeName": "topicDetectionResult",
            "safeName": "topicDetectionResult"
          },
          "snakeCase": {
            "unsafeName": "topic_detection_result",
            "safeName": "topic_detection_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOPIC_DETECTION_RESULT",
            "safeName": "TOPIC_DETECTION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "TopicDetectionResult",
            "safeName": "TopicDetectionResult"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The text in the transcript in which a detected topic occurs",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicDetectionResultText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "labels",
                "camelCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "snakeCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABELS",
                  "safeName": "LABELS"
                },
                "pascalCase": {
                  "unsafeName": "Labels",
                  "safeName": "Labels"
                }
              },
              "wireValue": "labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "TopicDetectionResultLabelsItems",
                        "camelCase": {
                          "unsafeName": "topicDetectionResultLabelsItems",
                          "safeName": "topicDetectionResultLabelsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "topic_detection_result_labels_items",
                          "safeName": "topic_detection_result_labels_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "TOPIC_DETECTION_RESULT_LABELS_ITEMS",
                          "safeName": "TOPIC_DETECTION_RESULT_LABELS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "TopicDetectionResultLabelsItems",
                          "safeName": "TopicDetectionResultLabelsItems"
                        }
                      },
                      "typeId": "TopicDetectionResultLabelsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TopicDetectionResultLabels_example_autogenerated": [
                  {
                    "relevance": 42,
                    "label": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamp",
                "camelCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "snakeCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMP",
                  "safeName": "TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "Timestamp",
                  "safeName": "Timestamp"
                }
              },
              "wireValue": "timestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Timestamp",
                    "camelCase": {
                      "unsafeName": "timestamp",
                      "safeName": "timestamp"
                    },
                    "snakeCase": {
                      "unsafeName": "timestamp",
                      "safeName": "timestamp"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TIMESTAMP",
                      "safeName": "TIMESTAMP"
                    },
                    "pascalCase": {
                      "unsafeName": "Timestamp",
                      "safeName": "Timestamp"
                    }
                  },
                  "typeId": "Timestamp",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "THe result of the topic detection model.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TopicDetectionResult_example_autogenerated": {
            "text": "foo"
          }
        }
      }
    },
    "ContentSafetyLabel": {
      "name": {
        "typeId": "ContentSafetyLabel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ContentSafetyLabel",
          "camelCase": {
            "unsafeName": "contentSafetyLabel",
            "safeName": "contentSafetyLabel"
          },
          "snakeCase": {
            "unsafeName": "content_safety_label",
            "safeName": "content_safety_label"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTENT_SAFETY_LABEL",
            "safeName": "CONTENT_SAFETY_LABEL"
          },
          "pascalCase": {
            "unsafeName": "ContentSafetyLabel",
            "safeName": "ContentSafetyLabel"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "label",
                "camelCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "snakeCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABEL",
                  "safeName": "LABEL"
                },
                "pascalCase": {
                  "unsafeName": "Label",
                  "safeName": "Label"
                }
              },
              "wireValue": "label"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The label of the sensitive topic",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelLabel_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The confidence score for the topic being discussed, from 0 to 1",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "severity",
                "camelCase": {
                  "unsafeName": "severity",
                  "safeName": "severity"
                },
                "snakeCase": {
                  "unsafeName": "severity",
                  "safeName": "severity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEVERITY",
                  "safeName": "SEVERITY"
                },
                "pascalCase": {
                  "unsafeName": "Severity",
                  "safeName": "Severity"
                }
              },
              "wireValue": "severity"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "How severely the topic is discussed in the section, from 0 to 1",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelSeverity_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContentSafetyLabel_example_autogenerated": {
            "label": "foo",
            "confidence": 42,
            "severity": 42
          }
        }
      }
    },
    "ContentSafetyLabelResult": {
      "name": {
        "typeId": "ContentSafetyLabelResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ContentSafetyLabelResult",
          "camelCase": {
            "unsafeName": "contentSafetyLabelResult",
            "safeName": "contentSafetyLabelResult"
          },
          "snakeCase": {
            "unsafeName": "content_safety_label_result",
            "safeName": "content_safety_label_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTENT_SAFETY_LABEL_RESULT",
            "safeName": "CONTENT_SAFETY_LABEL_RESULT"
          },
          "pascalCase": {
            "unsafeName": "ContentSafetyLabelResult",
            "safeName": "ContentSafetyLabelResult"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The transcript of the section flagged by the Content Moderation model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelResultText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "labels",
                "camelCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "snakeCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABELS",
                  "safeName": "LABELS"
                },
                "pascalCase": {
                  "unsafeName": "Labels",
                  "safeName": "Labels"
                }
              },
              "wireValue": "labels"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ContentSafetyLabel",
                    "camelCase": {
                      "unsafeName": "contentSafetyLabel",
                      "safeName": "contentSafetyLabel"
                    },
                    "snakeCase": {
                      "unsafeName": "content_safety_label",
                      "safeName": "content_safety_label"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTENT_SAFETY_LABEL",
                      "safeName": "CONTENT_SAFETY_LABEL"
                    },
                    "pascalCase": {
                      "unsafeName": "ContentSafetyLabel",
                      "safeName": "ContentSafetyLabel"
                    }
                  },
                  "typeId": "ContentSafetyLabel",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "An array of objects, one per sensitive topic that was detected in the section",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelResultLabels_example_autogenerated": [
                  {
                    "label": "foo",
                    "confidence": 42,
                    "severity": 42
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentences_idx_start",
                "camelCase": {
                  "unsafeName": "sentencesIdxStart",
                  "safeName": "sentencesIdxStart"
                },
                "snakeCase": {
                  "unsafeName": "sentences_idx_start",
                  "safeName": "sentences_idx_start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTENCES_IDX_START",
                  "safeName": "SENTENCES_IDX_START"
                },
                "pascalCase": {
                  "unsafeName": "SentencesIdxStart",
                  "safeName": "SentencesIdxStart"
                }
              },
              "wireValue": "sentences_idx_start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The sentence index at which the section begins",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelResultSentencesIdxStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentences_idx_end",
                "camelCase": {
                  "unsafeName": "sentencesIdxEnd",
                  "safeName": "sentencesIdxEnd"
                },
                "snakeCase": {
                  "unsafeName": "sentences_idx_end",
                  "safeName": "sentences_idx_end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTENCES_IDX_END",
                  "safeName": "SENTENCES_IDX_END"
                },
                "pascalCase": {
                  "unsafeName": "SentencesIdxEnd",
                  "safeName": "SentencesIdxEnd"
                }
              },
              "wireValue": "sentences_idx_end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The sentence index at which the section ends",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelResultSentencesIdxEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamp",
                "camelCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "snakeCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMP",
                  "safeName": "TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "Timestamp",
                  "safeName": "Timestamp"
                }
              },
              "wireValue": "timestamp"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Timestamp",
                "camelCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "snakeCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMP",
                  "safeName": "TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "Timestamp",
                  "safeName": "Timestamp"
                }
              },
              "typeId": "Timestamp",
              "inline": false,
              "type": "named"
            },
            "docs": "Timestamp information for the section",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                }
              },
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {
                        "max": 1,
                        "min": 0
                      },
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "map"
              },
              "type": "container"
            },
            "docs": "A summary of the Content Moderation confidence results for the entire audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelResultSummary_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "severity_score_summary",
                "camelCase": {
                  "unsafeName": "severityScoreSummary",
                  "safeName": "severityScoreSummary"
                },
                "snakeCase": {
                  "unsafeName": "severity_score_summary",
                  "safeName": "severity_score_summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEVERITY_SCORE_SUMMARY",
                  "safeName": "SEVERITY_SCORE_SUMMARY"
                },
                "pascalCase": {
                  "unsafeName": "SeverityScoreSummary",
                  "safeName": "SeverityScoreSummary"
                }
              },
              "wireValue": "severity_score_summary"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "SeverityScoreSummary",
                    "camelCase": {
                      "unsafeName": "severityScoreSummary",
                      "safeName": "severityScoreSummary"
                    },
                    "snakeCase": {
                      "unsafeName": "severity_score_summary",
                      "safeName": "severity_score_summary"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SEVERITY_SCORE_SUMMARY",
                      "safeName": "SEVERITY_SCORE_SUMMARY"
                    },
                    "pascalCase": {
                      "unsafeName": "SeverityScoreSummary",
                      "safeName": "SeverityScoreSummary"
                    }
                  },
                  "typeId": "SeverityScoreSummary",
                  "inline": false,
                  "type": "named"
                },
                "type": "map"
              },
              "type": "container"
            },
            "docs": "A summary of the Content Moderation severity results for the entire audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContentSafetyLabelResultSeverityScoreSummary_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContentSafetyLabelResult_example_autogenerated": {
            "text": "foo",
            "labels": [
              {
                "label": "foo",
                "confidence": 42,
                "severity": 42
              }
            ],
            "sentences_idx_start": 42,
            "sentences_idx_end": 42,
            "timestamp": {
              "start": 42,
              "end": 42
            },
            "summary": {},
            "severity_score_summary": {}
          }
        }
      }
    },
    "SeverityScoreSummary": {
      "name": {
        "typeId": "SeverityScoreSummary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SeverityScoreSummary",
          "camelCase": {
            "unsafeName": "severityScoreSummary",
            "safeName": "severityScoreSummary"
          },
          "snakeCase": {
            "unsafeName": "severity_score_summary",
            "safeName": "severity_score_summary"
          },
          "screamingSnakeCase": {
            "unsafeName": "SEVERITY_SCORE_SUMMARY",
            "safeName": "SEVERITY_SCORE_SUMMARY"
          },
          "pascalCase": {
            "unsafeName": "SeverityScoreSummary",
            "safeName": "SeverityScoreSummary"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "low",
                "camelCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "snakeCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOW",
                  "safeName": "LOW"
                },
                "pascalCase": {
                  "unsafeName": "Low",
                  "safeName": "Low"
                }
              },
              "wireValue": "low"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SeverityScoreSummaryLow_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "medium",
                "camelCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "snakeCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIUM",
                  "safeName": "MEDIUM"
                },
                "pascalCase": {
                  "unsafeName": "Medium",
                  "safeName": "Medium"
                }
              },
              "wireValue": "medium"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SeverityScoreSummaryMedium_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "high",
                "camelCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "snakeCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGH",
                  "safeName": "HIGH"
                },
                "pascalCase": {
                  "unsafeName": "High",
                  "safeName": "High"
                }
              },
              "wireValue": "high"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SeverityScoreSummaryHigh_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SeverityScoreSummary_example_autogenerated": {
            "low": 42,
            "medium": 42,
            "high": 42
          }
        }
      }
    },
    "AutoHighlightsResult": {
      "name": {
        "typeId": "AutoHighlightsResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AutoHighlightsResult",
          "camelCase": {
            "unsafeName": "autoHighlightsResult",
            "safeName": "autoHighlightsResult"
          },
          "snakeCase": {
            "unsafeName": "auto_highlights_result",
            "safeName": "auto_highlights_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUTO_HIGHLIGHTS_RESULT",
            "safeName": "AUTO_HIGHLIGHTS_RESULT"
          },
          "pascalCase": {
            "unsafeName": "AutoHighlightsResult",
            "safeName": "AutoHighlightsResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AutoHighlightsResult",
                "camelCase": {
                  "unsafeName": "autoHighlightsResult",
                  "safeName": "autoHighlightsResult"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights_result",
                  "safeName": "auto_highlights_result"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS_RESULT",
                  "safeName": "AUTO_HIGHLIGHTS_RESULT"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlightsResult",
                  "safeName": "AutoHighlightsResult"
                }
              },
              "typeId": "AutoHighlightsResult",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AutoHighlightsResult",
                "camelCase": {
                  "unsafeName": "autoHighlightsResult",
                  "safeName": "autoHighlightsResult"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights_result",
                  "safeName": "auto_highlights_result"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS_RESULT",
                  "safeName": "AUTO_HIGHLIGHTS_RESULT"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlightsResult",
                  "safeName": "AutoHighlightsResult"
                }
              },
              "typeId": "AutoHighlightsResult",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An array of results for the Key Phrases model, if it was enabled during the transcription request.\nSee [Key phrases](https://www.assemblyai.com/docs/Models/key_phrases) for more information.\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AutoHighlightsResult_example_autogenerated": {
            "results": [
              {
                "count": 42,
                "rank": 42,
                "text": "foo",
                "timestamps": [
                  {
                    "start": 42,
                    "end": 42
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "AutoHighlightResult": {
      "name": {
        "typeId": "AutoHighlightResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AutoHighlightResult",
          "camelCase": {
            "unsafeName": "autoHighlightResult",
            "safeName": "autoHighlightResult"
          },
          "snakeCase": {
            "unsafeName": "auto_highlight_result",
            "safeName": "auto_highlight_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUTO_HIGHLIGHT_RESULT",
            "safeName": "AUTO_HIGHLIGHT_RESULT"
          },
          "pascalCase": {
            "unsafeName": "AutoHighlightResult",
            "safeName": "AutoHighlightResult"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "count",
                "camelCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "snakeCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COUNT",
                  "safeName": "COUNT"
                },
                "pascalCase": {
                  "unsafeName": "Count",
                  "safeName": "Count"
                }
              },
              "wireValue": "count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The total number of times the key phrase appears in the audio file",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AutoHighlightResultCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "rank",
                "camelCase": {
                  "unsafeName": "rank",
                  "safeName": "rank"
                },
                "snakeCase": {
                  "unsafeName": "rank",
                  "safeName": "rank"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RANK",
                  "safeName": "RANK"
                },
                "pascalCase": {
                  "unsafeName": "Rank",
                  "safeName": "Rank"
                }
              },
              "wireValue": "rank"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "float"
                }
              },
              "type": "primitive"
            },
            "docs": "The total relevancy to the overall audio file of this key phrase - a greater number means more relevant",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AutoHighlightResultRank_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The text itself of the key phrase",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AutoHighlightResultText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamps",
                "camelCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "snakeCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMPS",
                  "safeName": "TIMESTAMPS"
                },
                "pascalCase": {
                  "unsafeName": "Timestamps",
                  "safeName": "Timestamps"
                }
              },
              "wireValue": "timestamps"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Timestamp",
                    "camelCase": {
                      "unsafeName": "timestamp",
                      "safeName": "timestamp"
                    },
                    "snakeCase": {
                      "unsafeName": "timestamp",
                      "safeName": "timestamp"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TIMESTAMP",
                      "safeName": "TIMESTAMP"
                    },
                    "pascalCase": {
                      "unsafeName": "Timestamp",
                      "safeName": "Timestamp"
                    }
                  },
                  "typeId": "Timestamp",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The timestamp of the of the key phrase",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AutoHighlightResultTimestamps_example_autogenerated": [
                  {
                    "start": 42,
                    "end": 42
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AutoHighlightResult_example_autogenerated": {
            "count": 42,
            "rank": 42,
            "text": "foo",
            "timestamps": [
              {
                "start": 42,
                "end": 42
              }
            ]
          }
        }
      }
    },
    "TranscriptWord": {
      "name": {
        "typeId": "TranscriptWord",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptWord",
          "camelCase": {
            "unsafeName": "transcriptWord",
            "safeName": "transcriptWord"
          },
          "snakeCase": {
            "unsafeName": "transcript_word",
            "safeName": "transcript_word"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_WORD",
            "safeName": "TRANSCRIPT_WORD"
          },
          "pascalCase": {
            "unsafeName": "TranscriptWord",
            "safeName": "TranscriptWord"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWordConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWordStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWordEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWordText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker",
                "camelCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "snakeCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER",
                  "safeName": "SPEAKER"
                },
                "pascalCase": {
                  "unsafeName": "Speaker",
                  "safeName": "Speaker"
                }
              },
              "wireValue": "speaker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptWordSpeaker_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptWord_example_autogenerated": {
            "confidence": 42,
            "start": 42,
            "end": 42,
            "text": "foo"
          }
        }
      }
    },
    "TranscriptSentence": {
      "name": {
        "typeId": "TranscriptSentence",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptSentence",
          "camelCase": {
            "unsafeName": "transcriptSentence",
            "safeName": "transcriptSentence"
          },
          "snakeCase": {
            "unsafeName": "transcript_sentence",
            "safeName": "transcript_sentence"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_SENTENCE",
            "safeName": "TRANSCRIPT_SENTENCE"
          },
          "pascalCase": {
            "unsafeName": "TranscriptSentence",
            "safeName": "TranscriptSentence"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSentenceText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSentenceStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSentenceEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSentenceConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                }
              },
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptWord",
                    "camelCase": {
                      "unsafeName": "transcriptWord",
                      "safeName": "transcriptWord"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_word",
                      "safeName": "transcript_word"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_WORD",
                      "safeName": "TRANSCRIPT_WORD"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptWord",
                      "safeName": "TranscriptWord"
                    }
                  },
                  "typeId": "TranscriptWord",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptSentenceWords_example_autogenerated": [
                  {
                    "confidence": 42,
                    "start": 42,
                    "end": 42,
                    "text": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptSentence_example_autogenerated": {
            "text": "foo",
            "start": 42,
            "end": 42,
            "confidence": 42,
            "words": [
              {
                "confidence": 42,
                "start": 42,
                "end": 42,
                "text": "foo"
              }
            ]
          }
        }
      }
    },
    "SentencesResponse": {
      "name": {
        "typeId": "SentencesResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SentencesResponse",
          "camelCase": {
            "unsafeName": "sentencesResponse",
            "safeName": "sentencesResponse"
          },
          "snakeCase": {
            "unsafeName": "sentences_response",
            "safeName": "sentences_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "SENTENCES_RESPONSE",
            "safeName": "SENTENCES_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "SentencesResponse",
            "safeName": "SentencesResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentencesResponseId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentencesResponseConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_duration",
                "camelCase": {
                  "unsafeName": "audioDuration",
                  "safeName": "audioDuration"
                },
                "snakeCase": {
                  "unsafeName": "audio_duration",
                  "safeName": "audio_duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DURATION",
                  "safeName": "AUDIO_DURATION"
                },
                "pascalCase": {
                  "unsafeName": "AudioDuration",
                  "safeName": "AudioDuration"
                }
              },
              "wireValue": "audio_duration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentencesResponseAudioDuration_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentences",
                "camelCase": {
                  "unsafeName": "sentences",
                  "safeName": "sentences"
                },
                "snakeCase": {
                  "unsafeName": "sentences",
                  "safeName": "sentences"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTENCES",
                  "safeName": "SENTENCES"
                },
                "pascalCase": {
                  "unsafeName": "Sentences",
                  "safeName": "Sentences"
                }
              },
              "wireValue": "sentences"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptSentence",
                    "camelCase": {
                      "unsafeName": "transcriptSentence",
                      "safeName": "transcriptSentence"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_sentence",
                      "safeName": "transcript_sentence"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_SENTENCE",
                      "safeName": "TRANSCRIPT_SENTENCE"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptSentence",
                      "safeName": "TranscriptSentence"
                    }
                  },
                  "typeId": "TranscriptSentence",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SentencesResponseSentences_example_autogenerated": [
                  {
                    "text": "foo",
                    "start": 42,
                    "end": 42,
                    "confidence": 42,
                    "words": [
                      {
                        "confidence": 42,
                        "start": 42,
                        "end": 42,
                        "text": "foo"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SentencesResponse_example_autogenerated": {
            "id": "foo",
            "confidence": 42,
            "audio_duration": 42,
            "sentences": [
              {
                "text": "foo",
                "start": 42,
                "end": 42,
                "confidence": 42,
                "words": [
                  {
                    "confidence": 42,
                    "start": 42,
                    "end": 42,
                    "text": "foo"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "TranscriptParagraph": {
      "name": {
        "typeId": "TranscriptParagraph",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptParagraph",
          "camelCase": {
            "unsafeName": "transcriptParagraph",
            "safeName": "transcriptParagraph"
          },
          "snakeCase": {
            "unsafeName": "transcript_paragraph",
            "safeName": "transcript_paragraph"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_PARAGRAPH",
            "safeName": "TRANSCRIPT_PARAGRAPH"
          },
          "pascalCase": {
            "unsafeName": "TranscriptParagraph",
            "safeName": "TranscriptParagraph"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptParagraphText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptParagraphStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptParagraphEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptParagraphConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                }
              },
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptWord",
                    "camelCase": {
                      "unsafeName": "transcriptWord",
                      "safeName": "transcriptWord"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_word",
                      "safeName": "transcript_word"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_WORD",
                      "safeName": "TRANSCRIPT_WORD"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptWord",
                      "safeName": "TranscriptWord"
                    }
                  },
                  "typeId": "TranscriptWord",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptParagraphWords_example_autogenerated": [
                  {
                    "confidence": 42,
                    "start": 42,
                    "end": 42,
                    "text": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptParagraph_example_autogenerated": {
            "text": "foo",
            "start": 42,
            "end": 42,
            "confidence": 42,
            "words": [
              {
                "confidence": 42,
                "start": 42,
                "end": 42,
                "text": "foo"
              }
            ]
          }
        }
      }
    },
    "ParagraphsResponse": {
      "name": {
        "typeId": "ParagraphsResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ParagraphsResponse",
          "camelCase": {
            "unsafeName": "paragraphsResponse",
            "safeName": "paragraphsResponse"
          },
          "snakeCase": {
            "unsafeName": "paragraphs_response",
            "safeName": "paragraphs_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "PARAGRAPHS_RESPONSE",
            "safeName": "PARAGRAPHS_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "ParagraphsResponse",
            "safeName": "ParagraphsResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ParagraphsResponseId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ParagraphsResponseConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_duration",
                "camelCase": {
                  "unsafeName": "audioDuration",
                  "safeName": "audioDuration"
                },
                "snakeCase": {
                  "unsafeName": "audio_duration",
                  "safeName": "audio_duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DURATION",
                  "safeName": "AUDIO_DURATION"
                },
                "pascalCase": {
                  "unsafeName": "AudioDuration",
                  "safeName": "AudioDuration"
                }
              },
              "wireValue": "audio_duration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ParagraphsResponseAudioDuration_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "paragraphs",
                "camelCase": {
                  "unsafeName": "paragraphs",
                  "safeName": "paragraphs"
                },
                "snakeCase": {
                  "unsafeName": "paragraphs",
                  "safeName": "paragraphs"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARAGRAPHS",
                  "safeName": "PARAGRAPHS"
                },
                "pascalCase": {
                  "unsafeName": "Paragraphs",
                  "safeName": "Paragraphs"
                }
              },
              "wireValue": "paragraphs"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptParagraph",
                    "camelCase": {
                      "unsafeName": "transcriptParagraph",
                      "safeName": "transcriptParagraph"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_paragraph",
                      "safeName": "transcript_paragraph"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_PARAGRAPH",
                      "safeName": "TRANSCRIPT_PARAGRAPH"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptParagraph",
                      "safeName": "TranscriptParagraph"
                    }
                  },
                  "typeId": "TranscriptParagraph",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ParagraphsResponseParagraphs_example_autogenerated": [
                  {
                    "text": "foo",
                    "start": 42,
                    "end": 42,
                    "confidence": 42,
                    "words": [
                      {
                        "confidence": 42,
                        "start": 42,
                        "end": 42,
                        "text": "foo"
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ParagraphsResponse_example_autogenerated": {
            "id": "foo",
            "confidence": 42,
            "audio_duration": 42,
            "paragraphs": [
              {
                "text": "foo",
                "start": 42,
                "end": 42,
                "confidence": 42,
                "words": [
                  {
                    "confidence": 42,
                    "start": 42,
                    "end": 42,
                    "text": "foo"
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "PageDetails": {
      "name": {
        "typeId": "PageDetails",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PageDetails",
          "camelCase": {
            "unsafeName": "pageDetails",
            "safeName": "pageDetails"
          },
          "snakeCase": {
            "unsafeName": "page_details",
            "safeName": "page_details"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAGE_DETAILS",
            "safeName": "PAGE_DETAILS"
          },
          "pascalCase": {
            "unsafeName": "PageDetails",
            "safeName": "PageDetails"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "limit",
                "camelCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "snakeCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LIMIT",
                  "safeName": "LIMIT"
                },
                "pascalCase": {
                  "unsafeName": "Limit",
                  "safeName": "Limit"
                }
              },
              "wireValue": "limit"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PageDetailsLimit_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "result_count",
                "camelCase": {
                  "unsafeName": "resultCount",
                  "safeName": "resultCount"
                },
                "snakeCase": {
                  "unsafeName": "result_count",
                  "safeName": "result_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESULT_COUNT",
                  "safeName": "RESULT_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "ResultCount",
                  "safeName": "ResultCount"
                }
              },
              "wireValue": "result_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PageDetailsResultCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "current_url",
                "camelCase": {
                  "unsafeName": "currentUrl",
                  "safeName": "currentUrl"
                },
                "snakeCase": {
                  "unsafeName": "current_url",
                  "safeName": "current_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CURRENT_URL",
                  "safeName": "CURRENT_URL"
                },
                "pascalCase": {
                  "unsafeName": "CurrentUrl",
                  "safeName": "CurrentUrl"
                }
              },
              "wireValue": "current_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PageDetailsCurrentUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "prev_url",
                "camelCase": {
                  "unsafeName": "prevUrl",
                  "safeName": "prevUrl"
                },
                "snakeCase": {
                  "unsafeName": "prev_url",
                  "safeName": "prev_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREV_URL",
                  "safeName": "PREV_URL"
                },
                "pascalCase": {
                  "unsafeName": "PrevUrl",
                  "safeName": "PrevUrl"
                }
              },
              "wireValue": "prev_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PageDetailsPrevUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "next_url",
                "camelCase": {
                  "unsafeName": "nextUrl",
                  "safeName": "nextUrl"
                },
                "snakeCase": {
                  "unsafeName": "next_url",
                  "safeName": "next_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NEXT_URL",
                  "safeName": "NEXT_URL"
                },
                "pascalCase": {
                  "unsafeName": "NextUrl",
                  "safeName": "NextUrl"
                }
              },
              "wireValue": "next_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PageDetailsNextUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PageDetails_example_autogenerated": {
            "limit": 42,
            "result_count": 42,
            "current_url": "foo",
            "prev_url": "foo"
          }
        }
      }
    },
    "TranscriptListParameters": {
      "name": {
        "typeId": "TranscriptListParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListParameters",
          "camelCase": {
            "unsafeName": "transcriptListParameters",
            "safeName": "transcriptListParameters"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_parameters",
            "safeName": "transcript_list_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_PARAMETERS",
            "safeName": "TRANSCRIPT_LIST_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListParameters",
            "safeName": "TranscriptListParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "limit",
                "camelCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "snakeCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LIMIT",
                  "safeName": "LIMIT"
                },
                "pascalCase": {
                  "unsafeName": "Limit",
                  "safeName": "Limit"
                }
              },
              "wireValue": "limit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "default": 10,
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Maximum amount of transcripts to retrieve",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListParametersLimit_example_autogenerated": 10
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptStatus",
                    "camelCase": {
                      "unsafeName": "transcriptStatus",
                      "safeName": "transcriptStatus"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_status",
                      "safeName": "transcript_status"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_STATUS",
                      "safeName": "TRANSCRIPT_STATUS"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptStatus",
                      "safeName": "TranscriptStatus"
                    }
                  },
                  "typeId": "TranscriptStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Filter by transcript status",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_on",
                "camelCase": {
                  "unsafeName": "createdOn",
                  "safeName": "createdOn"
                },
                "snakeCase": {
                  "unsafeName": "created_on",
                  "safeName": "created_on"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_ON",
                  "safeName": "CREATED_ON"
                },
                "pascalCase": {
                  "unsafeName": "CreatedOn",
                  "safeName": "CreatedOn"
                }
              },
              "wireValue": "created_on"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only get transcripts created on this date",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListParametersCreatedOn_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "before_id",
                "camelCase": {
                  "unsafeName": "beforeId",
                  "safeName": "beforeId"
                },
                "snakeCase": {
                  "unsafeName": "before_id",
                  "safeName": "before_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BEFORE_ID",
                  "safeName": "BEFORE_ID"
                },
                "pascalCase": {
                  "unsafeName": "BeforeId",
                  "safeName": "BeforeId"
                }
              },
              "wireValue": "before_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Get transcripts that were created before this transcript ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListParametersBeforeId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "after_id",
                "camelCase": {
                  "unsafeName": "afterId",
                  "safeName": "afterId"
                },
                "snakeCase": {
                  "unsafeName": "after_id",
                  "safeName": "after_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AFTER_ID",
                  "safeName": "AFTER_ID"
                },
                "pascalCase": {
                  "unsafeName": "AfterId",
                  "safeName": "AfterId"
                }
              },
              "wireValue": "after_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Get transcripts that were created after this transcript ID",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListParametersAfterId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "throttled_only",
                "camelCase": {
                  "unsafeName": "throttledOnly",
                  "safeName": "throttledOnly"
                },
                "snakeCase": {
                  "unsafeName": "throttled_only",
                  "safeName": "throttled_only"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THROTTLED_ONLY",
                  "safeName": "THROTTLED_ONLY"
                },
                "pascalCase": {
                  "unsafeName": "ThrottledOnly",
                  "safeName": "ThrottledOnly"
                }
              },
              "wireValue": "throttled_only"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only get throttled transcripts, overrides the status filter",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListParametersThrottledOnly_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListParameters_example_autogenerated": {}
        }
      }
    },
    "TranscriptListItem": {
      "name": {
        "typeId": "TranscriptListItem",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListItem",
          "camelCase": {
            "unsafeName": "transcriptListItem",
            "safeName": "transcriptListItem"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_item",
            "safeName": "transcript_list_item"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_ITEM",
            "safeName": "TRANSCRIPT_LIST_ITEM"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListItem",
            "safeName": "TranscriptListItem"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListItemId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_url",
                "camelCase": {
                  "unsafeName": "resourceUrl",
                  "safeName": "resourceUrl"
                },
                "snakeCase": {
                  "unsafeName": "resource_url",
                  "safeName": "resource_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_URL",
                  "safeName": "RESOURCE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ResourceUrl",
                  "safeName": "ResourceUrl"
                }
              },
              "wireValue": "resource_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListItemResourceUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TranscriptStatus",
                "camelCase": {
                  "unsafeName": "transcriptStatus",
                  "safeName": "transcriptStatus"
                },
                "snakeCase": {
                  "unsafeName": "transcript_status",
                  "safeName": "transcript_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_STATUS",
                  "safeName": "TRANSCRIPT_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptStatus",
                  "safeName": "TranscriptStatus"
                }
              },
              "typeId": "TranscriptStatus",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created",
                "camelCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "snakeCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED",
                  "safeName": "CREATED"
                },
                "pascalCase": {
                  "unsafeName": "Created",
                  "safeName": "Created"
                }
              },
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME",
                "v2": {
                  "type": "dateTime"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "completed",
                "camelCase": {
                  "unsafeName": "completed",
                  "safeName": "completed"
                },
                "snakeCase": {
                  "unsafeName": "completed",
                  "safeName": "completed"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COMPLETED",
                  "safeName": "COMPLETED"
                },
                "pascalCase": {
                  "unsafeName": "Completed",
                  "safeName": "Completed"
                }
              },
              "wireValue": "completed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DATE_TIME",
                    "v2": {
                      "type": "dateTime"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioUrl",
                  "safeName": "audioUrl"
                },
                "snakeCase": {
                  "unsafeName": "audio_url",
                  "safeName": "audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_URL",
                  "safeName": "AUDIO_URL"
                },
                "pascalCase": {
                  "unsafeName": "AudioUrl",
                  "safeName": "AudioUrl"
                }
              },
              "wireValue": "audio_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListItemAudioUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListItem_example_autogenerated": {
            "id": "foo",
            "resource_url": "foo",
            "status": "queued",
            "created": "foo",
            "audio_url": "foo"
          }
        }
      }
    },
    "TranscriptList": {
      "name": {
        "typeId": "TranscriptList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptList",
          "camelCase": {
            "unsafeName": "transcriptList",
            "safeName": "transcriptList"
          },
          "snakeCase": {
            "unsafeName": "transcript_list",
            "safeName": "transcript_list"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST",
            "safeName": "TRANSCRIPT_LIST"
          },
          "pascalCase": {
            "unsafeName": "TranscriptList",
            "safeName": "TranscriptList"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "page_details",
                "camelCase": {
                  "unsafeName": "pageDetails",
                  "safeName": "pageDetails"
                },
                "snakeCase": {
                  "unsafeName": "page_details",
                  "safeName": "page_details"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_DETAILS",
                  "safeName": "PAGE_DETAILS"
                },
                "pascalCase": {
                  "unsafeName": "PageDetails",
                  "safeName": "PageDetails"
                }
              },
              "wireValue": "page_details"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PageDetails",
                "camelCase": {
                  "unsafeName": "pageDetails",
                  "safeName": "pageDetails"
                },
                "snakeCase": {
                  "unsafeName": "page_details",
                  "safeName": "page_details"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_DETAILS",
                  "safeName": "PAGE_DETAILS"
                },
                "pascalCase": {
                  "unsafeName": "PageDetails",
                  "safeName": "PageDetails"
                }
              },
              "typeId": "PageDetails",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transcripts",
                "camelCase": {
                  "unsafeName": "transcripts",
                  "safeName": "transcripts"
                },
                "snakeCase": {
                  "unsafeName": "transcripts",
                  "safeName": "transcripts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPTS",
                  "safeName": "TRANSCRIPTS"
                },
                "pascalCase": {
                  "unsafeName": "Transcripts",
                  "safeName": "Transcripts"
                }
              },
              "wireValue": "transcripts"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptListItem",
                    "camelCase": {
                      "unsafeName": "transcriptListItem",
                      "safeName": "transcriptListItem"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_list_item",
                      "safeName": "transcript_list_item"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_LIST_ITEM",
                      "safeName": "TRANSCRIPT_LIST_ITEM"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptListItem",
                      "safeName": "TranscriptListItem"
                    }
                  },
                  "typeId": "TranscriptListItem",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TranscriptListTranscripts_example_autogenerated": [
                  {
                    "id": "foo",
                    "resource_url": "foo",
                    "status": "queued",
                    "created": "foo",
                    "audio_url": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptList_example_autogenerated": {
            "page_details": {
              "limit": 42,
              "result_count": 42,
              "current_url": "foo",
              "prev_url": "foo"
            },
            "transcripts": [
              {
                "id": "foo",
                "resource_url": "foo",
                "status": "queued",
                "created": "foo",
                "audio_url": "foo"
              }
            ]
          }
        }
      }
    },
    "UploadedFile": {
      "name": {
        "typeId": "UploadedFile",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UploadedFile",
          "camelCase": {
            "unsafeName": "uploadedFile",
            "safeName": "uploadedFile"
          },
          "snakeCase": {
            "unsafeName": "uploaded_file",
            "safeName": "uploaded_file"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOADED_FILE",
            "safeName": "UPLOADED_FILE"
          },
          "pascalCase": {
            "unsafeName": "UploadedFile",
            "safeName": "UploadedFile"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "upload_url",
                "camelCase": {
                  "unsafeName": "uploadUrl",
                  "safeName": "uploadUrl"
                },
                "snakeCase": {
                  "unsafeName": "upload_url",
                  "safeName": "upload_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD_URL",
                  "safeName": "UPLOAD_URL"
                },
                "pascalCase": {
                  "unsafeName": "UploadUrl",
                  "safeName": "UploadUrl"
                }
              },
              "wireValue": "upload_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "A URL that points to your audio file, accessible only by AssemblyAI's servers",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UploadedFileUploadUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UploadedFile_example_autogenerated": {
            "upload_url": "foo"
          }
        }
      }
    },
    "CreateRealtimeTemporaryTokenParameters": {
      "name": {
        "typeId": "CreateRealtimeTemporaryTokenParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "CreateRealtimeTemporaryTokenParameters",
          "camelCase": {
            "unsafeName": "createRealtimeTemporaryTokenParameters",
            "safeName": "createRealtimeTemporaryTokenParameters"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_temporary_token_parameters",
            "safeName": "create_realtime_temporary_token_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TEMPORARY_TOKEN_PARAMETERS",
            "safeName": "CREATE_REALTIME_TEMPORARY_TOKEN_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTemporaryTokenParameters",
            "safeName": "CreateRealtimeTemporaryTokenParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "expires_in",
                "camelCase": {
                  "unsafeName": "expiresIn",
                  "safeName": "expiresIn"
                },
                "snakeCase": {
                  "unsafeName": "expires_in",
                  "safeName": "expires_in"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXPIRES_IN",
                  "safeName": "EXPIRES_IN"
                },
                "pascalCase": {
                  "unsafeName": "ExpiresIn",
                  "safeName": "ExpiresIn"
                }
              },
              "wireValue": "expires_in"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {
                    "min": 60
                  },
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "The amount of time until the token expires in seconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CreateRealtimeTemporaryTokenParametersExpiresIn_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CreateRealtimeTemporaryTokenParameters_example_autogenerated": {
            "expires_in": 42
          }
        }
      }
    },
    "RealtimeTemporaryTokenResponse": {
      "name": {
        "typeId": "RealtimeTemporaryTokenResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RealtimeTemporaryTokenResponse",
          "camelCase": {
            "unsafeName": "realtimeTemporaryTokenResponse",
            "safeName": "realtimeTemporaryTokenResponse"
          },
          "snakeCase": {
            "unsafeName": "realtime_temporary_token_response",
            "safeName": "realtime_temporary_token_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME_TEMPORARY_TOKEN_RESPONSE",
            "safeName": "REALTIME_TEMPORARY_TOKEN_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "RealtimeTemporaryTokenResponse",
            "safeName": "RealtimeTemporaryTokenResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "token",
                "camelCase": {
                  "unsafeName": "token",
                  "safeName": "token"
                },
                "snakeCase": {
                  "unsafeName": "token",
                  "safeName": "token"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN",
                  "safeName": "TOKEN"
                },
                "pascalCase": {
                  "unsafeName": "Token",
                  "safeName": "Token"
                }
              },
              "wireValue": "token"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The temporary authentication token for real-time transcription",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RealtimeTemporaryTokenResponseToken_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RealtimeTemporaryTokenResponse_example_autogenerated": {
            "token": "foo"
          }
        }
      }
    },
    "AudioIntelligenceModelStatus": {
      "name": {
        "typeId": "AudioIntelligenceModelStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AudioIntelligenceModelStatus",
          "camelCase": {
            "unsafeName": "audioIntelligenceModelStatus",
            "safeName": "audioIntelligenceModelStatus"
          },
          "snakeCase": {
            "unsafeName": "audio_intelligence_model_status",
            "safeName": "audio_intelligence_model_status"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUDIO_INTELLIGENCE_MODEL_STATUS",
            "safeName": "AUDIO_INTELLIGENCE_MODEL_STATUS"
          },
          "pascalCase": {
            "unsafeName": "AudioIntelligenceModelStatus",
            "safeName": "AudioIntelligenceModelStatus"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "success",
                "camelCase": {
                  "unsafeName": "success",
                  "safeName": "success"
                },
                "snakeCase": {
                  "unsafeName": "success",
                  "safeName": "success"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUCCESS",
                  "safeName": "SUCCESS"
                },
                "pascalCase": {
                  "unsafeName": "Success",
                  "safeName": "Success"
                }
              },
              "wireValue": "success"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "unavailable",
                "camelCase": {
                  "unsafeName": "unavailable",
                  "safeName": "unavailable"
                },
                "snakeCase": {
                  "unsafeName": "unavailable",
                  "safeName": "unavailable"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UNAVAILABLE",
                  "safeName": "UNAVAILABLE"
                },
                "pascalCase": {
                  "unsafeName": "Unavailable",
                  "safeName": "Unavailable"
                }
              },
              "wireValue": "unavailable"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Will be either success, or unavailable in the rare case that the model failed.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioIntelligenceModelStatus_example_autogenerated": "success"
        }
      }
    },
    "PurgeLemurRequestDataResponse": {
      "name": {
        "typeId": "PurgeLemurRequestDataResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PurgeLemurRequestDataResponse",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataResponse",
            "safeName": "purgeLemurRequestDataResponse"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_response",
            "safeName": "purge_lemur_request_data_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_RESPONSE",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataResponse",
            "safeName": "PurgeLemurRequestDataResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestId",
                  "safeName": "requestId"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                },
                "pascalCase": {
                  "unsafeName": "RequestId",
                  "safeName": "RequestId"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID of the LeMUR request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PurgeLemurRequestDataResponseRequestId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "request_id_to_purge",
                "camelCase": {
                  "unsafeName": "requestIdToPurge",
                  "safeName": "requestIdToPurge"
                },
                "snakeCase": {
                  "unsafeName": "request_id_to_purge",
                  "safeName": "request_id_to_purge"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID_TO_PURGE",
                  "safeName": "REQUEST_ID_TO_PURGE"
                },
                "pascalCase": {
                  "unsafeName": "RequestIdToPurge",
                  "safeName": "RequestIdToPurge"
                }
              },
              "wireValue": "request_id_to_purge"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID of the deletion request of the LeMUR request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PurgeLemurRequestDataResponseRequestIdToPurge_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deleted",
                "camelCase": {
                  "unsafeName": "deleted",
                  "safeName": "deleted"
                },
                "snakeCase": {
                  "unsafeName": "deleted",
                  "safeName": "deleted"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DELETED",
                  "safeName": "DELETED"
                },
                "pascalCase": {
                  "unsafeName": "Deleted",
                  "safeName": "Deleted"
                }
              },
              "wireValue": "deleted"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether the request data was deleted.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PurgeLemurRequestDataResponseDeleted_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PurgeLemurRequestDataResponse_example_autogenerated": {
            "request_id": "foo",
            "request_id_to_purge": "foo",
            "deleted": true
          }
        }
      }
    },
    "LemurBaseResponse": {
      "name": {
        "typeId": "LemurBaseResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurBaseResponse",
          "camelCase": {
            "unsafeName": "lemurBaseResponse",
            "safeName": "lemurBaseResponse"
          },
          "snakeCase": {
            "unsafeName": "lemur_base_response",
            "safeName": "lemur_base_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_BASE_RESPONSE",
            "safeName": "LEMUR_BASE_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "LemurBaseResponse",
            "safeName": "LemurBaseResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestId",
                  "safeName": "requestId"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                },
                "pascalCase": {
                  "unsafeName": "RequestId",
                  "safeName": "RequestId"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID of the LeMUR request",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurBaseResponseRequestId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurBaseResponse_example_autogenerated": {
            "request_id": "foo"
          }
        }
      }
    },
    "LemurSummaryResponse": {
      "name": {
        "typeId": "LemurSummaryResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurSummaryResponse",
          "camelCase": {
            "unsafeName": "lemurSummaryResponse",
            "safeName": "lemurSummaryResponse"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_response",
            "safeName": "lemur_summary_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_RESPONSE",
            "safeName": "LEMUR_SUMMARY_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryResponse",
            "safeName": "LemurSummaryResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                }
              },
              "wireValue": "response"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The response generated by LeMUR.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurSummaryResponseResponse_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseResponse",
              "camelCase": {
                "unsafeName": "lemurBaseResponse",
                "safeName": "lemurBaseResponse"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_response",
                "safeName": "lemur_base_response"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_RESPONSE",
                "safeName": "LEMUR_BASE_RESPONSE"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseResponse",
                "safeName": "LemurBaseResponse"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurSummaryResponse_example_autogenerated": {
            "request_id": "foo",
            "response": "foo"
          }
        }
      }
    },
    "LemurQuestionAnswerResponse": {
      "name": {
        "typeId": "LemurQuestionAnswerResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurQuestionAnswerResponse",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerResponse",
            "safeName": "lemurQuestionAnswerResponse"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_response",
            "safeName": "lemur_question_answer_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_RESPONSE",
            "safeName": "LEMUR_QUESTION_ANSWER_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerResponse",
            "safeName": "LemurQuestionAnswerResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                }
              },
              "wireValue": "response"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurQuestionAnswer",
                    "camelCase": {
                      "unsafeName": "lemurQuestionAnswer",
                      "safeName": "lemurQuestionAnswer"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_question_answer",
                      "safeName": "lemur_question_answer"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_QUESTION_ANSWER",
                      "safeName": "LEMUR_QUESTION_ANSWER"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurQuestionAnswer",
                      "safeName": "LemurQuestionAnswer"
                    }
                  },
                  "typeId": "LemurQuestionAnswer",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The answers generated by LeMUR and their questions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionAnswerResponseResponse_example_autogenerated": [
                  {
                    "question": "foo",
                    "answer": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseResponse",
              "camelCase": {
                "unsafeName": "lemurBaseResponse",
                "safeName": "lemurBaseResponse"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_response",
                "safeName": "lemur_base_response"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_RESPONSE",
                "safeName": "LEMUR_BASE_RESPONSE"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseResponse",
                "safeName": "LemurBaseResponse"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurQuestionAnswerResponse_example_autogenerated": {
            "request_id": "foo",
            "response": [
              {
                "question": "foo",
                "answer": "foo"
              }
            ]
          }
        }
      }
    },
    "LemurQuestionAnswer": {
      "name": {
        "typeId": "LemurQuestionAnswer",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurQuestionAnswer",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswer",
            "safeName": "lemurQuestionAnswer"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer",
            "safeName": "lemur_question_answer"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER",
            "safeName": "LEMUR_QUESTION_ANSWER"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswer",
            "safeName": "LemurQuestionAnswer"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "question",
                "camelCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "snakeCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUESTION",
                  "safeName": "QUESTION"
                },
                "pascalCase": {
                  "unsafeName": "Question",
                  "safeName": "Question"
                }
              },
              "wireValue": "question"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The question for LeMUR to answer.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionAnswerQuestion_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "answer",
                "camelCase": {
                  "unsafeName": "answer",
                  "safeName": "answer"
                },
                "snakeCase": {
                  "unsafeName": "answer",
                  "safeName": "answer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANSWER",
                  "safeName": "ANSWER"
                },
                "pascalCase": {
                  "unsafeName": "Answer",
                  "safeName": "Answer"
                }
              },
              "wireValue": "answer"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The answer generated by LeMUR.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionAnswerAnswer_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "An answer generated by LeMUR and its question.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurQuestionAnswer_example_autogenerated": {
            "question": "foo",
            "answer": "foo"
          }
        }
      }
    },
    "LemurActionItemsResponse": {
      "name": {
        "typeId": "LemurActionItemsResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurActionItemsResponse",
          "camelCase": {
            "unsafeName": "lemurActionItemsResponse",
            "safeName": "lemurActionItemsResponse"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_response",
            "safeName": "lemur_action_items_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_RESPONSE",
            "safeName": "LEMUR_ACTION_ITEMS_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsResponse",
            "safeName": "LemurActionItemsResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                }
              },
              "wireValue": "response"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The response generated by LeMUR.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurActionItemsResponseResponse_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseResponse",
              "camelCase": {
                "unsafeName": "lemurBaseResponse",
                "safeName": "lemurBaseResponse"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_response",
                "safeName": "lemur_base_response"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_RESPONSE",
                "safeName": "LEMUR_BASE_RESPONSE"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseResponse",
                "safeName": "LemurBaseResponse"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurActionItemsResponse_example_autogenerated": {
            "request_id": "foo",
            "response": "foo"
          }
        }
      }
    },
    "LemurTaskResponse": {
      "name": {
        "typeId": "LemurTaskResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurTaskResponse",
          "camelCase": {
            "unsafeName": "lemurTaskResponse",
            "safeName": "lemurTaskResponse"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_response",
            "safeName": "lemur_task_response"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_RESPONSE",
            "safeName": "LEMUR_TASK_RESPONSE"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskResponse",
            "safeName": "LemurTaskResponse"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                }
              },
              "wireValue": "response"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The response generated by LeMUR.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurTaskResponseResponse_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseResponse",
              "camelCase": {
                "unsafeName": "lemurBaseResponse",
                "safeName": "lemurBaseResponse"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_response",
                "safeName": "lemur_base_response"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_RESPONSE",
                "safeName": "LEMUR_BASE_RESPONSE"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseResponse",
                "safeName": "LemurBaseResponse"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurTaskResponse_example_autogenerated": {
            "request_id": "foo",
            "response": "foo"
          }
        }
      }
    },
    "LemurBaseParametersContext": {
      "name": {
        "typeId": "LemurBaseParametersContext",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurBaseParametersContext",
          "camelCase": {
            "unsafeName": "lemurBaseParametersContext",
            "safeName": "lemurBaseParametersContext"
          },
          "snakeCase": {
            "unsafeName": "lemur_base_parameters_context",
            "safeName": "lemur_base_parameters_context"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_BASE_PARAMETERS_CONTEXT",
            "safeName": "LEMUR_BASE_PARAMETERS_CONTEXT"
          },
          "pascalCase": {
            "unsafeName": "LemurBaseParametersContext",
            "safeName": "LemurBaseParametersContext"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Context to provide the model. This can be a string or a free-form JSON value.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurBaseParametersContext_example_autogenerated": {}
        }
      }
    },
    "LemurBaseParameters": {
      "name": {
        "typeId": "LemurBaseParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurBaseParameters",
          "camelCase": {
            "unsafeName": "lemurBaseParameters",
            "safeName": "lemurBaseParameters"
          },
          "snakeCase": {
            "unsafeName": "lemur_base_parameters",
            "safeName": "lemur_base_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_BASE_PARAMETERS",
            "safeName": "LEMUR_BASE_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "LemurBaseParameters",
            "safeName": "LemurBaseParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "transcript_ids",
                "camelCase": {
                  "unsafeName": "transcriptIds",
                  "safeName": "transcriptIds"
                },
                "snakeCase": {
                  "unsafeName": "transcript_ids",
                  "safeName": "transcript_ids"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_IDS",
                  "safeName": "TRANSCRIPT_IDS"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptIds",
                  "safeName": "TranscriptIds"
                }
              },
              "wireValue": "transcript_ids"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of completed transcripts with text. Up to 100 files max, or 100 hours max. Whichever is lower.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurBaseParametersTranscriptIds_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "context",
                "camelCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "snakeCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEXT",
                  "safeName": "CONTEXT"
                },
                "pascalCase": {
                  "unsafeName": "Context",
                  "safeName": "Context"
                }
              },
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurBaseParametersContext",
                    "camelCase": {
                      "unsafeName": "lemurBaseParametersContext",
                      "safeName": "lemurBaseParametersContext"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_base_parameters_context",
                      "safeName": "lemur_base_parameters_context"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_BASE_PARAMETERS_CONTEXT",
                      "safeName": "LEMUR_BASE_PARAMETERS_CONTEXT"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurBaseParametersContext",
                      "safeName": "LemurBaseParametersContext"
                    }
                  },
                  "typeId": "LemurBaseParametersContext",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Context to provide the model. This can be a string or a free-form JSON value.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurBaseParametersContext_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "final_model",
                "camelCase": {
                  "unsafeName": "finalModel",
                  "safeName": "finalModel"
                },
                "snakeCase": {
                  "unsafeName": "final_model",
                  "safeName": "final_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINAL_MODEL",
                  "safeName": "FINAL_MODEL"
                },
                "pascalCase": {
                  "unsafeName": "FinalModel",
                  "safeName": "FinalModel"
                }
              },
              "wireValue": "final_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurModel",
                    "camelCase": {
                      "unsafeName": "lemurModel",
                      "safeName": "lemurModel"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_model",
                      "safeName": "lemur_model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_MODEL",
                      "safeName": "LEMUR_MODEL"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurModel",
                      "safeName": "LemurModel"
                    }
                  },
                  "typeId": "LemurModel",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "max_output_size",
                "camelCase": {
                  "unsafeName": "maxOutputSize",
                  "safeName": "maxOutputSize"
                },
                "snakeCase": {
                  "unsafeName": "max_output_size",
                  "safeName": "max_output_size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_OUTPUT_SIZE",
                  "safeName": "MAX_OUTPUT_SIZE"
                },
                "pascalCase": {
                  "unsafeName": "MaxOutputSize",
                  "safeName": "MaxOutputSize"
                }
              },
              "wireValue": "max_output_size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Max output size in tokens. Up to 4000 allowed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurBaseParametersMaxOutputSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "temperature",
                "camelCase": {
                  "unsafeName": "temperature",
                  "safeName": "temperature"
                },
                "snakeCase": {
                  "unsafeName": "temperature",
                  "safeName": "temperature"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEMPERATURE",
                  "safeName": "TEMPERATURE"
                },
                "pascalCase": {
                  "unsafeName": "Temperature",
                  "safeName": "Temperature"
                }
              },
              "wireValue": "temperature"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT",
                    "v2": {
                      "validation": {
                        "max": 1,
                        "min": 0
                      },
                      "type": "float"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The temperature to use for the model.\nHigher values result in answers that are more creative, lower values are more conservative.\nCan be any value between 0.0 and 1.0 inclusive.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurBaseParametersTemperature_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurBaseParameters_example_autogenerated": {
            "transcript_ids": [
              "foo"
            ]
          }
        }
      }
    },
    "LemurSummaryParameters": {
      "name": {
        "typeId": "LemurSummaryParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurSummaryParameters",
          "camelCase": {
            "unsafeName": "lemurSummaryParameters",
            "safeName": "lemurSummaryParameters"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_parameters",
            "safeName": "lemur_summary_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_PARAMETERS",
            "safeName": "LEMUR_SUMMARY_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryParameters",
            "safeName": "LemurSummaryParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "answer_format",
                "camelCase": {
                  "unsafeName": "answerFormat",
                  "safeName": "answerFormat"
                },
                "snakeCase": {
                  "unsafeName": "answer_format",
                  "safeName": "answer_format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANSWER_FORMAT",
                  "safeName": "ANSWER_FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "AnswerFormat",
                  "safeName": "AnswerFormat"
                }
              },
              "wireValue": "answer_format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "How you want the summary to be returned. This can be any text. Examples: \"TLDR\", \"bullet points\"\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurSummaryParametersAnswerFormat_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "LemurBaseParameters",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseParameters",
              "camelCase": {
                "unsafeName": "lemurBaseParameters",
                "safeName": "lemurBaseParameters"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_parameters",
                "safeName": "lemur_base_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_PARAMETERS",
                "safeName": "LEMUR_BASE_PARAMETERS"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseParameters",
                "safeName": "LemurBaseParameters"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurSummaryParameters_example_autogenerated": {
            "transcript_ids": [
              "foo"
            ]
          }
        }
      }
    },
    "LemurQuestionAnswerParameters": {
      "name": {
        "typeId": "LemurQuestionAnswerParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurQuestionAnswerParameters",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerParameters",
            "safeName": "lemurQuestionAnswerParameters"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_parameters",
            "safeName": "lemur_question_answer_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_PARAMETERS",
            "safeName": "LEMUR_QUESTION_ANSWER_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerParameters",
            "safeName": "LemurQuestionAnswerParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "questions",
                "camelCase": {
                  "unsafeName": "questions",
                  "safeName": "questions"
                },
                "snakeCase": {
                  "unsafeName": "questions",
                  "safeName": "questions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUESTIONS",
                  "safeName": "QUESTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Questions",
                  "safeName": "Questions"
                }
              },
              "wireValue": "questions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurQuestion",
                    "camelCase": {
                      "unsafeName": "lemurQuestion",
                      "safeName": "lemurQuestion"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_question",
                      "safeName": "lemur_question"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_QUESTION",
                      "safeName": "LEMUR_QUESTION"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurQuestion",
                      "safeName": "LemurQuestion"
                    }
                  },
                  "typeId": "LemurQuestion",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "A list of questions to ask.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionAnswerParametersQuestions_example_autogenerated": [
                  {
                    "question": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "LemurBaseParameters",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseParameters",
              "camelCase": {
                "unsafeName": "lemurBaseParameters",
                "safeName": "lemurBaseParameters"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_parameters",
                "safeName": "lemur_base_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_PARAMETERS",
                "safeName": "LEMUR_BASE_PARAMETERS"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseParameters",
                "safeName": "LemurBaseParameters"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurQuestionAnswerParameters_example_autogenerated": {
            "transcript_ids": [
              "foo"
            ],
            "questions": [
              {
                "question": "foo"
              }
            ]
          }
        }
      }
    },
    "LemurQuestionContext": {
      "name": {
        "typeId": "LemurQuestionContext",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurQuestionContext",
          "camelCase": {
            "unsafeName": "lemurQuestionContext",
            "safeName": "lemurQuestionContext"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_context",
            "safeName": "lemur_question_context"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_CONTEXT",
            "safeName": "LEMUR_QUESTION_CONTEXT"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionContext",
            "safeName": "LemurQuestionContext"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Any context about the transcripts you wish to provide. This can be a string, or free-form JSON.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurQuestionContext_example_autogenerated": {}
        }
      }
    },
    "LemurQuestion": {
      "name": {
        "typeId": "LemurQuestion",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurQuestion",
          "camelCase": {
            "unsafeName": "lemurQuestion",
            "safeName": "lemurQuestion"
          },
          "snakeCase": {
            "unsafeName": "lemur_question",
            "safeName": "lemur_question"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION",
            "safeName": "LEMUR_QUESTION"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestion",
            "safeName": "LemurQuestion"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "question",
                "camelCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "snakeCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUESTION",
                  "safeName": "QUESTION"
                },
                "pascalCase": {
                  "unsafeName": "Question",
                  "safeName": "Question"
                }
              },
              "wireValue": "question"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The question you wish to ask. For more complex questions use default model.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionQuestion_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "context",
                "camelCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "snakeCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEXT",
                  "safeName": "CONTEXT"
                },
                "pascalCase": {
                  "unsafeName": "Context",
                  "safeName": "Context"
                }
              },
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurQuestionContext",
                    "camelCase": {
                      "unsafeName": "lemurQuestionContext",
                      "safeName": "lemurQuestionContext"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_question_context",
                      "safeName": "lemur_question_context"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_QUESTION_CONTEXT",
                      "safeName": "LEMUR_QUESTION_CONTEXT"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurQuestionContext",
                      "safeName": "LemurQuestionContext"
                    }
                  },
                  "typeId": "LemurQuestionContext",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Any context about the transcripts you wish to provide. This can be a string, or free-form JSON.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionContext_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "answer_format",
                "camelCase": {
                  "unsafeName": "answerFormat",
                  "safeName": "answerFormat"
                },
                "snakeCase": {
                  "unsafeName": "answer_format",
                  "safeName": "answer_format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANSWER_FORMAT",
                  "safeName": "ANSWER_FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "AnswerFormat",
                  "safeName": "AnswerFormat"
                }
              },
              "wireValue": "answer_format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "How you want the answer to be returned. This can be any text. Can't be used with answer_options. Examples: \"short sentence\", \"bullet points\"\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionAnswerFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "answer_options",
                "camelCase": {
                  "unsafeName": "answerOptions",
                  "safeName": "answerOptions"
                },
                "snakeCase": {
                  "unsafeName": "answer_options",
                  "safeName": "answer_options"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANSWER_OPTIONS",
                  "safeName": "ANSWER_OPTIONS"
                },
                "pascalCase": {
                  "unsafeName": "AnswerOptions",
                  "safeName": "AnswerOptions"
                }
              },
              "wireValue": "answer_options"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "What discrete options to return. Useful for precise responses. Can't be used with answer_format. Example: [\"Yes\", \"No\"]\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurQuestionAnswerOptions_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurQuestion_example_autogenerated": {
            "question": "foo"
          }
        }
      }
    },
    "LemurActionItemsParameters": {
      "name": {
        "typeId": "LemurActionItemsParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurActionItemsParameters",
          "camelCase": {
            "unsafeName": "lemurActionItemsParameters",
            "safeName": "lemurActionItemsParameters"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_parameters",
            "safeName": "lemur_action_items_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_PARAMETERS",
            "safeName": "LEMUR_ACTION_ITEMS_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsParameters",
            "safeName": "LemurActionItemsParameters"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [
          {
            "typeId": "LemurBaseParameters",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseParameters",
              "camelCase": {
                "unsafeName": "lemurBaseParameters",
                "safeName": "lemurBaseParameters"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_parameters",
                "safeName": "lemur_base_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_PARAMETERS",
                "safeName": "LEMUR_BASE_PARAMETERS"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseParameters",
                "safeName": "LemurBaseParameters"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurActionItemsParameters_example_autogenerated": {
            "transcript_ids": [
              "foo"
            ]
          }
        }
      }
    },
    "LemurTaskParameters": {
      "name": {
        "typeId": "LemurTaskParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurTaskParameters",
          "camelCase": {
            "unsafeName": "lemurTaskParameters",
            "safeName": "lemurTaskParameters"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_parameters",
            "safeName": "lemur_task_parameters"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_PARAMETERS",
            "safeName": "LEMUR_TASK_PARAMETERS"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskParameters",
            "safeName": "LemurTaskParameters"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "prompt",
                "camelCase": {
                  "unsafeName": "prompt",
                  "safeName": "prompt"
                },
                "snakeCase": {
                  "unsafeName": "prompt",
                  "safeName": "prompt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT",
                  "safeName": "PROMPT"
                },
                "pascalCase": {
                  "unsafeName": "Prompt",
                  "safeName": "Prompt"
                }
              },
              "wireValue": "prompt"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Your text to prompt the model to produce a desired output, including any context you want to pass into the model.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LemurTaskParametersPrompt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "LemurBaseParameters",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "LemurBaseParameters",
              "camelCase": {
                "unsafeName": "lemurBaseParameters",
                "safeName": "lemurBaseParameters"
              },
              "snakeCase": {
                "unsafeName": "lemur_base_parameters",
                "safeName": "lemur_base_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_BASE_PARAMETERS",
                "safeName": "LEMUR_BASE_PARAMETERS"
              },
              "pascalCase": {
                "unsafeName": "LemurBaseParameters",
                "safeName": "LemurBaseParameters"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurTaskParameters_example_autogenerated": {
            "transcript_ids": [
              "foo"
            ],
            "prompt": "foo"
          }
        }
      }
    },
    "LemurModel": {
      "name": {
        "typeId": "LemurModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "LemurModel",
          "camelCase": {
            "unsafeName": "lemurModel",
            "safeName": "lemurModel"
          },
          "snakeCase": {
            "unsafeName": "lemur_model",
            "safeName": "lemur_model"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_MODEL",
            "safeName": "LEMUR_MODEL"
          },
          "pascalCase": {
            "unsafeName": "LemurModel",
            "safeName": "LemurModel"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "default",
                "camelCase": {
                  "unsafeName": "default",
                  "safeName": "default_"
                },
                "snakeCase": {
                  "unsafeName": "default",
                  "safeName": "default_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEFAULT",
                  "safeName": "DEFAULT"
                },
                "pascalCase": {
                  "unsafeName": "Default",
                  "safeName": "Default"
                }
              },
              "wireValue": "default"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "basic",
                "camelCase": {
                  "unsafeName": "basic",
                  "safeName": "basic"
                },
                "snakeCase": {
                  "unsafeName": "basic",
                  "safeName": "basic"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BASIC",
                  "safeName": "BASIC"
                },
                "pascalCase": {
                  "unsafeName": "Basic",
                  "safeName": "Basic"
                }
              },
              "wireValue": "basic"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The model that is used for the final prompt after compression is performed (options: \"basic\" and \"default\").\n",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LemurModel_example_autogenerated": "default"
        }
      }
    },
    "Error": {
      "name": {
        "typeId": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorError_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorStatus_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Error_example_autogenerated": {
            "error": "foo"
          }
        }
      }
    },
    "TranscriptListParameters/properties/limit": {
      "name": {
        "typeId": "TranscriptListParameters/properties/limit",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListParameters/properties/limit",
          "camelCase": {
            "unsafeName": "transcriptListParametersPropertiesLimit",
            "safeName": "transcriptListParametersPropertiesLimit"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_parameters_properties_limit",
            "safeName": "transcript_list_parameters_properties_limit"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_LIMIT",
            "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_LIMIT"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListParametersPropertiesLimit",
            "safeName": "TranscriptListParametersPropertiesLimit"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "LONG",
            "v2": {
              "default": 10,
              "type": "long"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "LONG",
            "v2": {
              "default": 10,
              "type": "long"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Maximum amount of transcripts to retrieve",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListParameters/properties/limit_example_autogenerated": 10
        }
      }
    },
    "TranscriptListParameters/properties/status": {
      "name": {
        "typeId": "TranscriptListParameters/properties/status",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListParameters/properties/status",
          "camelCase": {
            "unsafeName": "transcriptListParametersPropertiesStatus",
            "safeName": "transcriptListParametersPropertiesStatus"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_parameters_properties_status",
            "safeName": "transcript_list_parameters_properties_status"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_STATUS",
            "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_STATUS"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListParametersPropertiesStatus",
            "safeName": "TranscriptListParametersPropertiesStatus"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "type": "unknown"
        },
        "resolvedType": {
          "type": "unknown"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Filter by transcript status",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListParameters/properties/status_example_autogenerated": "queued"
        }
      }
    },
    "TranscriptListParameters/properties/created_on": {
      "name": {
        "typeId": "TranscriptListParameters/properties/created_on",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListParameters/properties/created_on",
          "camelCase": {
            "unsafeName": "transcriptListParametersPropertiesCreatedOn",
            "safeName": "transcriptListParametersPropertiesCreatedOn"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_parameters_properties_created_on",
            "safeName": "transcript_list_parameters_properties_created_on"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_CREATED_ON",
            "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_CREATED_ON"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListParametersPropertiesCreatedOn",
            "safeName": "TranscriptListParametersPropertiesCreatedOn"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "date"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "format": "date"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only get transcripts created on this date",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListParameters/properties/created_on_example_autogenerated": "foo"
        }
      }
    },
    "TranscriptListParameters/properties/before_id": {
      "name": {
        "typeId": "TranscriptListParameters/properties/before_id",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListParameters/properties/before_id",
          "camelCase": {
            "unsafeName": "transcriptListParametersPropertiesBeforeId",
            "safeName": "transcriptListParametersPropertiesBeforeId"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_parameters_properties_before_id",
            "safeName": "transcript_list_parameters_properties_before_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_BEFORE_ID",
            "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_BEFORE_ID"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListParametersPropertiesBeforeId",
            "safeName": "TranscriptListParametersPropertiesBeforeId"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Get transcripts that were created before this transcript ID",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListParameters/properties/before_id_example_autogenerated": "foo"
        }
      }
    },
    "TranscriptListParameters/properties/after_id": {
      "name": {
        "typeId": "TranscriptListParameters/properties/after_id",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListParameters/properties/after_id",
          "camelCase": {
            "unsafeName": "transcriptListParametersPropertiesAfterId",
            "safeName": "transcriptListParametersPropertiesAfterId"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_parameters_properties_after_id",
            "safeName": "transcript_list_parameters_properties_after_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_AFTER_ID",
            "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_AFTER_ID"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListParametersPropertiesAfterId",
            "safeName": "TranscriptListParametersPropertiesAfterId"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Get transcripts that were created after this transcript ID",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListParameters/properties/after_id_example_autogenerated": "foo"
        }
      }
    },
    "TranscriptListParameters/properties/throttled_only": {
      "name": {
        "typeId": "TranscriptListParameters/properties/throttled_only",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TranscriptListParameters/properties/throttled_only",
          "camelCase": {
            "unsafeName": "transcriptListParametersPropertiesThrottledOnly",
            "safeName": "transcriptListParametersPropertiesThrottledOnly"
          },
          "snakeCase": {
            "unsafeName": "transcript_list_parameters_properties_throttled_only",
            "safeName": "transcript_list_parameters_properties_throttled_only"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_THROTTLED_ONLY",
            "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_THROTTLED_ONLY"
          },
          "pascalCase": {
            "unsafeName": "TranscriptListParametersPropertiesThrottledOnly",
            "safeName": "TranscriptListParametersPropertiesThrottledOnly"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "BOOLEAN",
            "v2": {
              "type": "boolean"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "BOOLEAN",
            "v2": {
              "type": "boolean"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only get throttled transcripts, overrides the status filter",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TranscriptListParameters/properties/throttled_only_example_autogenerated": true
        }
      }
    },
    "SendAudio": {
      "name": {
        "typeId": "SendAudio",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SendAudio",
          "camelCase": {
            "unsafeName": "sendAudio",
            "safeName": "sendAudio"
          },
          "snakeCase": {
            "unsafeName": "send_audio",
            "safeName": "send_audio"
          },
          "screamingSnakeCase": {
            "unsafeName": "SEND_AUDIO",
            "safeName": "SEND_AUDIO"
          },
          "pascalCase": {
            "unsafeName": "SendAudio",
            "safeName": "SendAudio"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_data",
                "camelCase": {
                  "unsafeName": "audioData",
                  "safeName": "audioData"
                },
                "snakeCase": {
                  "unsafeName": "audio_data",
                  "safeName": "audio_data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DATA",
                  "safeName": "AUDIO_DATA"
                },
                "pascalCase": {
                  "unsafeName": "AudioData",
                  "safeName": "AudioData"
                }
              },
              "wireValue": "audio_data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Raw audio data, base64 encoded. This can be the raw data recorded directly from a microphone or read from an audio file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MessagesSendAudioAudioData_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SendAudio_example_autogenerated": {
            "audio_data": "foo"
          }
        }
      }
    },
    "TerminateSession": {
      "name": {
        "typeId": "TerminateSession",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "TerminateSession",
          "camelCase": {
            "unsafeName": "terminateSession",
            "safeName": "terminateSession"
          },
          "snakeCase": {
            "unsafeName": "terminate_session",
            "safeName": "terminate_session"
          },
          "screamingSnakeCase": {
            "unsafeName": "TERMINATE_SESSION",
            "safeName": "TERMINATE_SESSION"
          },
          "pascalCase": {
            "unsafeName": "TerminateSession",
            "safeName": "TerminateSession"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "terminate_session",
                "camelCase": {
                  "unsafeName": "terminateSession",
                  "safeName": "terminateSession"
                },
                "snakeCase": {
                  "unsafeName": "terminate_session",
                  "safeName": "terminate_session"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TERMINATE_SESSION",
                  "safeName": "TERMINATE_SESSION"
                },
                "pascalCase": {
                  "unsafeName": "TerminateSession",
                  "safeName": "TerminateSession"
                }
              },
              "wireValue": "terminate_session"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "A boolean value to communicate that you wish to end your real-time session forever.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TerminateSessionTerminateSession_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "RealtimeBaseMessage",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "RealtimeBaseMessage",
              "camelCase": {
                "unsafeName": "realtimeBaseMessage",
                "safeName": "realtimeBaseMessage"
              },
              "snakeCase": {
                "unsafeName": "realtime_base_message",
                "safeName": "realtime_base_message"
              },
              "screamingSnakeCase": {
                "unsafeName": "REALTIME_BASE_MESSAGE",
                "safeName": "REALTIME_BASE_MESSAGE"
              },
              "pascalCase": {
                "unsafeName": "RealtimeBaseMessage",
                "safeName": "RealtimeBaseMessage"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TerminateSession_example_autogenerated": {
            "message_type": "SessionBegins",
            "terminate_session": true
          }
        }
      }
    },
    "SessionBegins": {
      "name": {
        "typeId": "SessionBegins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SessionBegins",
          "camelCase": {
            "unsafeName": "sessionBegins",
            "safeName": "sessionBegins"
          },
          "snakeCase": {
            "unsafeName": "session_begins",
            "safeName": "session_begins"
          },
          "screamingSnakeCase": {
            "unsafeName": "SESSION_BEGINS",
            "safeName": "SESSION_BEGINS"
          },
          "pascalCase": {
            "unsafeName": "SessionBegins",
            "safeName": "SessionBegins"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                }
              },
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "SessionBegins",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Describes the type of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionBeginsMessageType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "session_id",
                "camelCase": {
                  "unsafeName": "sessionId",
                  "safeName": "sessionId"
                },
                "snakeCase": {
                  "unsafeName": "session_id",
                  "safeName": "session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_ID",
                  "safeName": "SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "SessionId",
                  "safeName": "SessionId"
                }
              },
              "wireValue": "session_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Unique identifier for the established session.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionBeginsSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "expires_at",
                "camelCase": {
                  "unsafeName": "expiresAt",
                  "safeName": "expiresAt"
                },
                "snakeCase": {
                  "unsafeName": "expires_at",
                  "safeName": "expires_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXPIRES_AT",
                  "safeName": "EXPIRES_AT"
                },
                "pascalCase": {
                  "unsafeName": "ExpiresAt",
                  "safeName": "ExpiresAt"
                }
              },
              "wireValue": "expires_at"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME",
                "v2": {
                  "type": "dateTime"
                }
              },
              "type": "primitive"
            },
            "docs": "Timestamp when this session will expire.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [
          {
            "typeId": "RealtimeBaseMessage",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "RealtimeBaseMessage",
              "camelCase": {
                "unsafeName": "realtimeBaseMessage",
                "safeName": "realtimeBaseMessage"
              },
              "snakeCase": {
                "unsafeName": "realtime_base_message",
                "safeName": "realtime_base_message"
              },
              "screamingSnakeCase": {
                "unsafeName": "REALTIME_BASE_MESSAGE",
                "safeName": "REALTIME_BASE_MESSAGE"
              },
              "pascalCase": {
                "unsafeName": "RealtimeBaseMessage",
                "safeName": "RealtimeBaseMessage"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionBegins_example_autogenerated": {
            "message_type": "foo",
            "session_id": "foo",
            "expires_at": "foo"
          }
        }
      }
    },
    "SessionTerminated": {
      "name": {
        "typeId": "SessionTerminated",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SessionTerminated",
          "camelCase": {
            "unsafeName": "sessionTerminated",
            "safeName": "sessionTerminated"
          },
          "snakeCase": {
            "unsafeName": "session_terminated",
            "safeName": "session_terminated"
          },
          "screamingSnakeCase": {
            "unsafeName": "SESSION_TERMINATED",
            "safeName": "SESSION_TERMINATED"
          },
          "pascalCase": {
            "unsafeName": "SessionTerminated",
            "safeName": "SessionTerminated"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                }
              },
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "SessionTerminated",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Describes the type of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionTerminatedMessageType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "RealtimeBaseMessage",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "RealtimeBaseMessage",
              "camelCase": {
                "unsafeName": "realtimeBaseMessage",
                "safeName": "realtimeBaseMessage"
              },
              "snakeCase": {
                "unsafeName": "realtime_base_message",
                "safeName": "realtime_base_message"
              },
              "screamingSnakeCase": {
                "unsafeName": "REALTIME_BASE_MESSAGE",
                "safeName": "REALTIME_BASE_MESSAGE"
              },
              "pascalCase": {
                "unsafeName": "RealtimeBaseMessage",
                "safeName": "RealtimeBaseMessage"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionTerminated_example_autogenerated": {
            "message_type": "foo"
          }
        }
      }
    },
    "RealtimeError": {
      "name": {
        "typeId": "RealtimeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RealtimeError",
          "camelCase": {
            "unsafeName": "realtimeError",
            "safeName": "realtimeError"
          },
          "snakeCase": {
            "unsafeName": "realtime_error",
            "safeName": "realtime_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME_ERROR",
            "safeName": "REALTIME_ERROR"
          },
          "pascalCase": {
            "unsafeName": "RealtimeError",
            "safeName": "RealtimeError"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RealtimeErrorError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RealtimeError_example_autogenerated": {
            "error": "foo"
          }
        }
      }
    },
    "PartialTranscript": {
      "name": {
        "typeId": "PartialTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PartialTranscript",
          "camelCase": {
            "unsafeName": "partialTranscript",
            "safeName": "partialTranscript"
          },
          "snakeCase": {
            "unsafeName": "partial_transcript",
            "safeName": "partial_transcript"
          },
          "screamingSnakeCase": {
            "unsafeName": "PARTIAL_TRANSCRIPT",
            "safeName": "PARTIAL_TRANSCRIPT"
          },
          "pascalCase": {
            "unsafeName": "PartialTranscript",
            "safeName": "PartialTranscript"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                }
              },
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "PartialTranscript",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Describes the type of message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PartialTranscriptMessageType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "RealtimeBaseTranscript",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "RealtimeBaseTranscript",
              "camelCase": {
                "unsafeName": "realtimeBaseTranscript",
                "safeName": "realtimeBaseTranscript"
              },
              "snakeCase": {
                "unsafeName": "realtime_base_transcript",
                "safeName": "realtime_base_transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "REALTIME_BASE_TRANSCRIPT",
                "safeName": "REALTIME_BASE_TRANSCRIPT"
              },
              "pascalCase": {
                "unsafeName": "RealtimeBaseTranscript",
                "safeName": "RealtimeBaseTranscript"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PartialTranscript_example_autogenerated": {
            "audio_start": 42,
            "audio_end": 42,
            "confidence": 42,
            "text": "foo",
            "words": [
              {
                "start": 42,
                "end": 42,
                "confidence": 42,
                "text": "foo"
              }
            ],
            "created": "foo",
            "message_type": "foo"
          }
        }
      }
    },
    "FinalTranscript": {
      "name": {
        "typeId": "FinalTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "FinalTranscript",
          "camelCase": {
            "unsafeName": "finalTranscript",
            "safeName": "finalTranscript"
          },
          "snakeCase": {
            "unsafeName": "final_transcript",
            "safeName": "final_transcript"
          },
          "screamingSnakeCase": {
            "unsafeName": "FINAL_TRANSCRIPT",
            "safeName": "FINAL_TRANSCRIPT"
          },
          "pascalCase": {
            "unsafeName": "FinalTranscript",
            "safeName": "FinalTranscript"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                }
              },
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "FinalTranscript",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "Describes the type of message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FinalTranscriptMessageType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "punctuated",
                "camelCase": {
                  "unsafeName": "punctuated",
                  "safeName": "punctuated"
                },
                "snakeCase": {
                  "unsafeName": "punctuated",
                  "safeName": "punctuated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PUNCTUATED",
                  "safeName": "PUNCTUATED"
                },
                "pascalCase": {
                  "unsafeName": "Punctuated",
                  "safeName": "Punctuated"
                }
              },
              "wireValue": "punctuated"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether the text has been punctuated and cased.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FinalTranscriptPunctuated_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text_formatted",
                "camelCase": {
                  "unsafeName": "textFormatted",
                  "safeName": "textFormatted"
                },
                "snakeCase": {
                  "unsafeName": "text_formatted",
                  "safeName": "text_formatted"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT_FORMATTED",
                  "safeName": "TEXT_FORMATTED"
                },
                "pascalCase": {
                  "unsafeName": "TextFormatted",
                  "safeName": "TextFormatted"
                }
              },
              "wireValue": "text_formatted"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Whether the text has been formatted (e.g. Dollar -> $)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "FinalTranscriptTextFormatted_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [
          {
            "typeId": "RealtimeBaseTranscript",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "name": {
              "originalName": "RealtimeBaseTranscript",
              "camelCase": {
                "unsafeName": "realtimeBaseTranscript",
                "safeName": "realtimeBaseTranscript"
              },
              "snakeCase": {
                "unsafeName": "realtime_base_transcript",
                "safeName": "realtime_base_transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "REALTIME_BASE_TRANSCRIPT",
                "safeName": "REALTIME_BASE_TRANSCRIPT"
              },
              "pascalCase": {
                "unsafeName": "RealtimeBaseTranscript",
                "safeName": "RealtimeBaseTranscript"
              }
            }
          }
        ],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FinalTranscript_example_autogenerated": {
            "audio_start": 42,
            "audio_end": 42,
            "confidence": 42,
            "text": "foo",
            "words": [
              {
                "start": 42,
                "end": 42,
                "confidence": 42,
                "text": "foo"
              }
            ],
            "created": "foo",
            "message_type": "foo",
            "punctuated": true,
            "text_formatted": true
          }
        }
      }
    },
    "RealtimeBaseMessage": {
      "name": {
        "typeId": "RealtimeBaseMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RealtimeBaseMessage",
          "camelCase": {
            "unsafeName": "realtimeBaseMessage",
            "safeName": "realtimeBaseMessage"
          },
          "snakeCase": {
            "unsafeName": "realtime_base_message",
            "safeName": "realtime_base_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME_BASE_MESSAGE",
            "safeName": "REALTIME_BASE_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "RealtimeBaseMessage",
            "safeName": "RealtimeBaseMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                }
              },
              "wireValue": "message_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "MessageType",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                }
              },
              "typeId": "MessageType",
              "inline": false,
              "type": "named"
            },
            "docs": "Describes the type of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RealtimeBaseMessage_example_autogenerated": {
            "message_type": "SessionBegins"
          }
        }
      }
    },
    "RealtimeMessage": {
      "name": {
        "typeId": "RealtimeMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RealtimeMessage",
          "camelCase": {
            "unsafeName": "realtimeMessage",
            "safeName": "realtimeMessage"
          },
          "snakeCase": {
            "unsafeName": "realtime_message",
            "safeName": "realtime_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME_MESSAGE",
            "safeName": "REALTIME_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "RealtimeMessage",
            "safeName": "RealtimeMessage"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SessionBegins",
                "camelCase": {
                  "unsafeName": "sessionBegins",
                  "safeName": "sessionBegins"
                },
                "snakeCase": {
                  "unsafeName": "session_begins",
                  "safeName": "session_begins"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_BEGINS",
                  "safeName": "SESSION_BEGINS"
                },
                "pascalCase": {
                  "unsafeName": "SessionBegins",
                  "safeName": "SessionBegins"
                }
              },
              "typeId": "SessionBegins",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PartialTranscript",
                "camelCase": {
                  "unsafeName": "partialTranscript",
                  "safeName": "partialTranscript"
                },
                "snakeCase": {
                  "unsafeName": "partial_transcript",
                  "safeName": "partial_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARTIAL_TRANSCRIPT",
                  "safeName": "PARTIAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "PartialTranscript",
                  "safeName": "PartialTranscript"
                }
              },
              "typeId": "PartialTranscript",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "FinalTranscript",
                "camelCase": {
                  "unsafeName": "finalTranscript",
                  "safeName": "finalTranscript"
                },
                "snakeCase": {
                  "unsafeName": "final_transcript",
                  "safeName": "final_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINAL_TRANSCRIPT",
                  "safeName": "FINAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "FinalTranscript",
                  "safeName": "FinalTranscript"
                }
              },
              "typeId": "FinalTranscript",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SessionTerminated",
                "camelCase": {
                  "unsafeName": "sessionTerminated",
                  "safeName": "sessionTerminated"
                },
                "snakeCase": {
                  "unsafeName": "session_terminated",
                  "safeName": "session_terminated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_TERMINATED",
                  "safeName": "SESSION_TERMINATED"
                },
                "pascalCase": {
                  "unsafeName": "SessionTerminated",
                  "safeName": "SessionTerminated"
                }
              },
              "typeId": "SessionTerminated",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RealtimeError",
                "camelCase": {
                  "unsafeName": "realtimeError",
                  "safeName": "realtimeError"
                },
                "snakeCase": {
                  "unsafeName": "realtime_error",
                  "safeName": "realtime_error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REALTIME_ERROR",
                  "safeName": "REALTIME_ERROR"
                },
                "pascalCase": {
                  "unsafeName": "RealtimeError",
                  "safeName": "RealtimeError"
                }
              },
              "typeId": "RealtimeError",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RealtimeMessage_example_autogenerated": {
            "message_type": "foo",
            "session_id": "foo",
            "expires_at": "foo"
          }
        }
      }
    },
    "MessageType": {
      "name": {
        "typeId": "MessageType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MessageType",
          "camelCase": {
            "unsafeName": "messageType",
            "safeName": "messageType"
          },
          "snakeCase": {
            "unsafeName": "message_type",
            "safeName": "message_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "MESSAGE_TYPE",
            "safeName": "MESSAGE_TYPE"
          },
          "pascalCase": {
            "unsafeName": "MessageType",
            "safeName": "MessageType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SessionBegins",
                "camelCase": {
                  "unsafeName": "sessionBegins",
                  "safeName": "sessionBegins"
                },
                "snakeCase": {
                  "unsafeName": "session_begins",
                  "safeName": "session_begins"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_BEGINS",
                  "safeName": "SESSION_BEGINS"
                },
                "pascalCase": {
                  "unsafeName": "SessionBegins",
                  "safeName": "SessionBegins"
                }
              },
              "wireValue": "SessionBegins"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "PartialTranscript",
                "camelCase": {
                  "unsafeName": "partialTranscript",
                  "safeName": "partialTranscript"
                },
                "snakeCase": {
                  "unsafeName": "partial_transcript",
                  "safeName": "partial_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARTIAL_TRANSCRIPT",
                  "safeName": "PARTIAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "PartialTranscript",
                  "safeName": "PartialTranscript"
                }
              },
              "wireValue": "PartialTranscript"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "FinalTranscript",
                "camelCase": {
                  "unsafeName": "finalTranscript",
                  "safeName": "finalTranscript"
                },
                "snakeCase": {
                  "unsafeName": "final_transcript",
                  "safeName": "final_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINAL_TRANSCRIPT",
                  "safeName": "FINAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "FinalTranscript",
                  "safeName": "FinalTranscript"
                }
              },
              "wireValue": "FinalTranscript"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "SessionTerminated",
                "camelCase": {
                  "unsafeName": "sessionTerminated",
                  "safeName": "sessionTerminated"
                },
                "snakeCase": {
                  "unsafeName": "session_terminated",
                  "safeName": "session_terminated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_TERMINATED",
                  "safeName": "SESSION_TERMINATED"
                },
                "pascalCase": {
                  "unsafeName": "SessionTerminated",
                  "safeName": "SessionTerminated"
                }
              },
              "wireValue": "SessionTerminated"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MessageType_example_autogenerated": "SessionBegins"
        }
      }
    },
    "RealtimeTranscriptType": {
      "name": {
        "typeId": "RealtimeTranscriptType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RealtimeTranscriptType",
          "camelCase": {
            "unsafeName": "realtimeTranscriptType",
            "safeName": "realtimeTranscriptType"
          },
          "snakeCase": {
            "unsafeName": "realtime_transcript_type",
            "safeName": "realtime_transcript_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME_TRANSCRIPT_TYPE",
            "safeName": "REALTIME_TRANSCRIPT_TYPE"
          },
          "pascalCase": {
            "unsafeName": "RealtimeTranscriptType",
            "safeName": "RealtimeTranscriptType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "PartialTranscript",
                "camelCase": {
                  "unsafeName": "partialTranscript",
                  "safeName": "partialTranscript"
                },
                "snakeCase": {
                  "unsafeName": "partial_transcript",
                  "safeName": "partial_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARTIAL_TRANSCRIPT",
                  "safeName": "PARTIAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "PartialTranscript",
                  "safeName": "PartialTranscript"
                }
              },
              "wireValue": "PartialTranscript"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "FinalTranscript",
                "camelCase": {
                  "unsafeName": "finalTranscript",
                  "safeName": "finalTranscript"
                },
                "snakeCase": {
                  "unsafeName": "final_transcript",
                  "safeName": "final_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINAL_TRANSCRIPT",
                  "safeName": "FINAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "FinalTranscript",
                  "safeName": "FinalTranscript"
                }
              },
              "wireValue": "FinalTranscript"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RealtimeTranscriptType_example_autogenerated": "PartialTranscript"
        }
      }
    },
    "RealtimeTranscript": {
      "name": {
        "typeId": "RealtimeTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RealtimeTranscript",
          "camelCase": {
            "unsafeName": "realtimeTranscript",
            "safeName": "realtimeTranscript"
          },
          "snakeCase": {
            "unsafeName": "realtime_transcript",
            "safeName": "realtime_transcript"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME_TRANSCRIPT",
            "safeName": "REALTIME_TRANSCRIPT"
          },
          "pascalCase": {
            "unsafeName": "RealtimeTranscript",
            "safeName": "RealtimeTranscript"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PartialTranscript",
                "camelCase": {
                  "unsafeName": "partialTranscript",
                  "safeName": "partialTranscript"
                },
                "snakeCase": {
                  "unsafeName": "partial_transcript",
                  "safeName": "partial_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARTIAL_TRANSCRIPT",
                  "safeName": "PARTIAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "PartialTranscript",
                  "safeName": "PartialTranscript"
                }
              },
              "typeId": "PartialTranscript",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "FinalTranscript",
                "camelCase": {
                  "unsafeName": "finalTranscript",
                  "safeName": "finalTranscript"
                },
                "snakeCase": {
                  "unsafeName": "final_transcript",
                  "safeName": "final_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINAL_TRANSCRIPT",
                  "safeName": "FINAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "FinalTranscript",
                  "safeName": "FinalTranscript"
                }
              },
              "typeId": "FinalTranscript",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RealtimeTranscript_example_autogenerated": {
            "audio_start": 42,
            "audio_end": 42,
            "confidence": 42,
            "text": "foo",
            "words": [
              {
                "start": 42,
                "end": 42,
                "confidence": 42,
                "text": "foo"
              }
            ],
            "created": "foo",
            "message_type": "foo"
          }
        }
      }
    },
    "RealtimeBaseTranscript": {
      "name": {
        "typeId": "RealtimeBaseTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "RealtimeBaseTranscript",
          "camelCase": {
            "unsafeName": "realtimeBaseTranscript",
            "safeName": "realtimeBaseTranscript"
          },
          "snakeCase": {
            "unsafeName": "realtime_base_transcript",
            "safeName": "realtime_base_transcript"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME_BASE_TRANSCRIPT",
            "safeName": "REALTIME_BASE_TRANSCRIPT"
          },
          "pascalCase": {
            "unsafeName": "RealtimeBaseTranscript",
            "safeName": "RealtimeBaseTranscript"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_start",
                "camelCase": {
                  "unsafeName": "audioStart",
                  "safeName": "audioStart"
                },
                "snakeCase": {
                  "unsafeName": "audio_start",
                  "safeName": "audio_start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START",
                  "safeName": "AUDIO_START"
                },
                "pascalCase": {
                  "unsafeName": "AudioStart",
                  "safeName": "AudioStart"
                }
              },
              "wireValue": "audio_start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Start time of audio sample relative to session start, in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RealtimeBaseTranscriptAudioStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end",
                "camelCase": {
                  "unsafeName": "audioEnd",
                  "safeName": "audioEnd"
                },
                "snakeCase": {
                  "unsafeName": "audio_end",
                  "safeName": "audio_end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END",
                  "safeName": "AUDIO_END"
                },
                "pascalCase": {
                  "unsafeName": "AudioEnd",
                  "safeName": "AudioEnd"
                }
              },
              "wireValue": "audio_end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "End time of audio sample relative to session start, in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RealtimeBaseTranscriptAudioEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "The confidence score of the entire transcription, between 0 and 1.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RealtimeBaseTranscriptConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The partial transcript for your audio.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RealtimeBaseTranscriptText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                }
              },
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Word",
                    "camelCase": {
                      "unsafeName": "word",
                      "safeName": "word"
                    },
                    "snakeCase": {
                      "unsafeName": "word",
                      "safeName": "word"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WORD",
                      "safeName": "WORD"
                    },
                    "pascalCase": {
                      "unsafeName": "Word",
                      "safeName": "Word"
                    }
                  },
                  "typeId": "Word",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "An array of objects, with the information for each word in the transcription text. Includes the start/end time (in milliseconds) of the word, the confidence score of the word, and the text (i.e. the word itself).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RealtimeBaseTranscriptWords_example_autogenerated": [
                  {
                    "start": 42,
                    "end": 42,
                    "confidence": 42,
                    "text": "foo"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created",
                "camelCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "snakeCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED",
                  "safeName": "CREATED"
                },
                "pascalCase": {
                  "unsafeName": "Created",
                  "safeName": "Created"
                }
              },
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME",
                "v2": {
                  "type": "dateTime"
                }
              },
              "type": "primitive"
            },
            "docs": "The timestamp for the partial transcript.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RealtimeBaseTranscript_example_autogenerated": {
            "audio_start": 42,
            "audio_end": 42,
            "confidence": 42,
            "text": "foo",
            "words": [
              {
                "start": 42,
                "end": 42,
                "confidence": 42,
                "text": "foo"
              }
            ],
            "created": "foo"
          }
        }
      }
    },
    "Word": {
      "name": {
        "typeId": "Word",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Word",
          "camelCase": {
            "unsafeName": "word",
            "safeName": "word"
          },
          "snakeCase": {
            "unsafeName": "word",
            "safeName": "word"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD",
            "safeName": "WORD"
          },
          "pascalCase": {
            "unsafeName": "Word",
            "safeName": "Word"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                }
              },
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Start time of the word in milliseconds",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordStart_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "End time of the word in milliseconds",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordEnd_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                }
              },
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "max": 1,
                    "min": 0
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "docs": "Confidence score of the word",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordConfidence_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The word itself",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WordText_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Word_example_autogenerated": {
            "start": 42,
            "end": 42,
            "confidence": 42,
            "text": "foo"
          }
        }
      }
    },
    "AudioData": {
      "name": {
        "typeId": "AudioData",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AudioData",
          "camelCase": {
            "unsafeName": "audioData",
            "safeName": "audioData"
          },
          "snakeCase": {
            "unsafeName": "audio_data",
            "safeName": "audio_data"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUDIO_DATA",
            "safeName": "AUDIO_DATA"
          },
          "pascalCase": {
            "unsafeName": "AudioData",
            "safeName": "AudioData"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_data",
                "camelCase": {
                  "unsafeName": "audioData",
                  "safeName": "audioData"
                },
                "snakeCase": {
                  "unsafeName": "audio_data",
                  "safeName": "audio_data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DATA",
                  "safeName": "AUDIO_DATA"
                },
                "pascalCase": {
                  "unsafeName": "AudioData",
                  "safeName": "AudioData"
                }
              },
              "wireValue": "audio_data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Raw audio data, base64 encoded. This can be the raw data recorded directly from a microphone or read from an audio file.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioDataAudioData_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioData_example_autogenerated": {
            "audio_data": "foo"
          }
        }
      }
    },
    "UserIdSubscribe": {
      "name": {
        "typeId": "UserIdSubscribe",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserIdSubscribe",
          "camelCase": {
            "unsafeName": "userIdSubscribe",
            "safeName": "userIdSubscribe"
          },
          "snakeCase": {
            "unsafeName": "user_id_subscribe",
            "safeName": "user_id_subscribe"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_ID_SUBSCRIBE",
            "safeName": "USER_ID_SUBSCRIBE"
          },
          "pascalCase": {
            "unsafeName": "UserIdSubscribe",
            "safeName": "UserIdSubscribe"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SessionBegins",
                "camelCase": {
                  "unsafeName": "sessionBegins",
                  "safeName": "sessionBegins"
                },
                "snakeCase": {
                  "unsafeName": "session_begins",
                  "safeName": "session_begins"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_BEGINS",
                  "safeName": "SESSION_BEGINS"
                },
                "pascalCase": {
                  "unsafeName": "SessionBegins",
                  "safeName": "SessionBegins"
                }
              },
              "typeId": "SessionBegins",
              "displayName": "SessionBegins",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PartialTranscript",
                "camelCase": {
                  "unsafeName": "partialTranscript",
                  "safeName": "partialTranscript"
                },
                "snakeCase": {
                  "unsafeName": "partial_transcript",
                  "safeName": "partial_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARTIAL_TRANSCRIPT",
                  "safeName": "PARTIAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "PartialTranscript",
                  "safeName": "PartialTranscript"
                }
              },
              "typeId": "PartialTranscript",
              "displayName": "partialTranscript",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "FinalTranscript",
                "camelCase": {
                  "unsafeName": "finalTranscript",
                  "safeName": "finalTranscript"
                },
                "snakeCase": {
                  "unsafeName": "final_transcript",
                  "safeName": "final_transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINAL_TRANSCRIPT",
                  "safeName": "FINAL_TRANSCRIPT"
                },
                "pascalCase": {
                  "unsafeName": "FinalTranscript",
                  "safeName": "FinalTranscript"
                }
              },
              "typeId": "FinalTranscript",
              "displayName": "finalTranscript",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SessionTerminated",
                "camelCase": {
                  "unsafeName": "sessionTerminated",
                  "safeName": "sessionTerminated"
                },
                "snakeCase": {
                  "unsafeName": "session_terminated",
                  "safeName": "session_terminated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_TERMINATED",
                  "safeName": "SESSION_TERMINATED"
                },
                "pascalCase": {
                  "unsafeName": "SessionTerminated",
                  "safeName": "SessionTerminated"
                }
              },
              "typeId": "SessionTerminated",
              "displayName": "SessionTerminated",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "RealtimeError",
                "camelCase": {
                  "unsafeName": "realtimeError",
                  "safeName": "realtimeError"
                },
                "snakeCase": {
                  "unsafeName": "realtime_error",
                  "safeName": "realtime_error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REALTIME_ERROR",
                  "safeName": "REALTIME_ERROR"
                },
                "pascalCase": {
                  "unsafeName": "RealtimeError",
                  "safeName": "RealtimeError"
                }
              },
              "typeId": "RealtimeError",
              "displayName": "RealtimeError",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserIdSubscribe_example_autogenerated": null
        }
      }
    },
    "UserIdPublish": {
      "name": {
        "typeId": "UserIdPublish",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserIdPublish",
          "camelCase": {
            "unsafeName": "userIdPublish",
            "safeName": "userIdPublish"
          },
          "snakeCase": {
            "unsafeName": "user_id_publish",
            "safeName": "user_id_publish"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_ID_PUBLISH",
            "safeName": "USER_ID_PUBLISH"
          },
          "pascalCase": {
            "unsafeName": "UserIdPublish",
            "safeName": "UserIdPublish"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SendAudio",
                "camelCase": {
                  "unsafeName": "sendAudio",
                  "safeName": "sendAudio"
                },
                "snakeCase": {
                  "unsafeName": "send_audio",
                  "safeName": "send_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEND_AUDIO",
                  "safeName": "SEND_AUDIO"
                },
                "pascalCase": {
                  "unsafeName": "SendAudio",
                  "safeName": "SendAudio"
                }
              },
              "typeId": "SendAudio",
              "displayName": "sendAudio",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "TerminateSession",
                "camelCase": {
                  "unsafeName": "terminateSession",
                  "safeName": "terminateSession"
                },
                "snakeCase": {
                  "unsafeName": "terminate_session",
                  "safeName": "terminate_session"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TERMINATE_SESSION",
                  "safeName": "TERMINATE_SESSION"
                },
                "pascalCase": {
                  "unsafeName": "TerminateSession",
                  "safeName": "TerminateSession"
                }
              },
              "typeId": "TerminateSession",
              "displayName": "terminateSession",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserIdPublish_example_autogenerated": null
        }
      }
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceId",
          "safeName": "errorInstanceId"
        },
        "snakeCase": {
          "unsafeName": "error_instance_id",
          "safeName": "error_instance_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "ERROR_INSTANCE_ID",
          "safeName": "ERROR_INSTANCE_ID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceId",
          "safeName": "ErrorInstanceId"
        }
      },
      "wireValue": "errorInstanceId"
    }
  },
  "errors": {
    "UploadFileRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "UploadFileRequestBadRequestError",
          "camelCase": {
            "unsafeName": "uploadFileRequestBadRequestError",
            "safeName": "uploadFileRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_bad_request_error",
            "safeName": "upload_file_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestBadRequestError",
            "safeName": "UploadFileRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "UploadFileRequestBadRequestError",
          "camelCase": {
            "unsafeName": "uploadFileRequestBadRequestError",
            "safeName": "uploadFileRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_bad_request_error",
            "safeName": "upload_file_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestBadRequestError",
            "safeName": "UploadFileRequestBadRequestError"
          }
        },
        "wireValue": "UploadFileRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "UploadFileRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "UploadFileRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "uploadFileRequestUnauthorizedError",
            "safeName": "uploadFileRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_unauthorized_error",
            "safeName": "upload_file_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestUnauthorizedError",
            "safeName": "UploadFileRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "UploadFileRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "uploadFileRequestUnauthorizedError",
            "safeName": "uploadFileRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_unauthorized_error",
            "safeName": "upload_file_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestUnauthorizedError",
            "safeName": "UploadFileRequestUnauthorizedError"
          }
        },
        "wireValue": "UploadFileRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "UploadFileRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "UploadFileRequestNotFoundError",
          "camelCase": {
            "unsafeName": "uploadFileRequestNotFoundError",
            "safeName": "uploadFileRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_not_found_error",
            "safeName": "upload_file_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_NOT_FOUND_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestNotFoundError",
            "safeName": "UploadFileRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "UploadFileRequestNotFoundError",
          "camelCase": {
            "unsafeName": "uploadFileRequestNotFoundError",
            "safeName": "uploadFileRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_not_found_error",
            "safeName": "upload_file_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_NOT_FOUND_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestNotFoundError",
            "safeName": "UploadFileRequestNotFoundError"
          }
        },
        "wireValue": "UploadFileRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "UploadFileRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "UploadFileRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "uploadFileRequestTooManyRequestsError",
            "safeName": "uploadFileRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_too_many_requests_error",
            "safeName": "upload_file_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestTooManyRequestsError",
            "safeName": "UploadFileRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "UploadFileRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "uploadFileRequestTooManyRequestsError",
            "safeName": "uploadFileRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_too_many_requests_error",
            "safeName": "upload_file_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestTooManyRequestsError",
            "safeName": "UploadFileRequestTooManyRequestsError"
          }
        },
        "wireValue": "UploadFileRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "UploadFileRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "UploadFileRequestInternalServerError",
          "camelCase": {
            "unsafeName": "uploadFileRequestInternalServerError",
            "safeName": "uploadFileRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_internal_server_error",
            "safeName": "upload_file_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestInternalServerError",
            "safeName": "UploadFileRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "UploadFileRequestInternalServerError",
          "camelCase": {
            "unsafeName": "uploadFileRequestInternalServerError",
            "safeName": "uploadFileRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_internal_server_error",
            "safeName": "upload_file_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestInternalServerError",
            "safeName": "UploadFileRequestInternalServerError"
          }
        },
        "wireValue": "UploadFileRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "UploadFileRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "UploadFileRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "uploadFileRequestServiceUnavailableError",
            "safeName": "uploadFileRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_service_unavailable_error",
            "safeName": "upload_file_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestServiceUnavailableError",
            "safeName": "UploadFileRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "UploadFileRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "uploadFileRequestServiceUnavailableError",
            "safeName": "uploadFileRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_service_unavailable_error",
            "safeName": "upload_file_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestServiceUnavailableError",
            "safeName": "UploadFileRequestServiceUnavailableError"
          }
        },
        "wireValue": "UploadFileRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "UploadFileRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "UploadFileRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "uploadFileRequestGatewayTimeoutError",
            "safeName": "uploadFileRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_gateway_timeout_error",
            "safeName": "upload_file_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestGatewayTimeoutError",
            "safeName": "UploadFileRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "UploadFileRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "UploadFileRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "uploadFileRequestGatewayTimeoutError",
            "safeName": "uploadFileRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "upload_file_request_gateway_timeout_error",
            "safeName": "upload_file_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "UPLOAD_FILE_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "UPLOAD_FILE_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "UploadFileRequestGatewayTimeoutError",
            "safeName": "UploadFileRequestGatewayTimeoutError"
          }
        },
        "wireValue": "UploadFileRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "ListTranscriptsRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "ListTranscriptsRequestBadRequestError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestBadRequestError",
            "safeName": "listTranscriptsRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_bad_request_error",
            "safeName": "list_transcripts_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestBadRequestError",
            "safeName": "ListTranscriptsRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListTranscriptsRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "ListTranscriptsRequestBadRequestError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestBadRequestError",
            "safeName": "listTranscriptsRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_bad_request_error",
            "safeName": "list_transcripts_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestBadRequestError",
            "safeName": "ListTranscriptsRequestBadRequestError"
          }
        },
        "wireValue": "ListTranscriptsRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "ListTranscriptsRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "ListTranscriptsRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestUnauthorizedError",
            "safeName": "listTranscriptsRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_unauthorized_error",
            "safeName": "list_transcripts_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestUnauthorizedError",
            "safeName": "ListTranscriptsRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListTranscriptsRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "ListTranscriptsRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestUnauthorizedError",
            "safeName": "listTranscriptsRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_unauthorized_error",
            "safeName": "list_transcripts_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestUnauthorizedError",
            "safeName": "ListTranscriptsRequestUnauthorizedError"
          }
        },
        "wireValue": "ListTranscriptsRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "ListTranscriptsRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "ListTranscriptsRequestNotFoundError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestNotFoundError",
            "safeName": "listTranscriptsRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_not_found_error",
            "safeName": "list_transcripts_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestNotFoundError",
            "safeName": "ListTranscriptsRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListTranscriptsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "ListTranscriptsRequestNotFoundError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestNotFoundError",
            "safeName": "listTranscriptsRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_not_found_error",
            "safeName": "list_transcripts_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestNotFoundError",
            "safeName": "ListTranscriptsRequestNotFoundError"
          }
        },
        "wireValue": "ListTranscriptsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "ListTranscriptsRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "ListTranscriptsRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestTooManyRequestsError",
            "safeName": "listTranscriptsRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_too_many_requests_error",
            "safeName": "list_transcripts_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestTooManyRequestsError",
            "safeName": "ListTranscriptsRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListTranscriptsRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "ListTranscriptsRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestTooManyRequestsError",
            "safeName": "listTranscriptsRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_too_many_requests_error",
            "safeName": "list_transcripts_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestTooManyRequestsError",
            "safeName": "ListTranscriptsRequestTooManyRequestsError"
          }
        },
        "wireValue": "ListTranscriptsRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "ListTranscriptsRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "ListTranscriptsRequestInternalServerError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestInternalServerError",
            "safeName": "listTranscriptsRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_internal_server_error",
            "safeName": "list_transcripts_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestInternalServerError",
            "safeName": "ListTranscriptsRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListTranscriptsRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "ListTranscriptsRequestInternalServerError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestInternalServerError",
            "safeName": "listTranscriptsRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_internal_server_error",
            "safeName": "list_transcripts_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestInternalServerError",
            "safeName": "ListTranscriptsRequestInternalServerError"
          }
        },
        "wireValue": "ListTranscriptsRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "ListTranscriptsRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "ListTranscriptsRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestServiceUnavailableError",
            "safeName": "listTranscriptsRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_service_unavailable_error",
            "safeName": "list_transcripts_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestServiceUnavailableError",
            "safeName": "ListTranscriptsRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListTranscriptsRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "ListTranscriptsRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestServiceUnavailableError",
            "safeName": "listTranscriptsRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_service_unavailable_error",
            "safeName": "list_transcripts_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestServiceUnavailableError",
            "safeName": "ListTranscriptsRequestServiceUnavailableError"
          }
        },
        "wireValue": "ListTranscriptsRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "ListTranscriptsRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "ListTranscriptsRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestGatewayTimeoutError",
            "safeName": "listTranscriptsRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_gateway_timeout_error",
            "safeName": "list_transcripts_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestGatewayTimeoutError",
            "safeName": "ListTranscriptsRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListTranscriptsRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "ListTranscriptsRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "listTranscriptsRequestGatewayTimeoutError",
            "safeName": "listTranscriptsRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "list_transcripts_request_gateway_timeout_error",
            "safeName": "list_transcripts_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_TRANSCRIPTS_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LIST_TRANSCRIPTS_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListTranscriptsRequestGatewayTimeoutError",
            "safeName": "ListTranscriptsRequestGatewayTimeoutError"
          }
        },
        "wireValue": "ListTranscriptsRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "CreateTranscriptRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "CreateTranscriptRequestBadRequestError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestBadRequestError",
            "safeName": "createTranscriptRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_bad_request_error",
            "safeName": "create_transcript_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestBadRequestError",
            "safeName": "CreateTranscriptRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateTranscriptRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateTranscriptRequestBadRequestError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestBadRequestError",
            "safeName": "createTranscriptRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_bad_request_error",
            "safeName": "create_transcript_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestBadRequestError",
            "safeName": "CreateTranscriptRequestBadRequestError"
          }
        },
        "wireValue": "CreateTranscriptRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "CreateTranscriptRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "CreateTranscriptRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestUnauthorizedError",
            "safeName": "createTranscriptRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_unauthorized_error",
            "safeName": "create_transcript_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestUnauthorizedError",
            "safeName": "CreateTranscriptRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateTranscriptRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateTranscriptRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestUnauthorizedError",
            "safeName": "createTranscriptRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_unauthorized_error",
            "safeName": "create_transcript_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestUnauthorizedError",
            "safeName": "CreateTranscriptRequestUnauthorizedError"
          }
        },
        "wireValue": "CreateTranscriptRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "CreateTranscriptRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "CreateTranscriptRequestNotFoundError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestNotFoundError",
            "safeName": "createTranscriptRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_not_found_error",
            "safeName": "create_transcript_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestNotFoundError",
            "safeName": "CreateTranscriptRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateTranscriptRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateTranscriptRequestNotFoundError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestNotFoundError",
            "safeName": "createTranscriptRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_not_found_error",
            "safeName": "create_transcript_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestNotFoundError",
            "safeName": "CreateTranscriptRequestNotFoundError"
          }
        },
        "wireValue": "CreateTranscriptRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "CreateTranscriptRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "CreateTranscriptRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestTooManyRequestsError",
            "safeName": "createTranscriptRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_too_many_requests_error",
            "safeName": "create_transcript_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestTooManyRequestsError",
            "safeName": "CreateTranscriptRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateTranscriptRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateTranscriptRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestTooManyRequestsError",
            "safeName": "createTranscriptRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_too_many_requests_error",
            "safeName": "create_transcript_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestTooManyRequestsError",
            "safeName": "CreateTranscriptRequestTooManyRequestsError"
          }
        },
        "wireValue": "CreateTranscriptRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "CreateTranscriptRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "CreateTranscriptRequestInternalServerError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestInternalServerError",
            "safeName": "createTranscriptRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_internal_server_error",
            "safeName": "create_transcript_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestInternalServerError",
            "safeName": "CreateTranscriptRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateTranscriptRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateTranscriptRequestInternalServerError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestInternalServerError",
            "safeName": "createTranscriptRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_internal_server_error",
            "safeName": "create_transcript_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestInternalServerError",
            "safeName": "CreateTranscriptRequestInternalServerError"
          }
        },
        "wireValue": "CreateTranscriptRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "CreateTranscriptRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "CreateTranscriptRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestServiceUnavailableError",
            "safeName": "createTranscriptRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_service_unavailable_error",
            "safeName": "create_transcript_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestServiceUnavailableError",
            "safeName": "CreateTranscriptRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateTranscriptRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateTranscriptRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestServiceUnavailableError",
            "safeName": "createTranscriptRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_service_unavailable_error",
            "safeName": "create_transcript_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestServiceUnavailableError",
            "safeName": "CreateTranscriptRequestServiceUnavailableError"
          }
        },
        "wireValue": "CreateTranscriptRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "CreateTranscriptRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "CreateTranscriptRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestGatewayTimeoutError",
            "safeName": "createTranscriptRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_gateway_timeout_error",
            "safeName": "create_transcript_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestGatewayTimeoutError",
            "safeName": "CreateTranscriptRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateTranscriptRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateTranscriptRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "createTranscriptRequestGatewayTimeoutError",
            "safeName": "createTranscriptRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "create_transcript_request_gateway_timeout_error",
            "safeName": "create_transcript_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "CREATE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateTranscriptRequestGatewayTimeoutError",
            "safeName": "CreateTranscriptRequestGatewayTimeoutError"
          }
        },
        "wireValue": "CreateTranscriptRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "GetTranscriptRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestBadRequestError",
            "safeName": "getTranscriptRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_bad_request_error",
            "safeName": "get_transcript_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestBadRequestError",
            "safeName": "GetTranscriptRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestBadRequestError",
            "safeName": "getTranscriptRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_bad_request_error",
            "safeName": "get_transcript_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestBadRequestError",
            "safeName": "GetTranscriptRequestBadRequestError"
          }
        },
        "wireValue": "GetTranscriptRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "GetTranscriptRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestUnauthorizedError",
            "safeName": "getTranscriptRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_unauthorized_error",
            "safeName": "get_transcript_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestUnauthorizedError",
            "safeName": "GetTranscriptRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestUnauthorizedError",
            "safeName": "getTranscriptRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_unauthorized_error",
            "safeName": "get_transcript_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestUnauthorizedError",
            "safeName": "GetTranscriptRequestUnauthorizedError"
          }
        },
        "wireValue": "GetTranscriptRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "GetTranscriptRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestNotFoundError",
            "safeName": "getTranscriptRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_not_found_error",
            "safeName": "get_transcript_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestNotFoundError",
            "safeName": "GetTranscriptRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestNotFoundError",
            "safeName": "getTranscriptRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_not_found_error",
            "safeName": "get_transcript_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestNotFoundError",
            "safeName": "GetTranscriptRequestNotFoundError"
          }
        },
        "wireValue": "GetTranscriptRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "GetTranscriptRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestTooManyRequestsError",
            "safeName": "getTranscriptRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_too_many_requests_error",
            "safeName": "get_transcript_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestTooManyRequestsError",
            "safeName": "GetTranscriptRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestTooManyRequestsError",
            "safeName": "getTranscriptRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_too_many_requests_error",
            "safeName": "get_transcript_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestTooManyRequestsError",
            "safeName": "GetTranscriptRequestTooManyRequestsError"
          }
        },
        "wireValue": "GetTranscriptRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "GetTranscriptRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestInternalServerError",
            "safeName": "getTranscriptRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_internal_server_error",
            "safeName": "get_transcript_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestInternalServerError",
            "safeName": "GetTranscriptRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestInternalServerError",
            "safeName": "getTranscriptRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_internal_server_error",
            "safeName": "get_transcript_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestInternalServerError",
            "safeName": "GetTranscriptRequestInternalServerError"
          }
        },
        "wireValue": "GetTranscriptRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "GetTranscriptRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestServiceUnavailableError",
            "safeName": "getTranscriptRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_service_unavailable_error",
            "safeName": "get_transcript_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestServiceUnavailableError",
            "safeName": "GetTranscriptRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestServiceUnavailableError",
            "safeName": "getTranscriptRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_service_unavailable_error",
            "safeName": "get_transcript_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestServiceUnavailableError",
            "safeName": "GetTranscriptRequestServiceUnavailableError"
          }
        },
        "wireValue": "GetTranscriptRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "GetTranscriptRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestGatewayTimeoutError",
            "safeName": "getTranscriptRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_gateway_timeout_error",
            "safeName": "get_transcript_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestGatewayTimeoutError",
            "safeName": "GetTranscriptRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getTranscriptRequestGatewayTimeoutError",
            "safeName": "getTranscriptRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_request_gateway_timeout_error",
            "safeName": "get_transcript_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptRequestGatewayTimeoutError",
            "safeName": "GetTranscriptRequestGatewayTimeoutError"
          }
        },
        "wireValue": "GetTranscriptRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "DeleteTranscriptRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "DeleteTranscriptRequestBadRequestError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestBadRequestError",
            "safeName": "deleteTranscriptRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_bad_request_error",
            "safeName": "delete_transcript_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestBadRequestError",
            "safeName": "DeleteTranscriptRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteTranscriptRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "DeleteTranscriptRequestBadRequestError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestBadRequestError",
            "safeName": "deleteTranscriptRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_bad_request_error",
            "safeName": "delete_transcript_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestBadRequestError",
            "safeName": "DeleteTranscriptRequestBadRequestError"
          }
        },
        "wireValue": "DeleteTranscriptRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "DeleteTranscriptRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "DeleteTranscriptRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestUnauthorizedError",
            "safeName": "deleteTranscriptRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_unauthorized_error",
            "safeName": "delete_transcript_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestUnauthorizedError",
            "safeName": "DeleteTranscriptRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteTranscriptRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "DeleteTranscriptRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestUnauthorizedError",
            "safeName": "deleteTranscriptRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_unauthorized_error",
            "safeName": "delete_transcript_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestUnauthorizedError",
            "safeName": "DeleteTranscriptRequestUnauthorizedError"
          }
        },
        "wireValue": "DeleteTranscriptRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "DeleteTranscriptRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "DeleteTranscriptRequestNotFoundError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestNotFoundError",
            "safeName": "deleteTranscriptRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_not_found_error",
            "safeName": "delete_transcript_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestNotFoundError",
            "safeName": "DeleteTranscriptRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteTranscriptRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "DeleteTranscriptRequestNotFoundError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestNotFoundError",
            "safeName": "deleteTranscriptRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_not_found_error",
            "safeName": "delete_transcript_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestNotFoundError",
            "safeName": "DeleteTranscriptRequestNotFoundError"
          }
        },
        "wireValue": "DeleteTranscriptRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "DeleteTranscriptRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "DeleteTranscriptRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestTooManyRequestsError",
            "safeName": "deleteTranscriptRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_too_many_requests_error",
            "safeName": "delete_transcript_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestTooManyRequestsError",
            "safeName": "DeleteTranscriptRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteTranscriptRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "DeleteTranscriptRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestTooManyRequestsError",
            "safeName": "deleteTranscriptRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_too_many_requests_error",
            "safeName": "delete_transcript_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestTooManyRequestsError",
            "safeName": "DeleteTranscriptRequestTooManyRequestsError"
          }
        },
        "wireValue": "DeleteTranscriptRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "DeleteTranscriptRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "DeleteTranscriptRequestInternalServerError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestInternalServerError",
            "safeName": "deleteTranscriptRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_internal_server_error",
            "safeName": "delete_transcript_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestInternalServerError",
            "safeName": "DeleteTranscriptRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteTranscriptRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "DeleteTranscriptRequestInternalServerError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestInternalServerError",
            "safeName": "deleteTranscriptRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_internal_server_error",
            "safeName": "delete_transcript_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestInternalServerError",
            "safeName": "DeleteTranscriptRequestInternalServerError"
          }
        },
        "wireValue": "DeleteTranscriptRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "DeleteTranscriptRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "DeleteTranscriptRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestServiceUnavailableError",
            "safeName": "deleteTranscriptRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_service_unavailable_error",
            "safeName": "delete_transcript_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestServiceUnavailableError",
            "safeName": "DeleteTranscriptRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteTranscriptRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "DeleteTranscriptRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestServiceUnavailableError",
            "safeName": "deleteTranscriptRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_service_unavailable_error",
            "safeName": "delete_transcript_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestServiceUnavailableError",
            "safeName": "DeleteTranscriptRequestServiceUnavailableError"
          }
        },
        "wireValue": "DeleteTranscriptRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "DeleteTranscriptRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "DeleteTranscriptRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestGatewayTimeoutError",
            "safeName": "deleteTranscriptRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_gateway_timeout_error",
            "safeName": "delete_transcript_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestGatewayTimeoutError",
            "safeName": "DeleteTranscriptRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "DeleteTranscriptRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "DeleteTranscriptRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "deleteTranscriptRequestGatewayTimeoutError",
            "safeName": "deleteTranscriptRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "delete_transcript_request_gateway_timeout_error",
            "safeName": "delete_transcript_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "DELETE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteTranscriptRequestGatewayTimeoutError",
            "safeName": "DeleteTranscriptRequestGatewayTimeoutError"
          }
        },
        "wireValue": "DeleteTranscriptRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "GetSubtitlesRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "GetSubtitlesRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestBadRequestError",
            "safeName": "getSubtitlesRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_bad_request_error",
            "safeName": "get_subtitles_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestBadRequestError",
            "safeName": "GetSubtitlesRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSubtitlesRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "GetSubtitlesRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestBadRequestError",
            "safeName": "getSubtitlesRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_bad_request_error",
            "safeName": "get_subtitles_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestBadRequestError",
            "safeName": "GetSubtitlesRequestBadRequestError"
          }
        },
        "wireValue": "GetSubtitlesRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "GetSubtitlesRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "GetSubtitlesRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestUnauthorizedError",
            "safeName": "getSubtitlesRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_unauthorized_error",
            "safeName": "get_subtitles_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestUnauthorizedError",
            "safeName": "GetSubtitlesRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSubtitlesRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "GetSubtitlesRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestUnauthorizedError",
            "safeName": "getSubtitlesRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_unauthorized_error",
            "safeName": "get_subtitles_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestUnauthorizedError",
            "safeName": "GetSubtitlesRequestUnauthorizedError"
          }
        },
        "wireValue": "GetSubtitlesRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "GetSubtitlesRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "GetSubtitlesRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestNotFoundError",
            "safeName": "getSubtitlesRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_not_found_error",
            "safeName": "get_subtitles_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestNotFoundError",
            "safeName": "GetSubtitlesRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSubtitlesRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "GetSubtitlesRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestNotFoundError",
            "safeName": "getSubtitlesRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_not_found_error",
            "safeName": "get_subtitles_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestNotFoundError",
            "safeName": "GetSubtitlesRequestNotFoundError"
          }
        },
        "wireValue": "GetSubtitlesRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "GetSubtitlesRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "GetSubtitlesRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestTooManyRequestsError",
            "safeName": "getSubtitlesRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_too_many_requests_error",
            "safeName": "get_subtitles_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestTooManyRequestsError",
            "safeName": "GetSubtitlesRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSubtitlesRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "GetSubtitlesRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestTooManyRequestsError",
            "safeName": "getSubtitlesRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_too_many_requests_error",
            "safeName": "get_subtitles_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestTooManyRequestsError",
            "safeName": "GetSubtitlesRequestTooManyRequestsError"
          }
        },
        "wireValue": "GetSubtitlesRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "GetSubtitlesRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "GetSubtitlesRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestInternalServerError",
            "safeName": "getSubtitlesRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_internal_server_error",
            "safeName": "get_subtitles_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestInternalServerError",
            "safeName": "GetSubtitlesRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSubtitlesRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "GetSubtitlesRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestInternalServerError",
            "safeName": "getSubtitlesRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_internal_server_error",
            "safeName": "get_subtitles_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestInternalServerError",
            "safeName": "GetSubtitlesRequestInternalServerError"
          }
        },
        "wireValue": "GetSubtitlesRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "GetSubtitlesRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "GetSubtitlesRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestServiceUnavailableError",
            "safeName": "getSubtitlesRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_service_unavailable_error",
            "safeName": "get_subtitles_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestServiceUnavailableError",
            "safeName": "GetSubtitlesRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSubtitlesRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "GetSubtitlesRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestServiceUnavailableError",
            "safeName": "getSubtitlesRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_service_unavailable_error",
            "safeName": "get_subtitles_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestServiceUnavailableError",
            "safeName": "GetSubtitlesRequestServiceUnavailableError"
          }
        },
        "wireValue": "GetSubtitlesRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "GetSubtitlesRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "GetSubtitlesRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestGatewayTimeoutError",
            "safeName": "getSubtitlesRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_gateway_timeout_error",
            "safeName": "get_subtitles_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestGatewayTimeoutError",
            "safeName": "GetSubtitlesRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetSubtitlesRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "GetSubtitlesRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getSubtitlesRequestGatewayTimeoutError",
            "safeName": "getSubtitlesRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_subtitles_request_gateway_timeout_error",
            "safeName": "get_subtitles_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_SUBTITLES_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_SUBTITLES_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetSubtitlesRequestGatewayTimeoutError",
            "safeName": "GetSubtitlesRequestGatewayTimeoutError"
          }
        },
        "wireValue": "GetSubtitlesRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "GetTranscriptSentencesRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestBadRequestError",
            "safeName": "getTranscriptSentencesRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_bad_request_error",
            "safeName": "get_transcript_sentences_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestBadRequestError",
            "safeName": "GetTranscriptSentencesRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptSentencesRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestBadRequestError",
            "safeName": "getTranscriptSentencesRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_bad_request_error",
            "safeName": "get_transcript_sentences_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestBadRequestError",
            "safeName": "GetTranscriptSentencesRequestBadRequestError"
          }
        },
        "wireValue": "GetTranscriptSentencesRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "GetTranscriptSentencesRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestUnauthorizedError",
            "safeName": "getTranscriptSentencesRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_unauthorized_error",
            "safeName": "get_transcript_sentences_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestUnauthorizedError",
            "safeName": "GetTranscriptSentencesRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptSentencesRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestUnauthorizedError",
            "safeName": "getTranscriptSentencesRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_unauthorized_error",
            "safeName": "get_transcript_sentences_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestUnauthorizedError",
            "safeName": "GetTranscriptSentencesRequestUnauthorizedError"
          }
        },
        "wireValue": "GetTranscriptSentencesRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "GetTranscriptSentencesRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestNotFoundError",
            "safeName": "getTranscriptSentencesRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_not_found_error",
            "safeName": "get_transcript_sentences_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestNotFoundError",
            "safeName": "GetTranscriptSentencesRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptSentencesRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestNotFoundError",
            "safeName": "getTranscriptSentencesRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_not_found_error",
            "safeName": "get_transcript_sentences_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestNotFoundError",
            "safeName": "GetTranscriptSentencesRequestNotFoundError"
          }
        },
        "wireValue": "GetTranscriptSentencesRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "GetTranscriptSentencesRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestTooManyRequestsError",
            "safeName": "getTranscriptSentencesRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_too_many_requests_error",
            "safeName": "get_transcript_sentences_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestTooManyRequestsError",
            "safeName": "GetTranscriptSentencesRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptSentencesRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestTooManyRequestsError",
            "safeName": "getTranscriptSentencesRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_too_many_requests_error",
            "safeName": "get_transcript_sentences_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestTooManyRequestsError",
            "safeName": "GetTranscriptSentencesRequestTooManyRequestsError"
          }
        },
        "wireValue": "GetTranscriptSentencesRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "GetTranscriptSentencesRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestInternalServerError",
            "safeName": "getTranscriptSentencesRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_internal_server_error",
            "safeName": "get_transcript_sentences_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestInternalServerError",
            "safeName": "GetTranscriptSentencesRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptSentencesRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestInternalServerError",
            "safeName": "getTranscriptSentencesRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_internal_server_error",
            "safeName": "get_transcript_sentences_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestInternalServerError",
            "safeName": "GetTranscriptSentencesRequestInternalServerError"
          }
        },
        "wireValue": "GetTranscriptSentencesRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "GetTranscriptSentencesRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestServiceUnavailableError",
            "safeName": "getTranscriptSentencesRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_service_unavailable_error",
            "safeName": "get_transcript_sentences_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestServiceUnavailableError",
            "safeName": "GetTranscriptSentencesRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptSentencesRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestServiceUnavailableError",
            "safeName": "getTranscriptSentencesRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_service_unavailable_error",
            "safeName": "get_transcript_sentences_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestServiceUnavailableError",
            "safeName": "GetTranscriptSentencesRequestServiceUnavailableError"
          }
        },
        "wireValue": "GetTranscriptSentencesRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "GetTranscriptSentencesRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestGatewayTimeoutError",
            "safeName": "getTranscriptSentencesRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_gateway_timeout_error",
            "safeName": "get_transcript_sentences_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestGatewayTimeoutError",
            "safeName": "GetTranscriptSentencesRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptSentencesRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptSentencesRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getTranscriptSentencesRequestGatewayTimeoutError",
            "safeName": "getTranscriptSentencesRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_sentences_request_gateway_timeout_error",
            "safeName": "get_transcript_sentences_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptSentencesRequestGatewayTimeoutError",
            "safeName": "GetTranscriptSentencesRequestGatewayTimeoutError"
          }
        },
        "wireValue": "GetTranscriptSentencesRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "GetTranscriptParagraphsRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestBadRequestError",
            "safeName": "getTranscriptParagraphsRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_bad_request_error",
            "safeName": "get_transcript_paragraphs_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestBadRequestError",
            "safeName": "GetTranscriptParagraphsRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptParagraphsRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestBadRequestError",
            "safeName": "getTranscriptParagraphsRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_bad_request_error",
            "safeName": "get_transcript_paragraphs_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestBadRequestError",
            "safeName": "GetTranscriptParagraphsRequestBadRequestError"
          }
        },
        "wireValue": "GetTranscriptParagraphsRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "GetTranscriptParagraphsRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestUnauthorizedError",
            "safeName": "getTranscriptParagraphsRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_unauthorized_error",
            "safeName": "get_transcript_paragraphs_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestUnauthorizedError",
            "safeName": "GetTranscriptParagraphsRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptParagraphsRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestUnauthorizedError",
            "safeName": "getTranscriptParagraphsRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_unauthorized_error",
            "safeName": "get_transcript_paragraphs_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestUnauthorizedError",
            "safeName": "GetTranscriptParagraphsRequestUnauthorizedError"
          }
        },
        "wireValue": "GetTranscriptParagraphsRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "GetTranscriptParagraphsRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestNotFoundError",
            "safeName": "getTranscriptParagraphsRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_not_found_error",
            "safeName": "get_transcript_paragraphs_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestNotFoundError",
            "safeName": "GetTranscriptParagraphsRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptParagraphsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestNotFoundError",
            "safeName": "getTranscriptParagraphsRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_not_found_error",
            "safeName": "get_transcript_paragraphs_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestNotFoundError",
            "safeName": "GetTranscriptParagraphsRequestNotFoundError"
          }
        },
        "wireValue": "GetTranscriptParagraphsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "GetTranscriptParagraphsRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestTooManyRequestsError",
            "safeName": "getTranscriptParagraphsRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_too_many_requests_error",
            "safeName": "get_transcript_paragraphs_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestTooManyRequestsError",
            "safeName": "GetTranscriptParagraphsRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptParagraphsRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestTooManyRequestsError",
            "safeName": "getTranscriptParagraphsRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_too_many_requests_error",
            "safeName": "get_transcript_paragraphs_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestTooManyRequestsError",
            "safeName": "GetTranscriptParagraphsRequestTooManyRequestsError"
          }
        },
        "wireValue": "GetTranscriptParagraphsRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "GetTranscriptParagraphsRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestInternalServerError",
            "safeName": "getTranscriptParagraphsRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_internal_server_error",
            "safeName": "get_transcript_paragraphs_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestInternalServerError",
            "safeName": "GetTranscriptParagraphsRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptParagraphsRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestInternalServerError",
            "safeName": "getTranscriptParagraphsRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_internal_server_error",
            "safeName": "get_transcript_paragraphs_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestInternalServerError",
            "safeName": "GetTranscriptParagraphsRequestInternalServerError"
          }
        },
        "wireValue": "GetTranscriptParagraphsRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "GetTranscriptParagraphsRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestServiceUnavailableError",
            "safeName": "getTranscriptParagraphsRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_service_unavailable_error",
            "safeName": "get_transcript_paragraphs_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestServiceUnavailableError",
            "safeName": "GetTranscriptParagraphsRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptParagraphsRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestServiceUnavailableError",
            "safeName": "getTranscriptParagraphsRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_service_unavailable_error",
            "safeName": "get_transcript_paragraphs_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestServiceUnavailableError",
            "safeName": "GetTranscriptParagraphsRequestServiceUnavailableError"
          }
        },
        "wireValue": "GetTranscriptParagraphsRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "GetTranscriptParagraphsRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestGatewayTimeoutError",
            "safeName": "getTranscriptParagraphsRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_gateway_timeout_error",
            "safeName": "get_transcript_paragraphs_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestGatewayTimeoutError",
            "safeName": "GetTranscriptParagraphsRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetTranscriptParagraphsRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "GetTranscriptParagraphsRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getTranscriptParagraphsRequestGatewayTimeoutError",
            "safeName": "getTranscriptParagraphsRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_transcript_paragraphs_request_gateway_timeout_error",
            "safeName": "get_transcript_paragraphs_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetTranscriptParagraphsRequestGatewayTimeoutError",
            "safeName": "GetTranscriptParagraphsRequestGatewayTimeoutError"
          }
        },
        "wireValue": "GetTranscriptParagraphsRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "WordSearchRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "WordSearchRequestBadRequestError",
          "camelCase": {
            "unsafeName": "wordSearchRequestBadRequestError",
            "safeName": "wordSearchRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_bad_request_error",
            "safeName": "word_search_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestBadRequestError",
            "safeName": "WordSearchRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "WordSearchRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "WordSearchRequestBadRequestError",
          "camelCase": {
            "unsafeName": "wordSearchRequestBadRequestError",
            "safeName": "wordSearchRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_bad_request_error",
            "safeName": "word_search_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestBadRequestError",
            "safeName": "WordSearchRequestBadRequestError"
          }
        },
        "wireValue": "WordSearchRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "WordSearchRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "WordSearchRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "wordSearchRequestUnauthorizedError",
            "safeName": "wordSearchRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_unauthorized_error",
            "safeName": "word_search_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestUnauthorizedError",
            "safeName": "WordSearchRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "WordSearchRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "WordSearchRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "wordSearchRequestUnauthorizedError",
            "safeName": "wordSearchRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_unauthorized_error",
            "safeName": "word_search_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestUnauthorizedError",
            "safeName": "WordSearchRequestUnauthorizedError"
          }
        },
        "wireValue": "WordSearchRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "WordSearchRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "WordSearchRequestNotFoundError",
          "camelCase": {
            "unsafeName": "wordSearchRequestNotFoundError",
            "safeName": "wordSearchRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_not_found_error",
            "safeName": "word_search_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_NOT_FOUND_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestNotFoundError",
            "safeName": "WordSearchRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "WordSearchRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "WordSearchRequestNotFoundError",
          "camelCase": {
            "unsafeName": "wordSearchRequestNotFoundError",
            "safeName": "wordSearchRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_not_found_error",
            "safeName": "word_search_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_NOT_FOUND_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestNotFoundError",
            "safeName": "WordSearchRequestNotFoundError"
          }
        },
        "wireValue": "WordSearchRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "WordSearchRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "WordSearchRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "wordSearchRequestTooManyRequestsError",
            "safeName": "wordSearchRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_too_many_requests_error",
            "safeName": "word_search_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestTooManyRequestsError",
            "safeName": "WordSearchRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "WordSearchRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "WordSearchRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "wordSearchRequestTooManyRequestsError",
            "safeName": "wordSearchRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_too_many_requests_error",
            "safeName": "word_search_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestTooManyRequestsError",
            "safeName": "WordSearchRequestTooManyRequestsError"
          }
        },
        "wireValue": "WordSearchRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "WordSearchRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "WordSearchRequestInternalServerError",
          "camelCase": {
            "unsafeName": "wordSearchRequestInternalServerError",
            "safeName": "wordSearchRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_internal_server_error",
            "safeName": "word_search_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestInternalServerError",
            "safeName": "WordSearchRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "WordSearchRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "WordSearchRequestInternalServerError",
          "camelCase": {
            "unsafeName": "wordSearchRequestInternalServerError",
            "safeName": "wordSearchRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_internal_server_error",
            "safeName": "word_search_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestInternalServerError",
            "safeName": "WordSearchRequestInternalServerError"
          }
        },
        "wireValue": "WordSearchRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "WordSearchRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "WordSearchRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "wordSearchRequestServiceUnavailableError",
            "safeName": "wordSearchRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_service_unavailable_error",
            "safeName": "word_search_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestServiceUnavailableError",
            "safeName": "WordSearchRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "WordSearchRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "WordSearchRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "wordSearchRequestServiceUnavailableError",
            "safeName": "wordSearchRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_service_unavailable_error",
            "safeName": "word_search_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestServiceUnavailableError",
            "safeName": "WordSearchRequestServiceUnavailableError"
          }
        },
        "wireValue": "WordSearchRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "WordSearchRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "WordSearchRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "wordSearchRequestGatewayTimeoutError",
            "safeName": "wordSearchRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_gateway_timeout_error",
            "safeName": "word_search_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestGatewayTimeoutError",
            "safeName": "WordSearchRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "WordSearchRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "WordSearchRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "wordSearchRequestGatewayTimeoutError",
            "safeName": "wordSearchRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "word_search_request_gateway_timeout_error",
            "safeName": "word_search_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "WORD_SEARCH_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "WORD_SEARCH_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "WordSearchRequestGatewayTimeoutError",
            "safeName": "WordSearchRequestGatewayTimeoutError"
          }
        },
        "wireValue": "WordSearchRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "GetRedactedAudioRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "GetRedactedAudioRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestBadRequestError",
            "safeName": "getRedactedAudioRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_bad_request_error",
            "safeName": "get_redacted_audio_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestBadRequestError",
            "safeName": "GetRedactedAudioRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetRedactedAudioRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "GetRedactedAudioRequestBadRequestError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestBadRequestError",
            "safeName": "getRedactedAudioRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_bad_request_error",
            "safeName": "get_redacted_audio_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestBadRequestError",
            "safeName": "GetRedactedAudioRequestBadRequestError"
          }
        },
        "wireValue": "GetRedactedAudioRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "GetRedactedAudioRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "GetRedactedAudioRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestUnauthorizedError",
            "safeName": "getRedactedAudioRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_unauthorized_error",
            "safeName": "get_redacted_audio_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestUnauthorizedError",
            "safeName": "GetRedactedAudioRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetRedactedAudioRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "GetRedactedAudioRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestUnauthorizedError",
            "safeName": "getRedactedAudioRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_unauthorized_error",
            "safeName": "get_redacted_audio_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestUnauthorizedError",
            "safeName": "GetRedactedAudioRequestUnauthorizedError"
          }
        },
        "wireValue": "GetRedactedAudioRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "GetRedactedAudioRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "GetRedactedAudioRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestNotFoundError",
            "safeName": "getRedactedAudioRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_not_found_error",
            "safeName": "get_redacted_audio_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestNotFoundError",
            "safeName": "GetRedactedAudioRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetRedactedAudioRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "GetRedactedAudioRequestNotFoundError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestNotFoundError",
            "safeName": "getRedactedAudioRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_not_found_error",
            "safeName": "get_redacted_audio_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_NOT_FOUND_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestNotFoundError",
            "safeName": "GetRedactedAudioRequestNotFoundError"
          }
        },
        "wireValue": "GetRedactedAudioRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "GetRedactedAudioRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "GetRedactedAudioRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestTooManyRequestsError",
            "safeName": "getRedactedAudioRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_too_many_requests_error",
            "safeName": "get_redacted_audio_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestTooManyRequestsError",
            "safeName": "GetRedactedAudioRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetRedactedAudioRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "GetRedactedAudioRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestTooManyRequestsError",
            "safeName": "getRedactedAudioRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_too_many_requests_error",
            "safeName": "get_redacted_audio_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestTooManyRequestsError",
            "safeName": "GetRedactedAudioRequestTooManyRequestsError"
          }
        },
        "wireValue": "GetRedactedAudioRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "GetRedactedAudioRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "GetRedactedAudioRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestInternalServerError",
            "safeName": "getRedactedAudioRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_internal_server_error",
            "safeName": "get_redacted_audio_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestInternalServerError",
            "safeName": "GetRedactedAudioRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetRedactedAudioRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "GetRedactedAudioRequestInternalServerError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestInternalServerError",
            "safeName": "getRedactedAudioRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_internal_server_error",
            "safeName": "get_redacted_audio_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestInternalServerError",
            "safeName": "GetRedactedAudioRequestInternalServerError"
          }
        },
        "wireValue": "GetRedactedAudioRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "GetRedactedAudioRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "GetRedactedAudioRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestServiceUnavailableError",
            "safeName": "getRedactedAudioRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_service_unavailable_error",
            "safeName": "get_redacted_audio_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestServiceUnavailableError",
            "safeName": "GetRedactedAudioRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetRedactedAudioRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "GetRedactedAudioRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestServiceUnavailableError",
            "safeName": "getRedactedAudioRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_service_unavailable_error",
            "safeName": "get_redacted_audio_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestServiceUnavailableError",
            "safeName": "GetRedactedAudioRequestServiceUnavailableError"
          }
        },
        "wireValue": "GetRedactedAudioRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "GetRedactedAudioRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "GetRedactedAudioRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestGatewayTimeoutError",
            "safeName": "getRedactedAudioRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_gateway_timeout_error",
            "safeName": "get_redacted_audio_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestGatewayTimeoutError",
            "safeName": "GetRedactedAudioRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "GetRedactedAudioRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "GetRedactedAudioRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "getRedactedAudioRequestGatewayTimeoutError",
            "safeName": "getRedactedAudioRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "get_redacted_audio_request_gateway_timeout_error",
            "safeName": "get_redacted_audio_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_REDACTED_AUDIO_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "GET_REDACTED_AUDIO_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetRedactedAudioRequestGatewayTimeoutError",
            "safeName": "GetRedactedAudioRequestGatewayTimeoutError"
          }
        },
        "wireValue": "GetRedactedAudioRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "CreateRealtimeTokenRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestBadRequestError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestBadRequestError",
            "safeName": "createRealtimeTokenRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_bad_request_error",
            "safeName": "create_realtime_token_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestBadRequestError",
            "safeName": "CreateRealtimeTokenRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateRealtimeTokenRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestBadRequestError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestBadRequestError",
            "safeName": "createRealtimeTokenRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_bad_request_error",
            "safeName": "create_realtime_token_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestBadRequestError",
            "safeName": "CreateRealtimeTokenRequestBadRequestError"
          }
        },
        "wireValue": "CreateRealtimeTokenRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "CreateRealtimeTokenRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestUnauthorizedError",
            "safeName": "createRealtimeTokenRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_unauthorized_error",
            "safeName": "create_realtime_token_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestUnauthorizedError",
            "safeName": "CreateRealtimeTokenRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateRealtimeTokenRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestUnauthorizedError",
            "safeName": "createRealtimeTokenRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_unauthorized_error",
            "safeName": "create_realtime_token_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestUnauthorizedError",
            "safeName": "CreateRealtimeTokenRequestUnauthorizedError"
          }
        },
        "wireValue": "CreateRealtimeTokenRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "CreateRealtimeTokenRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestNotFoundError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestNotFoundError",
            "safeName": "createRealtimeTokenRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_not_found_error",
            "safeName": "create_realtime_token_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_NOT_FOUND_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestNotFoundError",
            "safeName": "CreateRealtimeTokenRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateRealtimeTokenRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestNotFoundError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestNotFoundError",
            "safeName": "createRealtimeTokenRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_not_found_error",
            "safeName": "create_realtime_token_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_NOT_FOUND_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestNotFoundError",
            "safeName": "CreateRealtimeTokenRequestNotFoundError"
          }
        },
        "wireValue": "CreateRealtimeTokenRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "CreateRealtimeTokenRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestTooManyRequestsError",
            "safeName": "createRealtimeTokenRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_too_many_requests_error",
            "safeName": "create_realtime_token_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestTooManyRequestsError",
            "safeName": "CreateRealtimeTokenRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateRealtimeTokenRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestTooManyRequestsError",
            "safeName": "createRealtimeTokenRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_too_many_requests_error",
            "safeName": "create_realtime_token_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestTooManyRequestsError",
            "safeName": "CreateRealtimeTokenRequestTooManyRequestsError"
          }
        },
        "wireValue": "CreateRealtimeTokenRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "CreateRealtimeTokenRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestInternalServerError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestInternalServerError",
            "safeName": "createRealtimeTokenRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_internal_server_error",
            "safeName": "create_realtime_token_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestInternalServerError",
            "safeName": "CreateRealtimeTokenRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateRealtimeTokenRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestInternalServerError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestInternalServerError",
            "safeName": "createRealtimeTokenRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_internal_server_error",
            "safeName": "create_realtime_token_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestInternalServerError",
            "safeName": "CreateRealtimeTokenRequestInternalServerError"
          }
        },
        "wireValue": "CreateRealtimeTokenRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "CreateRealtimeTokenRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestServiceUnavailableError",
            "safeName": "createRealtimeTokenRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_service_unavailable_error",
            "safeName": "create_realtime_token_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestServiceUnavailableError",
            "safeName": "CreateRealtimeTokenRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateRealtimeTokenRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestServiceUnavailableError",
            "safeName": "createRealtimeTokenRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_service_unavailable_error",
            "safeName": "create_realtime_token_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestServiceUnavailableError",
            "safeName": "CreateRealtimeTokenRequestServiceUnavailableError"
          }
        },
        "wireValue": "CreateRealtimeTokenRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "CreateRealtimeTokenRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestGatewayTimeoutError",
            "safeName": "createRealtimeTokenRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_gateway_timeout_error",
            "safeName": "create_realtime_token_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestGatewayTimeoutError",
            "safeName": "CreateRealtimeTokenRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "CreateRealtimeTokenRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "CreateRealtimeTokenRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "createRealtimeTokenRequestGatewayTimeoutError",
            "safeName": "createRealtimeTokenRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "create_realtime_token_request_gateway_timeout_error",
            "safeName": "create_realtime_token_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "CREATE_REALTIME_TOKEN_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateRealtimeTokenRequestGatewayTimeoutError",
            "safeName": "CreateRealtimeTokenRequestGatewayTimeoutError"
          }
        },
        "wireValue": "CreateRealtimeTokenRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "LemurSummaryRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "LemurSummaryRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestBadRequestError",
            "safeName": "lemurSummaryRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_bad_request_error",
            "safeName": "lemur_summary_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestBadRequestError",
            "safeName": "LemurSummaryRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurSummaryRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurSummaryRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestBadRequestError",
            "safeName": "lemurSummaryRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_bad_request_error",
            "safeName": "lemur_summary_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestBadRequestError",
            "safeName": "LemurSummaryRequestBadRequestError"
          }
        },
        "wireValue": "LemurSummaryRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "LemurSummaryRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "LemurSummaryRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestUnauthorizedError",
            "safeName": "lemurSummaryRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_unauthorized_error",
            "safeName": "lemur_summary_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestUnauthorizedError",
            "safeName": "LemurSummaryRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurSummaryRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurSummaryRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestUnauthorizedError",
            "safeName": "lemurSummaryRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_unauthorized_error",
            "safeName": "lemur_summary_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestUnauthorizedError",
            "safeName": "LemurSummaryRequestUnauthorizedError"
          }
        },
        "wireValue": "LemurSummaryRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "LemurSummaryRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "LemurSummaryRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestNotFoundError",
            "safeName": "lemurSummaryRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_not_found_error",
            "safeName": "lemur_summary_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestNotFoundError",
            "safeName": "LemurSummaryRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurSummaryRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurSummaryRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestNotFoundError",
            "safeName": "lemurSummaryRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_not_found_error",
            "safeName": "lemur_summary_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestNotFoundError",
            "safeName": "LemurSummaryRequestNotFoundError"
          }
        },
        "wireValue": "LemurSummaryRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "LemurSummaryRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "LemurSummaryRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestTooManyRequestsError",
            "safeName": "lemurSummaryRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_too_many_requests_error",
            "safeName": "lemur_summary_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestTooManyRequestsError",
            "safeName": "LemurSummaryRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurSummaryRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurSummaryRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestTooManyRequestsError",
            "safeName": "lemurSummaryRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_too_many_requests_error",
            "safeName": "lemur_summary_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestTooManyRequestsError",
            "safeName": "LemurSummaryRequestTooManyRequestsError"
          }
        },
        "wireValue": "LemurSummaryRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "LemurSummaryRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "LemurSummaryRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestInternalServerError",
            "safeName": "lemurSummaryRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_internal_server_error",
            "safeName": "lemur_summary_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestInternalServerError",
            "safeName": "LemurSummaryRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurSummaryRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurSummaryRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestInternalServerError",
            "safeName": "lemurSummaryRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_internal_server_error",
            "safeName": "lemur_summary_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestInternalServerError",
            "safeName": "LemurSummaryRequestInternalServerError"
          }
        },
        "wireValue": "LemurSummaryRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "LemurSummaryRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "LemurSummaryRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestServiceUnavailableError",
            "safeName": "lemurSummaryRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_service_unavailable_error",
            "safeName": "lemur_summary_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestServiceUnavailableError",
            "safeName": "LemurSummaryRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurSummaryRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurSummaryRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestServiceUnavailableError",
            "safeName": "lemurSummaryRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_service_unavailable_error",
            "safeName": "lemur_summary_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestServiceUnavailableError",
            "safeName": "LemurSummaryRequestServiceUnavailableError"
          }
        },
        "wireValue": "LemurSummaryRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "LemurSummaryRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "LemurSummaryRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestGatewayTimeoutError",
            "safeName": "lemurSummaryRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_gateway_timeout_error",
            "safeName": "lemur_summary_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestGatewayTimeoutError",
            "safeName": "LemurSummaryRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurSummaryRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurSummaryRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurSummaryRequestGatewayTimeoutError",
            "safeName": "lemurSummaryRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_summary_request_gateway_timeout_error",
            "safeName": "lemur_summary_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_SUMMARY_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_SUMMARY_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurSummaryRequestGatewayTimeoutError",
            "safeName": "LemurSummaryRequestGatewayTimeoutError"
          }
        },
        "wireValue": "LemurSummaryRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "LemurQuestionAnswerRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestBadRequestError",
            "safeName": "lemurQuestionAnswerRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_bad_request_error",
            "safeName": "lemur_question_answer_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestBadRequestError",
            "safeName": "LemurQuestionAnswerRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurQuestionAnswerRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestBadRequestError",
            "safeName": "lemurQuestionAnswerRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_bad_request_error",
            "safeName": "lemur_question_answer_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestBadRequestError",
            "safeName": "LemurQuestionAnswerRequestBadRequestError"
          }
        },
        "wireValue": "LemurQuestionAnswerRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "LemurQuestionAnswerRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestUnauthorizedError",
            "safeName": "lemurQuestionAnswerRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_unauthorized_error",
            "safeName": "lemur_question_answer_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestUnauthorizedError",
            "safeName": "LemurQuestionAnswerRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurQuestionAnswerRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestUnauthorizedError",
            "safeName": "lemurQuestionAnswerRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_unauthorized_error",
            "safeName": "lemur_question_answer_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestUnauthorizedError",
            "safeName": "LemurQuestionAnswerRequestUnauthorizedError"
          }
        },
        "wireValue": "LemurQuestionAnswerRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "LemurQuestionAnswerRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestNotFoundError",
            "safeName": "lemurQuestionAnswerRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_not_found_error",
            "safeName": "lemur_question_answer_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestNotFoundError",
            "safeName": "LemurQuestionAnswerRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurQuestionAnswerRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestNotFoundError",
            "safeName": "lemurQuestionAnswerRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_not_found_error",
            "safeName": "lemur_question_answer_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestNotFoundError",
            "safeName": "LemurQuestionAnswerRequestNotFoundError"
          }
        },
        "wireValue": "LemurQuestionAnswerRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "LemurQuestionAnswerRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestTooManyRequestsError",
            "safeName": "lemurQuestionAnswerRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_too_many_requests_error",
            "safeName": "lemur_question_answer_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestTooManyRequestsError",
            "safeName": "LemurQuestionAnswerRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurQuestionAnswerRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestTooManyRequestsError",
            "safeName": "lemurQuestionAnswerRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_too_many_requests_error",
            "safeName": "lemur_question_answer_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestTooManyRequestsError",
            "safeName": "LemurQuestionAnswerRequestTooManyRequestsError"
          }
        },
        "wireValue": "LemurQuestionAnswerRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "LemurQuestionAnswerRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestInternalServerError",
            "safeName": "lemurQuestionAnswerRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_internal_server_error",
            "safeName": "lemur_question_answer_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestInternalServerError",
            "safeName": "LemurQuestionAnswerRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurQuestionAnswerRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestInternalServerError",
            "safeName": "lemurQuestionAnswerRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_internal_server_error",
            "safeName": "lemur_question_answer_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestInternalServerError",
            "safeName": "LemurQuestionAnswerRequestInternalServerError"
          }
        },
        "wireValue": "LemurQuestionAnswerRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "LemurQuestionAnswerRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestServiceUnavailableError",
            "safeName": "lemurQuestionAnswerRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_service_unavailable_error",
            "safeName": "lemur_question_answer_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestServiceUnavailableError",
            "safeName": "LemurQuestionAnswerRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurQuestionAnswerRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestServiceUnavailableError",
            "safeName": "lemurQuestionAnswerRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_service_unavailable_error",
            "safeName": "lemur_question_answer_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestServiceUnavailableError",
            "safeName": "LemurQuestionAnswerRequestServiceUnavailableError"
          }
        },
        "wireValue": "LemurQuestionAnswerRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "LemurQuestionAnswerRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestGatewayTimeoutError",
            "safeName": "lemurQuestionAnswerRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_gateway_timeout_error",
            "safeName": "lemur_question_answer_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestGatewayTimeoutError",
            "safeName": "LemurQuestionAnswerRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurQuestionAnswerRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurQuestionAnswerRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurQuestionAnswerRequestGatewayTimeoutError",
            "safeName": "lemurQuestionAnswerRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_question_answer_request_gateway_timeout_error",
            "safeName": "lemur_question_answer_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurQuestionAnswerRequestGatewayTimeoutError",
            "safeName": "LemurQuestionAnswerRequestGatewayTimeoutError"
          }
        },
        "wireValue": "LemurQuestionAnswerRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "LemurActionItemsRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "LemurActionItemsRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestBadRequestError",
            "safeName": "lemurActionItemsRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_bad_request_error",
            "safeName": "lemur_action_items_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestBadRequestError",
            "safeName": "LemurActionItemsRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurActionItemsRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurActionItemsRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestBadRequestError",
            "safeName": "lemurActionItemsRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_bad_request_error",
            "safeName": "lemur_action_items_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestBadRequestError",
            "safeName": "LemurActionItemsRequestBadRequestError"
          }
        },
        "wireValue": "LemurActionItemsRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "LemurActionItemsRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "LemurActionItemsRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestUnauthorizedError",
            "safeName": "lemurActionItemsRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_unauthorized_error",
            "safeName": "lemur_action_items_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestUnauthorizedError",
            "safeName": "LemurActionItemsRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurActionItemsRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurActionItemsRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestUnauthorizedError",
            "safeName": "lemurActionItemsRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_unauthorized_error",
            "safeName": "lemur_action_items_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestUnauthorizedError",
            "safeName": "LemurActionItemsRequestUnauthorizedError"
          }
        },
        "wireValue": "LemurActionItemsRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "LemurActionItemsRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "LemurActionItemsRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestNotFoundError",
            "safeName": "lemurActionItemsRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_not_found_error",
            "safeName": "lemur_action_items_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestNotFoundError",
            "safeName": "LemurActionItemsRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurActionItemsRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurActionItemsRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestNotFoundError",
            "safeName": "lemurActionItemsRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_not_found_error",
            "safeName": "lemur_action_items_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestNotFoundError",
            "safeName": "LemurActionItemsRequestNotFoundError"
          }
        },
        "wireValue": "LemurActionItemsRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "LemurActionItemsRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "LemurActionItemsRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestTooManyRequestsError",
            "safeName": "lemurActionItemsRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_too_many_requests_error",
            "safeName": "lemur_action_items_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestTooManyRequestsError",
            "safeName": "LemurActionItemsRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurActionItemsRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurActionItemsRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestTooManyRequestsError",
            "safeName": "lemurActionItemsRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_too_many_requests_error",
            "safeName": "lemur_action_items_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestTooManyRequestsError",
            "safeName": "LemurActionItemsRequestTooManyRequestsError"
          }
        },
        "wireValue": "LemurActionItemsRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "LemurActionItemsRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "LemurActionItemsRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestInternalServerError",
            "safeName": "lemurActionItemsRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_internal_server_error",
            "safeName": "lemur_action_items_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestInternalServerError",
            "safeName": "LemurActionItemsRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurActionItemsRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurActionItemsRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestInternalServerError",
            "safeName": "lemurActionItemsRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_internal_server_error",
            "safeName": "lemur_action_items_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestInternalServerError",
            "safeName": "LemurActionItemsRequestInternalServerError"
          }
        },
        "wireValue": "LemurActionItemsRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "LemurActionItemsRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "LemurActionItemsRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestServiceUnavailableError",
            "safeName": "lemurActionItemsRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_service_unavailable_error",
            "safeName": "lemur_action_items_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestServiceUnavailableError",
            "safeName": "LemurActionItemsRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurActionItemsRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurActionItemsRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestServiceUnavailableError",
            "safeName": "lemurActionItemsRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_service_unavailable_error",
            "safeName": "lemur_action_items_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestServiceUnavailableError",
            "safeName": "LemurActionItemsRequestServiceUnavailableError"
          }
        },
        "wireValue": "LemurActionItemsRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "LemurActionItemsRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "LemurActionItemsRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestGatewayTimeoutError",
            "safeName": "lemurActionItemsRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_gateway_timeout_error",
            "safeName": "lemur_action_items_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestGatewayTimeoutError",
            "safeName": "LemurActionItemsRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurActionItemsRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurActionItemsRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurActionItemsRequestGatewayTimeoutError",
            "safeName": "lemurActionItemsRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_action_items_request_gateway_timeout_error",
            "safeName": "lemur_action_items_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_ACTION_ITEMS_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurActionItemsRequestGatewayTimeoutError",
            "safeName": "LemurActionItemsRequestGatewayTimeoutError"
          }
        },
        "wireValue": "LemurActionItemsRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "LemurTaskRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "LemurTaskRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestBadRequestError",
            "safeName": "lemurTaskRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_bad_request_error",
            "safeName": "lemur_task_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestBadRequestError",
            "safeName": "LemurTaskRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurTaskRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurTaskRequestBadRequestError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestBadRequestError",
            "safeName": "lemurTaskRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_bad_request_error",
            "safeName": "lemur_task_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestBadRequestError",
            "safeName": "LemurTaskRequestBadRequestError"
          }
        },
        "wireValue": "LemurTaskRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "LemurTaskRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "LemurTaskRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestUnauthorizedError",
            "safeName": "lemurTaskRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_unauthorized_error",
            "safeName": "lemur_task_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestUnauthorizedError",
            "safeName": "LemurTaskRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurTaskRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurTaskRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestUnauthorizedError",
            "safeName": "lemurTaskRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_unauthorized_error",
            "safeName": "lemur_task_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestUnauthorizedError",
            "safeName": "LemurTaskRequestUnauthorizedError"
          }
        },
        "wireValue": "LemurTaskRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "LemurTaskRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "LemurTaskRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestNotFoundError",
            "safeName": "lemurTaskRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_not_found_error",
            "safeName": "lemur_task_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestNotFoundError",
            "safeName": "LemurTaskRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurTaskRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurTaskRequestNotFoundError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestNotFoundError",
            "safeName": "lemurTaskRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_not_found_error",
            "safeName": "lemur_task_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestNotFoundError",
            "safeName": "LemurTaskRequestNotFoundError"
          }
        },
        "wireValue": "LemurTaskRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "LemurTaskRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "LemurTaskRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestTooManyRequestsError",
            "safeName": "lemurTaskRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_too_many_requests_error",
            "safeName": "lemur_task_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestTooManyRequestsError",
            "safeName": "LemurTaskRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurTaskRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurTaskRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestTooManyRequestsError",
            "safeName": "lemurTaskRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_too_many_requests_error",
            "safeName": "lemur_task_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestTooManyRequestsError",
            "safeName": "LemurTaskRequestTooManyRequestsError"
          }
        },
        "wireValue": "LemurTaskRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "LemurTaskRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "LemurTaskRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestInternalServerError",
            "safeName": "lemurTaskRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_internal_server_error",
            "safeName": "lemur_task_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestInternalServerError",
            "safeName": "LemurTaskRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurTaskRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurTaskRequestInternalServerError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestInternalServerError",
            "safeName": "lemurTaskRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_internal_server_error",
            "safeName": "lemur_task_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestInternalServerError",
            "safeName": "LemurTaskRequestInternalServerError"
          }
        },
        "wireValue": "LemurTaskRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "LemurTaskRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "LemurTaskRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestServiceUnavailableError",
            "safeName": "lemurTaskRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_service_unavailable_error",
            "safeName": "lemur_task_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestServiceUnavailableError",
            "safeName": "LemurTaskRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurTaskRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurTaskRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestServiceUnavailableError",
            "safeName": "lemurTaskRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_service_unavailable_error",
            "safeName": "lemur_task_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestServiceUnavailableError",
            "safeName": "LemurTaskRequestServiceUnavailableError"
          }
        },
        "wireValue": "LemurTaskRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "LemurTaskRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "LemurTaskRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestGatewayTimeoutError",
            "safeName": "lemurTaskRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_gateway_timeout_error",
            "safeName": "lemur_task_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestGatewayTimeoutError",
            "safeName": "LemurTaskRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "LemurTaskRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "LemurTaskRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "lemurTaskRequestGatewayTimeoutError",
            "safeName": "lemurTaskRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "lemur_task_request_gateway_timeout_error",
            "safeName": "lemur_task_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR_TASK_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "LEMUR_TASK_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "LemurTaskRequestGatewayTimeoutError",
            "safeName": "LemurTaskRequestGatewayTimeoutError"
          }
        },
        "wireValue": "LemurTaskRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    },
    "PurgeLemurRequestDataRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestBadRequestError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestBadRequestError",
            "safeName": "purgeLemurRequestDataRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_bad_request_error",
            "safeName": "purge_lemur_request_data_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestBadRequestError",
            "safeName": "PurgeLemurRequestDataRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PurgeLemurRequestDataRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestBadRequestError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestBadRequestError",
            "safeName": "purgeLemurRequestDataRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_bad_request_error",
            "safeName": "purge_lemur_request_data_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestBadRequestError",
            "safeName": "PurgeLemurRequestDataRequestBadRequestError"
          }
        },
        "wireValue": "PurgeLemurRequestDataRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "PurgeLemurRequestDataRequestUnauthorizedError": {
      "name": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestUnauthorizedError",
            "safeName": "purgeLemurRequestDataRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_unauthorized_error",
            "safeName": "purge_lemur_request_data_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestUnauthorizedError",
            "safeName": "PurgeLemurRequestDataRequestUnauthorizedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PurgeLemurRequestDataRequestUnauthorizedError"
      },
      "displayName": "UnauthorizedError",
      "discriminantValue": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestUnauthorizedError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestUnauthorizedError",
            "safeName": "purgeLemurRequestDataRequestUnauthorizedError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_unauthorized_error",
            "safeName": "purge_lemur_request_data_request_unauthorized_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_UNAUTHORIZED_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_UNAUTHORIZED_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestUnauthorizedError",
            "safeName": "PurgeLemurRequestDataRequestUnauthorizedError"
          }
        },
        "wireValue": "PurgeLemurRequestDataRequestUnauthorizedError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 401,
      "docs": "Unauthorized",
      "examples": []
    },
    "PurgeLemurRequestDataRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestNotFoundError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestNotFoundError",
            "safeName": "purgeLemurRequestDataRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_not_found_error",
            "safeName": "purge_lemur_request_data_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_NOT_FOUND_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestNotFoundError",
            "safeName": "PurgeLemurRequestDataRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PurgeLemurRequestDataRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestNotFoundError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestNotFoundError",
            "safeName": "purgeLemurRequestDataRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_not_found_error",
            "safeName": "purge_lemur_request_data_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_NOT_FOUND_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestNotFoundError",
            "safeName": "PurgeLemurRequestDataRequestNotFoundError"
          }
        },
        "wireValue": "PurgeLemurRequestDataRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not found",
      "examples": []
    },
    "PurgeLemurRequestDataRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestTooManyRequestsError",
            "safeName": "purgeLemurRequestDataRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_too_many_requests_error",
            "safeName": "purge_lemur_request_data_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestTooManyRequestsError",
            "safeName": "PurgeLemurRequestDataRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PurgeLemurRequestDataRequestTooManyRequestsError"
      },
      "displayName": "TooManyRequestsError",
      "discriminantValue": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestTooManyRequestsError",
            "safeName": "purgeLemurRequestDataRequestTooManyRequestsError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_too_many_requests_error",
            "safeName": "purge_lemur_request_data_request_too_many_requests_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_TOO_MANY_REQUESTS_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_TOO_MANY_REQUESTS_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestTooManyRequestsError",
            "safeName": "PurgeLemurRequestDataRequestTooManyRequestsError"
          }
        },
        "wireValue": "PurgeLemurRequestDataRequestTooManyRequestsError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 429,
      "docs": "Too Many Requests",
      "examples": []
    },
    "PurgeLemurRequestDataRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestInternalServerError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestInternalServerError",
            "safeName": "purgeLemurRequestDataRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_internal_server_error",
            "safeName": "purge_lemur_request_data_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestInternalServerError",
            "safeName": "PurgeLemurRequestDataRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PurgeLemurRequestDataRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestInternalServerError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestInternalServerError",
            "safeName": "purgeLemurRequestDataRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_internal_server_error",
            "safeName": "purge_lemur_request_data_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestInternalServerError",
            "safeName": "PurgeLemurRequestDataRequestInternalServerError"
          }
        },
        "wireValue": "PurgeLemurRequestDataRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "An error occurred while processing the request",
      "examples": []
    },
    "PurgeLemurRequestDataRequestServiceUnavailableError": {
      "name": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestServiceUnavailableError",
            "safeName": "purgeLemurRequestDataRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_service_unavailable_error",
            "safeName": "purge_lemur_request_data_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestServiceUnavailableError",
            "safeName": "PurgeLemurRequestDataRequestServiceUnavailableError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PurgeLemurRequestDataRequestServiceUnavailableError"
      },
      "displayName": "ServiceUnavailableError",
      "discriminantValue": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestServiceUnavailableError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestServiceUnavailableError",
            "safeName": "purgeLemurRequestDataRequestServiceUnavailableError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_service_unavailable_error",
            "safeName": "purge_lemur_request_data_request_service_unavailable_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_SERVICE_UNAVAILABLE_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_SERVICE_UNAVAILABLE_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestServiceUnavailableError",
            "safeName": "PurgeLemurRequestDataRequestServiceUnavailableError"
          }
        },
        "wireValue": "PurgeLemurRequestDataRequestServiceUnavailableError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 503,
      "docs": "Service Unavailable",
      "examples": []
    },
    "PurgeLemurRequestDataRequestGatewayTimeoutError": {
      "name": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestGatewayTimeoutError",
            "safeName": "purgeLemurRequestDataRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_gateway_timeout_error",
            "safeName": "purge_lemur_request_data_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestGatewayTimeoutError",
            "safeName": "PurgeLemurRequestDataRequestGatewayTimeoutError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PurgeLemurRequestDataRequestGatewayTimeoutError"
      },
      "displayName": "GatewayTimeoutError",
      "discriminantValue": {
        "name": {
          "originalName": "PurgeLemurRequestDataRequestGatewayTimeoutError",
          "camelCase": {
            "unsafeName": "purgeLemurRequestDataRequestGatewayTimeoutError",
            "safeName": "purgeLemurRequestDataRequestGatewayTimeoutError"
          },
          "snakeCase": {
            "unsafeName": "purge_lemur_request_data_request_gateway_timeout_error",
            "safeName": "purge_lemur_request_data_request_gateway_timeout_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_GATEWAY_TIMEOUT_ERROR",
            "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_GATEWAY_TIMEOUT_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PurgeLemurRequestDataRequestGatewayTimeoutError",
            "safeName": "PurgeLemurRequestDataRequestGatewayTimeoutError"
          }
        },
        "wireValue": "PurgeLemurRequestDataRequestGatewayTimeoutError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 504,
      "docs": "Gateway Timeout",
      "examples": []
    }
  },
  "services": {
    "service_files": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "files",
              "camelCase": {
                "unsafeName": "files",
                "safeName": "files"
              },
              "snakeCase": {
                "unsafeName": "files",
                "safeName": "files"
              },
              "screamingSnakeCase": {
                "unsafeName": "FILES",
                "safeName": "FILES"
              },
              "pascalCase": {
                "unsafeName": "Files",
                "safeName": "Files"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "files",
            "camelCase": {
              "unsafeName": "files",
              "safeName": "files"
            },
            "snakeCase": {
              "unsafeName": "files",
              "safeName": "files"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILES",
              "safeName": "FILES"
            },
            "pascalCase": {
              "unsafeName": "Files",
              "safeName": "Files"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Upload an audio or video file which can be transcribed.",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/upload",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "UploadFileRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "uploadFileRequestBadRequestError",
                    "safeName": "uploadFileRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "upload_file_request_bad_request_error",
                    "safeName": "upload_file_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD_FILE_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "UPLOAD_FILE_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UploadFileRequestBadRequestError",
                    "safeName": "UploadFileRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "UploadFileRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "uploadFileRequestUnauthorizedError",
                    "safeName": "uploadFileRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "upload_file_request_unauthorized_error",
                    "safeName": "upload_file_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD_FILE_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "UPLOAD_FILE_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UploadFileRequestUnauthorizedError",
                    "safeName": "UploadFileRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "UploadFileRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "uploadFileRequestNotFoundError",
                    "safeName": "uploadFileRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "upload_file_request_not_found_error",
                    "safeName": "upload_file_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD_FILE_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "UPLOAD_FILE_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UploadFileRequestNotFoundError",
                    "safeName": "UploadFileRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "UploadFileRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "uploadFileRequestTooManyRequestsError",
                    "safeName": "uploadFileRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "upload_file_request_too_many_requests_error",
                    "safeName": "upload_file_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD_FILE_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "UPLOAD_FILE_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UploadFileRequestTooManyRequestsError",
                    "safeName": "UploadFileRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "UploadFileRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "uploadFileRequestInternalServerError",
                    "safeName": "uploadFileRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "upload_file_request_internal_server_error",
                    "safeName": "upload_file_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD_FILE_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "UPLOAD_FILE_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UploadFileRequestInternalServerError",
                    "safeName": "UploadFileRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "UploadFileRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "uploadFileRequestServiceUnavailableError",
                    "safeName": "uploadFileRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "upload_file_request_service_unavailable_error",
                    "safeName": "upload_file_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD_FILE_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "UPLOAD_FILE_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UploadFileRequestServiceUnavailableError",
                    "safeName": "UploadFileRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "UploadFileRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "uploadFileRequestGatewayTimeoutError",
                    "safeName": "uploadFileRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "upload_file_request_gateway_timeout_error",
                    "safeName": "upload_file_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD_FILE_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "UPLOAD_FILE_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "UploadFileRequestGatewayTimeoutError",
                    "safeName": "UploadFileRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "UploadFileRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/upload",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_files.upload",
          "name": {
            "originalName": "upload",
            "camelCase": {
              "unsafeName": "upload",
              "safeName": "upload"
            },
            "snakeCase": {
              "unsafeName": "upload",
              "safeName": "upload"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPLOAD",
              "safeName": "UPLOAD"
            },
            "pascalCase": {
              "unsafeName": "Upload",
              "safeName": "Upload"
            }
          },
          "requestBody": {
            "contentType": "application/octet-stream",
            "isOptional": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "filesUploadExample": "foo"
              }
            },
            "type": "bytes"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "UploadedFile",
                    "camelCase": {
                      "unsafeName": "uploadedFile",
                      "safeName": "uploadedFile"
                    },
                    "snakeCase": {
                      "unsafeName": "uploaded_file",
                      "safeName": "uploaded_file"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "UPLOADED_FILE",
                      "safeName": "UPLOADED_FILE"
                    },
                    "pascalCase": {
                      "unsafeName": "UploadedFile",
                      "safeName": "UploadedFile"
                    }
                  },
                  "typeId": "UploadedFile",
                  "inline": false,
                  "type": "named"
                },
                "docs": "File uploaded successfully",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "filesUploadExample": {
                      "upload_url": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Upload your audio or video file directly to the AssemblyAI API if it isn't accessible via a URL already.",
          "v2Examples": {
            "autogeneratedExamples": {
              "uploadExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/upload"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "upload_url": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_transcript": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "transcript",
            "camelCase": {
              "unsafeName": "transcript",
              "safeName": "transcript"
            },
            "snakeCase": {
              "unsafeName": "transcript",
              "safeName": "transcript"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT",
              "safeName": "TRANSCRIPT"
            },
            "pascalCase": {
              "unsafeName": "Transcript",
              "safeName": "Transcript"
            }
          }
        }
      },
      "displayName": "transcript",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List transcripts",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "limit",
                  "camelCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "snakeCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIMIT",
                    "safeName": "LIMIT"
                  },
                  "pascalCase": {
                    "unsafeName": "Limit",
                    "safeName": "Limit"
                  }
                },
                "wireValue": "limit"
              },
              "docs": "Maximum amount of transcripts to retrieve",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "TranscriptListParameters/properties/limit",
                      "camelCase": {
                        "unsafeName": "transcriptListParametersPropertiesLimit",
                        "safeName": "transcriptListParametersPropertiesLimit"
                      },
                      "snakeCase": {
                        "unsafeName": "transcript_list_parameters_properties_limit",
                        "safeName": "transcript_list_parameters_properties_limit"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_LIMIT",
                        "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_LIMIT"
                      },
                      "pascalCase": {
                        "unsafeName": "TranscriptListParametersPropertiesLimit",
                        "safeName": "TranscriptListParametersPropertiesLimit"
                      }
                    },
                    "typeId": "TranscriptListParameters/properties/limit",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 10
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "status",
                  "camelCase": {
                    "unsafeName": "status",
                    "safeName": "status"
                  },
                  "snakeCase": {
                    "unsafeName": "status",
                    "safeName": "status"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "STATUS",
                    "safeName": "STATUS"
                  },
                  "pascalCase": {
                    "unsafeName": "Status",
                    "safeName": "Status"
                  }
                },
                "wireValue": "status"
              },
              "docs": "Filter by transcript status",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "TranscriptListParameters/properties/status",
                      "camelCase": {
                        "unsafeName": "transcriptListParametersPropertiesStatus",
                        "safeName": "transcriptListParametersPropertiesStatus"
                      },
                      "snakeCase": {
                        "unsafeName": "transcript_list_parameters_properties_status",
                        "safeName": "transcript_list_parameters_properties_status"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_STATUS",
                        "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_STATUS"
                      },
                      "pascalCase": {
                        "unsafeName": "TranscriptListParametersPropertiesStatus",
                        "safeName": "TranscriptListParametersPropertiesStatus"
                      }
                    },
                    "typeId": "TranscriptListParameters/properties/status",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "queued"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "created_on",
                  "camelCase": {
                    "unsafeName": "createdOn",
                    "safeName": "createdOn"
                  },
                  "snakeCase": {
                    "unsafeName": "created_on",
                    "safeName": "created_on"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATED_ON",
                    "safeName": "CREATED_ON"
                  },
                  "pascalCase": {
                    "unsafeName": "CreatedOn",
                    "safeName": "CreatedOn"
                  }
                },
                "wireValue": "created_on"
              },
              "docs": "Only get transcripts created on this date",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "TranscriptListParameters/properties/created_on",
                      "camelCase": {
                        "unsafeName": "transcriptListParametersPropertiesCreatedOn",
                        "safeName": "transcriptListParametersPropertiesCreatedOn"
                      },
                      "snakeCase": {
                        "unsafeName": "transcript_list_parameters_properties_created_on",
                        "safeName": "transcript_list_parameters_properties_created_on"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_CREATED_ON",
                        "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_CREATED_ON"
                      },
                      "pascalCase": {
                        "unsafeName": "TranscriptListParametersPropertiesCreatedOn",
                        "safeName": "TranscriptListParametersPropertiesCreatedOn"
                      }
                    },
                    "typeId": "TranscriptListParameters/properties/created_on",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_on_example": "created_on"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "before_id",
                  "camelCase": {
                    "unsafeName": "beforeId",
                    "safeName": "beforeId"
                  },
                  "snakeCase": {
                    "unsafeName": "before_id",
                    "safeName": "before_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BEFORE_ID",
                    "safeName": "BEFORE_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "BeforeId",
                    "safeName": "BeforeId"
                  }
                },
                "wireValue": "before_id"
              },
              "docs": "Get transcripts that were created before this transcript ID",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "TranscriptListParameters/properties/before_id",
                      "camelCase": {
                        "unsafeName": "transcriptListParametersPropertiesBeforeId",
                        "safeName": "transcriptListParametersPropertiesBeforeId"
                      },
                      "snakeCase": {
                        "unsafeName": "transcript_list_parameters_properties_before_id",
                        "safeName": "transcript_list_parameters_properties_before_id"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_BEFORE_ID",
                        "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_BEFORE_ID"
                      },
                      "pascalCase": {
                        "unsafeName": "TranscriptListParametersPropertiesBeforeId",
                        "safeName": "TranscriptListParametersPropertiesBeforeId"
                      }
                    },
                    "typeId": "TranscriptListParameters/properties/before_id",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "before_id_example": "before_id"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "after_id",
                  "camelCase": {
                    "unsafeName": "afterId",
                    "safeName": "afterId"
                  },
                  "snakeCase": {
                    "unsafeName": "after_id",
                    "safeName": "after_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "AFTER_ID",
                    "safeName": "AFTER_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "AfterId",
                    "safeName": "AfterId"
                  }
                },
                "wireValue": "after_id"
              },
              "docs": "Get transcripts that were created after this transcript ID",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "TranscriptListParameters/properties/after_id",
                      "camelCase": {
                        "unsafeName": "transcriptListParametersPropertiesAfterId",
                        "safeName": "transcriptListParametersPropertiesAfterId"
                      },
                      "snakeCase": {
                        "unsafeName": "transcript_list_parameters_properties_after_id",
                        "safeName": "transcript_list_parameters_properties_after_id"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_AFTER_ID",
                        "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_AFTER_ID"
                      },
                      "pascalCase": {
                        "unsafeName": "TranscriptListParametersPropertiesAfterId",
                        "safeName": "TranscriptListParametersPropertiesAfterId"
                      }
                    },
                    "typeId": "TranscriptListParameters/properties/after_id",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "after_id_example": "after_id"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "throttled_only",
                  "camelCase": {
                    "unsafeName": "throttledOnly",
                    "safeName": "throttledOnly"
                  },
                  "snakeCase": {
                    "unsafeName": "throttled_only",
                    "safeName": "throttled_only"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "THROTTLED_ONLY",
                    "safeName": "THROTTLED_ONLY"
                  },
                  "pascalCase": {
                    "unsafeName": "ThrottledOnly",
                    "safeName": "ThrottledOnly"
                  }
                },
                "wireValue": "throttled_only"
              },
              "docs": "Only get throttled transcripts, overrides the status filter",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "TranscriptListParameters/properties/throttled_only",
                      "camelCase": {
                        "unsafeName": "transcriptListParametersPropertiesThrottledOnly",
                        "safeName": "transcriptListParametersPropertiesThrottledOnly"
                      },
                      "snakeCase": {
                        "unsafeName": "transcript_list_parameters_properties_throttled_only",
                        "safeName": "transcript_list_parameters_properties_throttled_only"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_THROTTLED_ONLY",
                        "safeName": "TRANSCRIPT_LIST_PARAMETERS_PROPERTIES_THROTTLED_ONLY"
                      },
                      "pascalCase": {
                        "unsafeName": "TranscriptListParametersPropertiesThrottledOnly",
                        "safeName": "TranscriptListParametersPropertiesThrottledOnly"
                      }
                    },
                    "typeId": "TranscriptListParameters/properties/throttled_only",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "throttled_only_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "ListTranscriptsRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "listTranscriptsRequestBadRequestError",
                    "safeName": "listTranscriptsRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_transcripts_request_bad_request_error",
                    "safeName": "list_transcripts_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TRANSCRIPTS_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "LIST_TRANSCRIPTS_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTranscriptsRequestBadRequestError",
                    "safeName": "ListTranscriptsRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListTranscriptsRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "ListTranscriptsRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "listTranscriptsRequestUnauthorizedError",
                    "safeName": "listTranscriptsRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_transcripts_request_unauthorized_error",
                    "safeName": "list_transcripts_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TRANSCRIPTS_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "LIST_TRANSCRIPTS_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTranscriptsRequestUnauthorizedError",
                    "safeName": "ListTranscriptsRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListTranscriptsRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "ListTranscriptsRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "listTranscriptsRequestNotFoundError",
                    "safeName": "listTranscriptsRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_transcripts_request_not_found_error",
                    "safeName": "list_transcripts_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TRANSCRIPTS_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "LIST_TRANSCRIPTS_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTranscriptsRequestNotFoundError",
                    "safeName": "ListTranscriptsRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListTranscriptsRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "ListTranscriptsRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "listTranscriptsRequestTooManyRequestsError",
                    "safeName": "listTranscriptsRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_transcripts_request_too_many_requests_error",
                    "safeName": "list_transcripts_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TRANSCRIPTS_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "LIST_TRANSCRIPTS_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTranscriptsRequestTooManyRequestsError",
                    "safeName": "ListTranscriptsRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListTranscriptsRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "ListTranscriptsRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "listTranscriptsRequestInternalServerError",
                    "safeName": "listTranscriptsRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_transcripts_request_internal_server_error",
                    "safeName": "list_transcripts_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TRANSCRIPTS_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "LIST_TRANSCRIPTS_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTranscriptsRequestInternalServerError",
                    "safeName": "ListTranscriptsRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListTranscriptsRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "ListTranscriptsRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "listTranscriptsRequestServiceUnavailableError",
                    "safeName": "listTranscriptsRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_transcripts_request_service_unavailable_error",
                    "safeName": "list_transcripts_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TRANSCRIPTS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "LIST_TRANSCRIPTS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTranscriptsRequestServiceUnavailableError",
                    "safeName": "ListTranscriptsRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListTranscriptsRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "ListTranscriptsRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "listTranscriptsRequestGatewayTimeoutError",
                    "safeName": "listTranscriptsRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_transcripts_request_gateway_timeout_error",
                    "safeName": "list_transcripts_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_TRANSCRIPTS_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "LIST_TRANSCRIPTS_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListTranscriptsRequestGatewayTimeoutError",
                    "safeName": "ListTranscriptsRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListTranscriptsRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.list",
          "name": {
            "originalName": "list",
            "camelCase": {
              "unsafeName": "list",
              "safeName": "list"
            },
            "snakeCase": {
              "unsafeName": "list",
              "safeName": "list"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST",
              "safeName": "LIST"
            },
            "pascalCase": {
              "unsafeName": "List",
              "safeName": "List"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "TranscriptList",
                    "camelCase": {
                      "unsafeName": "transcriptList",
                      "safeName": "transcriptList"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_list",
                      "safeName": "transcript_list"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_LIST",
                      "safeName": "TRANSCRIPT_LIST"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptList",
                      "safeName": "TranscriptList"
                    }
                  },
                  "typeId": "TranscriptList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "A list of transcripts filtered by `limit` and `status`",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptListExample": {
                      "page_details": {
                        "limit": 42,
                        "result_count": 42,
                        "current_url": "foo",
                        "prev_url": "foo",
                        "next_url": "foo"
                      },
                      "transcripts": [
                        {
                          "id": "foo",
                          "resource_url": "foo",
                          "status": "queued",
                          "created": "foo",
                          "completed": "foo",
                          "audio_url": "foo"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieve a list of transcripts you have created.",
          "v2Examples": {
            "autogeneratedExamples": {
              "listExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/transcript"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "page_details": {
                        "limit": 42,
                        "result_count": 42,
                        "current_url": "foo",
                        "prev_url": "foo",
                        "next_url": "foo"
                      },
                      "transcripts": [
                        {
                          "id": "foo",
                          "resource_url": "foo",
                          "status": "queued",
                          "created": "foo",
                          "completed": "foo",
                          "audio_url": "foo"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create a transcript from an audio file",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "CreateTranscriptRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "createTranscriptRequestBadRequestError",
                    "safeName": "createTranscriptRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_transcript_request_bad_request_error",
                    "safeName": "create_transcript_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "CREATE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTranscriptRequestBadRequestError",
                    "safeName": "CreateTranscriptRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateTranscriptRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateTranscriptRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "createTranscriptRequestUnauthorizedError",
                    "safeName": "createTranscriptRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_transcript_request_unauthorized_error",
                    "safeName": "create_transcript_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "CREATE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTranscriptRequestUnauthorizedError",
                    "safeName": "CreateTranscriptRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateTranscriptRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateTranscriptRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "createTranscriptRequestNotFoundError",
                    "safeName": "createTranscriptRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_transcript_request_not_found_error",
                    "safeName": "create_transcript_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "CREATE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTranscriptRequestNotFoundError",
                    "safeName": "CreateTranscriptRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateTranscriptRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateTranscriptRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "createTranscriptRequestTooManyRequestsError",
                    "safeName": "createTranscriptRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_transcript_request_too_many_requests_error",
                    "safeName": "create_transcript_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "CREATE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTranscriptRequestTooManyRequestsError",
                    "safeName": "CreateTranscriptRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateTranscriptRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateTranscriptRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "createTranscriptRequestInternalServerError",
                    "safeName": "createTranscriptRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_transcript_request_internal_server_error",
                    "safeName": "create_transcript_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "CREATE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTranscriptRequestInternalServerError",
                    "safeName": "CreateTranscriptRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateTranscriptRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateTranscriptRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "createTranscriptRequestServiceUnavailableError",
                    "safeName": "createTranscriptRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_transcript_request_service_unavailable_error",
                    "safeName": "create_transcript_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "CREATE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTranscriptRequestServiceUnavailableError",
                    "safeName": "CreateTranscriptRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateTranscriptRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateTranscriptRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "createTranscriptRequestGatewayTimeoutError",
                    "safeName": "createTranscriptRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_transcript_request_gateway_timeout_error",
                    "safeName": "create_transcript_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "CREATE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateTranscriptRequestGatewayTimeoutError",
                    "safeName": "CreateTranscriptRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateTranscriptRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.create",
          "name": {
            "originalName": "create",
            "camelCase": {
              "unsafeName": "create",
              "safeName": "create"
            },
            "snakeCase": {
              "unsafeName": "create",
              "safeName": "create"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE",
              "safeName": "CREATE"
            },
            "pascalCase": {
              "unsafeName": "Create",
              "safeName": "Create"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "docs": "Parameters to create a transcript.",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "CreateTranscriptParameters",
                "camelCase": {
                  "unsafeName": "createTranscriptParameters",
                  "safeName": "createTranscriptParameters"
                },
                "snakeCase": {
                  "unsafeName": "create_transcript_parameters",
                  "safeName": "create_transcript_parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATE_TRANSCRIPT_PARAMETERS",
                  "safeName": "CREATE_TRANSCRIPT_PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "CreateTranscriptParameters",
                  "safeName": "CreateTranscriptParameters"
                }
              },
              "typeId": "CreateTranscriptParameters",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "transcriptCreateExample": {
                  "audio_url": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Transcript",
                    "camelCase": {
                      "unsafeName": "transcript",
                      "safeName": "transcript"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript",
                      "safeName": "transcript"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT",
                      "safeName": "TRANSCRIPT"
                    },
                    "pascalCase": {
                      "unsafeName": "Transcript",
                      "safeName": "Transcript"
                    }
                  },
                  "typeId": "Transcript",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Transcript created and queued for processing.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptCreateExample": {
                      "id": "foo",
                      "language_model": "foo",
                      "acoustic_model": "foo",
                      "status": "queued",
                      "language_code": "en_us",
                      "audio_url": "foo",
                      "text": "foo",
                      "words": [
                        {
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "speaker": "foo"
                        }
                      ],
                      "utterances": [
                        {
                          "channel": "foo",
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ],
                      "confidence": 42,
                      "audio_duration": 42,
                      "punctuate": true,
                      "format_text": true,
                      "dual_channel": true,
                      "webhook_url": "foo",
                      "webhook_status_code": 42,
                      "webhook_auth": true,
                      "webhook_auth_header_name": "foo",
                      "speed_boost": true,
                      "auto_highlights": true,
                      "auto_highlights_result": {
                        "results": [
                          {
                            "count": 42,
                            "rank": 42,
                            "text": "foo",
                            "timestamps": [
                              {
                                "start": 42,
                                "end": 42
                              }
                            ]
                          }
                        ]
                      },
                      "audio_start_from": 42,
                      "audio_end_at": 42,
                      "word_boost": [
                        "foo"
                      ],
                      "boost_param": "foo",
                      "filter_profanity": true,
                      "redact_pii": true,
                      "redact_pii_audio": true,
                      "redact_pii_audio_quality": "foo",
                      "redact_pii_policies": [
                        "medical_process"
                      ],
                      "redact_pii_sub": "entity_type",
                      "speaker_labels": true,
                      "speakers_expected": 42,
                      "content_safety": true,
                      "content_safety_labels": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "label": "foo",
                                "confidence": 42,
                                "severity": 42
                              }
                            ],
                            "sentences_idx_start": 42,
                            "sentences_idx_end": 42,
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            },
                            "summary": {},
                            "severity_score_summary": {}
                          }
                        ]
                      },
                      "iab_categories": true,
                      "iab_categories_result": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "relevance": 42,
                                "label": "foo"
                              }
                            ],
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            }
                          }
                        ],
                        "summary": {}
                      },
                      "language_detection": true,
                      "custom_spelling": [
                        {
                          "from": [
                            "foo"
                          ],
                          "to": "foo"
                        }
                      ],
                      "auto_chapters": true,
                      "chapters": [
                        {
                          "gist": "foo",
                          "headline": "foo",
                          "summary": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "summarization": true,
                      "summary_type": "foo",
                      "summary_model": "foo",
                      "summary": "foo",
                      "custom_topics": true,
                      "topics": [
                        "foo"
                      ],
                      "disfluencies": true,
                      "sentiment_analysis": true,
                      "sentiment_analysis_results": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "sentiment": "POSITIVE",
                          "confidence": 42,
                          "speaker": "foo"
                        }
                      ],
                      "entity_detection": true,
                      "entities": [
                        {
                          "entity_type": "banking_information",
                          "text": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "speech_threshold": 42,
                      "throttled": true,
                      "error": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a transcript from an audio or video file that is accessible via a URL.",
          "v2Examples": {
            "autogeneratedExamples": {
              "transcriptCreateExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/transcript"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "audio_url": "foo"
                  }
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "value": {
                      "id": "foo",
                      "language_model": "foo",
                      "acoustic_model": "foo",
                      "status": "queued",
                      "language_code": "en_us",
                      "audio_url": "foo",
                      "text": "foo",
                      "words": [
                        {
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "speaker": "foo"
                        }
                      ],
                      "utterances": [
                        {
                          "channel": "foo",
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ],
                      "confidence": 42,
                      "audio_duration": 42,
                      "punctuate": true,
                      "format_text": true,
                      "dual_channel": true,
                      "webhook_url": "foo",
                      "webhook_status_code": 42,
                      "webhook_auth": true,
                      "webhook_auth_header_name": "foo",
                      "speed_boost": true,
                      "auto_highlights": true,
                      "auto_highlights_result": {
                        "results": [
                          {
                            "count": 42,
                            "rank": 42,
                            "text": "foo",
                            "timestamps": [
                              {
                                "start": 42,
                                "end": 42
                              }
                            ]
                          }
                        ]
                      },
                      "audio_start_from": 42,
                      "audio_end_at": 42,
                      "word_boost": [
                        "foo"
                      ],
                      "boost_param": "foo",
                      "filter_profanity": true,
                      "redact_pii": true,
                      "redact_pii_audio": true,
                      "redact_pii_audio_quality": "foo",
                      "redact_pii_policies": [
                        "medical_process"
                      ],
                      "redact_pii_sub": "entity_type",
                      "speaker_labels": true,
                      "speakers_expected": 42,
                      "content_safety": true,
                      "content_safety_labels": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "label": "foo",
                                "confidence": 42,
                                "severity": 42
                              }
                            ],
                            "sentences_idx_start": 42,
                            "sentences_idx_end": 42,
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            },
                            "summary": {},
                            "severity_score_summary": {}
                          }
                        ]
                      },
                      "iab_categories": true,
                      "iab_categories_result": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "relevance": 42,
                                "label": "foo"
                              }
                            ],
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            }
                          }
                        ],
                        "summary": {}
                      },
                      "language_detection": true,
                      "custom_spelling": [
                        {
                          "from": [
                            "foo"
                          ],
                          "to": "foo"
                        }
                      ],
                      "auto_chapters": true,
                      "chapters": [
                        {
                          "gist": "foo",
                          "headline": "foo",
                          "summary": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "summarization": true,
                      "summary_type": "foo",
                      "summary_model": "foo",
                      "summary": "foo",
                      "custom_topics": true,
                      "topics": [
                        "foo"
                      ],
                      "disfluencies": true,
                      "sentiment_analysis": true,
                      "sentiment_analysis_results": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "sentiment": "POSITIVE",
                          "confidence": 42,
                          "speaker": "foo"
                        }
                      ],
                      "entity_detection": true,
                      "entities": [
                        {
                          "entity_type": "banking_information",
                          "text": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "speech_threshold": 42,
                      "throttled": true,
                      "error": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get the transcript",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "getTranscriptRequestBadRequestError",
                    "safeName": "getTranscriptRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_request_bad_request_error",
                    "safeName": "get_transcript_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "GET_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptRequestBadRequestError",
                    "safeName": "GetTranscriptRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "getTranscriptRequestUnauthorizedError",
                    "safeName": "getTranscriptRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_request_unauthorized_error",
                    "safeName": "get_transcript_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "GET_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptRequestUnauthorizedError",
                    "safeName": "GetTranscriptRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "getTranscriptRequestNotFoundError",
                    "safeName": "getTranscriptRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_request_not_found_error",
                    "safeName": "get_transcript_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "GET_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptRequestNotFoundError",
                    "safeName": "GetTranscriptRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "getTranscriptRequestTooManyRequestsError",
                    "safeName": "getTranscriptRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_request_too_many_requests_error",
                    "safeName": "get_transcript_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "GET_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptRequestTooManyRequestsError",
                    "safeName": "GetTranscriptRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "getTranscriptRequestInternalServerError",
                    "safeName": "getTranscriptRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_request_internal_server_error",
                    "safeName": "get_transcript_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "GET_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptRequestInternalServerError",
                    "safeName": "GetTranscriptRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "getTranscriptRequestServiceUnavailableError",
                    "safeName": "getTranscriptRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_request_service_unavailable_error",
                    "safeName": "get_transcript_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "GET_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptRequestServiceUnavailableError",
                    "safeName": "GetTranscriptRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "getTranscriptRequestGatewayTimeoutError",
                    "safeName": "getTranscriptRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_request_gateway_timeout_error",
                    "safeName": "get_transcript_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "GET_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptRequestGatewayTimeoutError",
                    "safeName": "GetTranscriptRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.get",
          "name": {
            "originalName": "get",
            "camelCase": {
              "unsafeName": "get",
              "safeName": "get_"
            },
            "snakeCase": {
              "unsafeName": "get",
              "safeName": "get_"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET",
              "safeName": "GET"
            },
            "pascalCase": {
              "unsafeName": "Get",
              "safeName": "Get"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Transcript",
                    "camelCase": {
                      "unsafeName": "transcript",
                      "safeName": "transcript"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript",
                      "safeName": "transcript"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT",
                      "safeName": "TRANSCRIPT"
                    },
                    "pascalCase": {
                      "unsafeName": "Transcript",
                      "safeName": "Transcript"
                    }
                  },
                  "typeId": "Transcript",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The transcript resource",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptGetExample": {
                      "id": "foo",
                      "language_model": "foo",
                      "acoustic_model": "foo",
                      "status": "queued",
                      "language_code": "en_us",
                      "audio_url": "foo",
                      "text": "foo",
                      "words": [
                        {
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "speaker": "foo"
                        }
                      ],
                      "utterances": [
                        {
                          "channel": "foo",
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ],
                      "confidence": 42,
                      "audio_duration": 42,
                      "punctuate": true,
                      "format_text": true,
                      "dual_channel": true,
                      "webhook_url": "foo",
                      "webhook_status_code": 42,
                      "webhook_auth": true,
                      "webhook_auth_header_name": "foo",
                      "speed_boost": true,
                      "auto_highlights": true,
                      "auto_highlights_result": {
                        "results": [
                          {
                            "count": 42,
                            "rank": 42,
                            "text": "foo",
                            "timestamps": [
                              {
                                "start": 42,
                                "end": 42
                              }
                            ]
                          }
                        ]
                      },
                      "audio_start_from": 42,
                      "audio_end_at": 42,
                      "word_boost": [
                        "foo"
                      ],
                      "boost_param": "foo",
                      "filter_profanity": true,
                      "redact_pii": true,
                      "redact_pii_audio": true,
                      "redact_pii_audio_quality": "foo",
                      "redact_pii_policies": [
                        "medical_process"
                      ],
                      "redact_pii_sub": "entity_type",
                      "speaker_labels": true,
                      "speakers_expected": 42,
                      "content_safety": true,
                      "content_safety_labels": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "label": "foo",
                                "confidence": 42,
                                "severity": 42
                              }
                            ],
                            "sentences_idx_start": 42,
                            "sentences_idx_end": 42,
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            },
                            "summary": {},
                            "severity_score_summary": {}
                          }
                        ]
                      },
                      "iab_categories": true,
                      "iab_categories_result": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "relevance": 42,
                                "label": "foo"
                              }
                            ],
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            }
                          }
                        ],
                        "summary": {}
                      },
                      "language_detection": true,
                      "custom_spelling": [
                        {
                          "from": [
                            "foo"
                          ],
                          "to": "foo"
                        }
                      ],
                      "auto_chapters": true,
                      "chapters": [
                        {
                          "gist": "foo",
                          "headline": "foo",
                          "summary": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "summarization": true,
                      "summary_type": "foo",
                      "summary_model": "foo",
                      "summary": "foo",
                      "custom_topics": true,
                      "topics": [
                        "foo"
                      ],
                      "disfluencies": true,
                      "sentiment_analysis": true,
                      "sentiment_analysis_results": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "sentiment": "POSITIVE",
                          "confidence": 42,
                          "speaker": "foo"
                        }
                      ],
                      "entity_detection": true,
                      "entities": [
                        {
                          "entity_type": "banking_information",
                          "text": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "speech_threshold": 42,
                      "throttled": true,
                      "error": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get the transcript resource. The transcript is ready when the \"status\" is \"completed\".",
          "v2Examples": {
            "autogeneratedExamples": {
              "getExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/transcript/transcript_id"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "transcript_id": "transcript_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "foo",
                      "language_model": "foo",
                      "acoustic_model": "foo",
                      "status": "queued",
                      "language_code": "en_us",
                      "audio_url": "foo",
                      "text": "foo",
                      "words": [
                        {
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "speaker": "foo"
                        }
                      ],
                      "utterances": [
                        {
                          "channel": "foo",
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ],
                      "confidence": 42,
                      "audio_duration": 42,
                      "punctuate": true,
                      "format_text": true,
                      "dual_channel": true,
                      "webhook_url": "foo",
                      "webhook_status_code": 42,
                      "webhook_auth": true,
                      "webhook_auth_header_name": "foo",
                      "speed_boost": true,
                      "auto_highlights": true,
                      "auto_highlights_result": {
                        "results": [
                          {
                            "count": 42,
                            "rank": 42,
                            "text": "foo",
                            "timestamps": [
                              {
                                "start": 42,
                                "end": 42
                              }
                            ]
                          }
                        ]
                      },
                      "audio_start_from": 42,
                      "audio_end_at": 42,
                      "word_boost": [
                        "foo"
                      ],
                      "boost_param": "foo",
                      "filter_profanity": true,
                      "redact_pii": true,
                      "redact_pii_audio": true,
                      "redact_pii_audio_quality": "foo",
                      "redact_pii_policies": [
                        "medical_process"
                      ],
                      "redact_pii_sub": "entity_type",
                      "speaker_labels": true,
                      "speakers_expected": 42,
                      "content_safety": true,
                      "content_safety_labels": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "label": "foo",
                                "confidence": 42,
                                "severity": 42
                              }
                            ],
                            "sentences_idx_start": 42,
                            "sentences_idx_end": 42,
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            },
                            "summary": {},
                            "severity_score_summary": {}
                          }
                        ]
                      },
                      "iab_categories": true,
                      "iab_categories_result": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "relevance": 42,
                                "label": "foo"
                              }
                            ],
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            }
                          }
                        ],
                        "summary": {}
                      },
                      "language_detection": true,
                      "custom_spelling": [
                        {
                          "from": [
                            "foo"
                          ],
                          "to": "foo"
                        }
                      ],
                      "auto_chapters": true,
                      "chapters": [
                        {
                          "gist": "foo",
                          "headline": "foo",
                          "summary": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "summarization": true,
                      "summary_type": "foo",
                      "summary_model": "foo",
                      "summary": "foo",
                      "custom_topics": true,
                      "topics": [
                        "foo"
                      ],
                      "disfluencies": true,
                      "sentiment_analysis": true,
                      "sentiment_analysis_results": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "sentiment": "POSITIVE",
                          "confidence": 42,
                          "speaker": "foo"
                        }
                      ],
                      "entity_detection": true,
                      "entities": [
                        {
                          "entity_type": "banking_information",
                          "text": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "speech_threshold": 42,
                      "throttled": true,
                      "error": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete the transcript",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "DeleteTranscriptRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "deleteTranscriptRequestBadRequestError",
                    "safeName": "deleteTranscriptRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_transcript_request_bad_request_error",
                    "safeName": "delete_transcript_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "DELETE_TRANSCRIPT_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTranscriptRequestBadRequestError",
                    "safeName": "DeleteTranscriptRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteTranscriptRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "DeleteTranscriptRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "deleteTranscriptRequestUnauthorizedError",
                    "safeName": "deleteTranscriptRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_transcript_request_unauthorized_error",
                    "safeName": "delete_transcript_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "DELETE_TRANSCRIPT_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTranscriptRequestUnauthorizedError",
                    "safeName": "DeleteTranscriptRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteTranscriptRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "DeleteTranscriptRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "deleteTranscriptRequestNotFoundError",
                    "safeName": "deleteTranscriptRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_transcript_request_not_found_error",
                    "safeName": "delete_transcript_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "DELETE_TRANSCRIPT_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTranscriptRequestNotFoundError",
                    "safeName": "DeleteTranscriptRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteTranscriptRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "DeleteTranscriptRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "deleteTranscriptRequestTooManyRequestsError",
                    "safeName": "deleteTranscriptRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_transcript_request_too_many_requests_error",
                    "safeName": "delete_transcript_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "DELETE_TRANSCRIPT_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTranscriptRequestTooManyRequestsError",
                    "safeName": "DeleteTranscriptRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteTranscriptRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "DeleteTranscriptRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "deleteTranscriptRequestInternalServerError",
                    "safeName": "deleteTranscriptRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_transcript_request_internal_server_error",
                    "safeName": "delete_transcript_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "DELETE_TRANSCRIPT_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTranscriptRequestInternalServerError",
                    "safeName": "DeleteTranscriptRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteTranscriptRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "DeleteTranscriptRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "deleteTranscriptRequestServiceUnavailableError",
                    "safeName": "deleteTranscriptRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_transcript_request_service_unavailable_error",
                    "safeName": "delete_transcript_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "DELETE_TRANSCRIPT_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTranscriptRequestServiceUnavailableError",
                    "safeName": "DeleteTranscriptRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteTranscriptRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "DeleteTranscriptRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "deleteTranscriptRequestGatewayTimeoutError",
                    "safeName": "deleteTranscriptRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_transcript_request_gateway_timeout_error",
                    "safeName": "delete_transcript_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "DELETE_TRANSCRIPT_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteTranscriptRequestGatewayTimeoutError",
                    "safeName": "DeleteTranscriptRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "DeleteTranscriptRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.delete",
          "name": {
            "originalName": "delete",
            "camelCase": {
              "unsafeName": "delete",
              "safeName": "delete_"
            },
            "snakeCase": {
              "unsafeName": "delete",
              "safeName": "delete_"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE",
              "safeName": "DELETE"
            },
            "pascalCase": {
              "unsafeName": "Delete",
              "safeName": "Delete"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Transcript",
                    "camelCase": {
                      "unsafeName": "transcript",
                      "safeName": "transcript"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript",
                      "safeName": "transcript"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT",
                      "safeName": "TRANSCRIPT"
                    },
                    "pascalCase": {
                      "unsafeName": "Transcript",
                      "safeName": "Transcript"
                    }
                  },
                  "typeId": "Transcript",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The deleted transcript response.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptDeleteExample": {
                      "id": "foo",
                      "language_model": "foo",
                      "acoustic_model": "foo",
                      "status": "queued",
                      "language_code": "en_us",
                      "audio_url": "foo",
                      "text": "foo",
                      "words": [
                        {
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "speaker": "foo"
                        }
                      ],
                      "utterances": [
                        {
                          "channel": "foo",
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ],
                      "confidence": 42,
                      "audio_duration": 42,
                      "punctuate": true,
                      "format_text": true,
                      "dual_channel": true,
                      "webhook_url": "foo",
                      "webhook_status_code": 42,
                      "webhook_auth": true,
                      "webhook_auth_header_name": "foo",
                      "speed_boost": true,
                      "auto_highlights": true,
                      "auto_highlights_result": {
                        "results": [
                          {
                            "count": 42,
                            "rank": 42,
                            "text": "foo",
                            "timestamps": [
                              {
                                "start": 42,
                                "end": 42
                              }
                            ]
                          }
                        ]
                      },
                      "audio_start_from": 42,
                      "audio_end_at": 42,
                      "word_boost": [
                        "foo"
                      ],
                      "boost_param": "foo",
                      "filter_profanity": true,
                      "redact_pii": true,
                      "redact_pii_audio": true,
                      "redact_pii_audio_quality": "foo",
                      "redact_pii_policies": [
                        "medical_process"
                      ],
                      "redact_pii_sub": "entity_type",
                      "speaker_labels": true,
                      "speakers_expected": 42,
                      "content_safety": true,
                      "content_safety_labels": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "label": "foo",
                                "confidence": 42,
                                "severity": 42
                              }
                            ],
                            "sentences_idx_start": 42,
                            "sentences_idx_end": 42,
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            },
                            "summary": {},
                            "severity_score_summary": {}
                          }
                        ]
                      },
                      "iab_categories": true,
                      "iab_categories_result": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "relevance": 42,
                                "label": "foo"
                              }
                            ],
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            }
                          }
                        ],
                        "summary": {}
                      },
                      "language_detection": true,
                      "custom_spelling": [
                        {
                          "from": [
                            "foo"
                          ],
                          "to": "foo"
                        }
                      ],
                      "auto_chapters": true,
                      "chapters": [
                        {
                          "gist": "foo",
                          "headline": "foo",
                          "summary": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "summarization": true,
                      "summary_type": "foo",
                      "summary_model": "foo",
                      "summary": "foo",
                      "custom_topics": true,
                      "topics": [
                        "foo"
                      ],
                      "disfluencies": true,
                      "sentiment_analysis": true,
                      "sentiment_analysis_results": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "sentiment": "POSITIVE",
                          "confidence": 42,
                          "speaker": "foo"
                        }
                      ],
                      "entity_detection": true,
                      "entities": [
                        {
                          "entity_type": "banking_information",
                          "text": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "speech_threshold": 42,
                      "throttled": true,
                      "error": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete the transcript",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v2/transcript/transcript_id"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "transcript_id": "transcript_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "foo",
                      "language_model": "foo",
                      "acoustic_model": "foo",
                      "status": "queued",
                      "language_code": "en_us",
                      "audio_url": "foo",
                      "text": "foo",
                      "words": [
                        {
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "speaker": "foo"
                        }
                      ],
                      "utterances": [
                        {
                          "channel": "foo",
                          "confidence": 42,
                          "start": 42,
                          "end": 42,
                          "text": "foo",
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ],
                      "confidence": 42,
                      "audio_duration": 42,
                      "punctuate": true,
                      "format_text": true,
                      "dual_channel": true,
                      "webhook_url": "foo",
                      "webhook_status_code": 42,
                      "webhook_auth": true,
                      "webhook_auth_header_name": "foo",
                      "speed_boost": true,
                      "auto_highlights": true,
                      "auto_highlights_result": {
                        "results": [
                          {
                            "count": 42,
                            "rank": 42,
                            "text": "foo",
                            "timestamps": [
                              {
                                "start": 42,
                                "end": 42
                              }
                            ]
                          }
                        ]
                      },
                      "audio_start_from": 42,
                      "audio_end_at": 42,
                      "word_boost": [
                        "foo"
                      ],
                      "boost_param": "foo",
                      "filter_profanity": true,
                      "redact_pii": true,
                      "redact_pii_audio": true,
                      "redact_pii_audio_quality": "foo",
                      "redact_pii_policies": [
                        "medical_process"
                      ],
                      "redact_pii_sub": "entity_type",
                      "speaker_labels": true,
                      "speakers_expected": 42,
                      "content_safety": true,
                      "content_safety_labels": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "label": "foo",
                                "confidence": 42,
                                "severity": 42
                              }
                            ],
                            "sentences_idx_start": 42,
                            "sentences_idx_end": 42,
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            },
                            "summary": {},
                            "severity_score_summary": {}
                          }
                        ]
                      },
                      "iab_categories": true,
                      "iab_categories_result": {
                        "status": "success",
                        "results": [
                          {
                            "text": "foo",
                            "labels": [
                              {
                                "relevance": 42,
                                "label": "foo"
                              }
                            ],
                            "timestamp": {
                              "start": 42,
                              "end": 42
                            }
                          }
                        ],
                        "summary": {}
                      },
                      "language_detection": true,
                      "custom_spelling": [
                        {
                          "from": [
                            "foo"
                          ],
                          "to": "foo"
                        }
                      ],
                      "auto_chapters": true,
                      "chapters": [
                        {
                          "gist": "foo",
                          "headline": "foo",
                          "summary": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "summarization": true,
                      "summary_type": "foo",
                      "summary_model": "foo",
                      "summary": "foo",
                      "custom_topics": true,
                      "topics": [
                        "foo"
                      ],
                      "disfluencies": true,
                      "sentiment_analysis": true,
                      "sentiment_analysis_results": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "sentiment": "POSITIVE",
                          "confidence": 42,
                          "speaker": "foo"
                        }
                      ],
                      "entity_detection": true,
                      "entities": [
                        {
                          "entity_type": "banking_information",
                          "text": "foo",
                          "start": 42,
                          "end": 42
                        }
                      ],
                      "speech_threshold": 42,
                      "throttled": true,
                      "error": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Export transcript as SRT or VTT captions.",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/"
              },
              {
                "pathParameter": "subtitle_format",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            },
            {
              "name": {
                "originalName": "subtitle_format",
                "camelCase": {
                  "unsafeName": "subtitleFormat",
                  "safeName": "subtitleFormat"
                },
                "snakeCase": {
                  "unsafeName": "subtitle_format",
                  "safeName": "subtitle_format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUBTITLE_FORMAT",
                  "safeName": "SUBTITLE_FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "SubtitleFormat",
                  "safeName": "SubtitleFormat"
                }
              },
              "docs": "The format of the captions.",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "SubtitleFormat",
                  "camelCase": {
                    "unsafeName": "subtitleFormat",
                    "safeName": "subtitleFormat"
                  },
                  "snakeCase": {
                    "unsafeName": "subtitle_format",
                    "safeName": "subtitle_format"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SUBTITLE_FORMAT",
                    "safeName": "SUBTITLE_FORMAT"
                  },
                  "pascalCase": {
                    "unsafeName": "SubtitleFormat",
                    "safeName": "SubtitleFormat"
                  }
                },
                "typeId": "SubtitleFormat",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "subtitle_format_example": "srt"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "chars_per_caption",
                  "camelCase": {
                    "unsafeName": "charsPerCaption",
                    "safeName": "charsPerCaption"
                  },
                  "snakeCase": {
                    "unsafeName": "chars_per_caption",
                    "safeName": "chars_per_caption"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CHARS_PER_CAPTION",
                    "safeName": "CHARS_PER_CAPTION"
                  },
                  "pascalCase": {
                    "unsafeName": "CharsPerCaption",
                    "safeName": "CharsPerCaption"
                  }
                },
                "wireValue": "chars_per_caption"
              },
              "docs": "The maximum number of characters per caption",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "chars_per_caption_example": 42
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "GetSubtitlesRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "getSubtitlesRequestBadRequestError",
                    "safeName": "getSubtitlesRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_subtitles_request_bad_request_error",
                    "safeName": "get_subtitles_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_SUBTITLES_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "GET_SUBTITLES_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetSubtitlesRequestBadRequestError",
                    "safeName": "GetSubtitlesRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSubtitlesRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetSubtitlesRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "getSubtitlesRequestUnauthorizedError",
                    "safeName": "getSubtitlesRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_subtitles_request_unauthorized_error",
                    "safeName": "get_subtitles_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_SUBTITLES_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "GET_SUBTITLES_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetSubtitlesRequestUnauthorizedError",
                    "safeName": "GetSubtitlesRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSubtitlesRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetSubtitlesRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "getSubtitlesRequestNotFoundError",
                    "safeName": "getSubtitlesRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_subtitles_request_not_found_error",
                    "safeName": "get_subtitles_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_SUBTITLES_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "GET_SUBTITLES_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetSubtitlesRequestNotFoundError",
                    "safeName": "GetSubtitlesRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSubtitlesRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetSubtitlesRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "getSubtitlesRequestTooManyRequestsError",
                    "safeName": "getSubtitlesRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_subtitles_request_too_many_requests_error",
                    "safeName": "get_subtitles_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_SUBTITLES_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "GET_SUBTITLES_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetSubtitlesRequestTooManyRequestsError",
                    "safeName": "GetSubtitlesRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSubtitlesRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetSubtitlesRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "getSubtitlesRequestInternalServerError",
                    "safeName": "getSubtitlesRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_subtitles_request_internal_server_error",
                    "safeName": "get_subtitles_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_SUBTITLES_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "GET_SUBTITLES_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetSubtitlesRequestInternalServerError",
                    "safeName": "GetSubtitlesRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSubtitlesRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetSubtitlesRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "getSubtitlesRequestServiceUnavailableError",
                    "safeName": "getSubtitlesRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_subtitles_request_service_unavailable_error",
                    "safeName": "get_subtitles_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_SUBTITLES_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "GET_SUBTITLES_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetSubtitlesRequestServiceUnavailableError",
                    "safeName": "GetSubtitlesRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSubtitlesRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetSubtitlesRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "getSubtitlesRequestGatewayTimeoutError",
                    "safeName": "getSubtitlesRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_subtitles_request_gateway_timeout_error",
                    "safeName": "get_subtitles_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_SUBTITLES_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "GET_SUBTITLES_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetSubtitlesRequestGatewayTimeoutError",
                    "safeName": "GetSubtitlesRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetSubtitlesRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/"
              },
              {
                "pathParameter": "subtitle_format",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            },
            {
              "name": {
                "originalName": "subtitle_format",
                "camelCase": {
                  "unsafeName": "subtitleFormat",
                  "safeName": "subtitleFormat"
                },
                "snakeCase": {
                  "unsafeName": "subtitle_format",
                  "safeName": "subtitle_format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUBTITLE_FORMAT",
                  "safeName": "SUBTITLE_FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "SubtitleFormat",
                  "safeName": "SubtitleFormat"
                }
              },
              "docs": "The format of the captions.",
              "valueType": {
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "SubtitleFormat",
                  "camelCase": {
                    "unsafeName": "subtitleFormat",
                    "safeName": "subtitleFormat"
                  },
                  "snakeCase": {
                    "unsafeName": "subtitle_format",
                    "safeName": "subtitle_format"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SUBTITLE_FORMAT",
                    "safeName": "SUBTITLE_FORMAT"
                  },
                  "pascalCase": {
                    "unsafeName": "SubtitleFormat",
                    "safeName": "SubtitleFormat"
                  }
                },
                "typeId": "SubtitleFormat",
                "inline": false,
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "subtitle_format_example": "srt"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.getSubtitles",
          "name": {
            "originalName": "getSubtitles",
            "camelCase": {
              "unsafeName": "getSubtitles",
              "safeName": "getSubtitles"
            },
            "snakeCase": {
              "unsafeName": "get_subtitles",
              "safeName": "get_subtitles"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SUBTITLES",
              "safeName": "GET_SUBTITLES"
            },
            "pascalCase": {
              "unsafeName": "GetSubtitles",
              "safeName": "GetSubtitles"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "docs": "The exported captions as text",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcriptGetSubtitlesExample": "WEBVTT\n00:12.340 --> 00:16.220\nLast year I showed these two slides said that demonstrate\n00:16.200 --> 00:20.040\nthat the Arctic ice cap which for most of the last 3,000,000 years has been the\n00:20.020 --> 00:25.040\nsize of the lower 48 States has shrunk by 40% but this understates\n"
                }
              },
              "type": "text"
            }
          },
          "docs": "Export your transcript in SRT or VTT format, to be plugged into a video player for subtitles and closed captions.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getSubtitlesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/transcript/transcript_id/srt"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "transcript_id": "transcript_id",
                    "subtitle_format": "srt"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": "WEBVTT\n00:12.340 --> 00:16.220\nLast year I showed these two slides said that demonstrate\n00:16.200 --> 00:20.040\nthat the Arctic ice cap which for most of the last 3,000,000 years has been the\n00:20.020 --> 00:25.040\nsize of the lower 48 States has shrunk by 40% but this understates\n",
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get the transcript split by sentences",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/sentences"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptSentencesRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "getTranscriptSentencesRequestBadRequestError",
                    "safeName": "getTranscriptSentencesRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_sentences_request_bad_request_error",
                    "safeName": "get_transcript_sentences_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptSentencesRequestBadRequestError",
                    "safeName": "GetTranscriptSentencesRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptSentencesRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptSentencesRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "getTranscriptSentencesRequestUnauthorizedError",
                    "safeName": "getTranscriptSentencesRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_sentences_request_unauthorized_error",
                    "safeName": "get_transcript_sentences_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptSentencesRequestUnauthorizedError",
                    "safeName": "GetTranscriptSentencesRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptSentencesRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptSentencesRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "getTranscriptSentencesRequestNotFoundError",
                    "safeName": "getTranscriptSentencesRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_sentences_request_not_found_error",
                    "safeName": "get_transcript_sentences_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptSentencesRequestNotFoundError",
                    "safeName": "GetTranscriptSentencesRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptSentencesRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptSentencesRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "getTranscriptSentencesRequestTooManyRequestsError",
                    "safeName": "getTranscriptSentencesRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_sentences_request_too_many_requests_error",
                    "safeName": "get_transcript_sentences_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptSentencesRequestTooManyRequestsError",
                    "safeName": "GetTranscriptSentencesRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptSentencesRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptSentencesRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "getTranscriptSentencesRequestInternalServerError",
                    "safeName": "getTranscriptSentencesRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_sentences_request_internal_server_error",
                    "safeName": "get_transcript_sentences_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptSentencesRequestInternalServerError",
                    "safeName": "GetTranscriptSentencesRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptSentencesRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptSentencesRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "getTranscriptSentencesRequestServiceUnavailableError",
                    "safeName": "getTranscriptSentencesRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_sentences_request_service_unavailable_error",
                    "safeName": "get_transcript_sentences_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptSentencesRequestServiceUnavailableError",
                    "safeName": "GetTranscriptSentencesRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptSentencesRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptSentencesRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "getTranscriptSentencesRequestGatewayTimeoutError",
                    "safeName": "getTranscriptSentencesRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_sentences_request_gateway_timeout_error",
                    "safeName": "get_transcript_sentences_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "GET_TRANSCRIPT_SENTENCES_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptSentencesRequestGatewayTimeoutError",
                    "safeName": "GetTranscriptSentencesRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptSentencesRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/sentences"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.getSentences",
          "name": {
            "originalName": "getSentences",
            "camelCase": {
              "unsafeName": "getSentences",
              "safeName": "getSentences"
            },
            "snakeCase": {
              "unsafeName": "get_sentences",
              "safeName": "get_sentences"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SENTENCES",
              "safeName": "GET_SENTENCES"
            },
            "pascalCase": {
              "unsafeName": "GetSentences",
              "safeName": "GetSentences"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "SentencesResponse",
                    "camelCase": {
                      "unsafeName": "sentencesResponse",
                      "safeName": "sentencesResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "sentences_response",
                      "safeName": "sentences_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SENTENCES_RESPONSE",
                      "safeName": "SENTENCES_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "SentencesResponse",
                      "safeName": "SentencesResponse"
                    }
                  },
                  "typeId": "SentencesResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Exported sentences",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptGetSentencesExample": {
                      "id": "foo",
                      "confidence": 42,
                      "audio_duration": 42,
                      "sentences": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "confidence": 42,
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get the transcript split by sentences. The API will attempt to semantically segment the transcript into sentences to create more reader-friendly transcripts.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getSentencesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/transcript/transcript_id/sentences"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "transcript_id": "transcript_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "foo",
                      "confidence": 42,
                      "audio_duration": 42,
                      "sentences": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "confidence": 42,
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get the transcript split by paragraphs",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/paragraphs"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptParagraphsRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "getTranscriptParagraphsRequestBadRequestError",
                    "safeName": "getTranscriptParagraphsRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_paragraphs_request_bad_request_error",
                    "safeName": "get_transcript_paragraphs_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptParagraphsRequestBadRequestError",
                    "safeName": "GetTranscriptParagraphsRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptParagraphsRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptParagraphsRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "getTranscriptParagraphsRequestUnauthorizedError",
                    "safeName": "getTranscriptParagraphsRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_paragraphs_request_unauthorized_error",
                    "safeName": "get_transcript_paragraphs_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptParagraphsRequestUnauthorizedError",
                    "safeName": "GetTranscriptParagraphsRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptParagraphsRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptParagraphsRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "getTranscriptParagraphsRequestNotFoundError",
                    "safeName": "getTranscriptParagraphsRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_paragraphs_request_not_found_error",
                    "safeName": "get_transcript_paragraphs_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptParagraphsRequestNotFoundError",
                    "safeName": "GetTranscriptParagraphsRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptParagraphsRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptParagraphsRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "getTranscriptParagraphsRequestTooManyRequestsError",
                    "safeName": "getTranscriptParagraphsRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_paragraphs_request_too_many_requests_error",
                    "safeName": "get_transcript_paragraphs_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptParagraphsRequestTooManyRequestsError",
                    "safeName": "GetTranscriptParagraphsRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptParagraphsRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptParagraphsRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "getTranscriptParagraphsRequestInternalServerError",
                    "safeName": "getTranscriptParagraphsRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_paragraphs_request_internal_server_error",
                    "safeName": "get_transcript_paragraphs_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptParagraphsRequestInternalServerError",
                    "safeName": "GetTranscriptParagraphsRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptParagraphsRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptParagraphsRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "getTranscriptParagraphsRequestServiceUnavailableError",
                    "safeName": "getTranscriptParagraphsRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_paragraphs_request_service_unavailable_error",
                    "safeName": "get_transcript_paragraphs_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptParagraphsRequestServiceUnavailableError",
                    "safeName": "GetTranscriptParagraphsRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptParagraphsRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetTranscriptParagraphsRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "getTranscriptParagraphsRequestGatewayTimeoutError",
                    "safeName": "getTranscriptParagraphsRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_transcript_paragraphs_request_gateway_timeout_error",
                    "safeName": "get_transcript_paragraphs_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "GET_TRANSCRIPT_PARAGRAPHS_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetTranscriptParagraphsRequestGatewayTimeoutError",
                    "safeName": "GetTranscriptParagraphsRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetTranscriptParagraphsRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/paragraphs"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.getParagraphs",
          "name": {
            "originalName": "getParagraphs",
            "camelCase": {
              "unsafeName": "getParagraphs",
              "safeName": "getParagraphs"
            },
            "snakeCase": {
              "unsafeName": "get_paragraphs",
              "safeName": "get_paragraphs"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_PARAGRAPHS",
              "safeName": "GET_PARAGRAPHS"
            },
            "pascalCase": {
              "unsafeName": "GetParagraphs",
              "safeName": "GetParagraphs"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ParagraphsResponse",
                    "camelCase": {
                      "unsafeName": "paragraphsResponse",
                      "safeName": "paragraphsResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "paragraphs_response",
                      "safeName": "paragraphs_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PARAGRAPHS_RESPONSE",
                      "safeName": "PARAGRAPHS_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "ParagraphsResponse",
                      "safeName": "ParagraphsResponse"
                    }
                  },
                  "typeId": "ParagraphsResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Exported paragraphs",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptGetParagraphsExample": {
                      "id": "foo",
                      "confidence": 42,
                      "audio_duration": 42,
                      "paragraphs": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "confidence": 42,
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get the transcript split by paragraphs. The API will attempt to semantically segment your transcript into paragraphs to create more reader-friendly transcripts.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getParagraphsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/transcript/transcript_id/paragraphs"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "transcript_id": "transcript_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "foo",
                      "confidence": 42,
                      "audio_duration": 42,
                      "paragraphs": [
                        {
                          "text": "foo",
                          "start": 42,
                          "end": 42,
                          "confidence": 42,
                          "words": [
                            {
                              "confidence": 42,
                              "start": 42,
                              "end": 42,
                              "text": "foo",
                              "speaker": "foo"
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Search the given transcript for words, numbers, or phrases",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/word-search"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "words",
                  "camelCase": {
                    "unsafeName": "words",
                    "safeName": "words"
                  },
                  "snakeCase": {
                    "unsafeName": "words",
                    "safeName": "words"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORDS",
                    "safeName": "WORDS"
                  },
                  "pascalCase": {
                    "unsafeName": "Words",
                    "safeName": "Words"
                  }
                },
                "wireValue": "words"
              },
              "docs": "Keywords to search for",
              "valueType": {
                "container": {
                  "list": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "list"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "words_example": [
                    "foo"
                  ]
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "WordSearchRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "wordSearchRequestBadRequestError",
                    "safeName": "wordSearchRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "word_search_request_bad_request_error",
                    "safeName": "word_search_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORD_SEARCH_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "WORD_SEARCH_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "WordSearchRequestBadRequestError",
                    "safeName": "WordSearchRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "WordSearchRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "WordSearchRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "wordSearchRequestUnauthorizedError",
                    "safeName": "wordSearchRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "word_search_request_unauthorized_error",
                    "safeName": "word_search_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORD_SEARCH_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "WORD_SEARCH_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "WordSearchRequestUnauthorizedError",
                    "safeName": "WordSearchRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "WordSearchRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "WordSearchRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "wordSearchRequestNotFoundError",
                    "safeName": "wordSearchRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "word_search_request_not_found_error",
                    "safeName": "word_search_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORD_SEARCH_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "WORD_SEARCH_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "WordSearchRequestNotFoundError",
                    "safeName": "WordSearchRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "WordSearchRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "WordSearchRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "wordSearchRequestTooManyRequestsError",
                    "safeName": "wordSearchRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "word_search_request_too_many_requests_error",
                    "safeName": "word_search_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORD_SEARCH_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "WORD_SEARCH_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "WordSearchRequestTooManyRequestsError",
                    "safeName": "WordSearchRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "WordSearchRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "WordSearchRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "wordSearchRequestInternalServerError",
                    "safeName": "wordSearchRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "word_search_request_internal_server_error",
                    "safeName": "word_search_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORD_SEARCH_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "WORD_SEARCH_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "WordSearchRequestInternalServerError",
                    "safeName": "WordSearchRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "WordSearchRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "WordSearchRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "wordSearchRequestServiceUnavailableError",
                    "safeName": "wordSearchRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "word_search_request_service_unavailable_error",
                    "safeName": "word_search_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORD_SEARCH_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "WORD_SEARCH_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "WordSearchRequestServiceUnavailableError",
                    "safeName": "WordSearchRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "WordSearchRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "WordSearchRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "wordSearchRequestGatewayTimeoutError",
                    "safeName": "wordSearchRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "word_search_request_gateway_timeout_error",
                    "safeName": "word_search_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORD_SEARCH_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "WORD_SEARCH_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "WordSearchRequestGatewayTimeoutError",
                    "safeName": "WordSearchRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "WordSearchRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/word-search"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.wordSearch",
          "name": {
            "originalName": "wordSearch",
            "camelCase": {
              "unsafeName": "wordSearch",
              "safeName": "wordSearch"
            },
            "snakeCase": {
              "unsafeName": "word_search",
              "safeName": "word_search"
            },
            "screamingSnakeCase": {
              "unsafeName": "WORD_SEARCH",
              "safeName": "WORD_SEARCH"
            },
            "pascalCase": {
              "unsafeName": "WordSearch",
              "safeName": "WordSearch"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "WordSearchResponse",
                    "camelCase": {
                      "unsafeName": "wordSearchResponse",
                      "safeName": "wordSearchResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "word_search_response",
                      "safeName": "word_search_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WORD_SEARCH_RESPONSE",
                      "safeName": "WORD_SEARCH_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "WordSearchResponse",
                      "safeName": "WordSearchResponse"
                    }
                  },
                  "typeId": "WordSearchResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Word search response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptWordSearchExample": {
                      "id": "foo",
                      "total_count": 42,
                      "matches": [
                        {
                          "text": "foo",
                          "count": 42,
                          "timestamps": [
                            [
                              42
                            ]
                          ],
                          "indexes": [
                            42
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Search through the transcript for a specific set of keywords. You can search for individual words, numbers, or phrases containing up to five words or numbers.",
          "v2Examples": {
            "autogeneratedExamples": {
              "wordSearchExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/transcript/transcript_id/word-search"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "transcript_id": "transcript_id"
                  },
                  "queryParameters": {
                    "words": [
                      "foo"
                    ]
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "foo",
                      "total_count": 42,
                      "matches": [
                        {
                          "text": "foo",
                          "count": 42,
                          "timestamps": [
                            [
                              42
                            ]
                          ],
                          "indexes": [
                            42
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Retrieves the redacted audio object containing the status and URL to the redacted audio.",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/redacted-audio"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "GetRedactedAudioRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "getRedactedAudioRequestBadRequestError",
                    "safeName": "getRedactedAudioRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_redacted_audio_request_bad_request_error",
                    "safeName": "get_redacted_audio_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_REDACTED_AUDIO_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "GET_REDACTED_AUDIO_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRedactedAudioRequestBadRequestError",
                    "safeName": "GetRedactedAudioRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetRedactedAudioRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetRedactedAudioRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "getRedactedAudioRequestUnauthorizedError",
                    "safeName": "getRedactedAudioRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_redacted_audio_request_unauthorized_error",
                    "safeName": "get_redacted_audio_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_REDACTED_AUDIO_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "GET_REDACTED_AUDIO_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRedactedAudioRequestUnauthorizedError",
                    "safeName": "GetRedactedAudioRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetRedactedAudioRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetRedactedAudioRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "getRedactedAudioRequestNotFoundError",
                    "safeName": "getRedactedAudioRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_redacted_audio_request_not_found_error",
                    "safeName": "get_redacted_audio_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_REDACTED_AUDIO_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "GET_REDACTED_AUDIO_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRedactedAudioRequestNotFoundError",
                    "safeName": "GetRedactedAudioRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetRedactedAudioRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetRedactedAudioRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "getRedactedAudioRequestTooManyRequestsError",
                    "safeName": "getRedactedAudioRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_redacted_audio_request_too_many_requests_error",
                    "safeName": "get_redacted_audio_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_REDACTED_AUDIO_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "GET_REDACTED_AUDIO_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRedactedAudioRequestTooManyRequestsError",
                    "safeName": "GetRedactedAudioRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetRedactedAudioRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetRedactedAudioRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "getRedactedAudioRequestInternalServerError",
                    "safeName": "getRedactedAudioRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_redacted_audio_request_internal_server_error",
                    "safeName": "get_redacted_audio_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_REDACTED_AUDIO_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "GET_REDACTED_AUDIO_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRedactedAudioRequestInternalServerError",
                    "safeName": "GetRedactedAudioRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetRedactedAudioRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetRedactedAudioRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "getRedactedAudioRequestServiceUnavailableError",
                    "safeName": "getRedactedAudioRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_redacted_audio_request_service_unavailable_error",
                    "safeName": "get_redacted_audio_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_REDACTED_AUDIO_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "GET_REDACTED_AUDIO_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRedactedAudioRequestServiceUnavailableError",
                    "safeName": "GetRedactedAudioRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetRedactedAudioRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "GetRedactedAudioRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "getRedactedAudioRequestGatewayTimeoutError",
                    "safeName": "getRedactedAudioRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_redacted_audio_request_gateway_timeout_error",
                    "safeName": "get_redacted_audio_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_REDACTED_AUDIO_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "GET_REDACTED_AUDIO_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetRedactedAudioRequestGatewayTimeoutError",
                    "safeName": "GetRedactedAudioRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "GetRedactedAudioRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/redacted-audio"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptId",
                  "safeName": "transcriptId"
                },
                "snakeCase": {
                  "unsafeName": "transcript_id",
                  "safeName": "transcript_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_ID",
                  "safeName": "TRANSCRIPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptId",
                  "safeName": "TranscriptId"
                }
              },
              "docs": "ID of the transcript",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "transcript_id_example": "transcript_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_transcript.getRedactedAudio",
          "name": {
            "originalName": "getRedactedAudio",
            "camelCase": {
              "unsafeName": "getRedactedAudio",
              "safeName": "getRedactedAudio"
            },
            "snakeCase": {
              "unsafeName": "get_redacted_audio",
              "safeName": "get_redacted_audio"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_REDACTED_AUDIO",
              "safeName": "GET_REDACTED_AUDIO"
            },
            "pascalCase": {
              "unsafeName": "GetRedactedAudio",
              "safeName": "GetRedactedAudio"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RedactedAudioResponse",
                    "camelCase": {
                      "unsafeName": "redactedAudioResponse",
                      "safeName": "redactedAudioResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "redacted_audio_response",
                      "safeName": "redacted_audio_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REDACTED_AUDIO_RESPONSE",
                      "safeName": "REDACTED_AUDIO_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "RedactedAudioResponse",
                      "safeName": "RedactedAudioResponse"
                    }
                  },
                  "typeId": "RedactedAudioResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "The redacted audio object containing the status and URL to the redacted audio.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "transcriptGetRedactedAudioExample": {
                      "status": "redacted_audio_ready",
                      "redacted_audio_url": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves the redacted audio object containing the status and URL to the redacted audio.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getRedactedAudioExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/transcript/transcript_id/redacted-audio"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "transcript_id": "transcript_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "status": "redacted_audio_ready",
                      "redacted_audio_url": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_realtime": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "realtime",
              "camelCase": {
                "unsafeName": "realtime",
                "safeName": "realtime"
              },
              "snakeCase": {
                "unsafeName": "realtime",
                "safeName": "realtime"
              },
              "screamingSnakeCase": {
                "unsafeName": "REALTIME",
                "safeName": "REALTIME"
              },
              "pascalCase": {
                "unsafeName": "Realtime",
                "safeName": "Realtime"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "realtime",
            "camelCase": {
              "unsafeName": "realtime",
              "safeName": "realtime"
            },
            "snakeCase": {
              "unsafeName": "realtime",
              "safeName": "realtime"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME",
              "safeName": "REALTIME"
            },
            "pascalCase": {
              "unsafeName": "Realtime",
              "safeName": "Realtime"
            }
          }
        }
      },
      "displayName": "realtime",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Create a temporary authentication token for real-time transcription",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v2/realtime/token",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "CreateRealtimeTokenRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "createRealtimeTokenRequestBadRequestError",
                    "safeName": "createRealtimeTokenRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_realtime_token_request_bad_request_error",
                    "safeName": "create_realtime_token_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "CREATE_REALTIME_TOKEN_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRealtimeTokenRequestBadRequestError",
                    "safeName": "CreateRealtimeTokenRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateRealtimeTokenRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateRealtimeTokenRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "createRealtimeTokenRequestUnauthorizedError",
                    "safeName": "createRealtimeTokenRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_realtime_token_request_unauthorized_error",
                    "safeName": "create_realtime_token_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "CREATE_REALTIME_TOKEN_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRealtimeTokenRequestUnauthorizedError",
                    "safeName": "CreateRealtimeTokenRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateRealtimeTokenRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateRealtimeTokenRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "createRealtimeTokenRequestNotFoundError",
                    "safeName": "createRealtimeTokenRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_realtime_token_request_not_found_error",
                    "safeName": "create_realtime_token_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "CREATE_REALTIME_TOKEN_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRealtimeTokenRequestNotFoundError",
                    "safeName": "CreateRealtimeTokenRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateRealtimeTokenRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateRealtimeTokenRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "createRealtimeTokenRequestTooManyRequestsError",
                    "safeName": "createRealtimeTokenRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_realtime_token_request_too_many_requests_error",
                    "safeName": "create_realtime_token_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "CREATE_REALTIME_TOKEN_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRealtimeTokenRequestTooManyRequestsError",
                    "safeName": "CreateRealtimeTokenRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateRealtimeTokenRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateRealtimeTokenRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "createRealtimeTokenRequestInternalServerError",
                    "safeName": "createRealtimeTokenRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_realtime_token_request_internal_server_error",
                    "safeName": "create_realtime_token_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "CREATE_REALTIME_TOKEN_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRealtimeTokenRequestInternalServerError",
                    "safeName": "CreateRealtimeTokenRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateRealtimeTokenRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateRealtimeTokenRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "createRealtimeTokenRequestServiceUnavailableError",
                    "safeName": "createRealtimeTokenRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_realtime_token_request_service_unavailable_error",
                    "safeName": "create_realtime_token_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "CREATE_REALTIME_TOKEN_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRealtimeTokenRequestServiceUnavailableError",
                    "safeName": "CreateRealtimeTokenRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateRealtimeTokenRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "CreateRealtimeTokenRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "createRealtimeTokenRequestGatewayTimeoutError",
                    "safeName": "createRealtimeTokenRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_realtime_token_request_gateway_timeout_error",
                    "safeName": "create_realtime_token_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_REALTIME_TOKEN_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "CREATE_REALTIME_TOKEN_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateRealtimeTokenRequestGatewayTimeoutError",
                    "safeName": "CreateRealtimeTokenRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "CreateRealtimeTokenRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/realtime/token",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_realtime.createTemporaryToken",
          "name": {
            "originalName": "createTemporaryToken",
            "camelCase": {
              "unsafeName": "createTemporaryToken",
              "safeName": "createTemporaryToken"
            },
            "snakeCase": {
              "unsafeName": "create_temporary_token",
              "safeName": "create_temporary_token"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_TEMPORARY_TOKEN",
              "safeName": "CREATE_TEMPORARY_TOKEN"
            },
            "pascalCase": {
              "unsafeName": "CreateTemporaryToken",
              "safeName": "CreateTemporaryToken"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "docs": "Parameters to create a temporary authentication token.",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "CreateRealtimeTemporaryTokenParameters",
                "camelCase": {
                  "unsafeName": "createRealtimeTemporaryTokenParameters",
                  "safeName": "createRealtimeTemporaryTokenParameters"
                },
                "snakeCase": {
                  "unsafeName": "create_realtime_temporary_token_parameters",
                  "safeName": "create_realtime_temporary_token_parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATE_REALTIME_TEMPORARY_TOKEN_PARAMETERS",
                  "safeName": "CREATE_REALTIME_TEMPORARY_TOKEN_PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "CreateRealtimeTemporaryTokenParameters",
                  "safeName": "CreateRealtimeTemporaryTokenParameters"
                }
              },
              "typeId": "CreateRealtimeTemporaryTokenParameters",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "realtimeCreateTemporaryTokenExample": {
                  "expires_in": 42
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "RealtimeTemporaryTokenResponse",
                    "camelCase": {
                      "unsafeName": "realtimeTemporaryTokenResponse",
                      "safeName": "realtimeTemporaryTokenResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "realtime_temporary_token_response",
                      "safeName": "realtime_temporary_token_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REALTIME_TEMPORARY_TOKEN_RESPONSE",
                      "safeName": "REALTIME_TEMPORARY_TOKEN_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "RealtimeTemporaryTokenResponse",
                      "safeName": "RealtimeTemporaryTokenResponse"
                    }
                  },
                  "typeId": "RealtimeTemporaryTokenResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Temporary authentication token generated.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "realtimeCreateTemporaryTokenExample": {
                      "token": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a temporary authentication token for real-time transcription",
          "v2Examples": {
            "autogeneratedExamples": {
              "realtimeCreateTemporaryTokenExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/realtime/token"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "expires_in": 42
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "token": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_lemur": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "lemur",
              "camelCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "snakeCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR",
                "safeName": "LEMUR"
              },
              "pascalCase": {
                "unsafeName": "Lemur",
                "safeName": "Lemur"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "lemur",
            "camelCase": {
              "unsafeName": "lemur",
              "safeName": "lemur"
            },
            "snakeCase": {
              "unsafeName": "lemur",
              "safeName": "lemur"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR",
              "safeName": "LEMUR"
            },
            "pascalCase": {
              "unsafeName": "Lemur",
              "safeName": "Lemur"
            }
          }
        }
      },
      "displayName": "LeMUR",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Generate a custom summary from one or more transcripts.",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/lemur/v3/generate/summary",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "LemurSummaryRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "lemurSummaryRequestBadRequestError",
                    "safeName": "lemurSummaryRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_summary_request_bad_request_error",
                    "safeName": "lemur_summary_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_SUMMARY_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "LEMUR_SUMMARY_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurSummaryRequestBadRequestError",
                    "safeName": "LemurSummaryRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurSummaryRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurSummaryRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "lemurSummaryRequestUnauthorizedError",
                    "safeName": "lemurSummaryRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_summary_request_unauthorized_error",
                    "safeName": "lemur_summary_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_SUMMARY_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "LEMUR_SUMMARY_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurSummaryRequestUnauthorizedError",
                    "safeName": "LemurSummaryRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurSummaryRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurSummaryRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "lemurSummaryRequestNotFoundError",
                    "safeName": "lemurSummaryRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_summary_request_not_found_error",
                    "safeName": "lemur_summary_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_SUMMARY_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "LEMUR_SUMMARY_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurSummaryRequestNotFoundError",
                    "safeName": "LemurSummaryRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurSummaryRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurSummaryRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "lemurSummaryRequestTooManyRequestsError",
                    "safeName": "lemurSummaryRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_summary_request_too_many_requests_error",
                    "safeName": "lemur_summary_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_SUMMARY_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "LEMUR_SUMMARY_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurSummaryRequestTooManyRequestsError",
                    "safeName": "LemurSummaryRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurSummaryRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurSummaryRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "lemurSummaryRequestInternalServerError",
                    "safeName": "lemurSummaryRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_summary_request_internal_server_error",
                    "safeName": "lemur_summary_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_SUMMARY_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "LEMUR_SUMMARY_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurSummaryRequestInternalServerError",
                    "safeName": "LemurSummaryRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurSummaryRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurSummaryRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "lemurSummaryRequestServiceUnavailableError",
                    "safeName": "lemurSummaryRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_summary_request_service_unavailable_error",
                    "safeName": "lemur_summary_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_SUMMARY_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "LEMUR_SUMMARY_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurSummaryRequestServiceUnavailableError",
                    "safeName": "LemurSummaryRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurSummaryRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurSummaryRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "lemurSummaryRequestGatewayTimeoutError",
                    "safeName": "lemurSummaryRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_summary_request_gateway_timeout_error",
                    "safeName": "lemur_summary_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_SUMMARY_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "LEMUR_SUMMARY_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurSummaryRequestGatewayTimeoutError",
                    "safeName": "LemurSummaryRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurSummaryRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/lemur/v3/generate/summary",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_lemur.summary",
          "name": {
            "originalName": "summary",
            "camelCase": {
              "unsafeName": "summary",
              "safeName": "summary"
            },
            "snakeCase": {
              "unsafeName": "summary",
              "safeName": "summary"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUMMARY",
              "safeName": "SUMMARY"
            },
            "pascalCase": {
              "unsafeName": "Summary",
              "safeName": "Summary"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "docs": "Parameters to generate the summary.",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "LemurSummaryParameters",
                "camelCase": {
                  "unsafeName": "lemurSummaryParameters",
                  "safeName": "lemurSummaryParameters"
                },
                "snakeCase": {
                  "unsafeName": "lemur_summary_parameters",
                  "safeName": "lemur_summary_parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR_SUMMARY_PARAMETERS",
                  "safeName": "LEMUR_SUMMARY_PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "LemurSummaryParameters",
                  "safeName": "LemurSummaryParameters"
                }
              },
              "typeId": "LemurSummaryParameters",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "lemurSummaryExample": {
                  "transcript_ids": [
                    "foo"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurSummaryResponse",
                    "camelCase": {
                      "unsafeName": "lemurSummaryResponse",
                      "safeName": "lemurSummaryResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_summary_response",
                      "safeName": "lemur_summary_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_SUMMARY_RESPONSE",
                      "safeName": "LEMUR_SUMMARY_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurSummaryResponse",
                      "safeName": "LemurSummaryResponse"
                    }
                  },
                  "typeId": "LemurSummaryResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "LeMUR summary response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "lemurSummaryExample": {
                      "request_id": "foo",
                      "response": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Custom Summary allows you to distill a piece of audio into a few impactful sentences. You can give the model context to obtain more targeted results while outputting the results in a variety of formats described in human language.",
          "v2Examples": {
            "autogeneratedExamples": {
              "lemurSummaryExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/lemur/v3/generate/summary"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "transcript_ids": [
                      "foo"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request_id": "foo",
                      "response": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create answers to one or more questions about one or more transcripts.",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/lemur/v3/generate/question-answer",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "LemurQuestionAnswerRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "lemurQuestionAnswerRequestBadRequestError",
                    "safeName": "lemurQuestionAnswerRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_question_answer_request_bad_request_error",
                    "safeName": "lemur_question_answer_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurQuestionAnswerRequestBadRequestError",
                    "safeName": "LemurQuestionAnswerRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurQuestionAnswerRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurQuestionAnswerRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "lemurQuestionAnswerRequestUnauthorizedError",
                    "safeName": "lemurQuestionAnswerRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_question_answer_request_unauthorized_error",
                    "safeName": "lemur_question_answer_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurQuestionAnswerRequestUnauthorizedError",
                    "safeName": "LemurQuestionAnswerRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurQuestionAnswerRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurQuestionAnswerRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "lemurQuestionAnswerRequestNotFoundError",
                    "safeName": "lemurQuestionAnswerRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_question_answer_request_not_found_error",
                    "safeName": "lemur_question_answer_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurQuestionAnswerRequestNotFoundError",
                    "safeName": "LemurQuestionAnswerRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurQuestionAnswerRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurQuestionAnswerRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "lemurQuestionAnswerRequestTooManyRequestsError",
                    "safeName": "lemurQuestionAnswerRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_question_answer_request_too_many_requests_error",
                    "safeName": "lemur_question_answer_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurQuestionAnswerRequestTooManyRequestsError",
                    "safeName": "LemurQuestionAnswerRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurQuestionAnswerRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurQuestionAnswerRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "lemurQuestionAnswerRequestInternalServerError",
                    "safeName": "lemurQuestionAnswerRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_question_answer_request_internal_server_error",
                    "safeName": "lemur_question_answer_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurQuestionAnswerRequestInternalServerError",
                    "safeName": "LemurQuestionAnswerRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurQuestionAnswerRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurQuestionAnswerRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "lemurQuestionAnswerRequestServiceUnavailableError",
                    "safeName": "lemurQuestionAnswerRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_question_answer_request_service_unavailable_error",
                    "safeName": "lemur_question_answer_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurQuestionAnswerRequestServiceUnavailableError",
                    "safeName": "LemurQuestionAnswerRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurQuestionAnswerRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurQuestionAnswerRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "lemurQuestionAnswerRequestGatewayTimeoutError",
                    "safeName": "lemurQuestionAnswerRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_question_answer_request_gateway_timeout_error",
                    "safeName": "lemur_question_answer_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_QUESTION_ANSWER_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "LEMUR_QUESTION_ANSWER_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurQuestionAnswerRequestGatewayTimeoutError",
                    "safeName": "LemurQuestionAnswerRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurQuestionAnswerRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/lemur/v3/generate/question-answer",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_lemur.questionAnswer",
          "name": {
            "originalName": "questionAnswer",
            "camelCase": {
              "unsafeName": "questionAnswer",
              "safeName": "questionAnswer"
            },
            "snakeCase": {
              "unsafeName": "question_answer",
              "safeName": "question_answer"
            },
            "screamingSnakeCase": {
              "unsafeName": "QUESTION_ANSWER",
              "safeName": "QUESTION_ANSWER"
            },
            "pascalCase": {
              "unsafeName": "QuestionAnswer",
              "safeName": "QuestionAnswer"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "docs": "Parameters to ask questions about the transcripts.",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "LemurQuestionAnswerParameters",
                "camelCase": {
                  "unsafeName": "lemurQuestionAnswerParameters",
                  "safeName": "lemurQuestionAnswerParameters"
                },
                "snakeCase": {
                  "unsafeName": "lemur_question_answer_parameters",
                  "safeName": "lemur_question_answer_parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR_QUESTION_ANSWER_PARAMETERS",
                  "safeName": "LEMUR_QUESTION_ANSWER_PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "LemurQuestionAnswerParameters",
                  "safeName": "LemurQuestionAnswerParameters"
                }
              },
              "typeId": "LemurQuestionAnswerParameters",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "lemurQuestionAnswerExample": {
                  "transcript_ids": [
                    "foo"
                  ],
                  "questions": [
                    {
                      "question": "foo"
                    }
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurQuestionAnswerResponse",
                    "camelCase": {
                      "unsafeName": "lemurQuestionAnswerResponse",
                      "safeName": "lemurQuestionAnswerResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_question_answer_response",
                      "safeName": "lemur_question_answer_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_QUESTION_ANSWER_RESPONSE",
                      "safeName": "LEMUR_QUESTION_ANSWER_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurQuestionAnswerResponse",
                      "safeName": "LemurQuestionAnswerResponse"
                    }
                  },
                  "typeId": "LemurQuestionAnswerResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "LeMUR question & answer response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "lemurQuestionAnswerExample": {
                      "request_id": "foo",
                      "response": [
                        {
                          "question": "foo",
                          "answer": "foo"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Question & Answer allows you to ask free-form questions about a single transcript or a group of transcripts. The questions can be any whose answers you find useful, such as judging whether a caller is likely to become a customer or whether all items on a meeting's agenda were covered.",
          "v2Examples": {
            "autogeneratedExamples": {
              "lemurQuestionAnswerExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/lemur/v3/generate/question-answer"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "transcript_ids": [
                      "foo"
                    ],
                    "questions": [
                      {
                        "question": "foo"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request_id": "foo",
                      "response": [
                        {
                          "question": "foo",
                          "answer": "foo"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Extract action items from one or more meeting transcripts.",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/lemur/v3/generate/action-items",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "LemurActionItemsRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "lemurActionItemsRequestBadRequestError",
                    "safeName": "lemurActionItemsRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_action_items_request_bad_request_error",
                    "safeName": "lemur_action_items_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "LEMUR_ACTION_ITEMS_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurActionItemsRequestBadRequestError",
                    "safeName": "LemurActionItemsRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurActionItemsRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurActionItemsRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "lemurActionItemsRequestUnauthorizedError",
                    "safeName": "lemurActionItemsRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_action_items_request_unauthorized_error",
                    "safeName": "lemur_action_items_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "LEMUR_ACTION_ITEMS_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurActionItemsRequestUnauthorizedError",
                    "safeName": "LemurActionItemsRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurActionItemsRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurActionItemsRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "lemurActionItemsRequestNotFoundError",
                    "safeName": "lemurActionItemsRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_action_items_request_not_found_error",
                    "safeName": "lemur_action_items_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "LEMUR_ACTION_ITEMS_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurActionItemsRequestNotFoundError",
                    "safeName": "LemurActionItemsRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurActionItemsRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurActionItemsRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "lemurActionItemsRequestTooManyRequestsError",
                    "safeName": "lemurActionItemsRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_action_items_request_too_many_requests_error",
                    "safeName": "lemur_action_items_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "LEMUR_ACTION_ITEMS_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurActionItemsRequestTooManyRequestsError",
                    "safeName": "LemurActionItemsRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurActionItemsRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurActionItemsRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "lemurActionItemsRequestInternalServerError",
                    "safeName": "lemurActionItemsRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_action_items_request_internal_server_error",
                    "safeName": "lemur_action_items_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "LEMUR_ACTION_ITEMS_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurActionItemsRequestInternalServerError",
                    "safeName": "LemurActionItemsRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurActionItemsRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurActionItemsRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "lemurActionItemsRequestServiceUnavailableError",
                    "safeName": "lemurActionItemsRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_action_items_request_service_unavailable_error",
                    "safeName": "lemur_action_items_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "LEMUR_ACTION_ITEMS_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurActionItemsRequestServiceUnavailableError",
                    "safeName": "LemurActionItemsRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurActionItemsRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurActionItemsRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "lemurActionItemsRequestGatewayTimeoutError",
                    "safeName": "lemurActionItemsRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_action_items_request_gateway_timeout_error",
                    "safeName": "lemur_action_items_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_ACTION_ITEMS_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "LEMUR_ACTION_ITEMS_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurActionItemsRequestGatewayTimeoutError",
                    "safeName": "LemurActionItemsRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurActionItemsRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/lemur/v3/generate/action-items",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_lemur.actionItems",
          "name": {
            "originalName": "actionItems",
            "camelCase": {
              "unsafeName": "actionItems",
              "safeName": "actionItems"
            },
            "snakeCase": {
              "unsafeName": "action_items",
              "safeName": "action_items"
            },
            "screamingSnakeCase": {
              "unsafeName": "ACTION_ITEMS",
              "safeName": "ACTION_ITEMS"
            },
            "pascalCase": {
              "unsafeName": "ActionItems",
              "safeName": "ActionItems"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "docs": "Parameters to generate action items from transcripts.",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "LemurActionItemsParameters",
                "camelCase": {
                  "unsafeName": "lemurActionItemsParameters",
                  "safeName": "lemurActionItemsParameters"
                },
                "snakeCase": {
                  "unsafeName": "lemur_action_items_parameters",
                  "safeName": "lemur_action_items_parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR_ACTION_ITEMS_PARAMETERS",
                  "safeName": "LEMUR_ACTION_ITEMS_PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "LemurActionItemsParameters",
                  "safeName": "LemurActionItemsParameters"
                }
              },
              "typeId": "LemurActionItemsParameters",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "lemurActionItemsExample": {
                  "transcript_ids": [
                    "foo"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurActionItemsResponse",
                    "camelCase": {
                      "unsafeName": "lemurActionItemsResponse",
                      "safeName": "lemurActionItemsResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_action_items_response",
                      "safeName": "lemur_action_items_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_ACTION_ITEMS_RESPONSE",
                      "safeName": "LEMUR_ACTION_ITEMS_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurActionItemsResponse",
                      "safeName": "LemurActionItemsResponse"
                    }
                  },
                  "typeId": "LemurActionItemsResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "LeMUR action items response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "lemurActionItemsExample": {
                      "request_id": "foo",
                      "response": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Use LeMUR to generate a list of Action Items from a transcript",
          "v2Examples": {
            "autogeneratedExamples": {
              "lemurActionItemsExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/lemur/v3/generate/action-items"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "transcript_ids": [
                      "foo"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request_id": "foo",
                      "response": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Ask LeMUR to use one or more transcripts with a Custom Task to handle your specialized task.",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/lemur/v3/generate/task",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "LemurTaskRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "lemurTaskRequestBadRequestError",
                    "safeName": "lemurTaskRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_task_request_bad_request_error",
                    "safeName": "lemur_task_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_TASK_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "LEMUR_TASK_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurTaskRequestBadRequestError",
                    "safeName": "LemurTaskRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurTaskRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurTaskRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "lemurTaskRequestUnauthorizedError",
                    "safeName": "lemurTaskRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_task_request_unauthorized_error",
                    "safeName": "lemur_task_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_TASK_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "LEMUR_TASK_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurTaskRequestUnauthorizedError",
                    "safeName": "LemurTaskRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurTaskRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurTaskRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "lemurTaskRequestNotFoundError",
                    "safeName": "lemurTaskRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_task_request_not_found_error",
                    "safeName": "lemur_task_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_TASK_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "LEMUR_TASK_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurTaskRequestNotFoundError",
                    "safeName": "LemurTaskRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurTaskRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurTaskRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "lemurTaskRequestTooManyRequestsError",
                    "safeName": "lemurTaskRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_task_request_too_many_requests_error",
                    "safeName": "lemur_task_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_TASK_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "LEMUR_TASK_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurTaskRequestTooManyRequestsError",
                    "safeName": "LemurTaskRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurTaskRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurTaskRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "lemurTaskRequestInternalServerError",
                    "safeName": "lemurTaskRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_task_request_internal_server_error",
                    "safeName": "lemur_task_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_TASK_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "LEMUR_TASK_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurTaskRequestInternalServerError",
                    "safeName": "LemurTaskRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurTaskRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurTaskRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "lemurTaskRequestServiceUnavailableError",
                    "safeName": "lemurTaskRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_task_request_service_unavailable_error",
                    "safeName": "lemur_task_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_TASK_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "LEMUR_TASK_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurTaskRequestServiceUnavailableError",
                    "safeName": "LemurTaskRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurTaskRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "LemurTaskRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "lemurTaskRequestGatewayTimeoutError",
                    "safeName": "lemurTaskRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur_task_request_gateway_timeout_error",
                    "safeName": "lemur_task_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR_TASK_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "LEMUR_TASK_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "LemurTaskRequestGatewayTimeoutError",
                    "safeName": "LemurTaskRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "LemurTaskRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/lemur/v3/generate/task",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_lemur.task",
          "name": {
            "originalName": "task",
            "camelCase": {
              "unsafeName": "task",
              "safeName": "task"
            },
            "snakeCase": {
              "unsafeName": "task",
              "safeName": "task"
            },
            "screamingSnakeCase": {
              "unsafeName": "TASK",
              "safeName": "TASK"
            },
            "pascalCase": {
              "unsafeName": "Task",
              "safeName": "Task"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "docs": "Parameters to run the custom task.",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "LemurTaskParameters",
                "camelCase": {
                  "unsafeName": "lemurTaskParameters",
                  "safeName": "lemurTaskParameters"
                },
                "snakeCase": {
                  "unsafeName": "lemur_task_parameters",
                  "safeName": "lemur_task_parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR_TASK_PARAMETERS",
                  "safeName": "LEMUR_TASK_PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "LemurTaskParameters",
                  "safeName": "LemurTaskParameters"
                }
              },
              "typeId": "LemurTaskParameters",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "lemurTaskExample": {
                  "transcript_ids": [
                    "foo"
                  ],
                  "prompt": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "LemurTaskResponse",
                    "camelCase": {
                      "unsafeName": "lemurTaskResponse",
                      "safeName": "lemurTaskResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "lemur_task_response",
                      "safeName": "lemur_task_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LEMUR_TASK_RESPONSE",
                      "safeName": "LEMUR_TASK_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "LemurTaskResponse",
                      "safeName": "LemurTaskResponse"
                    }
                  },
                  "typeId": "LemurTaskResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "LeMUR task response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "lemurTaskExample": {
                      "request_id": "foo",
                      "response": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Use LeMUR to ask anything with Custom Task",
          "v2Examples": {
            "autogeneratedExamples": {
              "lemurTaskExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/lemur/v3/generate/task"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "transcript_ids": [
                      "foo"
                    ],
                    "prompt": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request_id": "foo",
                      "response": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete the data for a previously submitted LeMUR request.",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/lemur/v3/",
            "parts": [
              {
                "pathParameter": "request_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestId",
                  "safeName": "requestId"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                },
                "pascalCase": {
                  "unsafeName": "RequestId",
                  "safeName": "RequestId"
                }
              },
              "docs": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "request_id_example": "request_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "PurgeLemurRequestDataRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "purgeLemurRequestDataRequestBadRequestError",
                    "safeName": "purgeLemurRequestDataRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "purge_lemur_request_data_request_bad_request_error",
                    "safeName": "purge_lemur_request_data_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PurgeLemurRequestDataRequestBadRequestError",
                    "safeName": "PurgeLemurRequestDataRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PurgeLemurRequestDataRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "PurgeLemurRequestDataRequestUnauthorizedError",
                  "camelCase": {
                    "unsafeName": "purgeLemurRequestDataRequestUnauthorizedError",
                    "safeName": "purgeLemurRequestDataRequestUnauthorizedError"
                  },
                  "snakeCase": {
                    "unsafeName": "purge_lemur_request_data_request_unauthorized_error",
                    "safeName": "purge_lemur_request_data_request_unauthorized_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_UNAUTHORIZED_ERROR",
                    "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_UNAUTHORIZED_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PurgeLemurRequestDataRequestUnauthorizedError",
                    "safeName": "PurgeLemurRequestDataRequestUnauthorizedError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PurgeLemurRequestDataRequestUnauthorizedError"
              },
              "docs": "Unauthorized"
            },
            {
              "error": {
                "name": {
                  "originalName": "PurgeLemurRequestDataRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "purgeLemurRequestDataRequestNotFoundError",
                    "safeName": "purgeLemurRequestDataRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "purge_lemur_request_data_request_not_found_error",
                    "safeName": "purge_lemur_request_data_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PurgeLemurRequestDataRequestNotFoundError",
                    "safeName": "PurgeLemurRequestDataRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PurgeLemurRequestDataRequestNotFoundError"
              },
              "docs": "Not found"
            },
            {
              "error": {
                "name": {
                  "originalName": "PurgeLemurRequestDataRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "purgeLemurRequestDataRequestTooManyRequestsError",
                    "safeName": "purgeLemurRequestDataRequestTooManyRequestsError"
                  },
                  "snakeCase": {
                    "unsafeName": "purge_lemur_request_data_request_too_many_requests_error",
                    "safeName": "purge_lemur_request_data_request_too_many_requests_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_TOO_MANY_REQUESTS_ERROR",
                    "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_TOO_MANY_REQUESTS_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PurgeLemurRequestDataRequestTooManyRequestsError",
                    "safeName": "PurgeLemurRequestDataRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PurgeLemurRequestDataRequestTooManyRequestsError"
              },
              "docs": "Too Many Requests"
            },
            {
              "error": {
                "name": {
                  "originalName": "PurgeLemurRequestDataRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "purgeLemurRequestDataRequestInternalServerError",
                    "safeName": "purgeLemurRequestDataRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "purge_lemur_request_data_request_internal_server_error",
                    "safeName": "purge_lemur_request_data_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PurgeLemurRequestDataRequestInternalServerError",
                    "safeName": "PurgeLemurRequestDataRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PurgeLemurRequestDataRequestInternalServerError"
              },
              "docs": "An error occurred while processing the request"
            },
            {
              "error": {
                "name": {
                  "originalName": "PurgeLemurRequestDataRequestServiceUnavailableError",
                  "camelCase": {
                    "unsafeName": "purgeLemurRequestDataRequestServiceUnavailableError",
                    "safeName": "purgeLemurRequestDataRequestServiceUnavailableError"
                  },
                  "snakeCase": {
                    "unsafeName": "purge_lemur_request_data_request_service_unavailable_error",
                    "safeName": "purge_lemur_request_data_request_service_unavailable_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_SERVICE_UNAVAILABLE_ERROR",
                    "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_SERVICE_UNAVAILABLE_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PurgeLemurRequestDataRequestServiceUnavailableError",
                    "safeName": "PurgeLemurRequestDataRequestServiceUnavailableError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PurgeLemurRequestDataRequestServiceUnavailableError"
              },
              "docs": "Service Unavailable"
            },
            {
              "error": {
                "name": {
                  "originalName": "PurgeLemurRequestDataRequestGatewayTimeoutError",
                  "camelCase": {
                    "unsafeName": "purgeLemurRequestDataRequestGatewayTimeoutError",
                    "safeName": "purgeLemurRequestDataRequestGatewayTimeoutError"
                  },
                  "snakeCase": {
                    "unsafeName": "purge_lemur_request_data_request_gateway_timeout_error",
                    "safeName": "purge_lemur_request_data_request_gateway_timeout_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_GATEWAY_TIMEOUT_ERROR",
                    "safeName": "PURGE_LEMUR_REQUEST_DATA_REQUEST_GATEWAY_TIMEOUT_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PurgeLemurRequestDataRequestGatewayTimeoutError",
                    "safeName": "PurgeLemurRequestDataRequestGatewayTimeoutError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PurgeLemurRequestDataRequestGatewayTimeoutError"
              },
              "docs": "Gateway Timeout"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/lemur/v3/",
            "parts": [
              {
                "pathParameter": "request_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestId",
                  "safeName": "requestId"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                },
                "pascalCase": {
                  "unsafeName": "RequestId",
                  "safeName": "RequestId"
                }
              },
              "docs": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "request_id_example": "request_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_lemur.purgeRequestData",
          "name": {
            "originalName": "purgeRequestData",
            "camelCase": {
              "unsafeName": "purgeRequestData",
              "safeName": "purgeRequestData"
            },
            "snakeCase": {
              "unsafeName": "purge_request_data",
              "safeName": "purge_request_data"
            },
            "screamingSnakeCase": {
              "unsafeName": "PURGE_REQUEST_DATA",
              "safeName": "PURGE_REQUEST_DATA"
            },
            "pascalCase": {
              "unsafeName": "PurgeRequestData",
              "safeName": "PurgeRequestData"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "PurgeLemurRequestDataResponse",
                    "camelCase": {
                      "unsafeName": "purgeLemurRequestDataResponse",
                      "safeName": "purgeLemurRequestDataResponse"
                    },
                    "snakeCase": {
                      "unsafeName": "purge_lemur_request_data_response",
                      "safeName": "purge_lemur_request_data_response"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PURGE_LEMUR_REQUEST_DATA_RESPONSE",
                      "safeName": "PURGE_LEMUR_REQUEST_DATA_RESPONSE"
                    },
                    "pascalCase": {
                      "unsafeName": "PurgeLemurRequestDataResponse",
                      "safeName": "PurgeLemurRequestDataResponse"
                    }
                  },
                  "typeId": "PurgeLemurRequestDataResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "LeMUR request data deleted.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "lemurPurgeRequestDataExample": {
                      "request_id": "foo",
                      "request_id_to_purge": "foo",
                      "deleted": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete the data for a previously submitted LeMUR request.\nThe LLM response data, as well as any context provided in the original request will be removed.\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "purgeRequestDataExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/lemur/v3/request_id"
                  },
                  "environment": "AssemblyAI API",
                  "pathParameters": {
                    "request_id": "request_id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request_id": "foo",
                      "request_id_to_purge": "foo",
                      "deleted": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    }
  },
  "webhookGroups": {},
  "subpackages": {
    "subpackage_files": {
      "name": {
        "originalName": "files",
        "camelCase": {
          "unsafeName": "files",
          "safeName": "files"
        },
        "snakeCase": {
          "unsafeName": "files",
          "safeName": "files"
        },
        "screamingSnakeCase": {
          "unsafeName": "FILES",
          "safeName": "FILES"
        },
        "pascalCase": {
          "unsafeName": "Files",
          "safeName": "Files"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "files",
            "camelCase": {
              "unsafeName": "files",
              "safeName": "files"
            },
            "snakeCase": {
              "unsafeName": "files",
              "safeName": "files"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILES",
              "safeName": "FILES"
            },
            "pascalCase": {
              "unsafeName": "Files",
              "safeName": "Files"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "files",
          "camelCase": {
            "unsafeName": "files",
            "safeName": "files"
          },
          "snakeCase": {
            "unsafeName": "files",
            "safeName": "files"
          },
          "screamingSnakeCase": {
            "unsafeName": "FILES",
            "safeName": "FILES"
          },
          "pascalCase": {
            "unsafeName": "Files",
            "safeName": "Files"
          }
        }
      },
      "service": "service_files",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_transcript": {
      "name": {
        "originalName": "transcript",
        "camelCase": {
          "unsafeName": "transcript",
          "safeName": "transcript"
        },
        "snakeCase": {
          "unsafeName": "transcript",
          "safeName": "transcript"
        },
        "screamingSnakeCase": {
          "unsafeName": "TRANSCRIPT",
          "safeName": "TRANSCRIPT"
        },
        "pascalCase": {
          "unsafeName": "Transcript",
          "safeName": "Transcript"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "transcript",
            "camelCase": {
              "unsafeName": "transcript",
              "safeName": "transcript"
            },
            "snakeCase": {
              "unsafeName": "transcript",
              "safeName": "transcript"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT",
              "safeName": "TRANSCRIPT"
            },
            "pascalCase": {
              "unsafeName": "Transcript",
              "safeName": "Transcript"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "transcript",
          "camelCase": {
            "unsafeName": "transcript",
            "safeName": "transcript"
          },
          "snakeCase": {
            "unsafeName": "transcript",
            "safeName": "transcript"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRANSCRIPT",
            "safeName": "TRANSCRIPT"
          },
          "pascalCase": {
            "unsafeName": "Transcript",
            "safeName": "Transcript"
          }
        }
      },
      "service": "service_transcript",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_realtime": {
      "name": {
        "originalName": "realtime",
        "camelCase": {
          "unsafeName": "realtime",
          "safeName": "realtime"
        },
        "snakeCase": {
          "unsafeName": "realtime",
          "safeName": "realtime"
        },
        "screamingSnakeCase": {
          "unsafeName": "REALTIME",
          "safeName": "REALTIME"
        },
        "pascalCase": {
          "unsafeName": "Realtime",
          "safeName": "Realtime"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "realtime",
            "camelCase": {
              "unsafeName": "realtime",
              "safeName": "realtime"
            },
            "snakeCase": {
              "unsafeName": "realtime",
              "safeName": "realtime"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME",
              "safeName": "REALTIME"
            },
            "pascalCase": {
              "unsafeName": "Realtime",
              "safeName": "Realtime"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "realtime",
          "camelCase": {
            "unsafeName": "realtime",
            "safeName": "realtime"
          },
          "snakeCase": {
            "unsafeName": "realtime",
            "safeName": "realtime"
          },
          "screamingSnakeCase": {
            "unsafeName": "REALTIME",
            "safeName": "REALTIME"
          },
          "pascalCase": {
            "unsafeName": "Realtime",
            "safeName": "Realtime"
          }
        }
      },
      "service": "service_realtime",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_lemur": {
      "name": {
        "originalName": "lemur",
        "camelCase": {
          "unsafeName": "lemur",
          "safeName": "lemur"
        },
        "snakeCase": {
          "unsafeName": "lemur",
          "safeName": "lemur"
        },
        "screamingSnakeCase": {
          "unsafeName": "LEMUR",
          "safeName": "LEMUR"
        },
        "pascalCase": {
          "unsafeName": "Lemur",
          "safeName": "Lemur"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "lemur",
            "camelCase": {
              "unsafeName": "lemur",
              "safeName": "lemur"
            },
            "snakeCase": {
              "unsafeName": "lemur",
              "safeName": "lemur"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR",
              "safeName": "LEMUR"
            },
            "pascalCase": {
              "unsafeName": "Lemur",
              "safeName": "Lemur"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "lemur",
          "camelCase": {
            "unsafeName": "lemur",
            "safeName": "lemur"
          },
          "snakeCase": {
            "unsafeName": "lemur",
            "safeName": "lemur"
          },
          "screamingSnakeCase": {
            "unsafeName": "LEMUR",
            "safeName": "LEMUR"
          },
          "pascalCase": {
            "unsafeName": "Lemur",
            "safeName": "Lemur"
          }
        }
      },
      "service": "service_lemur",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_userId": {
      "name": {
        "originalName": "userId",
        "camelCase": {
          "unsafeName": "userId",
          "safeName": "userId"
        },
        "snakeCase": {
          "unsafeName": "user_id",
          "safeName": "user_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "USER_ID",
          "safeName": "USER_ID"
        },
        "pascalCase": {
          "unsafeName": "UserId",
          "safeName": "UserId"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "userId",
            "camelCase": {
              "unsafeName": "userId",
              "safeName": "userId"
            },
            "snakeCase": {
              "unsafeName": "user_id",
              "safeName": "user_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "USER_ID",
              "safeName": "USER_ID"
            },
            "pascalCase": {
              "unsafeName": "UserId",
              "safeName": "UserId"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "userId",
          "camelCase": {
            "unsafeName": "userId",
            "safeName": "userId"
          },
          "snakeCase": {
            "unsafeName": "user_id",
            "safeName": "user_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_ID",
            "safeName": "USER_ID"
          },
          "pascalCase": {
            "unsafeName": "UserId",
            "safeName": "UserId"
          }
        }
      },
      "types": [],
      "errors": [],
      "subpackages": [],
      "websocket": "channel_userId",
      "hasEndpointsInTree": false
    }
  },
  "websocketChannels": {
    "channel_userId": {
      "name": {
        "originalName": "userId",
        "camelCase": {
          "unsafeName": "userId",
          "safeName": "userId"
        },
        "snakeCase": {
          "unsafeName": "user_id",
          "safeName": "user_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "USER_ID",
          "safeName": "USER_ID"
        },
        "pascalCase": {
          "unsafeName": "UserId",
          "safeName": "UserId"
        }
      },
      "baseUrl": "API",
      "path": {
        "head": "/",
        "parts": [
          {
            "pathParameter": "userId",
            "tail": ""
          }
        ]
      },
      "auth": false,
      "headers": [
        {
          "name": {
            "name": {
              "originalName": "Authentication",
              "camelCase": {
                "unsafeName": "authentication",
                "safeName": "authentication"
              },
              "snakeCase": {
                "unsafeName": "authentication",
                "safeName": "authentication"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUTHENTICATION",
                "safeName": "AUTHENTICATION"
              },
              "pascalCase": {
                "unsafeName": "Authentication",
                "safeName": "Authentication"
              }
            },
            "wireValue": "Authentication"
          },
          "docs": "Authenticate using your AssemblyAI API key.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "Authentication_example": "Authentication"
            }
          }
        }
      ],
      "queryParameters": [
        {
          "name": {
            "name": {
              "originalName": "sample_rate",
              "camelCase": {
                "unsafeName": "sampleRate",
                "safeName": "sampleRate"
              },
              "snakeCase": {
                "unsafeName": "sample_rate",
                "safeName": "sample_rate"
              },
              "screamingSnakeCase": {
                "unsafeName": "SAMPLE_RATE",
                "safeName": "SAMPLE_RATE"
              },
              "pascalCase": {
                "unsafeName": "SampleRate",
                "safeName": "SampleRate"
              }
            },
            "wireValue": "sample_rate"
          },
          "docs": "The sample rate of the streamed audio.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "sample_rate_example": 42
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "word_boost",
              "camelCase": {
                "unsafeName": "wordBoost",
                "safeName": "wordBoost"
              },
              "snakeCase": {
                "unsafeName": "word_boost",
                "safeName": "word_boost"
              },
              "screamingSnakeCase": {
                "unsafeName": "WORD_BOOST",
                "safeName": "WORD_BOOST"
              },
              "pascalCase": {
                "unsafeName": "WordBoost",
                "safeName": "WordBoost"
              }
            },
            "wireValue": "word_boost"
          },
          "docs": "Add up to 2500 characters of custom vocabulary.\nThe parameter should map to a JSON encoded list of strings.\n",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "word_boost_example": "word_boost"
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "token",
              "camelCase": {
                "unsafeName": "token",
                "safeName": "token"
              },
              "snakeCase": {
                "unsafeName": "token",
                "safeName": "token"
              },
              "screamingSnakeCase": {
                "unsafeName": "TOKEN",
                "safeName": "TOKEN"
              },
              "pascalCase": {
                "unsafeName": "Token",
                "safeName": "Token"
              }
            },
            "wireValue": "token"
          },
          "docs": "Authenticate using a [generated temporary token](https://www.assemblyai.com/docs/Guides/real-time_streaming_transcription#creating-temporary-authentication-tokens)",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "token_example": "token"
            }
          }
        }
      ],
      "pathParameters": [
        {
          "name": {
            "originalName": "userId",
            "camelCase": {
              "unsafeName": "userId",
              "safeName": "userId"
            },
            "snakeCase": {
              "unsafeName": "user_id",
              "safeName": "user_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "USER_ID",
              "safeName": "USER_ID"
            },
            "pascalCase": {
              "unsafeName": "UserId",
              "safeName": "UserId"
            }
          },
          "docs": "The ID of the user.",
          "valueType": {
            "primitive": {
              "v1": "STRING",
              "v2": {
                "validation": {},
                "type": "string"
              }
            },
            "type": "primitive"
          },
          "location": "ENDPOINT",
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "userId_example": "userId"
            }
          }
        }
      ],
      "messages": [
        {
          "type": "subscribe",
          "displayName": "subscribe",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserIdSubscribe",
                "camelCase": {
                  "unsafeName": "userIdSubscribe",
                  "safeName": "userIdSubscribe"
                },
                "snakeCase": {
                  "unsafeName": "user_id_subscribe",
                  "safeName": "user_id_subscribe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID_SUBSCRIBE",
                  "safeName": "USER_ID_SUBSCRIBE"
                },
                "pascalCase": {
                  "unsafeName": "UserIdSubscribe",
                  "safeName": "UserIdSubscribe"
                }
              },
              "typeId": "UserIdSubscribe",
              "inline": false,
              "type": "named"
            },
            "docs": "Receive messages from the WebSocket",
            "type": "reference"
          },
          "docs": "Receive messages from the WebSocket"
        },
        {
          "type": "publish",
          "displayName": "publish",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserIdPublish",
                "camelCase": {
                  "unsafeName": "userIdPublish",
                  "safeName": "userIdPublish"
                },
                "snakeCase": {
                  "unsafeName": "user_id_publish",
                  "safeName": "user_id_publish"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID_PUBLISH",
                  "safeName": "USER_ID_PUBLISH"
                },
                "pascalCase": {
                  "unsafeName": "UserIdPublish",
                  "safeName": "UserIdPublish"
                }
              },
              "typeId": "UserIdPublish",
              "inline": false,
              "type": "named"
            },
            "docs": "Send messages to the WebSocket",
            "type": "reference"
          },
          "docs": "Send messages to the WebSocket"
        }
      ],
      "examples": [
        {
          "pathParameters": [
            {
              "name": {
                "originalName": "userId",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "value": {
                "jsonExample": "userId",
                "shape": {
                  "primitive": {
                    "string": {
                      "original": "userId"
                    },
                    "type": "string"
                  },
                  "type": "primitive"
                }
              }
            }
          ],
          "headers": [],
          "queryParameters": [],
          "messages": [
            {
              "type": "publish",
              "body": {
                "jsonExample": {
                  "audio_data": "audio_data"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "audio_data": "audio_data"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": {
                                  "originalName": "audio_data",
                                  "camelCase": {
                                    "unsafeName": "audioData",
                                    "safeName": "audioData"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "audio_data",
                                    "safeName": "audio_data"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "AUDIO_DATA",
                                    "safeName": "AUDIO_DATA"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "AudioData",
                                    "safeName": "AudioData"
                                  }
                                },
                                "wireValue": "audio_data"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "SendAudio",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "SendAudio",
                                  "camelCase": {
                                    "unsafeName": "sendAudio",
                                    "safeName": "sendAudio"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "send_audio",
                                    "safeName": "send_audio"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "SEND_AUDIO",
                                    "safeName": "SEND_AUDIO"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "SendAudio",
                                    "safeName": "SendAudio"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "audio_data",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "audio_data"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "SendAudio",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "SendAudio",
                            "camelCase": {
                              "unsafeName": "sendAudio",
                              "safeName": "sendAudio"
                            },
                            "snakeCase": {
                              "unsafeName": "send_audio",
                              "safeName": "send_audio"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "SEND_AUDIO",
                              "safeName": "SEND_AUDIO"
                            },
                            "pascalCase": {
                              "unsafeName": "SendAudio",
                              "safeName": "SendAudio"
                            }
                          }
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "UserIdPublish",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "UserIdPublish",
                      "camelCase": {
                        "unsafeName": "userIdPublish",
                        "safeName": "userIdPublish"
                      },
                      "snakeCase": {
                        "unsafeName": "user_id_publish",
                        "safeName": "user_id_publish"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "USER_ID_PUBLISH",
                        "safeName": "USER_ID_PUBLISH"
                      },
                      "pascalCase": {
                        "unsafeName": "UserIdPublish",
                        "safeName": "UserIdPublish"
                      }
                    }
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "subscribe",
              "body": {
                "jsonExample": {
                  "message_type": "SessionBegins",
                  "session_id": "session_id",
                  "expires_at": "2024-01-15T09:30:00Z"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "message_type": "SessionBegins",
                        "session_id": "session_id",
                        "expires_at": "2024-01-15T09:30:00Z"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": {
                                  "originalName": "message_type",
                                  "camelCase": {
                                    "unsafeName": "messageType",
                                    "safeName": "messageType"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "message_type",
                                    "safeName": "message_type"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "MESSAGE_TYPE",
                                    "safeName": "MESSAGE_TYPE"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "MessageType",
                                    "safeName": "MessageType"
                                  }
                                },
                                "wireValue": "message_type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "RealtimeBaseMessage",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "RealtimeBaseMessage",
                                  "camelCase": {
                                    "unsafeName": "realtimeBaseMessage",
                                    "safeName": "realtimeBaseMessage"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "realtime_base_message",
                                    "safeName": "realtime_base_message"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "REALTIME_BASE_MESSAGE",
                                    "safeName": "REALTIME_BASE_MESSAGE"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "RealtimeBaseMessage",
                                    "safeName": "RealtimeBaseMessage"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "SessionBegins",
                                "shape": {
                                  "shape": {
                                    "value": {
                                      "name": {
                                        "originalName": "SessionBegins",
                                        "camelCase": {
                                          "unsafeName": "sessionBegins",
                                          "safeName": "sessionBegins"
                                        },
                                        "snakeCase": {
                                          "unsafeName": "session_begins",
                                          "safeName": "session_begins"
                                        },
                                        "screamingSnakeCase": {
                                          "unsafeName": "SESSION_BEGINS",
                                          "safeName": "SESSION_BEGINS"
                                        },
                                        "pascalCase": {
                                          "unsafeName": "SessionBegins",
                                          "safeName": "SessionBegins"
                                        }
                                      },
                                      "wireValue": "SessionBegins"
                                    },
                                    "type": "enum"
                                  },
                                  "typeName": {
                                    "typeId": "MessageType",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": {
                                      "originalName": "MessageType",
                                      "camelCase": {
                                        "unsafeName": "messageType",
                                        "safeName": "messageType"
                                      },
                                      "snakeCase": {
                                        "unsafeName": "message_type",
                                        "safeName": "message_type"
                                      },
                                      "screamingSnakeCase": {
                                        "unsafeName": "MESSAGE_TYPE",
                                        "safeName": "MESSAGE_TYPE"
                                      },
                                      "pascalCase": {
                                        "unsafeName": "MessageType",
                                        "safeName": "MessageType"
                                      }
                                    }
                                  },
                                  "type": "named"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "message_type",
                                  "camelCase": {
                                    "unsafeName": "messageType",
                                    "safeName": "messageType"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "message_type",
                                    "safeName": "message_type"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "MESSAGE_TYPE",
                                    "safeName": "MESSAGE_TYPE"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "MessageType",
                                    "safeName": "MessageType"
                                  }
                                },
                                "wireValue": "message_type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "SessionBegins",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "SessionBegins",
                                  "camelCase": {
                                    "unsafeName": "sessionBegins",
                                    "safeName": "sessionBegins"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "session_begins",
                                    "safeName": "session_begins"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "SESSION_BEGINS",
                                    "safeName": "SESSION_BEGINS"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "SessionBegins",
                                    "safeName": "SessionBegins"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "SessionBegins",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "SessionBegins"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "session_id",
                                  "camelCase": {
                                    "unsafeName": "sessionId",
                                    "safeName": "sessionId"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "session_id",
                                    "safeName": "session_id"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "SESSION_ID",
                                    "safeName": "SESSION_ID"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "SessionId",
                                    "safeName": "SessionId"
                                  }
                                },
                                "wireValue": "session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "SessionBegins",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "SessionBegins",
                                  "camelCase": {
                                    "unsafeName": "sessionBegins",
                                    "safeName": "sessionBegins"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "session_begins",
                                    "safeName": "session_begins"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "SESSION_BEGINS",
                                    "safeName": "SESSION_BEGINS"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "SessionBegins",
                                    "safeName": "SessionBegins"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "session_id",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "session_id"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "expires_at",
                                  "camelCase": {
                                    "unsafeName": "expiresAt",
                                    "safeName": "expiresAt"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "expires_at",
                                    "safeName": "expires_at"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "EXPIRES_AT",
                                    "safeName": "EXPIRES_AT"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "ExpiresAt",
                                    "safeName": "ExpiresAt"
                                  }
                                },
                                "wireValue": "expires_at"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "SessionBegins",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "SessionBegins",
                                  "camelCase": {
                                    "unsafeName": "sessionBegins",
                                    "safeName": "sessionBegins"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "session_begins",
                                    "safeName": "session_begins"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "SESSION_BEGINS",
                                    "safeName": "SESSION_BEGINS"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "SessionBegins",
                                    "safeName": "SessionBegins"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "2024-01-15T09:30:00Z",
                                "shape": {
                                  "primitive": {
                                    "datetime": "2024-01-15T09:30:00.000Z",
                                    "raw": "2024-01-15T09:30:00Z",
                                    "type": "datetime"
                                  },
                                  "type": "primitive"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "SessionBegins",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "SessionBegins",
                            "camelCase": {
                              "unsafeName": "sessionBegins",
                              "safeName": "sessionBegins"
                            },
                            "snakeCase": {
                              "unsafeName": "session_begins",
                              "safeName": "session_begins"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "SESSION_BEGINS",
                              "safeName": "SESSION_BEGINS"
                            },
                            "pascalCase": {
                              "unsafeName": "SessionBegins",
                              "safeName": "SessionBegins"
                            }
                          }
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "UserIdSubscribe",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "UserIdSubscribe",
                      "camelCase": {
                        "unsafeName": "userIdSubscribe",
                        "safeName": "userIdSubscribe"
                      },
                      "snakeCase": {
                        "unsafeName": "user_id_subscribe",
                        "safeName": "user_id_subscribe"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "USER_ID_SUBSCRIBE",
                        "safeName": "USER_ID_SUBSCRIBE"
                      },
                      "pascalCase": {
                        "unsafeName": "UserIdSubscribe",
                        "safeName": "UserIdSubscribe"
                      }
                    }
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/userId"
        }
      ],
      "v2Examples": {
        "autogeneratedExamples": {},
        "userSpecifiedExamples": {
          "0": {
            "channel": {
              "method": "GET",
              "path": "/{userId}"
            },
            "baseUrl": "/{userId}",
            "environment": "API",
            "pathParameters": {},
            "messages": [
              {
                "type": "publish",
                "body": {
                  "audio_data": "base64-encoded-audio-data"
                }
              },
              {
                "type": "publish",
                "body": {
                  "terminate_session": true
                }
              }
            ]
          }
        }
      }
    }
  },
  "rootPackage": {
    "types": [
      "RedactedAudioResponse",
      "RedactedAudioStatus",
      "SubtitleFormat",
      "WordSearchResponse",
      "WordSearchMatch",
      "WordSearchTimestamp",
      "Timestamp",
      "CreateTranscriptOptionalParameters",
      "CreateTranscriptParameters",
      "SummaryModel",
      "SummaryType",
      "TranscriptBoostParam",
      "TranscriptCustomSpelling",
      "TranscriptUtterance",
      "SubstitutionPolicy",
      "PiiPolicy",
      "TranscriptLanguageCode",
      "TranscriptStatus",
      "Transcript",
      "Chapter",
      "Entity",
      "EntityType",
      "SentimentAnalysisResult",
      "Sentiment",
      "TopicDetectionResult",
      "ContentSafetyLabel",
      "ContentSafetyLabelResult",
      "SeverityScoreSummary",
      "AutoHighlightsResult",
      "AutoHighlightResult",
      "TranscriptWord",
      "TranscriptSentence",
      "SentencesResponse",
      "TranscriptParagraph",
      "ParagraphsResponse",
      "PageDetails",
      "TranscriptListParameters",
      "TranscriptListItem",
      "TranscriptList",
      "UploadedFile",
      "CreateRealtimeTemporaryTokenParameters",
      "RealtimeTemporaryTokenResponse",
      "AudioIntelligenceModelStatus",
      "PurgeLemurRequestDataResponse",
      "LemurBaseResponse",
      "LemurSummaryResponse",
      "LemurQuestionAnswerResponse",
      "LemurQuestionAnswer",
      "LemurActionItemsResponse",
      "LemurTaskResponse",
      "LemurBaseParameters",
      "LemurSummaryParameters",
      "LemurQuestionAnswerParameters",
      "LemurQuestion",
      "LemurActionItemsParameters",
      "LemurTaskParameters",
      "LemurModel",
      "Error",
      "SendAudio",
      "TerminateSession",
      "SessionBegins",
      "SessionTerminated",
      "RealtimeError",
      "PartialTranscript",
      "FinalTranscript",
      "RealtimeBaseMessage",
      "RealtimeMessage",
      "RealtimeError",
      "MessageType",
      "RealtimeTranscriptType",
      "RealtimeTranscript",
      "SessionBegins",
      "SessionTerminated",
      "RealtimeBaseTranscript",
      "PartialTranscript",
      "FinalTranscript",
      "Word",
      "AudioData",
      "TerminateSession"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_files",
      "subpackage_transcript",
      "subpackage_realtime",
      "subpackage_lemur",
      "subpackage_userId"
    ],
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "hasEndpointsInTree": false
  },
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  }
}