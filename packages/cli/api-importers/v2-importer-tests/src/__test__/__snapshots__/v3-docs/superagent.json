{
  "auth": {
    "requirement": "ANY",
    "schemes": [
      {
        "token": {
          "originalName": "token",
          "camelCase": {
            "unsafeName": "token",
            "safeName": "token"
          },
          "snakeCase": {
            "unsafeName": "token",
            "safeName": "token"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOKEN",
            "safeName": "TOKEN"
          },
          "pascalCase": {
            "unsafeName": "Token",
            "safeName": "Token"
          }
        },
        "type": "bearer"
      },
      {
        "name": {
          "name": {
            "originalName": "apiKey",
            "camelCase": {
              "unsafeName": "apiKey",
              "safeName": "apiKey"
            },
            "snakeCase": {
              "unsafeName": "api_key",
              "safeName": "api_key"
            },
            "screamingSnakeCase": {
              "unsafeName": "API_KEY",
              "safeName": "API_KEY"
            },
            "pascalCase": {
              "unsafeName": "ApiKey",
              "safeName": "ApiKey"
            }
          },
          "wireValue": "X_SUPERAGENT_API_KEY"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "header"
      }
    ]
  },
  "selfHosted": false,
  "types": {
    "AgentLlm": {
      "name": {
        "typeId": "AgentLlm",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AgentLlm",
          "camelCase": {
            "unsafeName": "agentLlm",
            "safeName": "agentLlm"
          },
          "snakeCase": {
            "unsafeName": "agent_llm",
            "safeName": "agent_llm"
          },
          "screamingSnakeCase": {
            "unsafeName": "AGENT_LLM",
            "safeName": "AGENT_LLM"
          },
          "pascalCase": {
            "unsafeName": "AgentLlm",
            "safeName": "AgentLlm"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AgentLlm_example_autogenerated": {}
        }
      }
    },
    "Agent": {
      "name": {
        "typeId": "Agent",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Agent",
          "camelCase": {
            "unsafeName": "agent",
            "safeName": "agent"
          },
          "snakeCase": {
            "unsafeName": "agent",
            "safeName": "agent"
          },
          "screamingSnakeCase": {
            "unsafeName": "AGENT",
            "safeName": "AGENT"
          },
          "pascalCase": {
            "unsafeName": "Agent",
            "safeName": "Agent"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AgentName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AgentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "llm",
                "camelCase": {
                  "unsafeName": "llm",
                  "safeName": "llm"
                },
                "snakeCase": {
                  "unsafeName": "llm",
                  "safeName": "llm"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LLM",
                  "safeName": "LLM"
                },
                "pascalCase": {
                  "unsafeName": "Llm",
                  "safeName": "Llm"
                }
              },
              "wireValue": "llm"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "AgentLlm",
                    "camelCase": {
                      "unsafeName": "agentLlm",
                      "safeName": "agentLlm"
                    },
                    "snakeCase": {
                      "unsafeName": "agent_llm",
                      "safeName": "agent_llm"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AGENT_LLM",
                      "safeName": "AGENT_LLM"
                    },
                    "pascalCase": {
                      "unsafeName": "AgentLlm",
                      "safeName": "AgentLlm"
                    }
                  },
                  "typeId": "AgentLlm",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AgentLlm_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "has_memory",
                "camelCase": {
                  "unsafeName": "hasMemory",
                  "safeName": "hasMemory"
                },
                "snakeCase": {
                  "unsafeName": "has_memory",
                  "safeName": "has_memory"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HAS_MEMORY",
                  "safeName": "HAS_MEMORY"
                },
                "pascalCase": {
                  "unsafeName": "HasMemory",
                  "safeName": "HasMemory"
                }
              },
              "wireValue": "has_memory"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AgentHasMemory_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "documentId",
                "camelCase": {
                  "unsafeName": "documentId",
                  "safeName": "documentId"
                },
                "snakeCase": {
                  "unsafeName": "document_id",
                  "safeName": "document_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DOCUMENT_ID",
                  "safeName": "DOCUMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "DocumentId",
                  "safeName": "DocumentId"
                }
              },
              "wireValue": "documentId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AgentDocumentId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "promptId",
                "camelCase": {
                  "unsafeName": "promptId",
                  "safeName": "promptId"
                },
                "snakeCase": {
                  "unsafeName": "prompt_id",
                  "safeName": "prompt_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT_ID",
                  "safeName": "PROMPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "PromptId",
                  "safeName": "PromptId"
                }
              },
              "wireValue": "promptId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AgentPromptId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "toolId",
                "camelCase": {
                  "unsafeName": "toolId",
                  "safeName": "toolId"
                },
                "snakeCase": {
                  "unsafeName": "tool_id",
                  "safeName": "tool_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ID",
                  "safeName": "TOOL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolId",
                  "safeName": "ToolId"
                }
              },
              "wireValue": "toolId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AgentToolId_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Agent_example_autogenerated": {
            "name": "foo",
            "type": "foo"
          }
        }
      }
    },
    "ApiToken": {
      "name": {
        "typeId": "ApiToken",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ApiToken",
          "camelCase": {
            "unsafeName": "apiToken",
            "safeName": "apiToken"
          },
          "snakeCase": {
            "unsafeName": "api_token",
            "safeName": "api_token"
          },
          "screamingSnakeCase": {
            "unsafeName": "API_TOKEN",
            "safeName": "API_TOKEN"
          },
          "pascalCase": {
            "unsafeName": "ApiToken",
            "safeName": "ApiToken"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ApiTokenDescription_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ApiToken_example_autogenerated": {
            "description": "foo"
          }
        }
      }
    },
    "DocumentAuthorization": {
      "name": {
        "typeId": "DocumentAuthorization",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "DocumentAuthorization",
          "camelCase": {
            "unsafeName": "documentAuthorization",
            "safeName": "documentAuthorization"
          },
          "snakeCase": {
            "unsafeName": "document_authorization",
            "safeName": "document_authorization"
          },
          "screamingSnakeCase": {
            "unsafeName": "DOCUMENT_AUTHORIZATION",
            "safeName": "DOCUMENT_AUTHORIZATION"
          },
          "pascalCase": {
            "unsafeName": "DocumentAuthorization",
            "safeName": "DocumentAuthorization"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DocumentAuthorization_example_autogenerated": {}
        }
      }
    },
    "DocumentSplitter": {
      "name": {
        "typeId": "DocumentSplitter",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "DocumentSplitter",
          "camelCase": {
            "unsafeName": "documentSplitter",
            "safeName": "documentSplitter"
          },
          "snakeCase": {
            "unsafeName": "document_splitter",
            "safeName": "document_splitter"
          },
          "screamingSnakeCase": {
            "unsafeName": "DOCUMENT_SPLITTER",
            "safeName": "DOCUMENT_SPLITTER"
          },
          "pascalCase": {
            "unsafeName": "DocumentSplitter",
            "safeName": "DocumentSplitter"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DocumentSplitter_example_autogenerated": {}
        }
      }
    },
    "Document": {
      "name": {
        "typeId": "Document",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Document",
          "camelCase": {
            "unsafeName": "document",
            "safeName": "document"
          },
          "snakeCase": {
            "unsafeName": "document",
            "safeName": "document"
          },
          "screamingSnakeCase": {
            "unsafeName": "DOCUMENT",
            "safeName": "DOCUMENT"
          },
          "pascalCase": {
            "unsafeName": "Document",
            "safeName": "Document"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DocumentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "url",
                "camelCase": {
                  "unsafeName": "url",
                  "safeName": "url"
                },
                "snakeCase": {
                  "unsafeName": "url",
                  "safeName": "url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URL",
                  "safeName": "URL"
                },
                "pascalCase": {
                  "unsafeName": "Url",
                  "safeName": "Url"
                }
              },
              "wireValue": "url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DocumentUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DocumentName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "authorization",
                "camelCase": {
                  "unsafeName": "authorization",
                  "safeName": "authorization"
                },
                "snakeCase": {
                  "unsafeName": "authorization",
                  "safeName": "authorization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTHORIZATION",
                  "safeName": "AUTHORIZATION"
                },
                "pascalCase": {
                  "unsafeName": "Authorization",
                  "safeName": "Authorization"
                }
              },
              "wireValue": "authorization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "DocumentAuthorization",
                    "camelCase": {
                      "unsafeName": "documentAuthorization",
                      "safeName": "documentAuthorization"
                    },
                    "snakeCase": {
                      "unsafeName": "document_authorization",
                      "safeName": "document_authorization"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "DOCUMENT_AUTHORIZATION",
                      "safeName": "DOCUMENT_AUTHORIZATION"
                    },
                    "pascalCase": {
                      "unsafeName": "DocumentAuthorization",
                      "safeName": "DocumentAuthorization"
                    }
                  },
                  "typeId": "DocumentAuthorization",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DocumentAuthorization_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from_page",
                "camelCase": {
                  "unsafeName": "fromPage",
                  "safeName": "fromPage"
                },
                "snakeCase": {
                  "unsafeName": "from_page",
                  "safeName": "from_page"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM_PAGE",
                  "safeName": "FROM_PAGE"
                },
                "pascalCase": {
                  "unsafeName": "FromPage",
                  "safeName": "FromPage"
                }
              },
              "wireValue": "from_page"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DocumentFromPage_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to_page",
                "camelCase": {
                  "unsafeName": "toPage",
                  "safeName": "toPage"
                },
                "snakeCase": {
                  "unsafeName": "to_page",
                  "safeName": "to_page"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO_PAGE",
                  "safeName": "TO_PAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToPage",
                  "safeName": "ToPage"
                }
              },
              "wireValue": "to_page"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DocumentToPage_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "splitter",
                "camelCase": {
                  "unsafeName": "splitter",
                  "safeName": "splitter"
                },
                "snakeCase": {
                  "unsafeName": "splitter",
                  "safeName": "splitter"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPLITTER",
                  "safeName": "SPLITTER"
                },
                "pascalCase": {
                  "unsafeName": "Splitter",
                  "safeName": "Splitter"
                }
              },
              "wireValue": "splitter"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "DocumentSplitter",
                    "camelCase": {
                      "unsafeName": "documentSplitter",
                      "safeName": "documentSplitter"
                    },
                    "snakeCase": {
                      "unsafeName": "document_splitter",
                      "safeName": "document_splitter"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "DOCUMENT_SPLITTER",
                      "safeName": "DOCUMENT_SPLITTER"
                    },
                    "pascalCase": {
                      "unsafeName": "DocumentSplitter",
                      "safeName": "DocumentSplitter"
                    }
                  },
                  "typeId": "DocumentSplitter",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DocumentSplitter_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Document_example_autogenerated": {
            "type": "foo",
            "url": "foo",
            "name": "foo"
          }
        }
      }
    },
    "HTTPValidationError": {
      "name": {
        "typeId": "HTTPValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "detail",
                "camelCase": {
                  "unsafeName": "detail",
                  "safeName": "detail"
                },
                "snakeCase": {
                  "unsafeName": "detail",
                  "safeName": "detail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DETAIL",
                  "safeName": "DETAIL"
                },
                "pascalCase": {
                  "unsafeName": "Detail",
                  "safeName": "Detail"
                }
              },
              "wireValue": "detail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ValidationError",
                        "camelCase": {
                          "unsafeName": "validationError",
                          "safeName": "validationError"
                        },
                        "snakeCase": {
                          "unsafeName": "validation_error",
                          "safeName": "validation_error"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "VALIDATION_ERROR",
                          "safeName": "VALIDATION_ERROR"
                        },
                        "pascalCase": {
                          "unsafeName": "ValidationError",
                          "safeName": "ValidationError"
                        }
                      },
                      "typeId": "ValidationError",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "HttpValidationErrorDetail_example_autogenerated": [
                  {
                    "loc": [
                      "foo"
                    ],
                    "msg": "foo",
                    "type": "foo"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "HTTPValidationError_example_autogenerated": {}
        }
      }
    },
    "PredictAgentInput": {
      "name": {
        "typeId": "PredictAgentInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PredictAgentInput",
          "camelCase": {
            "unsafeName": "predictAgentInput",
            "safeName": "predictAgentInput"
          },
          "snakeCase": {
            "unsafeName": "predict_agent_input",
            "safeName": "predict_agent_input"
          },
          "screamingSnakeCase": {
            "unsafeName": "PREDICT_AGENT_INPUT",
            "safeName": "PREDICT_AGENT_INPUT"
          },
          "pascalCase": {
            "unsafeName": "PredictAgentInput",
            "safeName": "PredictAgentInput"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PredictAgentInput_example_autogenerated": {}
        }
      }
    },
    "PredictAgent": {
      "name": {
        "typeId": "PredictAgent",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PredictAgent",
          "camelCase": {
            "unsafeName": "predictAgent",
            "safeName": "predictAgent"
          },
          "snakeCase": {
            "unsafeName": "predict_agent",
            "safeName": "predict_agent"
          },
          "screamingSnakeCase": {
            "unsafeName": "PREDICT_AGENT",
            "safeName": "PREDICT_AGENT"
          },
          "pascalCase": {
            "unsafeName": "PredictAgent",
            "safeName": "PredictAgent"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PredictAgentInput",
                "camelCase": {
                  "unsafeName": "predictAgentInput",
                  "safeName": "predictAgentInput"
                },
                "snakeCase": {
                  "unsafeName": "predict_agent_input",
                  "safeName": "predict_agent_input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREDICT_AGENT_INPUT",
                  "safeName": "PREDICT_AGENT_INPUT"
                },
                "pascalCase": {
                  "unsafeName": "PredictAgentInput",
                  "safeName": "PredictAgentInput"
                }
              },
              "typeId": "PredictAgentInput",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictAgentInput_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "has_streaming",
                "camelCase": {
                  "unsafeName": "hasStreaming",
                  "safeName": "hasStreaming"
                },
                "snakeCase": {
                  "unsafeName": "has_streaming",
                  "safeName": "has_streaming"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HAS_STREAMING",
                  "safeName": "HAS_STREAMING"
                },
                "pascalCase": {
                  "unsafeName": "HasStreaming",
                  "safeName": "HasStreaming"
                }
              },
              "wireValue": "has_streaming"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": false,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PredictAgentHasStreaming_example_autogenerated": false
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PredictAgent_example_autogenerated": {
            "input": {}
          }
        }
      }
    },
    "Prompt": {
      "name": {
        "typeId": "Prompt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Prompt",
          "camelCase": {
            "unsafeName": "prompt",
            "safeName": "prompt"
          },
          "snakeCase": {
            "unsafeName": "prompt",
            "safeName": "prompt"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROMPT",
            "safeName": "PROMPT"
          },
          "pascalCase": {
            "unsafeName": "Prompt",
            "safeName": "Prompt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PromptName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input_variables",
                "camelCase": {
                  "unsafeName": "inputVariables",
                  "safeName": "inputVariables"
                },
                "snakeCase": {
                  "unsafeName": "input_variables",
                  "safeName": "input_variables"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT_VARIABLES",
                  "safeName": "INPUT_VARIABLES"
                },
                "pascalCase": {
                  "unsafeName": "InputVariables",
                  "safeName": "InputVariables"
                }
              },
              "wireValue": "input_variables"
            },
            "valueType": {
              "container": {
                "list": {
                  "type": "unknown"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PromptInputVariables_example_autogenerated": [
                  null
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "template",
                "camelCase": {
                  "unsafeName": "template",
                  "safeName": "template"
                },
                "snakeCase": {
                  "unsafeName": "template",
                  "safeName": "template"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEMPLATE",
                  "safeName": "TEMPLATE"
                },
                "pascalCase": {
                  "unsafeName": "Template",
                  "safeName": "Template"
                }
              },
              "wireValue": "template"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PromptTemplate_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Prompt_example_autogenerated": {
            "name": "foo",
            "input_variables": [
              null
            ],
            "template": "foo"
          }
        }
      }
    },
    "SignIn": {
      "name": {
        "typeId": "SignIn",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SignIn",
          "camelCase": {
            "unsafeName": "signIn",
            "safeName": "signIn"
          },
          "snakeCase": {
            "unsafeName": "sign_in",
            "safeName": "sign_in"
          },
          "screamingSnakeCase": {
            "unsafeName": "SIGN_IN",
            "safeName": "SIGN_IN"
          },
          "pascalCase": {
            "unsafeName": "SignIn",
            "safeName": "SignIn"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SignInEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "password",
                "camelCase": {
                  "unsafeName": "password",
                  "safeName": "password"
                },
                "snakeCase": {
                  "unsafeName": "password",
                  "safeName": "password"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PASSWORD",
                  "safeName": "PASSWORD"
                },
                "pascalCase": {
                  "unsafeName": "Password",
                  "safeName": "Password"
                }
              },
              "wireValue": "password"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SignInPassword_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SignIn_example_autogenerated": {
            "email": "foo",
            "password": "foo"
          }
        }
      }
    },
    "SignUpMetadata": {
      "name": {
        "typeId": "SignUpMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SignUpMetadata",
          "camelCase": {
            "unsafeName": "signUpMetadata",
            "safeName": "signUpMetadata"
          },
          "snakeCase": {
            "unsafeName": "sign_up_metadata",
            "safeName": "sign_up_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "SIGN_UP_METADATA",
            "safeName": "SIGN_UP_METADATA"
          },
          "pascalCase": {
            "unsafeName": "SignUpMetadata",
            "safeName": "SignUpMetadata"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SignUpMetadata_example_autogenerated": {}
        }
      }
    },
    "SignUp": {
      "name": {
        "typeId": "SignUp",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SignUp",
          "camelCase": {
            "unsafeName": "signUp",
            "safeName": "signUp"
          },
          "snakeCase": {
            "unsafeName": "sign_up",
            "safeName": "sign_up"
          },
          "screamingSnakeCase": {
            "unsafeName": "SIGN_UP",
            "safeName": "SIGN_UP"
          },
          "pascalCase": {
            "unsafeName": "SignUp",
            "safeName": "SignUp"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "email",
                "camelCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "snakeCase": {
                  "unsafeName": "email",
                  "safeName": "email"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMAIL",
                  "safeName": "EMAIL"
                },
                "pascalCase": {
                  "unsafeName": "Email",
                  "safeName": "Email"
                }
              },
              "wireValue": "email"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SignUpEmail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "password",
                "camelCase": {
                  "unsafeName": "password",
                  "safeName": "password"
                },
                "snakeCase": {
                  "unsafeName": "password",
                  "safeName": "password"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PASSWORD",
                  "safeName": "PASSWORD"
                },
                "pascalCase": {
                  "unsafeName": "Password",
                  "safeName": "Password"
                }
              },
              "wireValue": "password"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SignUpPassword_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SignUpName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "SignUpMetadata",
                    "camelCase": {
                      "unsafeName": "signUpMetadata",
                      "safeName": "signUpMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "sign_up_metadata",
                      "safeName": "sign_up_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SIGN_UP_METADATA",
                      "safeName": "SIGN_UP_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "SignUpMetadata",
                      "safeName": "SignUpMetadata"
                    }
                  },
                  "typeId": "SignUpMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SignUpMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SignUp_example_autogenerated": {
            "email": "foo",
            "password": "foo"
          }
        }
      }
    },
    "ToolAuthorization": {
      "name": {
        "typeId": "ToolAuthorization",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ToolAuthorization",
          "camelCase": {
            "unsafeName": "toolAuthorization",
            "safeName": "toolAuthorization"
          },
          "snakeCase": {
            "unsafeName": "tool_authorization",
            "safeName": "tool_authorization"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOL_AUTHORIZATION",
            "safeName": "TOOL_AUTHORIZATION"
          },
          "pascalCase": {
            "unsafeName": "ToolAuthorization",
            "safeName": "ToolAuthorization"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolAuthorization_example_autogenerated": {}
        }
      }
    },
    "Tool": {
      "name": {
        "typeId": "Tool",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Tool",
          "camelCase": {
            "unsafeName": "tool",
            "safeName": "tool"
          },
          "snakeCase": {
            "unsafeName": "tool",
            "safeName": "tool"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOL",
            "safeName": "TOOL"
          },
          "pascalCase": {
            "unsafeName": "Tool",
            "safeName": "Tool"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "authorization",
                "camelCase": {
                  "unsafeName": "authorization",
                  "safeName": "authorization"
                },
                "snakeCase": {
                  "unsafeName": "authorization",
                  "safeName": "authorization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTHORIZATION",
                  "safeName": "AUTHORIZATION"
                },
                "pascalCase": {
                  "unsafeName": "Authorization",
                  "safeName": "Authorization"
                }
              },
              "wireValue": "authorization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ToolAuthorization",
                    "camelCase": {
                      "unsafeName": "toolAuthorization",
                      "safeName": "toolAuthorization"
                    },
                    "snakeCase": {
                      "unsafeName": "tool_authorization",
                      "safeName": "tool_authorization"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOOL_AUTHORIZATION",
                      "safeName": "TOOL_AUTHORIZATION"
                    },
                    "pascalCase": {
                      "unsafeName": "ToolAuthorization",
                      "safeName": "ToolAuthorization"
                    }
                  },
                  "typeId": "ToolAuthorization",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolAuthorization_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tool_example_autogenerated": {
            "name": "foo",
            "type": "foo"
          }
        }
      }
    },
    "ValidationErrorLocItems": {
      "name": {
        "typeId": "ValidationErrorLocItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ValidationErrorLocItems",
          "camelCase": {
            "unsafeName": "validationErrorLocItems",
            "safeName": "validationErrorLocItems"
          },
          "snakeCase": {
            "unsafeName": "validation_error_loc_items",
            "safeName": "validation_error_loc_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "VALIDATION_ERROR_LOC_ITEMS",
            "safeName": "VALIDATION_ERROR_LOC_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "ValidationErrorLocItems",
            "safeName": "ValidationErrorLocItems"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationErrorLocItems_example_autogenerated": "foo"
        }
      }
    },
    "ValidationError": {
      "name": {
        "typeId": "ValidationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ValidationError",
          "camelCase": {
            "unsafeName": "validationError",
            "safeName": "validationError"
          },
          "snakeCase": {
            "unsafeName": "validation_error",
            "safeName": "validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "VALIDATION_ERROR",
            "safeName": "VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ValidationError",
            "safeName": "ValidationError"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "loc",
                "camelCase": {
                  "unsafeName": "loc",
                  "safeName": "loc"
                },
                "snakeCase": {
                  "unsafeName": "loc",
                  "safeName": "loc"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOC",
                  "safeName": "LOC"
                },
                "pascalCase": {
                  "unsafeName": "Loc",
                  "safeName": "Loc"
                }
              },
              "wireValue": "loc"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ValidationErrorLocItems",
                    "camelCase": {
                      "unsafeName": "validationErrorLocItems",
                      "safeName": "validationErrorLocItems"
                    },
                    "snakeCase": {
                      "unsafeName": "validation_error_loc_items",
                      "safeName": "validation_error_loc_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "VALIDATION_ERROR_LOC_ITEMS",
                      "safeName": "VALIDATION_ERROR_LOC_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "ValidationErrorLocItems",
                      "safeName": "ValidationErrorLocItems"
                    }
                  },
                  "typeId": "ValidationErrorLocItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorLoc_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "msg",
                "camelCase": {
                  "unsafeName": "msg",
                  "safeName": "msg"
                },
                "snakeCase": {
                  "unsafeName": "msg",
                  "safeName": "msg"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MSG",
                  "safeName": "MSG"
                },
                "pascalCase": {
                  "unsafeName": "Msg",
                  "safeName": "Msg"
                }
              },
              "wireValue": "msg"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorMsg_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationErrorType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationError_example_autogenerated": {
            "loc": [
              "foo"
            ],
            "msg": "foo",
            "type": "foo"
          }
        }
      }
    }
  },
  "services": {
    "service_agent": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Agent",
              "camelCase": {
                "unsafeName": "agent",
                "safeName": "agent"
              },
              "snakeCase": {
                "unsafeName": "agent",
                "safeName": "agent"
              },
              "screamingSnakeCase": {
                "unsafeName": "AGENT",
                "safeName": "AGENT"
              },
              "pascalCase": {
                "unsafeName": "Agent",
                "safeName": "Agent"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Agent",
            "camelCase": {
              "unsafeName": "agent",
              "safeName": "agent"
            },
            "snakeCase": {
              "unsafeName": "agent",
              "safeName": "agent"
            },
            "screamingSnakeCase": {
              "unsafeName": "AGENT",
              "safeName": "AGENT"
            },
            "pascalCase": {
              "unsafeName": "Agent",
              "safeName": "Agent"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List All Agents",
          "method": "GET",
          "path": {
            "head": "/api/v1/agents",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/agents",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_agent.List_all_agents_api_v1_agents_get",
          "name": {
            "originalName": "List_all_agents_api_v1_agents_get",
            "camelCase": {
              "unsafeName": "listAllAgentsApiV1AgentsGet",
              "safeName": "listAllAgentsApiV1AgentsGet"
            },
            "snakeCase": {
              "unsafeName": "list_all_agents_api_v_1_agents_get",
              "safeName": "list_all_agents_api_v_1_agents_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_ALL_AGENTS_API_V_1_AGENTS_GET",
              "safeName": "LIST_ALL_AGENTS_API_V_1_AGENTS_GET"
            },
            "pascalCase": {
              "unsafeName": "ListAllAgentsApiV1AgentsGet",
              "safeName": "ListAllAgentsApiV1AgentsGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all agents",
          "v2Examples": {
            "autogeneratedExamples": {
              "listAllAgentsApiV1AgentsGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/agents"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Agent",
          "method": "POST",
          "path": {
            "head": "/api/v1/agents",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_agent_api_v1_agents_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createAgentApiV1AgentsPostRequestUnprocessableEntityError",
                    "safeName": "createAgentApiV1AgentsPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_agent_api_v_1_agents_post_request_unprocessable_entity_error",
                    "safeName": "create_agent_api_v_1_agents_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_AGENT_API_V_1_AGENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_AGENT_API_V_1_AGENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateAgentApiV1AgentsPostRequestUnprocessableEntityError",
                    "safeName": "CreateAgentApiV1AgentsPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_agent_api_v1_agents_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/agents",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_agent.Create_agent_api_v1_agents_post",
          "name": {
            "originalName": "Create_agent_api_v1_agents_post",
            "camelCase": {
              "unsafeName": "createAgentApiV1AgentsPost",
              "safeName": "createAgentApiV1AgentsPost"
            },
            "snakeCase": {
              "unsafeName": "create_agent_api_v_1_agents_post",
              "safeName": "create_agent_api_v_1_agents_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_AGENT_API_V_1_AGENTS_POST",
              "safeName": "CREATE_AGENT_API_V_1_AGENTS_POST"
            },
            "pascalCase": {
              "unsafeName": "CreateAgentApiV1AgentsPost",
              "safeName": "CreateAgentApiV1AgentsPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Agent",
                "camelCase": {
                  "unsafeName": "agent",
                  "safeName": "agent"
                },
                "snakeCase": {
                  "unsafeName": "agent",
                  "safeName": "agent"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT",
                  "safeName": "AGENT"
                },
                "pascalCase": {
                  "unsafeName": "Agent",
                  "safeName": "Agent"
                }
              },
              "typeId": "Agent",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "agentCreateAgentApiV1AgentsPostExample": {
                  "name": "foo",
                  "type": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a new agent",
          "v2Examples": {
            "autogeneratedExamples": {
              "agentCreateAgentApiV1AgentsPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/agents"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "foo",
                    "type": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Agent",
          "method": "GET",
          "path": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_agent_api_v1_agents__agentId__getRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError",
                    "safeName": "getAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_agent_api_v_1_agents_agent_id_get_request_unprocessable_entity_error",
                    "safeName": "get_agent_api_v_1_agents_agent_id_get_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError",
                    "safeName": "GetAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_agent_api_v1_agents__agentId__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_agent.Get_agent_api_v1_agents__agentId__get",
          "name": {
            "originalName": "Get_agent_api_v1_agents__agentId__get",
            "camelCase": {
              "unsafeName": "getAgentApiV1AgentsAgentIdGet",
              "safeName": "getAgentApiV1AgentsAgentIdGet"
            },
            "snakeCase": {
              "unsafeName": "get_agent_api_v_1_agents_agent_id_get",
              "safeName": "get_agent_api_v_1_agents_agent_id_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET",
              "safeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET"
            },
            "pascalCase": {
              "unsafeName": "GetAgentApiV1AgentsAgentIdGet",
              "safeName": "GetAgentApiV1AgentsAgentIdGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get a specific agent",
          "v2Examples": {
            "autogeneratedExamples": {
              "getAgentApiV1AgentsAgentIdGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/agents/agentId"
                  },
                  "pathParameters": {
                    "agentId": "agentId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Agent",
          "method": "DELETE",
          "path": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_agent_api_v1_agents__agentId__deleteRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError",
                    "safeName": "deleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_agent_api_v_1_agents_agent_id_delete_request_unprocessable_entity_error",
                    "safeName": "delete_agent_api_v_1_agents_agent_id_delete_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError",
                    "safeName": "DeleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_agent_api_v1_agents__agentId__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_agent.Delete_agent_api_v1_agents__agentId__delete",
          "name": {
            "originalName": "Delete_agent_api_v1_agents__agentId__delete",
            "camelCase": {
              "unsafeName": "deleteAgentApiV1AgentsAgentIdDelete",
              "safeName": "deleteAgentApiV1AgentsAgentIdDelete"
            },
            "snakeCase": {
              "unsafeName": "delete_agent_api_v_1_agents_agent_id_delete",
              "safeName": "delete_agent_api_v_1_agents_agent_id_delete"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE",
              "safeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE"
            },
            "pascalCase": {
              "unsafeName": "DeleteAgentApiV1AgentsAgentIdDelete",
              "safeName": "DeleteAgentApiV1AgentsAgentIdDelete"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a specific agent",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteAgentApiV1AgentsAgentIdDeleteExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/api/v1/agents/agentId"
                  },
                  "pathParameters": {
                    "agentId": "agentId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Patch Agent",
          "method": "PATCH",
          "path": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Patch_agent_api_v1_agents__agentId__patchRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "patchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError",
                    "safeName": "patchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "patch_agent_api_v_1_agents_agent_id_patch_request_unprocessable_entity_error",
                    "safeName": "patch_agent_api_v_1_agents_agent_id_patch_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PatchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError",
                    "safeName": "PatchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Patch_agent_api_v1_agents__agentId__patchRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_agent.Patch_agent_api_v1_agents__agentId__patch",
          "name": {
            "originalName": "Patch_agent_api_v1_agents__agentId__patch",
            "camelCase": {
              "unsafeName": "patchAgentApiV1AgentsAgentIdPatch",
              "safeName": "patchAgentApiV1AgentsAgentIdPatch"
            },
            "snakeCase": {
              "unsafeName": "patch_agent_api_v_1_agents_agent_id_patch",
              "safeName": "patch_agent_api_v_1_agents_agent_id_patch"
            },
            "screamingSnakeCase": {
              "unsafeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH",
              "safeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH"
            },
            "pascalCase": {
              "unsafeName": "PatchAgentApiV1AgentsAgentIdPatch",
              "safeName": "PatchAgentApiV1AgentsAgentIdPatch"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "Agent_Patch_agent_api_v1_agents__agentId__patch_Request",
              "camelCase": {
                "unsafeName": "agentPatchAgentApiV1AgentsAgentIdPatchRequest",
                "safeName": "agentPatchAgentApiV1AgentsAgentIdPatchRequest"
              },
              "snakeCase": {
                "unsafeName": "agent_patch_agent_api_v_1_agents_agent_id_patch_request",
                "safeName": "agent_patch_agent_api_v_1_agents_agent_id_patch_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "AGENT_PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST",
                "safeName": "AGENT_PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "AgentPatchAgentApiV1AgentsAgentIdPatchRequest",
                "safeName": "AgentPatchAgentApiV1AgentsAgentIdPatchRequest"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "agentPatchAgentApiV1AgentsAgentIdPatchExample": {}
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Patch a specific agent",
          "v2Examples": {
            "autogeneratedExamples": {
              "agentPatchAgentApiV1AgentsAgentIdPatchExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/api/v1/agents/agentId"
                  },
                  "pathParameters": {
                    "agentId": "agentId"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Prompt Agent",
          "method": "POST",
          "path": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": "/predict"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Prompt_agent_api_v1_agents__agentId__predict_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "promptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError",
                    "safeName": "promptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "prompt_agent_api_v_1_agents_agent_id_predict_post_request_unprocessable_entity_error",
                    "safeName": "prompt_agent_api_v_1_agents_agent_id_predict_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PromptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError",
                    "safeName": "PromptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Prompt_agent_api_v1_agents__agentId__predict_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/agents/",
            "parts": [
              {
                "pathParameter": "agentId",
                "tail": "/predict"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "agentId",
                "camelCase": {
                  "unsafeName": "agentId",
                  "safeName": "agentId"
                },
                "snakeCase": {
                  "unsafeName": "agent_id",
                  "safeName": "agent_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AGENT_ID",
                  "safeName": "AGENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "AgentId",
                  "safeName": "AgentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "agentId_example": "agentId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_agent.Prompt_agent_api_v1_agents__agentId__predict_post",
          "name": {
            "originalName": "Prompt_agent_api_v1_agents__agentId__predict_post",
            "camelCase": {
              "unsafeName": "promptAgentApiV1AgentsAgentIdPredictPost",
              "safeName": "promptAgentApiV1AgentsAgentIdPredictPost"
            },
            "snakeCase": {
              "unsafeName": "prompt_agent_api_v_1_agents_agent_id_predict_post",
              "safeName": "prompt_agent_api_v_1_agents_agent_id_predict_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST",
              "safeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST"
            },
            "pascalCase": {
              "unsafeName": "PromptAgentApiV1AgentsAgentIdPredictPost",
              "safeName": "PromptAgentApiV1AgentsAgentIdPredictPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PredictAgent",
                "camelCase": {
                  "unsafeName": "predictAgent",
                  "safeName": "predictAgent"
                },
                "snakeCase": {
                  "unsafeName": "predict_agent",
                  "safeName": "predict_agent"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREDICT_AGENT",
                  "safeName": "PREDICT_AGENT"
                },
                "pascalCase": {
                  "unsafeName": "PredictAgent",
                  "safeName": "PredictAgent"
                }
              },
              "typeId": "PredictAgent",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "agentPromptAgentApiV1AgentsAgentIdPredictPostExample": {
                  "input": {}
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Invoke a specific agent",
          "v2Examples": {
            "autogeneratedExamples": {
              "agentPromptAgentApiV1AgentsAgentIdPredictPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/agents/agentId/predict"
                  },
                  "pathParameters": {
                    "agentId": "agentId"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "input": {}
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_auth": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Auth",
              "camelCase": {
                "unsafeName": "auth",
                "safeName": "auth"
              },
              "snakeCase": {
                "unsafeName": "auth",
                "safeName": "auth"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUTH",
                "safeName": "AUTH"
              },
              "pascalCase": {
                "unsafeName": "Auth",
                "safeName": "Auth"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Auth",
            "camelCase": {
              "unsafeName": "auth",
              "safeName": "auth"
            },
            "snakeCase": {
              "unsafeName": "auth",
              "safeName": "auth"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUTH",
              "safeName": "AUTH"
            },
            "pascalCase": {
              "unsafeName": "Auth",
              "safeName": "Auth"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Sign In",
          "method": "POST",
          "path": {
            "head": "/api/v1/auth/sign-in",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Sign_in_api_v1_auth_sign_in_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "signInApiV1AuthSignInPostRequestUnprocessableEntityError",
                    "safeName": "signInApiV1AuthSignInPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "sign_in_api_v_1_auth_sign_in_post_request_unprocessable_entity_error",
                    "safeName": "sign_in_api_v_1_auth_sign_in_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "SignInApiV1AuthSignInPostRequestUnprocessableEntityError",
                    "safeName": "SignInApiV1AuthSignInPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Sign_in_api_v1_auth_sign_in_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/auth/sign-in",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_auth.sign_in_api_v1_auth_sign_in_post",
          "name": {
            "originalName": "sign_in_api_v1_auth_sign_in_post",
            "camelCase": {
              "unsafeName": "signInApiV1AuthSignInPost",
              "safeName": "signInApiV1AuthSignInPost"
            },
            "snakeCase": {
              "unsafeName": "sign_in_api_v_1_auth_sign_in_post",
              "safeName": "sign_in_api_v_1_auth_sign_in_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST",
              "safeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST"
            },
            "pascalCase": {
              "unsafeName": "SignInApiV1AuthSignInPost",
              "safeName": "SignInApiV1AuthSignInPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SignIn",
                "camelCase": {
                  "unsafeName": "signIn",
                  "safeName": "signIn"
                },
                "snakeCase": {
                  "unsafeName": "sign_in",
                  "safeName": "sign_in"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIGN_IN",
                  "safeName": "SIGN_IN"
                },
                "pascalCase": {
                  "unsafeName": "SignIn",
                  "safeName": "SignIn"
                }
              },
              "typeId": "SignIn",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "authSignInApiV1AuthSignInPostExample": {
                  "email": "foo",
                  "password": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "authSignInApiV1AuthSignInPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/auth/sign-in"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "email": "foo",
                    "password": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Sign Up",
          "method": "POST",
          "path": {
            "head": "/api/v1/auth/sign-up",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Sign_up_api_v1_auth_sign_up_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "signUpApiV1AuthSignUpPostRequestUnprocessableEntityError",
                    "safeName": "signUpApiV1AuthSignUpPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "sign_up_api_v_1_auth_sign_up_post_request_unprocessable_entity_error",
                    "safeName": "sign_up_api_v_1_auth_sign_up_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "SignUpApiV1AuthSignUpPostRequestUnprocessableEntityError",
                    "safeName": "SignUpApiV1AuthSignUpPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Sign_up_api_v1_auth_sign_up_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/auth/sign-up",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_auth.sign_up_api_v1_auth_sign_up_post",
          "name": {
            "originalName": "sign_up_api_v1_auth_sign_up_post",
            "camelCase": {
              "unsafeName": "signUpApiV1AuthSignUpPost",
              "safeName": "signUpApiV1AuthSignUpPost"
            },
            "snakeCase": {
              "unsafeName": "sign_up_api_v_1_auth_sign_up_post",
              "safeName": "sign_up_api_v_1_auth_sign_up_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST",
              "safeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST"
            },
            "pascalCase": {
              "unsafeName": "SignUpApiV1AuthSignUpPost",
              "safeName": "SignUpApiV1AuthSignUpPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SignUp",
                "camelCase": {
                  "unsafeName": "signUp",
                  "safeName": "signUp"
                },
                "snakeCase": {
                  "unsafeName": "sign_up",
                  "safeName": "sign_up"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIGN_UP",
                  "safeName": "SIGN_UP"
                },
                "pascalCase": {
                  "unsafeName": "SignUp",
                  "safeName": "SignUp"
                }
              },
              "typeId": "SignUp",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "authSignUpApiV1AuthSignUpPostExample": {
                  "email": "foo",
                  "password": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "authSignUpApiV1AuthSignUpPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/auth/sign-up"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "email": "foo",
                    "password": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_user": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "User",
              "camelCase": {
                "unsafeName": "user",
                "safeName": "user"
              },
              "snakeCase": {
                "unsafeName": "user",
                "safeName": "user"
              },
              "screamingSnakeCase": {
                "unsafeName": "USER",
                "safeName": "USER"
              },
              "pascalCase": {
                "unsafeName": "User",
                "safeName": "User"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "User",
            "camelCase": {
              "unsafeName": "user",
              "safeName": "user"
            },
            "snakeCase": {
              "unsafeName": "user",
              "safeName": "user"
            },
            "screamingSnakeCase": {
              "unsafeName": "USER",
              "safeName": "USER"
            },
            "pascalCase": {
              "unsafeName": "User",
              "safeName": "User"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Read User Me",
          "method": "GET",
          "path": {
            "head": "/api/v1/users/me",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/users/me",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_user.read_user_me_api_v1_users_me_get",
          "name": {
            "originalName": "read_user_me_api_v1_users_me_get",
            "camelCase": {
              "unsafeName": "readUserMeApiV1UsersMeGet",
              "safeName": "readUserMeApiV1UsersMeGet"
            },
            "snakeCase": {
              "unsafeName": "read_user_me_api_v_1_users_me_get",
              "safeName": "read_user_me_api_v_1_users_me_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "READ_USER_ME_API_V_1_USERS_ME_GET",
              "safeName": "READ_USER_ME_API_V_1_USERS_ME_GET"
            },
            "pascalCase": {
              "unsafeName": "ReadUserMeApiV1UsersMeGet",
              "safeName": "ReadUserMeApiV1UsersMeGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "readUserMeApiV1UsersMeGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/users/me"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Read User",
          "method": "GET",
          "path": {
            "head": "/api/v1/users/",
            "parts": [
              {
                "pathParameter": "userId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "userId",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "userId_example": "userId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Read_user_api_v1_users__userId__getRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "readUserApiV1UsersUserIdGetRequestUnprocessableEntityError",
                    "safeName": "readUserApiV1UsersUserIdGetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "read_user_api_v_1_users_user_id_get_request_unprocessable_entity_error",
                    "safeName": "read_user_api_v_1_users_user_id_get_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "READ_USER_API_V_1_USERS_USER_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "READ_USER_API_V_1_USERS_USER_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ReadUserApiV1UsersUserIdGetRequestUnprocessableEntityError",
                    "safeName": "ReadUserApiV1UsersUserIdGetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Read_user_api_v1_users__userId__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/users/",
            "parts": [
              {
                "pathParameter": "userId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "userId",
                "camelCase": {
                  "unsafeName": "userId",
                  "safeName": "userId"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                },
                "pascalCase": {
                  "unsafeName": "UserId",
                  "safeName": "UserId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "userId_example": "userId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_user.read_user_api_v1_users__userId__get",
          "name": {
            "originalName": "read_user_api_v1_users__userId__get",
            "camelCase": {
              "unsafeName": "readUserApiV1UsersUserIdGet",
              "safeName": "readUserApiV1UsersUserIdGet"
            },
            "snakeCase": {
              "unsafeName": "read_user_api_v_1_users_user_id_get",
              "safeName": "read_user_api_v_1_users_user_id_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "READ_USER_API_V_1_USERS_USER_ID_GET",
              "safeName": "READ_USER_API_V_1_USERS_USER_ID_GET"
            },
            "pascalCase": {
              "unsafeName": "ReadUserApiV1UsersUserIdGet",
              "safeName": "ReadUserApiV1UsersUserIdGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "readUserApiV1UsersUserIdGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/users/userId"
                  },
                  "pathParameters": {
                    "userId": "userId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_apiToken": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Api token",
              "camelCase": {
                "unsafeName": "apiToken",
                "safeName": "apiToken"
              },
              "snakeCase": {
                "unsafeName": "api_token",
                "safeName": "api_token"
              },
              "screamingSnakeCase": {
                "unsafeName": "API_TOKEN",
                "safeName": "API_TOKEN"
              },
              "pascalCase": {
                "unsafeName": "ApiToken",
                "safeName": "ApiToken"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Api token",
            "camelCase": {
              "unsafeName": "apiToken",
              "safeName": "apiToken"
            },
            "snakeCase": {
              "unsafeName": "api_token",
              "safeName": "api_token"
            },
            "screamingSnakeCase": {
              "unsafeName": "API_TOKEN",
              "safeName": "API_TOKEN"
            },
            "pascalCase": {
              "unsafeName": "ApiToken",
              "safeName": "ApiToken"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Api Tokens",
          "method": "GET",
          "path": {
            "head": "/api/v1/api-tokens",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/api-tokens",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_apiToken.List_API_tokens_api_v1_api_tokens_get",
          "name": {
            "originalName": "List_API_tokens_api_v1_api_tokens_get",
            "camelCase": {
              "unsafeName": "listApiTokensApiV1ApiTokensGet",
              "safeName": "listApiTokensApiV1ApiTokensGet"
            },
            "snakeCase": {
              "unsafeName": "list_api_tokens_api_v_1_api_tokens_get",
              "safeName": "list_api_tokens_api_v_1_api_tokens_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_API_TOKENS_API_V_1_API_TOKENS_GET",
              "safeName": "LIST_API_TOKENS_API_V_1_API_TOKENS_GET"
            },
            "pascalCase": {
              "unsafeName": "ListApiTokensApiV1ApiTokensGet",
              "safeName": "ListApiTokensApiV1ApiTokensGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all API tokens",
          "v2Examples": {
            "autogeneratedExamples": {
              "listApiTokensApiV1ApiTokensGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/api-tokens"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Api Token",
          "method": "POST",
          "path": {
            "head": "/api/v1/api-tokens",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_API_token_api_v1_api_tokens_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError",
                    "safeName": "createApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_api_token_api_v_1_api_tokens_post_request_unprocessable_entity_error",
                    "safeName": "create_api_token_api_v_1_api_tokens_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError",
                    "safeName": "CreateApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_API_token_api_v1_api_tokens_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/api-tokens",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_apiToken.Create_API_token_api_v1_api_tokens_post",
          "name": {
            "originalName": "Create_API_token_api_v1_api_tokens_post",
            "camelCase": {
              "unsafeName": "createApiTokenApiV1ApiTokensPost",
              "safeName": "createApiTokenApiV1ApiTokensPost"
            },
            "snakeCase": {
              "unsafeName": "create_api_token_api_v_1_api_tokens_post",
              "safeName": "create_api_token_api_v_1_api_tokens_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST",
              "safeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST"
            },
            "pascalCase": {
              "unsafeName": "CreateApiTokenApiV1ApiTokensPost",
              "safeName": "CreateApiTokenApiV1ApiTokensPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ApiToken",
                "camelCase": {
                  "unsafeName": "apiToken",
                  "safeName": "apiToken"
                },
                "snakeCase": {
                  "unsafeName": "api_token",
                  "safeName": "api_token"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_TOKEN",
                  "safeName": "API_TOKEN"
                },
                "pascalCase": {
                  "unsafeName": "ApiToken",
                  "safeName": "ApiToken"
                }
              },
              "typeId": "ApiToken",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "apiTokenCreateApiTokenApiV1ApiTokensPostExample": {
                  "description": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a new API token",
          "v2Examples": {
            "autogeneratedExamples": {
              "apiTokenCreateApiTokenApiV1ApiTokensPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/api-tokens"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "description": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Api Token",
          "method": "GET",
          "path": {
            "head": "/api/v1/api-tokens/",
            "parts": [
              {
                "pathParameter": "tokenId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "tokenId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_API_token_api_v1_api_tokens__tokenId__getRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError",
                    "safeName": "getApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_api_token_api_v_1_api_tokens_token_id_get_request_unprocessable_entity_error",
                    "safeName": "get_api_token_api_v_1_api_tokens_token_id_get_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError",
                    "safeName": "GetApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_API_token_api_v1_api_tokens__tokenId__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/api-tokens/",
            "parts": [
              {
                "pathParameter": "tokenId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "tokenId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_apiToken.Get_API_token_api_v1_api_tokens__tokenId__get",
          "name": {
            "originalName": "Get_API_token_api_v1_api_tokens__tokenId__get",
            "camelCase": {
              "unsafeName": "getApiTokenApiV1ApiTokensTokenIdGet",
              "safeName": "getApiTokenApiV1ApiTokensTokenIdGet"
            },
            "snakeCase": {
              "unsafeName": "get_api_token_api_v_1_api_tokens_token_id_get",
              "safeName": "get_api_token_api_v_1_api_tokens_token_id_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET",
              "safeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET"
            },
            "pascalCase": {
              "unsafeName": "GetApiTokenApiV1ApiTokensTokenIdGet",
              "safeName": "GetApiTokenApiV1ApiTokensTokenIdGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get a specific API token",
          "v2Examples": {
            "autogeneratedExamples": {
              "getApiTokenApiV1ApiTokensTokenIdGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/api-tokens/tokenId"
                  },
                  "pathParameters": {
                    "tokenId": "tokenId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Api Token",
          "method": "DELETE",
          "path": {
            "head": "/api/v1/api-tokens/",
            "parts": [
              {
                "pathParameter": "tokenId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "tokenId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_API_token_api_v1_api_tokens__tokenId__deleteRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError",
                    "safeName": "deleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_api_token_api_v_1_api_tokens_token_id_delete_request_unprocessable_entity_error",
                    "safeName": "delete_api_token_api_v_1_api_tokens_token_id_delete_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError",
                    "safeName": "DeleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_API_token_api_v1_api_tokens__tokenId__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/api-tokens/",
            "parts": [
              {
                "pathParameter": "tokenId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "tokenId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_apiToken.Delete_API_token_api_v1_api_tokens__tokenId__delete",
          "name": {
            "originalName": "Delete_API_token_api_v1_api_tokens__tokenId__delete",
            "camelCase": {
              "unsafeName": "deleteApiTokenApiV1ApiTokensTokenIdDelete",
              "safeName": "deleteApiTokenApiV1ApiTokensTokenIdDelete"
            },
            "snakeCase": {
              "unsafeName": "delete_api_token_api_v_1_api_tokens_token_id_delete",
              "safeName": "delete_api_token_api_v_1_api_tokens_token_id_delete"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE",
              "safeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE"
            },
            "pascalCase": {
              "unsafeName": "DeleteApiTokenApiV1ApiTokensTokenIdDelete",
              "safeName": "DeleteApiTokenApiV1ApiTokensTokenIdDelete"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a specific API token",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteApiTokenApiV1ApiTokensTokenIdDeleteExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/api/v1/api-tokens/tokenId"
                  },
                  "pathParameters": {
                    "tokenId": "tokenId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_documents": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Documents",
              "camelCase": {
                "unsafeName": "documents",
                "safeName": "documents"
              },
              "snakeCase": {
                "unsafeName": "documents",
                "safeName": "documents"
              },
              "screamingSnakeCase": {
                "unsafeName": "DOCUMENTS",
                "safeName": "DOCUMENTS"
              },
              "pascalCase": {
                "unsafeName": "Documents",
                "safeName": "Documents"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Documents",
            "camelCase": {
              "unsafeName": "documents",
              "safeName": "documents"
            },
            "snakeCase": {
              "unsafeName": "documents",
              "safeName": "documents"
            },
            "screamingSnakeCase": {
              "unsafeName": "DOCUMENTS",
              "safeName": "DOCUMENTS"
            },
            "pascalCase": {
              "unsafeName": "Documents",
              "safeName": "Documents"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Documents",
          "method": "GET",
          "path": {
            "head": "/api/v1/documents",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/documents",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_documents.List_documents_api_v1_documents_get",
          "name": {
            "originalName": "List_documents_api_v1_documents_get",
            "camelCase": {
              "unsafeName": "listDocumentsApiV1DocumentsGet",
              "safeName": "listDocumentsApiV1DocumentsGet"
            },
            "snakeCase": {
              "unsafeName": "list_documents_api_v_1_documents_get",
              "safeName": "list_documents_api_v_1_documents_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_DOCUMENTS_API_V_1_DOCUMENTS_GET",
              "safeName": "LIST_DOCUMENTS_API_V_1_DOCUMENTS_GET"
            },
            "pascalCase": {
              "unsafeName": "ListDocumentsApiV1DocumentsGet",
              "safeName": "ListDocumentsApiV1DocumentsGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all documents",
          "v2Examples": {
            "autogeneratedExamples": {
              "listDocumentsApiV1DocumentsGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/documents"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create Document",
          "method": "POST",
          "path": {
            "head": "/api/v1/documents",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_document_api_v1_documents_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createDocumentApiV1DocumentsPostRequestUnprocessableEntityError",
                    "safeName": "createDocumentApiV1DocumentsPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_document_api_v_1_documents_post_request_unprocessable_entity_error",
                    "safeName": "create_document_api_v_1_documents_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateDocumentApiV1DocumentsPostRequestUnprocessableEntityError",
                    "safeName": "CreateDocumentApiV1DocumentsPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_document_api_v1_documents_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/documents",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_documents.Create_document_api_v1_documents_post",
          "name": {
            "originalName": "Create_document_api_v1_documents_post",
            "camelCase": {
              "unsafeName": "createDocumentApiV1DocumentsPost",
              "safeName": "createDocumentApiV1DocumentsPost"
            },
            "snakeCase": {
              "unsafeName": "create_document_api_v_1_documents_post",
              "safeName": "create_document_api_v_1_documents_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST",
              "safeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST"
            },
            "pascalCase": {
              "unsafeName": "CreateDocumentApiV1DocumentsPost",
              "safeName": "CreateDocumentApiV1DocumentsPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Document",
                "camelCase": {
                  "unsafeName": "document",
                  "safeName": "document"
                },
                "snakeCase": {
                  "unsafeName": "document",
                  "safeName": "document"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DOCUMENT",
                  "safeName": "DOCUMENT"
                },
                "pascalCase": {
                  "unsafeName": "Document",
                  "safeName": "Document"
                }
              },
              "typeId": "Document",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "documentsCreateDocumentApiV1DocumentsPostExample": {
                  "type": "foo",
                  "url": "foo",
                  "name": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a new document",
          "v2Examples": {
            "autogeneratedExamples": {
              "documentsCreateDocumentApiV1DocumentsPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/documents"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "type": "foo",
                    "url": "foo",
                    "name": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Document",
          "method": "GET",
          "path": {
            "head": "/api/v1/documents/",
            "parts": [
              {
                "pathParameter": "documentId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "documentId",
                "camelCase": {
                  "unsafeName": "documentId",
                  "safeName": "documentId"
                },
                "snakeCase": {
                  "unsafeName": "document_id",
                  "safeName": "document_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DOCUMENT_ID",
                  "safeName": "DOCUMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "DocumentId",
                  "safeName": "DocumentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "documentId_example": "documentId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_document_api_v1_documents__documentId__getRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError",
                    "safeName": "getDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_document_api_v_1_documents_document_id_get_request_unprocessable_entity_error",
                    "safeName": "get_document_api_v_1_documents_document_id_get_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError",
                    "safeName": "GetDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_document_api_v1_documents__documentId__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/documents/",
            "parts": [
              {
                "pathParameter": "documentId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "documentId",
                "camelCase": {
                  "unsafeName": "documentId",
                  "safeName": "documentId"
                },
                "snakeCase": {
                  "unsafeName": "document_id",
                  "safeName": "document_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DOCUMENT_ID",
                  "safeName": "DOCUMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "DocumentId",
                  "safeName": "DocumentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "documentId_example": "documentId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_documents.Get_document_api_v1_documents__documentId__get",
          "name": {
            "originalName": "Get_document_api_v1_documents__documentId__get",
            "camelCase": {
              "unsafeName": "getDocumentApiV1DocumentsDocumentIdGet",
              "safeName": "getDocumentApiV1DocumentsDocumentIdGet"
            },
            "snakeCase": {
              "unsafeName": "get_document_api_v_1_documents_document_id_get",
              "safeName": "get_document_api_v_1_documents_document_id_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET",
              "safeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET"
            },
            "pascalCase": {
              "unsafeName": "GetDocumentApiV1DocumentsDocumentIdGet",
              "safeName": "GetDocumentApiV1DocumentsDocumentIdGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get a specific document",
          "v2Examples": {
            "autogeneratedExamples": {
              "getDocumentApiV1DocumentsDocumentIdGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/documents/documentId"
                  },
                  "pathParameters": {
                    "documentId": "documentId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Document",
          "method": "DELETE",
          "path": {
            "head": "/api/v1/documents/",
            "parts": [
              {
                "pathParameter": "documentId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "documentId",
                "camelCase": {
                  "unsafeName": "documentId",
                  "safeName": "documentId"
                },
                "snakeCase": {
                  "unsafeName": "document_id",
                  "safeName": "document_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DOCUMENT_ID",
                  "safeName": "DOCUMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "DocumentId",
                  "safeName": "DocumentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "documentId_example": "documentId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_document_api_v1_documents__documentId__deleteRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError",
                    "safeName": "deleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_document_api_v_1_documents_document_id_delete_request_unprocessable_entity_error",
                    "safeName": "delete_document_api_v_1_documents_document_id_delete_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError",
                    "safeName": "DeleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_document_api_v1_documents__documentId__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/documents/",
            "parts": [
              {
                "pathParameter": "documentId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "documentId",
                "camelCase": {
                  "unsafeName": "documentId",
                  "safeName": "documentId"
                },
                "snakeCase": {
                  "unsafeName": "document_id",
                  "safeName": "document_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DOCUMENT_ID",
                  "safeName": "DOCUMENT_ID"
                },
                "pascalCase": {
                  "unsafeName": "DocumentId",
                  "safeName": "DocumentId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "documentId_example": "documentId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_documents.Delete_document_api_v1_documents__documentId__delete",
          "name": {
            "originalName": "Delete_document_api_v1_documents__documentId__delete",
            "camelCase": {
              "unsafeName": "deleteDocumentApiV1DocumentsDocumentIdDelete",
              "safeName": "deleteDocumentApiV1DocumentsDocumentIdDelete"
            },
            "snakeCase": {
              "unsafeName": "delete_document_api_v_1_documents_document_id_delete",
              "safeName": "delete_document_api_v_1_documents_document_id_delete"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE",
              "safeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE"
            },
            "pascalCase": {
              "unsafeName": "DeleteDocumentApiV1DocumentsDocumentIdDelete",
              "safeName": "DeleteDocumentApiV1DocumentsDocumentIdDelete"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a specific document",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteDocumentApiV1DocumentsDocumentIdDeleteExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/api/v1/documents/documentId"
                  },
                  "pathParameters": {
                    "documentId": "documentId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_prompts": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Prompts",
              "camelCase": {
                "unsafeName": "prompts",
                "safeName": "prompts"
              },
              "snakeCase": {
                "unsafeName": "prompts",
                "safeName": "prompts"
              },
              "screamingSnakeCase": {
                "unsafeName": "PROMPTS",
                "safeName": "PROMPTS"
              },
              "pascalCase": {
                "unsafeName": "Prompts",
                "safeName": "Prompts"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Prompts",
            "camelCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "snakeCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROMPTS",
              "safeName": "PROMPTS"
            },
            "pascalCase": {
              "unsafeName": "Prompts",
              "safeName": "Prompts"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Prompts",
          "method": "GET",
          "path": {
            "head": "/api/v1/prompts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/prompts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.List_prompts_api_v1_prompts_get",
          "name": {
            "originalName": "List_prompts_api_v1_prompts_get",
            "camelCase": {
              "unsafeName": "listPromptsApiV1PromptsGet",
              "safeName": "listPromptsApiV1PromptsGet"
            },
            "snakeCase": {
              "unsafeName": "list_prompts_api_v_1_prompts_get",
              "safeName": "list_prompts_api_v_1_prompts_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_PROMPTS_API_V_1_PROMPTS_GET",
              "safeName": "LIST_PROMPTS_API_V_1_PROMPTS_GET"
            },
            "pascalCase": {
              "unsafeName": "ListPromptsApiV1PromptsGet",
              "safeName": "ListPromptsApiV1PromptsGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all prompts",
          "v2Examples": {
            "autogeneratedExamples": {
              "listPromptsApiV1PromptsGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/prompts"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create A Prompt",
          "method": "POST",
          "path": {
            "head": "/api/v1/prompts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_a_prompt_api_v1_prompts_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createAPromptApiV1PromptsPostRequestUnprocessableEntityError",
                    "safeName": "createAPromptApiV1PromptsPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_a_prompt_api_v_1_prompts_post_request_unprocessable_entity_error",
                    "safeName": "create_a_prompt_api_v_1_prompts_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateAPromptApiV1PromptsPostRequestUnprocessableEntityError",
                    "safeName": "CreateAPromptApiV1PromptsPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_a_prompt_api_v1_prompts_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/prompts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.Create_a_prompt_api_v1_prompts_post",
          "name": {
            "originalName": "Create_a_prompt_api_v1_prompts_post",
            "camelCase": {
              "unsafeName": "createAPromptApiV1PromptsPost",
              "safeName": "createAPromptApiV1PromptsPost"
            },
            "snakeCase": {
              "unsafeName": "create_a_prompt_api_v_1_prompts_post",
              "safeName": "create_a_prompt_api_v_1_prompts_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST",
              "safeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST"
            },
            "pascalCase": {
              "unsafeName": "CreateAPromptApiV1PromptsPost",
              "safeName": "CreateAPromptApiV1PromptsPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Prompt",
                "camelCase": {
                  "unsafeName": "prompt",
                  "safeName": "prompt"
                },
                "snakeCase": {
                  "unsafeName": "prompt",
                  "safeName": "prompt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT",
                  "safeName": "PROMPT"
                },
                "pascalCase": {
                  "unsafeName": "Prompt",
                  "safeName": "Prompt"
                }
              },
              "typeId": "Prompt",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "promptsCreateAPromptApiV1PromptsPostExample": {
                  "name": "foo",
                  "input_variables": [
                    null
                  ],
                  "template": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a new prompt",
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsCreateAPromptApiV1PromptsPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/prompts"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "foo",
                    "input_variables": [
                      null
                    ],
                    "template": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Prompt",
          "method": "GET",
          "path": {
            "head": "/api/v1/prompts/",
            "parts": [
              {
                "pathParameter": "promptId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "promptId",
                "camelCase": {
                  "unsafeName": "promptId",
                  "safeName": "promptId"
                },
                "snakeCase": {
                  "unsafeName": "prompt_id",
                  "safeName": "prompt_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT_ID",
                  "safeName": "PROMPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "PromptId",
                  "safeName": "PromptId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "promptId_example": "promptId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_prompt_api_v1_prompts__promptId__getRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError",
                    "safeName": "getPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_prompt_api_v_1_prompts_prompt_id_get_request_unprocessable_entity_error",
                    "safeName": "get_prompt_api_v_1_prompts_prompt_id_get_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError",
                    "safeName": "GetPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_prompt_api_v1_prompts__promptId__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/prompts/",
            "parts": [
              {
                "pathParameter": "promptId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "promptId",
                "camelCase": {
                  "unsafeName": "promptId",
                  "safeName": "promptId"
                },
                "snakeCase": {
                  "unsafeName": "prompt_id",
                  "safeName": "prompt_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT_ID",
                  "safeName": "PROMPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "PromptId",
                  "safeName": "PromptId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "promptId_example": "promptId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.Get_prompt_api_v1_prompts__promptId__get",
          "name": {
            "originalName": "Get_prompt_api_v1_prompts__promptId__get",
            "camelCase": {
              "unsafeName": "getPromptApiV1PromptsPromptIdGet",
              "safeName": "getPromptApiV1PromptsPromptIdGet"
            },
            "snakeCase": {
              "unsafeName": "get_prompt_api_v_1_prompts_prompt_id_get",
              "safeName": "get_prompt_api_v_1_prompts_prompt_id_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET",
              "safeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET"
            },
            "pascalCase": {
              "unsafeName": "GetPromptApiV1PromptsPromptIdGet",
              "safeName": "GetPromptApiV1PromptsPromptIdGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get a specific prompt",
          "v2Examples": {
            "autogeneratedExamples": {
              "getPromptApiV1PromptsPromptIdGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/prompts/promptId"
                  },
                  "pathParameters": {
                    "promptId": "promptId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Prompt",
          "method": "DELETE",
          "path": {
            "head": "/api/v1/prompts/",
            "parts": [
              {
                "pathParameter": "promptId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "promptId",
                "camelCase": {
                  "unsafeName": "promptId",
                  "safeName": "promptId"
                },
                "snakeCase": {
                  "unsafeName": "prompt_id",
                  "safeName": "prompt_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT_ID",
                  "safeName": "PROMPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "PromptId",
                  "safeName": "PromptId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "promptId_example": "promptId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_prompt_api_v1_prompts__promptId__deleteRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError",
                    "safeName": "deletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_prompt_api_v_1_prompts_prompt_id_delete_request_unprocessable_entity_error",
                    "safeName": "delete_prompt_api_v_1_prompts_prompt_id_delete_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError",
                    "safeName": "DeletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_prompt_api_v1_prompts__promptId__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/prompts/",
            "parts": [
              {
                "pathParameter": "promptId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "promptId",
                "camelCase": {
                  "unsafeName": "promptId",
                  "safeName": "promptId"
                },
                "snakeCase": {
                  "unsafeName": "prompt_id",
                  "safeName": "prompt_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT_ID",
                  "safeName": "PROMPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "PromptId",
                  "safeName": "PromptId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "promptId_example": "promptId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.Delete_prompt_api_v1_prompts__promptId__delete",
          "name": {
            "originalName": "Delete_prompt_api_v1_prompts__promptId__delete",
            "camelCase": {
              "unsafeName": "deletePromptApiV1PromptsPromptIdDelete",
              "safeName": "deletePromptApiV1PromptsPromptIdDelete"
            },
            "snakeCase": {
              "unsafeName": "delete_prompt_api_v_1_prompts_prompt_id_delete",
              "safeName": "delete_prompt_api_v_1_prompts_prompt_id_delete"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE",
              "safeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE"
            },
            "pascalCase": {
              "unsafeName": "DeletePromptApiV1PromptsPromptIdDelete",
              "safeName": "DeletePromptApiV1PromptsPromptIdDelete"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a specific prompt",
          "v2Examples": {
            "autogeneratedExamples": {
              "deletePromptApiV1PromptsPromptIdDeleteExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/api/v1/prompts/promptId"
                  },
                  "pathParameters": {
                    "promptId": "promptId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Patch Prompt",
          "method": "PATCH",
          "path": {
            "head": "/api/v1/prompts/",
            "parts": [
              {
                "pathParameter": "promptId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "promptId",
                "camelCase": {
                  "unsafeName": "promptId",
                  "safeName": "promptId"
                },
                "snakeCase": {
                  "unsafeName": "prompt_id",
                  "safeName": "prompt_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT_ID",
                  "safeName": "PROMPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "PromptId",
                  "safeName": "PromptId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "promptId_example": "promptId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Patch_prompt_api_v1_prompts__promptId__patchRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "patchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError",
                    "safeName": "patchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "patch_prompt_api_v_1_prompts_prompt_id_patch_request_unprocessable_entity_error",
                    "safeName": "patch_prompt_api_v_1_prompts_prompt_id_patch_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PatchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError",
                    "safeName": "PatchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Patch_prompt_api_v1_prompts__promptId__patchRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/prompts/",
            "parts": [
              {
                "pathParameter": "promptId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "promptId",
                "camelCase": {
                  "unsafeName": "promptId",
                  "safeName": "promptId"
                },
                "snakeCase": {
                  "unsafeName": "prompt_id",
                  "safeName": "prompt_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROMPT_ID",
                  "safeName": "PROMPT_ID"
                },
                "pascalCase": {
                  "unsafeName": "PromptId",
                  "safeName": "PromptId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "promptId_example": "promptId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.Patch_prompt_api_v1_prompts__promptId__patch",
          "name": {
            "originalName": "Patch_prompt_api_v1_prompts__promptId__patch",
            "camelCase": {
              "unsafeName": "patchPromptApiV1PromptsPromptIdPatch",
              "safeName": "patchPromptApiV1PromptsPromptIdPatch"
            },
            "snakeCase": {
              "unsafeName": "patch_prompt_api_v_1_prompts_prompt_id_patch",
              "safeName": "patch_prompt_api_v_1_prompts_prompt_id_patch"
            },
            "screamingSnakeCase": {
              "unsafeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH",
              "safeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH"
            },
            "pascalCase": {
              "unsafeName": "PatchPromptApiV1PromptsPromptIdPatch",
              "safeName": "PatchPromptApiV1PromptsPromptIdPatch"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "Prompts_Patch_prompt_api_v1_prompts__promptId__patch_Request",
              "camelCase": {
                "unsafeName": "promptsPatchPromptApiV1PromptsPromptIdPatchRequest",
                "safeName": "promptsPatchPromptApiV1PromptsPromptIdPatchRequest"
              },
              "snakeCase": {
                "unsafeName": "prompts_patch_prompt_api_v_1_prompts_prompt_id_patch_request",
                "safeName": "prompts_patch_prompt_api_v_1_prompts_prompt_id_patch_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "PROMPTS_PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST",
                "safeName": "PROMPTS_PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "PromptsPatchPromptApiV1PromptsPromptIdPatchRequest",
                "safeName": "PromptsPatchPromptApiV1PromptsPromptIdPatchRequest"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "promptsPatchPromptApiV1PromptsPromptIdPatchExample": {}
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Patch a specific prompt",
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsPatchPromptApiV1PromptsPromptIdPatchExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/api/v1/prompts/promptId"
                  },
                  "pathParameters": {
                    "promptId": "promptId"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_tools": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Tools",
              "camelCase": {
                "unsafeName": "tools",
                "safeName": "tools"
              },
              "snakeCase": {
                "unsafeName": "tools",
                "safeName": "tools"
              },
              "screamingSnakeCase": {
                "unsafeName": "TOOLS",
                "safeName": "TOOLS"
              },
              "pascalCase": {
                "unsafeName": "Tools",
                "safeName": "Tools"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Tools",
            "camelCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "snakeCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "screamingSnakeCase": {
              "unsafeName": "TOOLS",
              "safeName": "TOOLS"
            },
            "pascalCase": {
              "unsafeName": "Tools",
              "safeName": "Tools"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Tools",
          "method": "GET",
          "path": {
            "head": "/api/v1/tools",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/tools",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.List_tools_api_v1_tools_get",
          "name": {
            "originalName": "List_tools_api_v1_tools_get",
            "camelCase": {
              "unsafeName": "listToolsApiV1ToolsGet",
              "safeName": "listToolsApiV1ToolsGet"
            },
            "snakeCase": {
              "unsafeName": "list_tools_api_v_1_tools_get",
              "safeName": "list_tools_api_v_1_tools_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_TOOLS_API_V_1_TOOLS_GET",
              "safeName": "LIST_TOOLS_API_V_1_TOOLS_GET"
            },
            "pascalCase": {
              "unsafeName": "ListToolsApiV1ToolsGet",
              "safeName": "ListToolsApiV1ToolsGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all tools",
          "v2Examples": {
            "autogeneratedExamples": {
              "listToolsApiV1ToolsGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/tools"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create A Tool",
          "method": "POST",
          "path": {
            "head": "/api/v1/tools",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Create_a_tool_api_v1_tools_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "createAToolApiV1ToolsPostRequestUnprocessableEntityError",
                    "safeName": "createAToolApiV1ToolsPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "create_a_tool_api_v_1_tools_post_request_unprocessable_entity_error",
                    "safeName": "create_a_tool_api_v_1_tools_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "CreateAToolApiV1ToolsPostRequestUnprocessableEntityError",
                    "safeName": "CreateAToolApiV1ToolsPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Create_a_tool_api_v1_tools_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/tools",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.Create_a_tool_api_v1_tools_post",
          "name": {
            "originalName": "Create_a_tool_api_v1_tools_post",
            "camelCase": {
              "unsafeName": "createAToolApiV1ToolsPost",
              "safeName": "createAToolApiV1ToolsPost"
            },
            "snakeCase": {
              "unsafeName": "create_a_tool_api_v_1_tools_post",
              "safeName": "create_a_tool_api_v_1_tools_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST",
              "safeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST"
            },
            "pascalCase": {
              "unsafeName": "CreateAToolApiV1ToolsPost",
              "safeName": "CreateAToolApiV1ToolsPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Tool",
                "camelCase": {
                  "unsafeName": "tool",
                  "safeName": "tool"
                },
                "snakeCase": {
                  "unsafeName": "tool",
                  "safeName": "tool"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL",
                  "safeName": "TOOL"
                },
                "pascalCase": {
                  "unsafeName": "Tool",
                  "safeName": "Tool"
                }
              },
              "typeId": "Tool",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "toolsCreateAToolApiV1ToolsPostExample": {
                  "name": "foo",
                  "type": "foo"
                }
              }
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a new tool",
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsCreateAToolApiV1ToolsPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/api/v1/tools"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "foo",
                    "type": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get Tool",
          "method": "GET",
          "path": {
            "head": "/api/v1/tools/",
            "parts": [
              {
                "pathParameter": "toolId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "toolId",
                "camelCase": {
                  "unsafeName": "toolId",
                  "safeName": "toolId"
                },
                "snakeCase": {
                  "unsafeName": "tool_id",
                  "safeName": "tool_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ID",
                  "safeName": "TOOL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolId",
                  "safeName": "ToolId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "toolId_example": "toolId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Get_tool_api_v1_tools__toolId__getRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "getToolApiV1ToolsToolIdGetRequestUnprocessableEntityError",
                    "safeName": "getToolApiV1ToolsToolIdGetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "get_tool_api_v_1_tools_tool_id_get_request_unprocessable_entity_error",
                    "safeName": "get_tool_api_v_1_tools_tool_id_get_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "GetToolApiV1ToolsToolIdGetRequestUnprocessableEntityError",
                    "safeName": "GetToolApiV1ToolsToolIdGetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Get_tool_api_v1_tools__toolId__getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/tools/",
            "parts": [
              {
                "pathParameter": "toolId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "toolId",
                "camelCase": {
                  "unsafeName": "toolId",
                  "safeName": "toolId"
                },
                "snakeCase": {
                  "unsafeName": "tool_id",
                  "safeName": "tool_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ID",
                  "safeName": "TOOL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolId",
                  "safeName": "ToolId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "toolId_example": "toolId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.Get_tool_api_v1_tools__toolId__get",
          "name": {
            "originalName": "Get_tool_api_v1_tools__toolId__get",
            "camelCase": {
              "unsafeName": "getToolApiV1ToolsToolIdGet",
              "safeName": "getToolApiV1ToolsToolIdGet"
            },
            "snakeCase": {
              "unsafeName": "get_tool_api_v_1_tools_tool_id_get",
              "safeName": "get_tool_api_v_1_tools_tool_id_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET",
              "safeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET"
            },
            "pascalCase": {
              "unsafeName": "GetToolApiV1ToolsToolIdGet",
              "safeName": "GetToolApiV1ToolsToolIdGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get a specific tool",
          "v2Examples": {
            "autogeneratedExamples": {
              "getToolApiV1ToolsToolIdGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/tools/toolId"
                  },
                  "pathParameters": {
                    "toolId": "toolId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete Tool",
          "method": "DELETE",
          "path": {
            "head": "/api/v1/tools/",
            "parts": [
              {
                "pathParameter": "toolId",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "toolId",
                "camelCase": {
                  "unsafeName": "toolId",
                  "safeName": "toolId"
                },
                "snakeCase": {
                  "unsafeName": "tool_id",
                  "safeName": "tool_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ID",
                  "safeName": "TOOL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolId",
                  "safeName": "ToolId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "toolId_example": "toolId"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Delete_tool_api_v1_tools__toolId__deleteRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "deleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError",
                    "safeName": "deleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "delete_tool_api_v_1_tools_tool_id_delete_request_unprocessable_entity_error",
                    "safeName": "delete_tool_api_v_1_tools_tool_id_delete_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "DeleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError",
                    "safeName": "DeleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Delete_tool_api_v1_tools__toolId__deleteRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/tools/",
            "parts": [
              {
                "pathParameter": "toolId",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "toolId",
                "camelCase": {
                  "unsafeName": "toolId",
                  "safeName": "toolId"
                },
                "snakeCase": {
                  "unsafeName": "tool_id",
                  "safeName": "tool_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ID",
                  "safeName": "TOOL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolId",
                  "safeName": "ToolId"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "toolId_example": "toolId"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.Delete_tool_api_v1_tools__toolId__delete",
          "name": {
            "originalName": "Delete_tool_api_v1_tools__toolId__delete",
            "camelCase": {
              "unsafeName": "deleteToolApiV1ToolsToolIdDelete",
              "safeName": "deleteToolApiV1ToolsToolIdDelete"
            },
            "snakeCase": {
              "unsafeName": "delete_tool_api_v_1_tools_tool_id_delete",
              "safeName": "delete_tool_api_v_1_tools_tool_id_delete"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE",
              "safeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE"
            },
            "pascalCase": {
              "unsafeName": "DeleteToolApiV1ToolsToolIdDelete",
              "safeName": "DeleteToolApiV1ToolsToolIdDelete"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a specific tool",
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteToolApiV1ToolsToolIdDeleteExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/api/v1/tools/toolId"
                  },
                  "pathParameters": {
                    "toolId": "toolId"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_traces": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Traces",
              "camelCase": {
                "unsafeName": "traces",
                "safeName": "traces"
              },
              "snakeCase": {
                "unsafeName": "traces",
                "safeName": "traces"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRACES",
                "safeName": "TRACES"
              },
              "pascalCase": {
                "unsafeName": "Traces",
                "safeName": "Traces"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Traces",
            "camelCase": {
              "unsafeName": "traces",
              "safeName": "traces"
            },
            "snakeCase": {
              "unsafeName": "traces",
              "safeName": "traces"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRACES",
              "safeName": "TRACES"
            },
            "pascalCase": {
              "unsafeName": "Traces",
              "safeName": "Traces"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List Agent Traces",
          "method": "GET",
          "path": {
            "head": "/api/v1/traces",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/api/v1/traces",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_traces.List_agent_traces_api_v1_traces_get",
          "name": {
            "originalName": "List_agent_traces_api_v1_traces_get",
            "camelCase": {
              "unsafeName": "listAgentTracesApiV1TracesGet",
              "safeName": "listAgentTracesApiV1TracesGet"
            },
            "snakeCase": {
              "unsafeName": "list_agent_traces_api_v_1_traces_get",
              "safeName": "list_agent_traces_api_v_1_traces_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_AGENT_TRACES_API_V_1_TRACES_GET",
              "safeName": "LIST_AGENT_TRACES_API_V_1_TRACES_GET"
            },
            "pascalCase": {
              "unsafeName": "ListAgentTracesApiV1TracesGet",
              "safeName": "ListAgentTracesApiV1TracesGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List all agent traces",
          "v2Examples": {
            "autogeneratedExamples": {
              "listAgentTracesApiV1TracesGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/api/v1/traces"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    }
  },
  "errors": {
    "Create_agent_api_v1_agents_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_agent_api_v1_agents_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createAgentApiV1AgentsPostRequestUnprocessableEntityError",
            "safeName": "createAgentApiV1AgentsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_agent_api_v_1_agents_post_request_unprocessable_entity_error",
            "safeName": "create_agent_api_v_1_agents_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_AGENT_API_V_1_AGENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_AGENT_API_V_1_AGENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateAgentApiV1AgentsPostRequestUnprocessableEntityError",
            "safeName": "CreateAgentApiV1AgentsPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_agent_api_v1_agents_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_agent_api_v1_agents_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createAgentApiV1AgentsPostRequestUnprocessableEntityError",
            "safeName": "createAgentApiV1AgentsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_agent_api_v_1_agents_post_request_unprocessable_entity_error",
            "safeName": "create_agent_api_v_1_agents_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_AGENT_API_V_1_AGENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_AGENT_API_V_1_AGENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateAgentApiV1AgentsPostRequestUnprocessableEntityError",
            "safeName": "CreateAgentApiV1AgentsPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_agent_api_v1_agents_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_agent_api_v1_agents__agentId__getRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_agent_api_v1_agents__agentId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError",
            "safeName": "getAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_agent_api_v_1_agents_agent_id_get_request_unprocessable_entity_error",
            "safeName": "get_agent_api_v_1_agents_agent_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError",
            "safeName": "GetAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_agent_api_v1_agents__agentId__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_agent_api_v1_agents__agentId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError",
            "safeName": "getAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_agent_api_v_1_agents_agent_id_get_request_unprocessable_entity_error",
            "safeName": "get_agent_api_v_1_agents_agent_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_AGENT_API_V_1_AGENTS_AGENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError",
            "safeName": "GetAgentApiV1AgentsAgentIdGetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_agent_api_v1_agents__agentId__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_agent_api_v1_agents__agentId__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_agent_api_v1_agents__agentId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_agent_api_v_1_agents_agent_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_agent_api_v_1_agents_agent_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_agent_api_v1_agents__agentId__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_agent_api_v1_agents__agentId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_agent_api_v_1_agents_agent_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_agent_api_v_1_agents_agent_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_AGENT_API_V_1_AGENTS_AGENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteAgentApiV1AgentsAgentIdDeleteRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_agent_api_v1_agents__agentId__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Patch_agent_api_v1_agents__agentId__patchRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Patch_agent_api_v1_agents__agentId__patchRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "patchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError",
            "safeName": "patchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "patch_agent_api_v_1_agents_agent_id_patch_request_unprocessable_entity_error",
            "safeName": "patch_agent_api_v_1_agents_agent_id_patch_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PatchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError",
            "safeName": "PatchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Patch_agent_api_v1_agents__agentId__patchRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Patch_agent_api_v1_agents__agentId__patchRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "patchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError",
            "safeName": "patchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "patch_agent_api_v_1_agents_agent_id_patch_request_unprocessable_entity_error",
            "safeName": "patch_agent_api_v_1_agents_agent_id_patch_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "PATCH_AGENT_API_V_1_AGENTS_AGENT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PatchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError",
            "safeName": "PatchAgentApiV1AgentsAgentIdPatchRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Patch_agent_api_v1_agents__agentId__patchRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Prompt_agent_api_v1_agents__agentId__predict_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Prompt_agent_api_v1_agents__agentId__predict_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "promptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError",
            "safeName": "promptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "prompt_agent_api_v_1_agents_agent_id_predict_post_request_unprocessable_entity_error",
            "safeName": "prompt_agent_api_v_1_agents_agent_id_predict_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PromptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError",
            "safeName": "PromptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Prompt_agent_api_v1_agents__agentId__predict_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Prompt_agent_api_v1_agents__agentId__predict_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "promptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError",
            "safeName": "promptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "prompt_agent_api_v_1_agents_agent_id_predict_post_request_unprocessable_entity_error",
            "safeName": "prompt_agent_api_v_1_agents_agent_id_predict_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "PROMPT_AGENT_API_V_1_AGENTS_AGENT_ID_PREDICT_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PromptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError",
            "safeName": "PromptAgentApiV1AgentsAgentIdPredictPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Prompt_agent_api_v1_agents__agentId__predict_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Sign_in_api_v1_auth_sign_in_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Sign_in_api_v1_auth_sign_in_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "signInApiV1AuthSignInPostRequestUnprocessableEntityError",
            "safeName": "signInApiV1AuthSignInPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "sign_in_api_v_1_auth_sign_in_post_request_unprocessable_entity_error",
            "safeName": "sign_in_api_v_1_auth_sign_in_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "SignInApiV1AuthSignInPostRequestUnprocessableEntityError",
            "safeName": "SignInApiV1AuthSignInPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Sign_in_api_v1_auth_sign_in_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Sign_in_api_v1_auth_sign_in_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "signInApiV1AuthSignInPostRequestUnprocessableEntityError",
            "safeName": "signInApiV1AuthSignInPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "sign_in_api_v_1_auth_sign_in_post_request_unprocessable_entity_error",
            "safeName": "sign_in_api_v_1_auth_sign_in_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "SIGN_IN_API_V_1_AUTH_SIGN_IN_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "SignInApiV1AuthSignInPostRequestUnprocessableEntityError",
            "safeName": "SignInApiV1AuthSignInPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Sign_in_api_v1_auth_sign_in_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Sign_up_api_v1_auth_sign_up_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Sign_up_api_v1_auth_sign_up_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "signUpApiV1AuthSignUpPostRequestUnprocessableEntityError",
            "safeName": "signUpApiV1AuthSignUpPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "sign_up_api_v_1_auth_sign_up_post_request_unprocessable_entity_error",
            "safeName": "sign_up_api_v_1_auth_sign_up_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "SignUpApiV1AuthSignUpPostRequestUnprocessableEntityError",
            "safeName": "SignUpApiV1AuthSignUpPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Sign_up_api_v1_auth_sign_up_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Sign_up_api_v1_auth_sign_up_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "signUpApiV1AuthSignUpPostRequestUnprocessableEntityError",
            "safeName": "signUpApiV1AuthSignUpPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "sign_up_api_v_1_auth_sign_up_post_request_unprocessable_entity_error",
            "safeName": "sign_up_api_v_1_auth_sign_up_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "SIGN_UP_API_V_1_AUTH_SIGN_UP_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "SignUpApiV1AuthSignUpPostRequestUnprocessableEntityError",
            "safeName": "SignUpApiV1AuthSignUpPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Sign_up_api_v1_auth_sign_up_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Read_user_api_v1_users__userId__getRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Read_user_api_v1_users__userId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "readUserApiV1UsersUserIdGetRequestUnprocessableEntityError",
            "safeName": "readUserApiV1UsersUserIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "read_user_api_v_1_users_user_id_get_request_unprocessable_entity_error",
            "safeName": "read_user_api_v_1_users_user_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "READ_USER_API_V_1_USERS_USER_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "READ_USER_API_V_1_USERS_USER_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ReadUserApiV1UsersUserIdGetRequestUnprocessableEntityError",
            "safeName": "ReadUserApiV1UsersUserIdGetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Read_user_api_v1_users__userId__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Read_user_api_v1_users__userId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "readUserApiV1UsersUserIdGetRequestUnprocessableEntityError",
            "safeName": "readUserApiV1UsersUserIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "read_user_api_v_1_users_user_id_get_request_unprocessable_entity_error",
            "safeName": "read_user_api_v_1_users_user_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "READ_USER_API_V_1_USERS_USER_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "READ_USER_API_V_1_USERS_USER_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ReadUserApiV1UsersUserIdGetRequestUnprocessableEntityError",
            "safeName": "ReadUserApiV1UsersUserIdGetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Read_user_api_v1_users__userId__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_API_token_api_v1_api_tokens_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_API_token_api_v1_api_tokens_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError",
            "safeName": "createApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_api_token_api_v_1_api_tokens_post_request_unprocessable_entity_error",
            "safeName": "create_api_token_api_v_1_api_tokens_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError",
            "safeName": "CreateApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_API_token_api_v1_api_tokens_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_API_token_api_v1_api_tokens_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError",
            "safeName": "createApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_api_token_api_v_1_api_tokens_post_request_unprocessable_entity_error",
            "safeName": "create_api_token_api_v_1_api_tokens_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_API_TOKEN_API_V_1_API_TOKENS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError",
            "safeName": "CreateApiTokenApiV1ApiTokensPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_API_token_api_v1_api_tokens_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_API_token_api_v1_api_tokens__tokenId__getRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_API_token_api_v1_api_tokens__tokenId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError",
            "safeName": "getApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_api_token_api_v_1_api_tokens_token_id_get_request_unprocessable_entity_error",
            "safeName": "get_api_token_api_v_1_api_tokens_token_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError",
            "safeName": "GetApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_API_token_api_v1_api_tokens__tokenId__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_API_token_api_v1_api_tokens__tokenId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError",
            "safeName": "getApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_api_token_api_v_1_api_tokens_token_id_get_request_unprocessable_entity_error",
            "safeName": "get_api_token_api_v_1_api_tokens_token_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError",
            "safeName": "GetApiTokenApiV1ApiTokensTokenIdGetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_API_token_api_v1_api_tokens__tokenId__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_API_token_api_v1_api_tokens__tokenId__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_API_token_api_v1_api_tokens__tokenId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_api_token_api_v_1_api_tokens_token_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_api_token_api_v_1_api_tokens_token_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_API_token_api_v1_api_tokens__tokenId__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_API_token_api_v1_api_tokens__tokenId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_api_token_api_v_1_api_tokens_token_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_api_token_api_v_1_api_tokens_token_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_API_TOKEN_API_V_1_API_TOKENS_TOKEN_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteApiTokenApiV1ApiTokensTokenIdDeleteRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_API_token_api_v1_api_tokens__tokenId__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_document_api_v1_documents_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_document_api_v1_documents_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createDocumentApiV1DocumentsPostRequestUnprocessableEntityError",
            "safeName": "createDocumentApiV1DocumentsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_document_api_v_1_documents_post_request_unprocessable_entity_error",
            "safeName": "create_document_api_v_1_documents_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateDocumentApiV1DocumentsPostRequestUnprocessableEntityError",
            "safeName": "CreateDocumentApiV1DocumentsPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_document_api_v1_documents_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_document_api_v1_documents_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createDocumentApiV1DocumentsPostRequestUnprocessableEntityError",
            "safeName": "createDocumentApiV1DocumentsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_document_api_v_1_documents_post_request_unprocessable_entity_error",
            "safeName": "create_document_api_v_1_documents_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_DOCUMENT_API_V_1_DOCUMENTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateDocumentApiV1DocumentsPostRequestUnprocessableEntityError",
            "safeName": "CreateDocumentApiV1DocumentsPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_document_api_v1_documents_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_document_api_v1_documents__documentId__getRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_document_api_v1_documents__documentId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError",
            "safeName": "getDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_document_api_v_1_documents_document_id_get_request_unprocessable_entity_error",
            "safeName": "get_document_api_v_1_documents_document_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError",
            "safeName": "GetDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_document_api_v1_documents__documentId__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_document_api_v1_documents__documentId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError",
            "safeName": "getDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_document_api_v_1_documents_document_id_get_request_unprocessable_entity_error",
            "safeName": "get_document_api_v_1_documents_document_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError",
            "safeName": "GetDocumentApiV1DocumentsDocumentIdGetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_document_api_v1_documents__documentId__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_document_api_v1_documents__documentId__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_document_api_v1_documents__documentId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_document_api_v_1_documents_document_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_document_api_v_1_documents_document_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_document_api_v1_documents__documentId__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_document_api_v1_documents__documentId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_document_api_v_1_documents_document_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_document_api_v_1_documents_document_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_DOCUMENT_API_V_1_DOCUMENTS_DOCUMENT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteDocumentApiV1DocumentsDocumentIdDeleteRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_document_api_v1_documents__documentId__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_a_prompt_api_v1_prompts_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_a_prompt_api_v1_prompts_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createAPromptApiV1PromptsPostRequestUnprocessableEntityError",
            "safeName": "createAPromptApiV1PromptsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_a_prompt_api_v_1_prompts_post_request_unprocessable_entity_error",
            "safeName": "create_a_prompt_api_v_1_prompts_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateAPromptApiV1PromptsPostRequestUnprocessableEntityError",
            "safeName": "CreateAPromptApiV1PromptsPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_a_prompt_api_v1_prompts_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_a_prompt_api_v1_prompts_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createAPromptApiV1PromptsPostRequestUnprocessableEntityError",
            "safeName": "createAPromptApiV1PromptsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_a_prompt_api_v_1_prompts_post_request_unprocessable_entity_error",
            "safeName": "create_a_prompt_api_v_1_prompts_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_A_PROMPT_API_V_1_PROMPTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateAPromptApiV1PromptsPostRequestUnprocessableEntityError",
            "safeName": "CreateAPromptApiV1PromptsPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_a_prompt_api_v1_prompts_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_prompt_api_v1_prompts__promptId__getRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_prompt_api_v1_prompts__promptId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError",
            "safeName": "getPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_prompt_api_v_1_prompts_prompt_id_get_request_unprocessable_entity_error",
            "safeName": "get_prompt_api_v_1_prompts_prompt_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError",
            "safeName": "GetPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_prompt_api_v1_prompts__promptId__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_prompt_api_v1_prompts__promptId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError",
            "safeName": "getPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_prompt_api_v_1_prompts_prompt_id_get_request_unprocessable_entity_error",
            "safeName": "get_prompt_api_v_1_prompts_prompt_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_PROMPT_API_V_1_PROMPTS_PROMPT_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError",
            "safeName": "GetPromptApiV1PromptsPromptIdGetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_prompt_api_v1_prompts__promptId__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_prompt_api_v1_prompts__promptId__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_prompt_api_v1_prompts__promptId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError",
            "safeName": "deletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_prompt_api_v_1_prompts_prompt_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_prompt_api_v_1_prompts_prompt_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_prompt_api_v1_prompts__promptId__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_prompt_api_v1_prompts__promptId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError",
            "safeName": "deletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_prompt_api_v_1_prompts_prompt_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_prompt_api_v_1_prompts_prompt_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_PROMPT_API_V_1_PROMPTS_PROMPT_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeletePromptApiV1PromptsPromptIdDeleteRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_prompt_api_v1_prompts__promptId__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Patch_prompt_api_v1_prompts__promptId__patchRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Patch_prompt_api_v1_prompts__promptId__patchRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "patchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError",
            "safeName": "patchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "patch_prompt_api_v_1_prompts_prompt_id_patch_request_unprocessable_entity_error",
            "safeName": "patch_prompt_api_v_1_prompts_prompt_id_patch_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PatchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError",
            "safeName": "PatchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Patch_prompt_api_v1_prompts__promptId__patchRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Patch_prompt_api_v1_prompts__promptId__patchRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "patchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError",
            "safeName": "patchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "patch_prompt_api_v_1_prompts_prompt_id_patch_request_unprocessable_entity_error",
            "safeName": "patch_prompt_api_v_1_prompts_prompt_id_patch_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "PATCH_PROMPT_API_V_1_PROMPTS_PROMPT_ID_PATCH_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PatchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError",
            "safeName": "PatchPromptApiV1PromptsPromptIdPatchRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Patch_prompt_api_v1_prompts__promptId__patchRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Create_a_tool_api_v1_tools_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Create_a_tool_api_v1_tools_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createAToolApiV1ToolsPostRequestUnprocessableEntityError",
            "safeName": "createAToolApiV1ToolsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_a_tool_api_v_1_tools_post_request_unprocessable_entity_error",
            "safeName": "create_a_tool_api_v_1_tools_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateAToolApiV1ToolsPostRequestUnprocessableEntityError",
            "safeName": "CreateAToolApiV1ToolsPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Create_a_tool_api_v1_tools_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Create_a_tool_api_v1_tools_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "createAToolApiV1ToolsPostRequestUnprocessableEntityError",
            "safeName": "createAToolApiV1ToolsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "create_a_tool_api_v_1_tools_post_request_unprocessable_entity_error",
            "safeName": "create_a_tool_api_v_1_tools_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "CREATE_A_TOOL_API_V_1_TOOLS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "CreateAToolApiV1ToolsPostRequestUnprocessableEntityError",
            "safeName": "CreateAToolApiV1ToolsPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Create_a_tool_api_v1_tools_postRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Get_tool_api_v1_tools__toolId__getRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Get_tool_api_v1_tools__toolId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getToolApiV1ToolsToolIdGetRequestUnprocessableEntityError",
            "safeName": "getToolApiV1ToolsToolIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_tool_api_v_1_tools_tool_id_get_request_unprocessable_entity_error",
            "safeName": "get_tool_api_v_1_tools_tool_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetToolApiV1ToolsToolIdGetRequestUnprocessableEntityError",
            "safeName": "GetToolApiV1ToolsToolIdGetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Get_tool_api_v1_tools__toolId__getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Get_tool_api_v1_tools__toolId__getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "getToolApiV1ToolsToolIdGetRequestUnprocessableEntityError",
            "safeName": "getToolApiV1ToolsToolIdGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "get_tool_api_v_1_tools_tool_id_get_request_unprocessable_entity_error",
            "safeName": "get_tool_api_v_1_tools_tool_id_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "GET_TOOL_API_V_1_TOOLS_TOOL_ID_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "GetToolApiV1ToolsToolIdGetRequestUnprocessableEntityError",
            "safeName": "GetToolApiV1ToolsToolIdGetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Get_tool_api_v1_tools__toolId__getRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Delete_tool_api_v1_tools__toolId__deleteRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Delete_tool_api_v1_tools__toolId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_tool_api_v_1_tools_tool_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_tool_api_v_1_tools_tool_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Delete_tool_api_v1_tools__toolId__deleteRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Delete_tool_api_v1_tools__toolId__deleteRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "deleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError",
            "safeName": "deleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "delete_tool_api_v_1_tools_tool_id_delete_request_unprocessable_entity_error",
            "safeName": "delete_tool_api_v_1_tools_tool_id_delete_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "DELETE_TOOL_API_V_1_TOOLS_TOOL_ID_DELETE_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "DeleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError",
            "safeName": "DeleteToolApiV1ToolsToolIdDeleteRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Delete_tool_api_v1_tools__toolId__deleteRequestUnprocessableEntityError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "HTTPValidationError",
          "camelCase": {
            "unsafeName": "httpValidationError",
            "safeName": "httpValidationError"
          },
          "snakeCase": {
            "unsafeName": "http_validation_error",
            "safeName": "http_validation_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "HTTP_VALIDATION_ERROR",
            "safeName": "HTTP_VALIDATION_ERROR"
          },
          "pascalCase": {
            "unsafeName": "HttpValidationError",
            "safeName": "HttpValidationError"
          }
        },
        "typeId": "HTTPValidationError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    }
  },
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "Agent",
      "ApiToken",
      "Document",
      "HTTPValidationError",
      "PredictAgent",
      "Prompt",
      "SignIn",
      "SignUp",
      "Tool",
      "ValidationError"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_agent",
      "subpackage_auth",
      "subpackage_user",
      "subpackage_apiToken",
      "subpackage_documents",
      "subpackage_prompts",
      "subpackage_tools",
      "subpackage_traces"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_agent": {
      "name": {
        "originalName": "agent",
        "camelCase": {
          "unsafeName": "agent",
          "safeName": "agent"
        },
        "snakeCase": {
          "unsafeName": "agent",
          "safeName": "agent"
        },
        "screamingSnakeCase": {
          "unsafeName": "AGENT",
          "safeName": "AGENT"
        },
        "pascalCase": {
          "unsafeName": "Agent",
          "safeName": "Agent"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "agent",
            "camelCase": {
              "unsafeName": "agent",
              "safeName": "agent"
            },
            "snakeCase": {
              "unsafeName": "agent",
              "safeName": "agent"
            },
            "screamingSnakeCase": {
              "unsafeName": "AGENT",
              "safeName": "AGENT"
            },
            "pascalCase": {
              "unsafeName": "Agent",
              "safeName": "Agent"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "agent",
          "camelCase": {
            "unsafeName": "agent",
            "safeName": "agent"
          },
          "snakeCase": {
            "unsafeName": "agent",
            "safeName": "agent"
          },
          "screamingSnakeCase": {
            "unsafeName": "AGENT",
            "safeName": "AGENT"
          },
          "pascalCase": {
            "unsafeName": "Agent",
            "safeName": "Agent"
          }
        }
      },
      "service": "service_agent",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_auth": {
      "name": {
        "originalName": "auth",
        "camelCase": {
          "unsafeName": "auth",
          "safeName": "auth"
        },
        "snakeCase": {
          "unsafeName": "auth",
          "safeName": "auth"
        },
        "screamingSnakeCase": {
          "unsafeName": "AUTH",
          "safeName": "AUTH"
        },
        "pascalCase": {
          "unsafeName": "Auth",
          "safeName": "Auth"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "auth",
            "camelCase": {
              "unsafeName": "auth",
              "safeName": "auth"
            },
            "snakeCase": {
              "unsafeName": "auth",
              "safeName": "auth"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUTH",
              "safeName": "AUTH"
            },
            "pascalCase": {
              "unsafeName": "Auth",
              "safeName": "Auth"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "auth",
          "camelCase": {
            "unsafeName": "auth",
            "safeName": "auth"
          },
          "snakeCase": {
            "unsafeName": "auth",
            "safeName": "auth"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUTH",
            "safeName": "AUTH"
          },
          "pascalCase": {
            "unsafeName": "Auth",
            "safeName": "Auth"
          }
        }
      },
      "service": "service_auth",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_user": {
      "name": {
        "originalName": "user",
        "camelCase": {
          "unsafeName": "user",
          "safeName": "user"
        },
        "snakeCase": {
          "unsafeName": "user",
          "safeName": "user"
        },
        "screamingSnakeCase": {
          "unsafeName": "USER",
          "safeName": "USER"
        },
        "pascalCase": {
          "unsafeName": "User",
          "safeName": "User"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "user",
            "camelCase": {
              "unsafeName": "user",
              "safeName": "user"
            },
            "snakeCase": {
              "unsafeName": "user",
              "safeName": "user"
            },
            "screamingSnakeCase": {
              "unsafeName": "USER",
              "safeName": "USER"
            },
            "pascalCase": {
              "unsafeName": "User",
              "safeName": "User"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "user",
          "camelCase": {
            "unsafeName": "user",
            "safeName": "user"
          },
          "snakeCase": {
            "unsafeName": "user",
            "safeName": "user"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER",
            "safeName": "USER"
          },
          "pascalCase": {
            "unsafeName": "User",
            "safeName": "User"
          }
        }
      },
      "service": "service_user",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_apiToken": {
      "name": {
        "originalName": "apiToken",
        "camelCase": {
          "unsafeName": "apiToken",
          "safeName": "apiToken"
        },
        "snakeCase": {
          "unsafeName": "api_token",
          "safeName": "api_token"
        },
        "screamingSnakeCase": {
          "unsafeName": "API_TOKEN",
          "safeName": "API_TOKEN"
        },
        "pascalCase": {
          "unsafeName": "ApiToken",
          "safeName": "ApiToken"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "apiToken",
            "camelCase": {
              "unsafeName": "apiToken",
              "safeName": "apiToken"
            },
            "snakeCase": {
              "unsafeName": "api_token",
              "safeName": "api_token"
            },
            "screamingSnakeCase": {
              "unsafeName": "API_TOKEN",
              "safeName": "API_TOKEN"
            },
            "pascalCase": {
              "unsafeName": "ApiToken",
              "safeName": "ApiToken"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "apiToken",
          "camelCase": {
            "unsafeName": "apiToken",
            "safeName": "apiToken"
          },
          "snakeCase": {
            "unsafeName": "api_token",
            "safeName": "api_token"
          },
          "screamingSnakeCase": {
            "unsafeName": "API_TOKEN",
            "safeName": "API_TOKEN"
          },
          "pascalCase": {
            "unsafeName": "ApiToken",
            "safeName": "ApiToken"
          }
        }
      },
      "service": "service_apiToken",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_documents": {
      "name": {
        "originalName": "documents",
        "camelCase": {
          "unsafeName": "documents",
          "safeName": "documents"
        },
        "snakeCase": {
          "unsafeName": "documents",
          "safeName": "documents"
        },
        "screamingSnakeCase": {
          "unsafeName": "DOCUMENTS",
          "safeName": "DOCUMENTS"
        },
        "pascalCase": {
          "unsafeName": "Documents",
          "safeName": "Documents"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "documents",
            "camelCase": {
              "unsafeName": "documents",
              "safeName": "documents"
            },
            "snakeCase": {
              "unsafeName": "documents",
              "safeName": "documents"
            },
            "screamingSnakeCase": {
              "unsafeName": "DOCUMENTS",
              "safeName": "DOCUMENTS"
            },
            "pascalCase": {
              "unsafeName": "Documents",
              "safeName": "Documents"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "documents",
          "camelCase": {
            "unsafeName": "documents",
            "safeName": "documents"
          },
          "snakeCase": {
            "unsafeName": "documents",
            "safeName": "documents"
          },
          "screamingSnakeCase": {
            "unsafeName": "DOCUMENTS",
            "safeName": "DOCUMENTS"
          },
          "pascalCase": {
            "unsafeName": "Documents",
            "safeName": "Documents"
          }
        }
      },
      "service": "service_documents",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_prompts": {
      "name": {
        "originalName": "prompts",
        "camelCase": {
          "unsafeName": "prompts",
          "safeName": "prompts"
        },
        "snakeCase": {
          "unsafeName": "prompts",
          "safeName": "prompts"
        },
        "screamingSnakeCase": {
          "unsafeName": "PROMPTS",
          "safeName": "PROMPTS"
        },
        "pascalCase": {
          "unsafeName": "Prompts",
          "safeName": "Prompts"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "prompts",
            "camelCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "snakeCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROMPTS",
              "safeName": "PROMPTS"
            },
            "pascalCase": {
              "unsafeName": "Prompts",
              "safeName": "Prompts"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "prompts",
          "camelCase": {
            "unsafeName": "prompts",
            "safeName": "prompts"
          },
          "snakeCase": {
            "unsafeName": "prompts",
            "safeName": "prompts"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROMPTS",
            "safeName": "PROMPTS"
          },
          "pascalCase": {
            "unsafeName": "Prompts",
            "safeName": "Prompts"
          }
        }
      },
      "service": "service_prompts",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_tools": {
      "name": {
        "originalName": "tools",
        "camelCase": {
          "unsafeName": "tools",
          "safeName": "tools"
        },
        "snakeCase": {
          "unsafeName": "tools",
          "safeName": "tools"
        },
        "screamingSnakeCase": {
          "unsafeName": "TOOLS",
          "safeName": "TOOLS"
        },
        "pascalCase": {
          "unsafeName": "Tools",
          "safeName": "Tools"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "tools",
            "camelCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "snakeCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "screamingSnakeCase": {
              "unsafeName": "TOOLS",
              "safeName": "TOOLS"
            },
            "pascalCase": {
              "unsafeName": "Tools",
              "safeName": "Tools"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "tools",
          "camelCase": {
            "unsafeName": "tools",
            "safeName": "tools"
          },
          "snakeCase": {
            "unsafeName": "tools",
            "safeName": "tools"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOLS",
            "safeName": "TOOLS"
          },
          "pascalCase": {
            "unsafeName": "Tools",
            "safeName": "Tools"
          }
        }
      },
      "service": "service_tools",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_traces": {
      "name": {
        "originalName": "traces",
        "camelCase": {
          "unsafeName": "traces",
          "safeName": "traces"
        },
        "snakeCase": {
          "unsafeName": "traces",
          "safeName": "traces"
        },
        "screamingSnakeCase": {
          "unsafeName": "TRACES",
          "safeName": "TRACES"
        },
        "pascalCase": {
          "unsafeName": "Traces",
          "safeName": "Traces"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "traces",
            "camelCase": {
              "unsafeName": "traces",
              "safeName": "traces"
            },
            "snakeCase": {
              "unsafeName": "traces",
              "safeName": "traces"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRACES",
              "safeName": "TRACES"
            },
            "pascalCase": {
              "unsafeName": "Traces",
              "safeName": "Traces"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "traces",
          "camelCase": {
            "unsafeName": "traces",
            "safeName": "traces"
          },
          "snakeCase": {
            "unsafeName": "traces",
            "safeName": "traces"
          },
          "screamingSnakeCase": {
            "unsafeName": "TRACES",
            "safeName": "TRACES"
          },
          "pascalCase": {
            "unsafeName": "Traces",
            "safeName": "Traces"
          }
        }
      },
      "service": "service_traces",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": {
    "originalName": "",
    "camelCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "snakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "screamingSnakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "pascalCase": {
      "unsafeName": "",
      "safeName": ""
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceId",
          "safeName": "errorInstanceId"
        },
        "snakeCase": {
          "unsafeName": "error_instance_id",
          "safeName": "error_instance_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "ERROR_INSTANCE_ID",
          "safeName": "ERROR_INSTANCE_ID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceId",
          "safeName": "ErrorInstanceId"
        }
      },
      "wireValue": "errorInstanceId"
    }
  }
}