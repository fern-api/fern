{
  "auth": {
    "requirement": "ALL",
    "schemes": []
  },
  "selfHosted": false,
  "types": {
    "Rawv3MetadataAttributesItems": {
      "name": {
        "typeId": "Rawv3MetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Rawv3MetadataAttributesItems",
          "camelCase": {
            "unsafeName": "rawv3MetadataAttributesItems",
            "safeName": "rawv3MetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "rawv_3_metadata_attributes_items",
            "safeName": "rawv_3_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "RAWV_3_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "RAWV_3_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "Rawv3MetadataAttributesItems",
            "safeName": "Rawv3MetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3MetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3MetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Rawv3MetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "Rawv3Metadata": {
      "name": {
        "typeId": "Rawv3Metadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Rawv3Metadata",
          "camelCase": {
            "unsafeName": "rawv3Metadata",
            "safeName": "rawv3Metadata"
          },
          "snakeCase": {
            "unsafeName": "rawv_3_metadata",
            "safeName": "rawv_3_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "RAWV_3_METADATA",
            "safeName": "RAWV_3_METADATA"
          },
          "pascalCase": {
            "unsafeName": "Rawv3Metadata",
            "safeName": "Rawv3Metadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3MetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3MetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3MetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "Rawv3MetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "rawv3MetadataAttributesItems",
                          "safeName": "rawv3MetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "rawv_3_metadata_attributes_items",
                          "safeName": "rawv_3_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "RAWV_3_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "RAWV_3_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "Rawv3MetadataAttributesItems",
                          "safeName": "Rawv3MetadataAttributesItems"
                        }
                      },
                      "typeId": "Rawv3MetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3MetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Rawv3Metadata_example_autogenerated": {}
        }
      }
    },
    "rawv3": {
      "name": {
        "typeId": "rawv3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "rawv3",
          "camelCase": {
            "unsafeName": "rawv3",
            "safeName": "rawv3"
          },
          "snakeCase": {
            "unsafeName": "rawv_3",
            "safeName": "rawv_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "RAWV_3",
            "safeName": "RAWV_3"
          },
          "pascalCase": {
            "unsafeName": "Rawv3",
            "safeName": "Rawv3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3TokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Rawv3Metadata",
                    "camelCase": {
                      "unsafeName": "rawv3Metadata",
                      "safeName": "rawv3Metadata"
                    },
                    "snakeCase": {
                      "unsafeName": "rawv_3_metadata",
                      "safeName": "rawv_3_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "RAWV_3_METADATA",
                      "safeName": "RAWV_3_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "Rawv3Metadata",
                      "safeName": "Rawv3Metadata"
                    }
                  },
                  "typeId": "Rawv3Metadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3Metadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Rawv3Error_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "rawv3_example_autogenerated": {}
        }
      }
    },
    "IdTokenMetadataTokenType": {
      "name": {
        "typeId": "IdTokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "IdTokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "idTokenMetadataTokenType",
            "safeName": "idTokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "id_token_metadata_token_type",
            "safeName": "id_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "ID_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "ID_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "IdTokenMetadataTokenType",
            "safeName": "IdTokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdTokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "IdTokenMetadata": {
      "name": {
        "typeId": "IdTokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "IdTokenMetadata",
          "camelCase": {
            "unsafeName": "idTokenMetadata",
            "safeName": "idTokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "id_token_metadata",
            "safeName": "id_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "ID_TOKEN_METADATA",
            "safeName": "ID_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "IdTokenMetadata",
            "safeName": "IdTokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "IdTokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "idTokenMetadataTokenType",
                      "safeName": "idTokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "id_token_metadata_token_type",
                      "safeName": "id_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ID_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "ID_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "IdTokenMetadataTokenType",
                      "safeName": "IdTokenMetadataTokenType"
                    }
                  },
                  "typeId": "IdTokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdTokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdTokenMetadata_example_autogenerated": {}
        }
      }
    },
    "id": {
      "name": {
        "typeId": "id",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "id",
          "camelCase": {
            "unsafeName": "id",
            "safeName": "id"
          },
          "snakeCase": {
            "unsafeName": "id",
            "safeName": "id"
          },
          "screamingSnakeCase": {
            "unsafeName": "ID",
            "safeName": "ID"
          },
          "pascalCase": {
            "unsafeName": "Id",
            "safeName": "Id"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "IdTokenMetadata",
                    "camelCase": {
                      "unsafeName": "idTokenMetadata",
                      "safeName": "idTokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "id_token_metadata",
                      "safeName": "id_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ID_TOKEN_METADATA",
                      "safeName": "ID_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "IdTokenMetadata",
                      "safeName": "IdTokenMetadata"
                    }
                  },
                  "typeId": "IdTokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdTokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "id_example_autogenerated": {}
        }
      }
    },
    "IdV3TokenMetadataTokenType": {
      "name": {
        "typeId": "IdV3TokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "IdV3TokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "idV3TokenMetadataTokenType",
            "safeName": "idV3TokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "id_v_3_token_metadata_token_type",
            "safeName": "id_v_3_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "ID_V_3_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "ID_V_3_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "IdV3TokenMetadataTokenType",
            "safeName": "IdV3TokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdV3TokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "IdV3TokenMetadata": {
      "name": {
        "typeId": "IdV3TokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "IdV3TokenMetadata",
          "camelCase": {
            "unsafeName": "idV3TokenMetadata",
            "safeName": "idV3TokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "id_v_3_token_metadata",
            "safeName": "id_v_3_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "ID_V_3_TOKEN_METADATA",
            "safeName": "ID_V_3_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "IdV3TokenMetadata",
            "safeName": "IdV3TokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "IdV3TokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "idV3TokenMetadataTokenType",
                      "safeName": "idV3TokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "id_v_3_token_metadata_token_type",
                      "safeName": "id_v_3_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ID_V_3_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "ID_V_3_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "IdV3TokenMetadataTokenType",
                      "safeName": "IdV3TokenMetadataTokenType"
                    }
                  },
                  "typeId": "IdV3TokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdV3TokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IdV3TokenMetadata_example_autogenerated": {}
        }
      }
    },
    "idV3": {
      "name": {
        "typeId": "idV3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "idV3",
          "camelCase": {
            "unsafeName": "idV3",
            "safeName": "idV3"
          },
          "snakeCase": {
            "unsafeName": "id_v_3",
            "safeName": "id_v_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "ID_V_3",
            "safeName": "ID_V_3"
          },
          "pascalCase": {
            "unsafeName": "IdV3",
            "safeName": "IdV3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdV3TokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "IdV3TokenMetadata",
                    "camelCase": {
                      "unsafeName": "idV3TokenMetadata",
                      "safeName": "idV3TokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "id_v_3_token_metadata",
                      "safeName": "id_v_3_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ID_V_3_TOKEN_METADATA",
                      "safeName": "ID_V_3_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "IdV3TokenMetadata",
                      "safeName": "IdV3TokenMetadata"
                    }
                  },
                  "typeId": "IdV3TokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "IdV3TokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "idV3_example_autogenerated": {}
        }
      }
    },
    "tokenUri": {
      "name": {
        "typeId": "tokenUri",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "tokenUri",
          "camelCase": {
            "unsafeName": "tokenUri",
            "safeName": "tokenUri"
          },
          "snakeCase": {
            "unsafeName": "token_uri",
            "safeName": "token_uri"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOKEN_URI",
            "safeName": "TOKEN_URI"
          },
          "pascalCase": {
            "unsafeName": "TokenUri",
            "safeName": "TokenUri"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TokenUriRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TokenUriGateway_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "tokenUri_example_autogenerated": {}
        }
      }
    },
    "MetadataAttributesItems": {
      "name": {
        "typeId": "MetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MetadataAttributesItems",
          "camelCase": {
            "unsafeName": "metadataAttributesItems",
            "safeName": "metadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "metadata_attributes_items",
            "safeName": "metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "METADATA_ATTRIBUTES_ITEMS",
            "safeName": "METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "MetadataAttributesItems",
            "safeName": "MetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "MetadataMediaItems": {
      "name": {
        "typeId": "MetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MetadataMediaItems",
          "camelCase": {
            "unsafeName": "metadataMediaItems",
            "safeName": "metadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "metadata_media_items",
            "safeName": "metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "METADATA_MEDIA_ITEMS",
            "safeName": "METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "MetadataMediaItems",
            "safeName": "MetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "metadata": {
      "name": {
        "typeId": "metadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "metadata",
          "camelCase": {
            "unsafeName": "metadata",
            "safeName": "metadata"
          },
          "snakeCase": {
            "unsafeName": "metadata",
            "safeName": "metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "METADATA",
            "safeName": "METADATA"
          },
          "pascalCase": {
            "unsafeName": "Metadata",
            "safeName": "Metadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "external_url",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "external_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The image URL that appears alongside the asset image on NFT platforms.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "background_color",
                "camelCase": {
                  "unsafeName": "backgroundColor",
                  "safeName": "backgroundColor"
                },
                "snakeCase": {
                  "unsafeName": "background_color",
                  "safeName": "background_color"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BACKGROUND_COLOR",
                  "safeName": "BACKGROUND_COLOR"
                },
                "pascalCase": {
                  "unsafeName": "BackgroundColor",
                  "safeName": "BackgroundColor"
                }
              },
              "wireValue": "background_color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataBackgroundColor_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "MetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "metadataAttributesItems",
                          "safeName": "metadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "metadata_attributes_items",
                          "safeName": "metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "MetadataAttributesItems",
                          "safeName": "MetadataAttributesItems"
                        }
                      },
                      "typeId": "MetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "MetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "metadataMediaItems",
                          "safeName": "metadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "metadata_media_items",
                          "safeName": "metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "METADATA_MEDIA_ITEMS",
                          "safeName": "METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "MetadataMediaItems",
                          "safeName": "MetadataMediaItems"
                        }
                      },
                      "typeId": "MetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "metadata_example_autogenerated": {}
        }
      }
    },
    "OwnedContractMediaItems": {
      "name": {
        "typeId": "OwnedContractMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedContractMediaItems",
          "camelCase": {
            "unsafeName": "ownedContractMediaItems",
            "safeName": "ownedContractMediaItems"
          },
          "snakeCase": {
            "unsafeName": "owned_contract_media_items",
            "safeName": "owned_contract_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_CONTRACT_MEDIA_ITEMS",
            "safeName": "OWNED_CONTRACT_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "OwnedContractMediaItems",
            "safeName": "OwnedContractMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedContractMediaItems_example_autogenerated": {}
        }
      }
    },
    "OwnedContractOpensea": {
      "name": {
        "typeId": "OwnedContractOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedContractOpensea",
          "camelCase": {
            "unsafeName": "ownedContractOpensea",
            "safeName": "ownedContractOpensea"
          },
          "snakeCase": {
            "unsafeName": "owned_contract_opensea",
            "safeName": "owned_contract_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_CONTRACT_OPENSEA",
            "safeName": "OWNED_CONTRACT_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "OwnedContractOpensea",
            "safeName": "OwnedContractOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedContractOpensea_example_autogenerated": {}
        }
      }
    },
    "ownedContract": {
      "name": {
        "typeId": "ownedContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ownedContract",
          "camelCase": {
            "unsafeName": "ownedContract",
            "safeName": "ownedContract"
          },
          "snakeCase": {
            "unsafeName": "owned_contract",
            "safeName": "owned_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_CONTRACT",
            "safeName": "OWNED_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "OwnedContract",
            "safeName": "OwnedContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalBalance",
                "camelCase": {
                  "unsafeName": "totalBalance",
                  "safeName": "totalBalance"
                },
                "snakeCase": {
                  "unsafeName": "total_balance",
                  "safeName": "total_balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_BALANCE",
                  "safeName": "TOTAL_BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "TotalBalance",
                  "safeName": "TotalBalance"
                }
              },
              "wireValue": "totalBalance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sum of NFT balances across all token IDs held by the owner. For non-fungible tokens this will be equal to the `numDistinctTokensOwned`, but it may be higher if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractTotalBalance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numDistinctTokensOwned",
                "camelCase": {
                  "unsafeName": "numDistinctTokensOwned",
                  "safeName": "numDistinctTokensOwned"
                },
                "snakeCase": {
                  "unsafeName": "num_distinct_tokens_owned",
                  "safeName": "num_distinct_tokens_owned"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_DISTINCT_TOKENS_OWNED",
                  "safeName": "NUM_DISTINCT_TOKENS_OWNED"
                },
                "pascalCase": {
                  "unsafeName": "NumDistinctTokensOwned",
                  "safeName": "NumDistinctTokensOwned"
                }
              },
              "wireValue": "numDistinctTokensOwned"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of distinct token IDs held by the owner. For non-fungible tokens this will be equal to the `totalBalance`, but it may be lower if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractNumDistinctTokensOwned_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractIsSpam_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "One of the tokens from this contract held by the owner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the contract, i.e. \"Bored Ape Yacht Club\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "title",
                "camelCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "snakeCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TITLE",
                  "safeName": "TITLE"
                },
                "pascalCase": {
                  "unsafeName": "Title",
                  "safeName": "Title"
                }
              },
              "wireValue": "title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The title of the token held by the owner i.e. \"Something #22\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractTitle_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The symbol of the contract, i.e. BAYC.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The NFT standard used by the contract, i.e. ERC721 or ERC1155.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "OwnedContractMediaItems",
                        "camelCase": {
                          "unsafeName": "ownedContractMediaItems",
                          "safeName": "ownedContractMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "owned_contract_media_items",
                          "safeName": "owned_contract_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "OWNED_CONTRACT_MEDIA_ITEMS",
                          "safeName": "OWNED_CONTRACT_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "OwnedContractMediaItems",
                          "safeName": "OwnedContractMediaItems"
                        }
                      },
                      "typeId": "OwnedContractMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedContractOpensea",
                    "camelCase": {
                      "unsafeName": "ownedContractOpensea",
                      "safeName": "ownedContractOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_contract_opensea",
                      "safeName": "owned_contract_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_CONTRACT_OPENSEA",
                      "safeName": "OWNED_CONTRACT_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedContractOpensea",
                      "safeName": "OwnedContractOpensea"
                    }
                  },
                  "typeId": "OwnedContractOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents a smart contract and has all data corresponding to that contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ownedContract_example_autogenerated": {}
        }
      }
    },
    "OwnedContractv3OpenseaMetadata": {
      "name": {
        "typeId": "OwnedContractv3OpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedContractv3OpenseaMetadata",
          "camelCase": {
            "unsafeName": "ownedContractv3OpenseaMetadata",
            "safeName": "ownedContractv3OpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "owned_contractv_3_opensea_metadata",
            "safeName": "owned_contractv_3_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_CONTRACTV_3_OPENSEA_METADATA",
            "safeName": "OWNED_CONTRACTV_3_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "OwnedContractv3OpenseaMetadata",
            "safeName": "OwnedContractv3OpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedContractv3OpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "OwnedContractv3DisplayNft": {
      "name": {
        "typeId": "OwnedContractv3DisplayNft",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedContractv3DisplayNft",
          "camelCase": {
            "unsafeName": "ownedContractv3DisplayNft",
            "safeName": "ownedContractv3DisplayNft"
          },
          "snakeCase": {
            "unsafeName": "owned_contractv_3_display_nft",
            "safeName": "owned_contractv_3_display_nft"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_CONTRACTV_3_DISPLAY_NFT",
            "safeName": "OWNED_CONTRACTV_3_DISPLAY_NFT"
          },
          "pascalCase": {
            "unsafeName": "OwnedContractv3DisplayNft",
            "safeName": "OwnedContractv3DisplayNft"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "One of the tokens from this contract held by the owner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3DisplayNftTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The title of the token held by the owner i.e. \"Something #22\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3DisplayNftName_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedContractv3DisplayNft_example_autogenerated": {}
        }
      }
    },
    "OwnedContractv3Image": {
      "name": {
        "typeId": "OwnedContractv3Image",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedContractv3Image",
          "camelCase": {
            "unsafeName": "ownedContractv3Image",
            "safeName": "ownedContractv3Image"
          },
          "snakeCase": {
            "unsafeName": "owned_contractv_3_image",
            "safeName": "owned_contractv_3_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_CONTRACTV_3_IMAGE",
            "safeName": "OWNED_CONTRACTV_3_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "OwnedContractv3Image",
            "safeName": "OwnedContractv3Image"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3ImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3ImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3ImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3ImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3ImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3ImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedContractv3Image_example_autogenerated": {}
        }
      }
    },
    "ownedContractv3": {
      "name": {
        "typeId": "ownedContractv3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ownedContractv3",
          "camelCase": {
            "unsafeName": "ownedContractv3",
            "safeName": "ownedContractv3"
          },
          "snakeCase": {
            "unsafeName": "owned_contractv_3",
            "safeName": "owned_contractv_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_CONTRACTV_3",
            "safeName": "OWNED_CONTRACTV_3"
          },
          "pascalCase": {
            "unsafeName": "OwnedContractv3",
            "safeName": "OwnedContractv3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3Address_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the contract, i.e. \"Bored Ape Yacht Club\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3Name_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The symbol of the contract, i.e. BAYC.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3Symbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3TotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3TokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3ContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3DeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedContractv3OpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "ownedContractv3OpenseaMetadata",
                      "safeName": "ownedContractv3OpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_contractv_3_opensea_metadata",
                      "safeName": "owned_contractv_3_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_CONTRACTV_3_OPENSEA_METADATA",
                      "safeName": "OWNED_CONTRACTV_3_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedContractv3OpenseaMetadata",
                      "safeName": "OwnedContractv3OpenseaMetadata"
                    }
                  },
                  "typeId": "OwnedContractv3OpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3OpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalBalance",
                "camelCase": {
                  "unsafeName": "totalBalance",
                  "safeName": "totalBalance"
                },
                "snakeCase": {
                  "unsafeName": "total_balance",
                  "safeName": "total_balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_BALANCE",
                  "safeName": "TOTAL_BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "TotalBalance",
                  "safeName": "TotalBalance"
                }
              },
              "wireValue": "totalBalance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sum of NFT balances across all token IDs held by the owner. For non-fungible tokens this will be equal to the `numDistinctTokensOwned`, but it may be higher if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3TotalBalance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numDistinctTokensOwned",
                "camelCase": {
                  "unsafeName": "numDistinctTokensOwned",
                  "safeName": "numDistinctTokensOwned"
                },
                "snakeCase": {
                  "unsafeName": "num_distinct_tokens_owned",
                  "safeName": "num_distinct_tokens_owned"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_DISTINCT_TOKENS_OWNED",
                  "safeName": "NUM_DISTINCT_TOKENS_OWNED"
                },
                "pascalCase": {
                  "unsafeName": "NumDistinctTokensOwned",
                  "safeName": "NumDistinctTokensOwned"
                }
              },
              "wireValue": "numDistinctTokensOwned"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of distinct token IDs held by the owner. For non-fungible tokens this will be equal to the `totalBalance`, but it may be lower if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3NumDistinctTokensOwned_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "`True` if the contract is detected as spam contract. `False` if it is not spam or has not been evaluated by our system yet",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3IsSpam_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "displayNft",
                "camelCase": {
                  "unsafeName": "displayNft",
                  "safeName": "displayNft"
                },
                "snakeCase": {
                  "unsafeName": "display_nft",
                  "safeName": "display_nft"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISPLAY_NFT",
                  "safeName": "DISPLAY_NFT"
                },
                "pascalCase": {
                  "unsafeName": "DisplayNft",
                  "safeName": "DisplayNft"
                }
              },
              "wireValue": "displayNft"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedContractv3DisplayNft",
                    "camelCase": {
                      "unsafeName": "ownedContractv3DisplayNft",
                      "safeName": "ownedContractv3DisplayNft"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_contractv_3_display_nft",
                      "safeName": "owned_contractv_3_display_nft"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_CONTRACTV_3_DISPLAY_NFT",
                      "safeName": "OWNED_CONTRACTV_3_DISPLAY_NFT"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedContractv3DisplayNft",
                      "safeName": "OwnedContractv3DisplayNft"
                    }
                  },
                  "typeId": "OwnedContractv3DisplayNft",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3DisplayNft_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedContractv3Image",
                    "camelCase": {
                      "unsafeName": "ownedContractv3Image",
                      "safeName": "ownedContractv3Image"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_contractv_3_image",
                      "safeName": "owned_contractv_3_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_CONTRACTV_3_IMAGE",
                      "safeName": "OWNED_CONTRACTV_3_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedContractv3Image",
                      "safeName": "OwnedContractv3Image"
                    }
                  },
                  "typeId": "OwnedContractv3Image",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedContractv3Image_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents a smart contract and has all data corresponding to that contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ownedContractv3_example_autogenerated": {}
        }
      }
    },
    "OwnedCollectionv3FloorPrice": {
      "name": {
        "typeId": "OwnedCollectionv3FloorPrice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedCollectionv3FloorPrice",
          "camelCase": {
            "unsafeName": "ownedCollectionv3FloorPrice",
            "safeName": "ownedCollectionv3FloorPrice"
          },
          "snakeCase": {
            "unsafeName": "owned_collectionv_3_floor_price",
            "safeName": "owned_collectionv_3_floor_price"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTIONV_3_FLOOR_PRICE",
            "safeName": "OWNED_COLLECTIONV_3_FLOOR_PRICE"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionv3FloorPrice",
            "safeName": "OwnedCollectionv3FloorPrice"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "marketplace",
                "camelCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "snakeCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MARKETPLACE",
                  "safeName": "MARKETPLACE"
                },
                "pascalCase": {
                  "unsafeName": "Marketplace",
                  "safeName": "Marketplace"
                }
              },
              "wireValue": "marketplace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The marketplace the floor price is on",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3FloorPriceMarketplace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price of the collection on the marketplace",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3FloorPriceFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "priceCurrency",
                "camelCase": {
                  "unsafeName": "priceCurrency",
                  "safeName": "priceCurrency"
                },
                "snakeCase": {
                  "unsafeName": "price_currency",
                  "safeName": "price_currency"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PRICE_CURRENCY",
                  "safeName": "PRICE_CURRENCY"
                },
                "pascalCase": {
                  "unsafeName": "PriceCurrency",
                  "safeName": "PriceCurrency"
                }
              },
              "wireValue": "priceCurrency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The currency of the floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3FloorPricePriceCurrency_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Floor price data for the collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedCollectionv3FloorPrice_example_autogenerated": {}
        }
      }
    },
    "OwnedCollectionv3ContractTokenType": {
      "name": {
        "typeId": "OwnedCollectionv3ContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedCollectionv3ContractTokenType",
          "camelCase": {
            "unsafeName": "ownedCollectionv3ContractTokenType",
            "safeName": "ownedCollectionv3ContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "owned_collectionv_3_contract_token_type",
            "safeName": "owned_collectionv_3_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTIONV_3_CONTRACT_TOKEN_TYPE",
            "safeName": "OWNED_COLLECTIONV_3_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionv3ContractTokenType",
            "safeName": "OwnedCollectionv3ContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedCollectionv3ContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "OwnedCollectionv3Contract": {
      "name": {
        "typeId": "OwnedCollectionv3Contract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedCollectionv3Contract",
          "camelCase": {
            "unsafeName": "ownedCollectionv3Contract",
            "safeName": "ownedCollectionv3Contract"
          },
          "snakeCase": {
            "unsafeName": "owned_collectionv_3_contract",
            "safeName": "owned_collectionv_3_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTIONV_3_CONTRACT",
            "safeName": "OWNED_COLLECTIONV_3_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionv3Contract",
            "safeName": "OwnedCollectionv3Contract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedCollectionv3ContractTokenType",
                    "camelCase": {
                      "unsafeName": "ownedCollectionv3ContractTokenType",
                      "safeName": "ownedCollectionv3ContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_collectionv_3_contract_token_type",
                      "safeName": "owned_collectionv_3_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_COLLECTIONV_3_CONTRACT_TOKEN_TYPE",
                      "safeName": "OWNED_COLLECTIONV_3_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedCollectionv3ContractTokenType",
                      "safeName": "OwnedCollectionv3ContractTokenType"
                    }
                  },
                  "typeId": "OwnedCollectionv3ContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Contract-level data for a collection, such as contract type, name, and symbol.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedCollectionv3Contract_example_autogenerated": {}
        }
      }
    },
    "OwnedCollectionv3DisplayNft": {
      "name": {
        "typeId": "OwnedCollectionv3DisplayNft",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedCollectionv3DisplayNft",
          "camelCase": {
            "unsafeName": "ownedCollectionv3DisplayNft",
            "safeName": "ownedCollectionv3DisplayNft"
          },
          "snakeCase": {
            "unsafeName": "owned_collectionv_3_display_nft",
            "safeName": "owned_collectionv_3_display_nft"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTIONV_3_DISPLAY_NFT",
            "safeName": "OWNED_COLLECTIONV_3_DISPLAY_NFT"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionv3DisplayNft",
            "safeName": "OwnedCollectionv3DisplayNft"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "One of the tokens from this contract held by the owner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3DisplayNftTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The title of the token held by the owner i.e. \"Something #22\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3DisplayNftName_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedCollectionv3DisplayNft_example_autogenerated": {}
        }
      }
    },
    "OwnedCollectionv3Image": {
      "name": {
        "typeId": "OwnedCollectionv3Image",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedCollectionv3Image",
          "camelCase": {
            "unsafeName": "ownedCollectionv3Image",
            "safeName": "ownedCollectionv3Image"
          },
          "snakeCase": {
            "unsafeName": "owned_collectionv_3_image",
            "safeName": "owned_collectionv_3_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTIONV_3_IMAGE",
            "safeName": "OWNED_COLLECTIONV_3_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionv3Image",
            "safeName": "OwnedCollectionv3Image"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedCollectionv3Image_example_autogenerated": {}
        }
      }
    },
    "ownedCollectionv3": {
      "name": {
        "typeId": "ownedCollectionv3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ownedCollectionv3",
          "camelCase": {
            "unsafeName": "ownedCollectionv3",
            "safeName": "ownedCollectionv3"
          },
          "snakeCase": {
            "unsafeName": "owned_collectionv_3",
            "safeName": "owned_collectionv_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTIONV_3",
            "safeName": "OWNED_COLLECTIONV_3"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionv3",
            "safeName": "OwnedCollectionv3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the collection, i.e. \"Bored Ape Yacht Club\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3Name_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The human-readable string used to identify the collection on OpenSea.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3Slug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedCollectionv3FloorPrice",
                    "camelCase": {
                      "unsafeName": "ownedCollectionv3FloorPrice",
                      "safeName": "ownedCollectionv3FloorPrice"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_collectionv_3_floor_price",
                      "safeName": "owned_collectionv_3_floor_price"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_COLLECTIONV_3_FLOOR_PRICE",
                      "safeName": "OWNED_COLLECTIONV_3_FLOOR_PRICE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedCollectionv3FloorPrice",
                      "safeName": "OwnedCollectionv3FloorPrice"
                    }
                  },
                  "typeId": "OwnedCollectionv3FloorPrice",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price data for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3FloorPrice_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3Description_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3ExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3TwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3DiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedCollectionv3Contract",
                    "camelCase": {
                      "unsafeName": "ownedCollectionv3Contract",
                      "safeName": "ownedCollectionv3Contract"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_collectionv_3_contract",
                      "safeName": "owned_collectionv_3_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_COLLECTIONV_3_CONTRACT",
                      "safeName": "OWNED_COLLECTIONV_3_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedCollectionv3Contract",
                      "safeName": "OwnedCollectionv3Contract"
                    }
                  },
                  "typeId": "OwnedCollectionv3Contract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Contract-level data for a collection, such as contract type, name, and symbol.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3Contract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalBalance",
                "camelCase": {
                  "unsafeName": "totalBalance",
                  "safeName": "totalBalance"
                },
                "snakeCase": {
                  "unsafeName": "total_balance",
                  "safeName": "total_balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_BALANCE",
                  "safeName": "TOTAL_BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "TotalBalance",
                  "safeName": "TotalBalance"
                }
              },
              "wireValue": "totalBalance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sum of NFT balances across all token IDs held by the owner. For non-fungible tokens this will be equal to the `numDistinctTokensOwned`, but it may be higher if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3TotalBalance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numDistinctTokensOwned",
                "camelCase": {
                  "unsafeName": "numDistinctTokensOwned",
                  "safeName": "numDistinctTokensOwned"
                },
                "snakeCase": {
                  "unsafeName": "num_distinct_tokens_owned",
                  "safeName": "num_distinct_tokens_owned"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_DISTINCT_TOKENS_OWNED",
                  "safeName": "NUM_DISTINCT_TOKENS_OWNED"
                },
                "pascalCase": {
                  "unsafeName": "NumDistinctTokensOwned",
                  "safeName": "NumDistinctTokensOwned"
                }
              },
              "wireValue": "numDistinctTokensOwned"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of distinct token IDs held by the owner. For non-fungible tokens this will be equal to the `totalBalance`, but it may be lower if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3NumDistinctTokensOwned_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3IsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "displayNft",
                "camelCase": {
                  "unsafeName": "displayNft",
                  "safeName": "displayNft"
                },
                "snakeCase": {
                  "unsafeName": "display_nft",
                  "safeName": "display_nft"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISPLAY_NFT",
                  "safeName": "DISPLAY_NFT"
                },
                "pascalCase": {
                  "unsafeName": "DisplayNft",
                  "safeName": "DisplayNft"
                }
              },
              "wireValue": "displayNft"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedCollectionv3DisplayNft",
                    "camelCase": {
                      "unsafeName": "ownedCollectionv3DisplayNft",
                      "safeName": "ownedCollectionv3DisplayNft"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_collectionv_3_display_nft",
                      "safeName": "owned_collectionv_3_display_nft"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_COLLECTIONV_3_DISPLAY_NFT",
                      "safeName": "OWNED_COLLECTIONV_3_DISPLAY_NFT"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedCollectionv3DisplayNft",
                      "safeName": "OwnedCollectionv3DisplayNft"
                    }
                  },
                  "typeId": "OwnedCollectionv3DisplayNft",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3DisplayNft_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedCollectionv3Image",
                    "camelCase": {
                      "unsafeName": "ownedCollectionv3Image",
                      "safeName": "ownedCollectionv3Image"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_collectionv_3_image",
                      "safeName": "owned_collectionv_3_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_COLLECTIONV_3_IMAGE",
                      "safeName": "OWNED_COLLECTIONV_3_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedCollectionv3Image",
                      "safeName": "OwnedCollectionv3Image"
                    }
                  },
                  "typeId": "OwnedCollectionv3Image",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionv3Image_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Metadata for an NFT collection held by an owner address. Includes general metadata about the collection, as well as information specific to the owner such as the total balance and the token ID of a random NFT for display purposes.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ownedCollectionv3_example_autogenerated": {}
        }
      }
    },
    "OwnedCollectionContractTokenType": {
      "name": {
        "typeId": "OwnedCollectionContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedCollectionContractTokenType",
          "camelCase": {
            "unsafeName": "ownedCollectionContractTokenType",
            "safeName": "ownedCollectionContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "owned_collection_contract_token_type",
            "safeName": "owned_collection_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTION_CONTRACT_TOKEN_TYPE",
            "safeName": "OWNED_COLLECTION_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionContractTokenType",
            "safeName": "OwnedCollectionContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedCollectionContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "ownedCollectionContract": {
      "name": {
        "typeId": "ownedCollectionContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ownedCollectionContract",
          "camelCase": {
            "unsafeName": "ownedCollectionContract",
            "safeName": "ownedCollectionContract"
          },
          "snakeCase": {
            "unsafeName": "owned_collection_contract",
            "safeName": "owned_collection_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_COLLECTION_CONTRACT",
            "safeName": "OWNED_COLLECTION_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "OwnedCollectionContract",
            "safeName": "OwnedCollectionContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedCollectionContractTokenType",
                    "camelCase": {
                      "unsafeName": "ownedCollectionContractTokenType",
                      "safeName": "ownedCollectionContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_collection_contract_token_type",
                      "safeName": "owned_collection_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_COLLECTION_CONTRACT_TOKEN_TYPE",
                      "safeName": "OWNED_COLLECTION_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedCollectionContractTokenType",
                      "safeName": "OwnedCollectionContractTokenType"
                    }
                  },
                  "typeId": "OwnedCollectionContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedCollectionContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Contract-level data for a collection, such as contract type, name, and symbol.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ownedCollectionContract_example_autogenerated": {}
        }
      }
    },
    "MediaItems": {
      "name": {
        "typeId": "MediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MediaItems",
          "camelCase": {
            "unsafeName": "mediaItems",
            "safeName": "mediaItems"
          },
          "snakeCase": {
            "unsafeName": "media_items",
            "safeName": "media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "MEDIA_ITEMS",
            "safeName": "MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "MediaItems",
            "safeName": "MediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MediaItems_example_autogenerated": {}
        }
      }
    },
    "media": {
      "name": {
        "typeId": "media",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "media",
          "camelCase": {
            "unsafeName": "media",
            "safeName": "media"
          },
          "snakeCase": {
            "unsafeName": "media",
            "safeName": "media"
          },
          "screamingSnakeCase": {
            "unsafeName": "MEDIA",
            "safeName": "MEDIA"
          },
          "pascalCase": {
            "unsafeName": "Media",
            "safeName": "Media"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "MediaItems",
                "camelCase": {
                  "unsafeName": "mediaItems",
                  "safeName": "mediaItems"
                },
                "snakeCase": {
                  "unsafeName": "media_items",
                  "safeName": "media_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA_ITEMS",
                  "safeName": "MEDIA_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "MediaItems",
                  "safeName": "MediaItems"
                }
              },
              "typeId": "MediaItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "MediaItems",
                "camelCase": {
                  "unsafeName": "mediaItems",
                  "safeName": "mediaItems"
                },
                "snakeCase": {
                  "unsafeName": "media_items",
                  "safeName": "media_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA_ITEMS",
                  "safeName": "MEDIA_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "MediaItems",
                  "safeName": "MediaItems"
                }
              },
              "typeId": "MediaItems",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "media_example_autogenerated": [
            {}
          ]
        }
      }
    },
    "OwnedNftContract": {
      "name": {
        "typeId": "OwnedNftContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftContract",
          "camelCase": {
            "unsafeName": "ownedNftContract",
            "safeName": "ownedNftContract"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_contract",
            "safeName": "owned_nft_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_CONTRACT",
            "safeName": "OWNED_NFT_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftContract",
            "safeName": "OwnedNftContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address of NFT contract.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractAddress_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object - Contract for returned NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftContract_example_autogenerated": {}
        }
      }
    },
    "OwnedNftIdTokenMetadataTokenType": {
      "name": {
        "typeId": "OwnedNftIdTokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftIdTokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "ownedNftIdTokenMetadataTokenType",
            "safeName": "ownedNftIdTokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_id_token_metadata_token_type",
            "safeName": "owned_nft_id_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_ID_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "OWNED_NFT_ID_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftIdTokenMetadataTokenType",
            "safeName": "OwnedNftIdTokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftIdTokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "OwnedNftIdTokenMetadata": {
      "name": {
        "typeId": "OwnedNftIdTokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftIdTokenMetadata",
          "camelCase": {
            "unsafeName": "ownedNftIdTokenMetadata",
            "safeName": "ownedNftIdTokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_id_token_metadata",
            "safeName": "owned_nft_id_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_ID_TOKEN_METADATA",
            "safeName": "OWNED_NFT_ID_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftIdTokenMetadata",
            "safeName": "OwnedNftIdTokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftIdTokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "ownedNftIdTokenMetadataTokenType",
                      "safeName": "ownedNftIdTokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_id_token_metadata_token_type",
                      "safeName": "owned_nft_id_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_ID_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "OWNED_NFT_ID_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftIdTokenMetadataTokenType",
                      "safeName": "OwnedNftIdTokenMetadataTokenType"
                    }
                  },
                  "typeId": "OwnedNftIdTokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftIdTokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftIdTokenMetadata_example_autogenerated": {}
        }
      }
    },
    "OwnedNftId": {
      "name": {
        "typeId": "OwnedNftId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftId",
          "camelCase": {
            "unsafeName": "ownedNftId",
            "safeName": "ownedNftId"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_id",
            "safeName": "owned_nft_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_ID",
            "safeName": "OWNED_NFT_ID"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftId",
            "safeName": "OwnedNftId"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftIdTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftIdTokenMetadata",
                    "camelCase": {
                      "unsafeName": "ownedNftIdTokenMetadata",
                      "safeName": "ownedNftIdTokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_id_token_metadata",
                      "safeName": "owned_nft_id_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_ID_TOKEN_METADATA",
                      "safeName": "OWNED_NFT_ID_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftIdTokenMetadata",
                      "safeName": "OwnedNftIdTokenMetadata"
                    }
                  },
                  "typeId": "OwnedNftIdTokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftIdTokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftId_example_autogenerated": {}
        }
      }
    },
    "OwnedNftTokenUri": {
      "name": {
        "typeId": "OwnedNftTokenUri",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftTokenUri",
          "camelCase": {
            "unsafeName": "ownedNftTokenUri",
            "safeName": "ownedNftTokenUri"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_token_uri",
            "safeName": "owned_nft_token_uri"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_TOKEN_URI",
            "safeName": "OWNED_NFT_TOKEN_URI"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftTokenUri",
            "safeName": "OwnedNftTokenUri"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftTokenUriRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftTokenUriGateway_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftTokenUri_example_autogenerated": {}
        }
      }
    },
    "OwnedNftMedia": {
      "name": {
        "typeId": "OwnedNftMedia",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftMedia",
          "camelCase": {
            "unsafeName": "ownedNftMedia",
            "safeName": "ownedNftMedia"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_media",
            "safeName": "owned_nft_media"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_MEDIA",
            "safeName": "OWNED_NFT_MEDIA"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftMedia",
            "safeName": "OwnedNftMedia"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMediaRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMediaGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMediaThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMediaFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMediaBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftMedia_example_autogenerated": {}
        }
      }
    },
    "OwnedNftMetadataAttributesItems": {
      "name": {
        "typeId": "OwnedNftMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "ownedNftMetadataAttributesItems",
            "safeName": "ownedNftMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_metadata_attributes_items",
            "safeName": "owned_nft_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "OWNED_NFT_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftMetadataAttributesItems",
            "safeName": "OwnedNftMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "OwnedNftMetadataMediaItems": {
      "name": {
        "typeId": "OwnedNftMetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftMetadataMediaItems",
          "camelCase": {
            "unsafeName": "ownedNftMetadataMediaItems",
            "safeName": "ownedNftMetadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_metadata_media_items",
            "safeName": "owned_nft_metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_METADATA_MEDIA_ITEMS",
            "safeName": "OWNED_NFT_METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftMetadataMediaItems",
            "safeName": "OwnedNftMetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftMetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "OwnedNftMetadata": {
      "name": {
        "typeId": "OwnedNftMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftMetadata",
          "camelCase": {
            "unsafeName": "ownedNftMetadata",
            "safeName": "ownedNftMetadata"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_metadata",
            "safeName": "owned_nft_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_METADATA",
            "safeName": "OWNED_NFT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftMetadata",
            "safeName": "OwnedNftMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "external_url",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "external_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The image URL that appears alongside the asset image on NFT platforms.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "background_color",
                "camelCase": {
                  "unsafeName": "backgroundColor",
                  "safeName": "backgroundColor"
                },
                "snakeCase": {
                  "unsafeName": "background_color",
                  "safeName": "background_color"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BACKGROUND_COLOR",
                  "safeName": "BACKGROUND_COLOR"
                },
                "pascalCase": {
                  "unsafeName": "BackgroundColor",
                  "safeName": "BackgroundColor"
                }
              },
              "wireValue": "background_color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataBackgroundColor_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "OwnedNftMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "ownedNftMetadataAttributesItems",
                          "safeName": "ownedNftMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "owned_nft_metadata_attributes_items",
                          "safeName": "owned_nft_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "OWNED_NFT_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "OWNED_NFT_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "OwnedNftMetadataAttributesItems",
                          "safeName": "OwnedNftMetadataAttributesItems"
                        }
                      },
                      "typeId": "OwnedNftMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "OwnedNftMetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "ownedNftMetadataMediaItems",
                          "safeName": "ownedNftMetadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "owned_nft_metadata_media_items",
                          "safeName": "owned_nft_metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "OWNED_NFT_METADATA_MEDIA_ITEMS",
                          "safeName": "OWNED_NFT_METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "OwnedNftMetadataMediaItems",
                          "safeName": "OwnedNftMetadataMediaItems"
                        }
                      },
                      "typeId": "OwnedNftMetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftMetadata_example_autogenerated": {}
        }
      }
    },
    "OwnedNftContractMetadataTokenType": {
      "name": {
        "typeId": "OwnedNftContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "ownedNftContractMetadataTokenType",
            "safeName": "ownedNftContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_contract_metadata_token_type",
            "safeName": "owned_nft_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "OWNED_NFT_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftContractMetadataTokenType",
            "safeName": "OwnedNftContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "OwnedNftContractMetadataOpensea": {
      "name": {
        "typeId": "OwnedNftContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "ownedNftContractMetadataOpensea",
            "safeName": "ownedNftContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_contract_metadata_opensea",
            "safeName": "owned_nft_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_CONTRACT_METADATA_OPENSEA",
            "safeName": "OWNED_NFT_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftContractMetadataOpensea",
            "safeName": "OwnedNftContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "OwnedNftContractMetadata": {
      "name": {
        "typeId": "OwnedNftContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftContractMetadata",
          "camelCase": {
            "unsafeName": "ownedNftContractMetadata",
            "safeName": "ownedNftContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_contract_metadata",
            "safeName": "owned_nft_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_CONTRACT_METADATA",
            "safeName": "OWNED_NFT_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftContractMetadata",
            "safeName": "OwnedNftContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "ownedNftContractMetadataTokenType",
                      "safeName": "ownedNftContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_contract_metadata_token_type",
                      "safeName": "owned_nft_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "OWNED_NFT_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftContractMetadataTokenType",
                      "safeName": "OwnedNftContractMetadataTokenType"
                    }
                  },
                  "typeId": "OwnedNftContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "ownedNftContractMetadataOpensea",
                      "safeName": "ownedNftContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_contract_metadata_opensea",
                      "safeName": "owned_nft_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_CONTRACT_METADATA_OPENSEA",
                      "safeName": "OWNED_NFT_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftContractMetadataOpensea",
                      "safeName": "OwnedNftContractMetadataOpensea"
                    }
                  },
                  "typeId": "OwnedNftContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftContractMetadata_example_autogenerated": {}
        }
      }
    },
    "OwnedNftSpamInfo": {
      "name": {
        "typeId": "OwnedNftSpamInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftSpamInfo",
          "camelCase": {
            "unsafeName": "ownedNftSpamInfo",
            "safeName": "ownedNftSpamInfo"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_spam_info",
            "safeName": "owned_nft_spam_info"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_SPAM_INFO",
            "safeName": "OWNED_NFT_SPAM_INFO"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftSpamInfo",
            "safeName": "OwnedNftSpamInfo"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftSpamInfoIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftSpamInfoSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Information about whether and why a contract was marked as spam.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftSpamInfo_example_autogenerated": {}
        }
      }
    },
    "OwnedNftAcquiredAt": {
      "name": {
        "typeId": "OwnedNftAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNftAcquiredAt",
          "camelCase": {
            "unsafeName": "ownedNftAcquiredAt",
            "safeName": "ownedNftAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "owned_nft_acquired_at",
            "safeName": "owned_nft_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT_ACQUIRED_AT",
            "safeName": "OWNED_NFT_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "OwnedNftAcquiredAt",
            "safeName": "OwnedNftAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNftAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "ownedNFT": {
      "name": {
        "typeId": "ownedNFT",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ownedNFT",
          "camelCase": {
            "unsafeName": "ownedNft",
            "safeName": "ownedNft"
          },
          "snakeCase": {
            "unsafeName": "owned_nft",
            "safeName": "owned_nft"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NFT",
            "safeName": "OWNED_NFT"
          },
          "pascalCase": {
            "unsafeName": "OwnedNft",
            "safeName": "OwnedNft"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftContract",
                    "camelCase": {
                      "unsafeName": "ownedNftContract",
                      "safeName": "ownedNftContract"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_contract",
                      "safeName": "owned_nft_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_CONTRACT",
                      "safeName": "OWNED_NFT_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftContract",
                      "safeName": "OwnedNftContract"
                    }
                  },
                  "typeId": "OwnedNftContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Contract for returned NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftId",
                    "camelCase": {
                      "unsafeName": "ownedNftId",
                      "safeName": "ownedNftId"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_id",
                      "safeName": "owned_nft_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_ID",
                      "safeName": "OWNED_NFT_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftId",
                      "safeName": "OwnedNftId"
                    }
                  },
                  "typeId": "OwnedNftId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftId_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "balance",
                "camelCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "snakeCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BALANCE",
                  "safeName": "BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "Balance",
                  "safeName": "Balance"
                }
              },
              "wireValue": "balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Token balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftBalance_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "title",
                "camelCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "snakeCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TITLE",
                  "safeName": "TITLE"
                },
                "pascalCase": {
                  "unsafeName": "Title",
                  "safeName": "Title"
                }
              },
              "wireValue": "title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftTitle_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftTokenUri",
                    "camelCase": {
                      "unsafeName": "ownedNftTokenUri",
                      "safeName": "ownedNftTokenUri"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_token_uri",
                      "safeName": "owned_nft_token_uri"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_TOKEN_URI",
                      "safeName": "OWNED_NFT_TOKEN_URI"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftTokenUri",
                      "safeName": "OwnedNftTokenUri"
                    }
                  },
                  "typeId": "OwnedNftTokenUri",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftTokenUri_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftMedia",
                    "camelCase": {
                      "unsafeName": "ownedNftMedia",
                      "safeName": "ownedNftMedia"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_media",
                      "safeName": "owned_nft_media"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_MEDIA",
                      "safeName": "OWNED_NFT_MEDIA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftMedia",
                      "safeName": "OwnedNftMedia"
                    }
                  },
                  "typeId": "OwnedNftMedia",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMedia_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftMetadata",
                    "camelCase": {
                      "unsafeName": "ownedNftMetadata",
                      "safeName": "ownedNftMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_metadata",
                      "safeName": "owned_nft_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_METADATA",
                      "safeName": "OWNED_NFT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftMetadata",
                      "safeName": "OwnedNftMetadata"
                    }
                  },
                  "typeId": "OwnedNftMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftError_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftContractMetadata",
                    "camelCase": {
                      "unsafeName": "ownedNftContractMetadata",
                      "safeName": "ownedNftContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_contract_metadata",
                      "safeName": "owned_nft_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_CONTRACT_METADATA",
                      "safeName": "OWNED_NFT_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftContractMetadata",
                      "safeName": "OwnedNftContractMetadata"
                    }
                  },
                  "typeId": "OwnedNftContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftContractMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamInfo",
                "camelCase": {
                  "unsafeName": "spamInfo",
                  "safeName": "spamInfo"
                },
                "snakeCase": {
                  "unsafeName": "spam_info",
                  "safeName": "spam_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_INFO",
                  "safeName": "SPAM_INFO"
                },
                "pascalCase": {
                  "unsafeName": "SpamInfo",
                  "safeName": "SpamInfo"
                }
              },
              "wireValue": "spamInfo"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftSpamInfo",
                    "camelCase": {
                      "unsafeName": "ownedNftSpamInfo",
                      "safeName": "ownedNftSpamInfo"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_spam_info",
                      "safeName": "owned_nft_spam_info"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_SPAM_INFO",
                      "safeName": "OWNED_NFT_SPAM_INFO"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftSpamInfo",
                      "safeName": "OwnedNftSpamInfo"
                    }
                  },
                  "typeId": "OwnedNftSpamInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Information about whether and why a contract was marked as spam.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftSpamInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNftAcquiredAt",
                    "camelCase": {
                      "unsafeName": "ownedNftAcquiredAt",
                      "safeName": "ownedNftAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nft_acquired_at",
                      "safeName": "owned_nft_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NFT_ACQUIRED_AT",
                      "safeName": "OWNED_NFT_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNftAcquiredAt",
                      "safeName": "OwnedNftAcquiredAt"
                    }
                  },
                  "typeId": "OwnedNftAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNftAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ownedNFT_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3ContractTokenType": {
      "name": {
        "typeId": "OwnedNfTv3ContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3ContractTokenType",
          "camelCase": {
            "unsafeName": "ownedNfTv3ContractTokenType",
            "safeName": "ownedNfTv3ContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_contract_token_type",
            "safeName": "owned_nf_tv_3_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_CONTRACT_TOKEN_TYPE",
            "safeName": "OWNED_NF_TV_3_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3ContractTokenType",
            "safeName": "OwnedNfTv3ContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3ContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "OwnedNfTv3ContractOpenseaMetadata": {
      "name": {
        "typeId": "OwnedNfTv3ContractOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3ContractOpenseaMetadata",
          "camelCase": {
            "unsafeName": "ownedNfTv3ContractOpenseaMetadata",
            "safeName": "ownedNfTv3ContractOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_contract_opensea_metadata",
            "safeName": "owned_nf_tv_3_contract_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_CONTRACT_OPENSEA_METADATA",
            "safeName": "OWNED_NF_TV_3_CONTRACT_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3ContractOpenseaMetadata",
            "safeName": "OwnedNfTv3ContractOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3ContractOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3Contract": {
      "name": {
        "typeId": "OwnedNfTv3Contract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3Contract",
          "camelCase": {
            "unsafeName": "ownedNfTv3Contract",
            "safeName": "ownedNfTv3Contract"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_contract",
            "safeName": "owned_nf_tv_3_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_CONTRACT",
            "safeName": "OWNED_NF_TV_3_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3Contract",
            "safeName": "OwnedNfTv3Contract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3ContractTokenType",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3ContractTokenType",
                      "safeName": "ownedNfTv3ContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_contract_token_type",
                      "safeName": "owned_nf_tv_3_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_CONTRACT_TOKEN_TYPE",
                      "safeName": "OWNED_NF_TV_3_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3ContractTokenType",
                      "safeName": "OwnedNfTv3ContractTokenType"
                    }
                  },
                  "typeId": "OwnedNfTv3ContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3ContractOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3ContractOpenseaMetadata",
                      "safeName": "ownedNfTv3ContractOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_contract_opensea_metadata",
                      "safeName": "owned_nf_tv_3_contract_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_CONTRACT_OPENSEA_METADATA",
                      "safeName": "OWNED_NF_TV_3_CONTRACT_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3ContractOpenseaMetadata",
                      "safeName": "OwnedNfTv3ContractOpenseaMetadata"
                    }
                  },
                  "typeId": "OwnedNfTv3ContractOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractOpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ContractSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The contract object that has details of a contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3Contract_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3Image": {
      "name": {
        "typeId": "OwnedNfTv3Image",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3Image",
          "camelCase": {
            "unsafeName": "ownedNfTv3Image",
            "safeName": "ownedNfTv3Image"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_image",
            "safeName": "owned_nf_tv_3_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_IMAGE",
            "safeName": "OWNED_NF_TV_3_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3Image",
            "safeName": "OwnedNfTv3Image"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3ImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3Image_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3RawMetadataAttributesItems": {
      "name": {
        "typeId": "OwnedNfTv3RawMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3RawMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "ownedNfTv3RawMetadataAttributesItems",
            "safeName": "ownedNfTv3RawMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_raw_metadata_attributes_items",
            "safeName": "owned_nf_tv_3_raw_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_RAW_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "OWNED_NF_TV_3_RAW_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3RawMetadataAttributesItems",
            "safeName": "OwnedNfTv3RawMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3RawMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3RawMetadata": {
      "name": {
        "typeId": "OwnedNfTv3RawMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3RawMetadata",
          "camelCase": {
            "unsafeName": "ownedNfTv3RawMetadata",
            "safeName": "ownedNfTv3RawMetadata"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_raw_metadata",
            "safeName": "owned_nf_tv_3_raw_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_RAW_METADATA",
            "safeName": "OWNED_NF_TV_3_RAW_METADATA"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3RawMetadata",
            "safeName": "OwnedNfTv3RawMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "OwnedNfTv3RawMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "ownedNfTv3RawMetadataAttributesItems",
                          "safeName": "ownedNfTv3RawMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "owned_nf_tv_3_raw_metadata_attributes_items",
                          "safeName": "owned_nf_tv_3_raw_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "OWNED_NF_TV_3_RAW_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "OWNED_NF_TV_3_RAW_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "OwnedNfTv3RawMetadataAttributesItems",
                          "safeName": "OwnedNfTv3RawMetadataAttributesItems"
                        }
                      },
                      "typeId": "OwnedNfTv3RawMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3RawMetadata_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3Raw": {
      "name": {
        "typeId": "OwnedNfTv3Raw",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3Raw",
          "camelCase": {
            "unsafeName": "ownedNfTv3Raw",
            "safeName": "ownedNfTv3Raw"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_raw",
            "safeName": "owned_nf_tv_3_raw"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_RAW",
            "safeName": "OWNED_NF_TV_3_RAW"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3Raw",
            "safeName": "OwnedNfTv3Raw"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3RawMetadata",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3RawMetadata",
                      "safeName": "ownedNfTv3RawMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_raw_metadata",
                      "safeName": "owned_nf_tv_3_raw_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_RAW_METADATA",
                      "safeName": "OWNED_NF_TV_3_RAW_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3RawMetadata",
                      "safeName": "OwnedNfTv3RawMetadata"
                    }
                  },
                  "typeId": "OwnedNfTv3RawMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3RawError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3Raw_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3Collection": {
      "name": {
        "typeId": "OwnedNfTv3Collection",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3Collection",
          "camelCase": {
            "unsafeName": "ownedNfTv3Collection",
            "safeName": "ownedNfTv3Collection"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_collection",
            "safeName": "owned_nf_tv_3_collection"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_COLLECTION",
            "safeName": "OWNED_NF_TV_3_COLLECTION"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3Collection",
            "safeName": "OwnedNfTv3Collection"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3CollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - OpenSea collection slug",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3CollectionSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL for the external site of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3CollectionExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bannerImageUrl",
                "camelCase": {
                  "unsafeName": "bannerImageUrl",
                  "safeName": "bannerImageUrl"
                },
                "snakeCase": {
                  "unsafeName": "banner_image_url",
                  "safeName": "banner_image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BANNER_IMAGE_URL",
                  "safeName": "BANNER_IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "BannerImageUrl",
                  "safeName": "BannerImageUrl"
                }
              },
              "wireValue": "bannerImageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Banner image URL for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3CollectionBannerImageUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The collection object that has details of a collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3Collection_example_autogenerated": {}
        }
      }
    },
    "OwnedNfTv3AcquiredAt": {
      "name": {
        "typeId": "OwnedNfTv3AcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "OwnedNfTv3AcquiredAt",
          "camelCase": {
            "unsafeName": "ownedNfTv3AcquiredAt",
            "safeName": "ownedNfTv3AcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3_acquired_at",
            "safeName": "owned_nf_tv_3_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3_ACQUIRED_AT",
            "safeName": "OWNED_NF_TV_3_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3AcquiredAt",
            "safeName": "OwnedNfTv3AcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3AcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3AcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OwnedNfTv3AcquiredAt_example_autogenerated": {}
        }
      }
    },
    "ownedNFTv3": {
      "name": {
        "typeId": "ownedNFTv3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ownedNFTv3",
          "camelCase": {
            "unsafeName": "ownedNfTv3",
            "safeName": "ownedNfTv3"
          },
          "snakeCase": {
            "unsafeName": "owned_nf_tv_3",
            "safeName": "owned_nf_tv_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "OWNED_NF_TV_3",
            "safeName": "OWNED_NF_TV_3"
          },
          "pascalCase": {
            "unsafeName": "OwnedNfTv3",
            "safeName": "OwnedNfTv3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3Contract",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3Contract",
                      "safeName": "ownedNfTv3Contract"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_contract",
                      "safeName": "owned_nf_tv_3_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_CONTRACT",
                      "safeName": "OWNED_NF_TV_3_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3Contract",
                      "safeName": "OwnedNfTv3Contract"
                    }
                  },
                  "typeId": "OwnedNfTv3Contract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The contract object that has details of a contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3Contract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3TokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3TokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3Name_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3Description_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3Image",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3Image",
                      "safeName": "ownedNfTv3Image"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_image",
                      "safeName": "owned_nf_tv_3_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_IMAGE",
                      "safeName": "OWNED_NF_TV_3_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3Image",
                      "safeName": "OwnedNfTv3Image"
                    }
                  },
                  "typeId": "OwnedNfTv3Image",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3Image_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3Raw",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3Raw",
                      "safeName": "ownedNfTv3Raw"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_raw",
                      "safeName": "owned_nf_tv_3_raw"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_RAW",
                      "safeName": "OWNED_NF_TV_3_RAW"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3Raw",
                      "safeName": "OwnedNfTv3Raw"
                    }
                  },
                  "typeId": "OwnedNfTv3Raw",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3Raw_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collection",
                "camelCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "snakeCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION",
                  "safeName": "COLLECTION"
                },
                "pascalCase": {
                  "unsafeName": "Collection",
                  "safeName": "Collection"
                }
              },
              "wireValue": "collection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3Collection",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3Collection",
                      "safeName": "ownedNfTv3Collection"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_collection",
                      "safeName": "owned_nf_tv_3_collection"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_COLLECTION",
                      "safeName": "OWNED_NF_TV_3_COLLECTION"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3Collection",
                      "safeName": "OwnedNfTv3Collection"
                    }
                  },
                  "typeId": "OwnedNfTv3Collection",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The collection object that has details of a collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3Collection_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3TokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3TimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "OwnedNfTv3AcquiredAt",
                    "camelCase": {
                      "unsafeName": "ownedNfTv3AcquiredAt",
                      "safeName": "ownedNfTv3AcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "owned_nf_tv_3_acquired_at",
                      "safeName": "owned_nf_tv_3_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OWNED_NF_TV_3_ACQUIRED_AT",
                      "safeName": "OWNED_NF_TV_3_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "OwnedNfTv3AcquiredAt",
                      "safeName": "OwnedNfTv3AcquiredAt"
                    }
                  },
                  "typeId": "OwnedNfTv3AcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OwnedNfTv3AcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ownedNFTv3_example_autogenerated": {}
        }
      }
    },
    "ContractMetadataTokenType": {
      "name": {
        "typeId": "ContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "contractMetadataTokenType",
            "safeName": "contractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "contract_metadata_token_type",
            "safeName": "contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "ContractMetadataTokenType",
            "safeName": "ContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "ContractMetadataOpensea": {
      "name": {
        "typeId": "ContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "contractMetadataOpensea",
            "safeName": "contractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "contract_metadata_opensea",
            "safeName": "contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACT_METADATA_OPENSEA",
            "safeName": "CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "ContractMetadataOpensea",
            "safeName": "ContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "contractMetadata": {
      "name": {
        "typeId": "contractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "contractMetadata",
          "camelCase": {
            "unsafeName": "contractMetadata",
            "safeName": "contractMetadata"
          },
          "snakeCase": {
            "unsafeName": "contract_metadata",
            "safeName": "contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACT_METADATA",
            "safeName": "CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "ContractMetadata",
            "safeName": "ContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "contractMetadataTokenType",
                      "safeName": "contractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "contract_metadata_token_type",
                      "safeName": "contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "ContractMetadataTokenType",
                      "safeName": "ContractMetadataTokenType"
                    }
                  },
                  "typeId": "ContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "contractMetadataOpensea",
                      "safeName": "contractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "contract_metadata_opensea",
                      "safeName": "contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACT_METADATA_OPENSEA",
                      "safeName": "CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "ContractMetadataOpensea",
                      "safeName": "ContractMetadataOpensea"
                    }
                  },
                  "typeId": "ContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "contractMetadata_example_autogenerated": {}
        }
      }
    },
    "ContractMetadatav3TokenType": {
      "name": {
        "typeId": "ContractMetadatav3TokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ContractMetadatav3TokenType",
          "camelCase": {
            "unsafeName": "contractMetadatav3TokenType",
            "safeName": "contractMetadatav3TokenType"
          },
          "snakeCase": {
            "unsafeName": "contract_metadatav_3_token_type",
            "safeName": "contract_metadatav_3_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACT_METADATAV_3_TOKEN_TYPE",
            "safeName": "CONTRACT_METADATAV_3_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "ContractMetadatav3TokenType",
            "safeName": "ContractMetadatav3TokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContractMetadatav3TokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "ContractMetadatav3OpenseaMetadata": {
      "name": {
        "typeId": "ContractMetadatav3OpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ContractMetadatav3OpenseaMetadata",
          "camelCase": {
            "unsafeName": "contractMetadatav3OpenseaMetadata",
            "safeName": "contractMetadatav3OpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "contract_metadatav_3_opensea_metadata",
            "safeName": "contract_metadatav_3_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACT_METADATAV_3_OPENSEA_METADATA",
            "safeName": "CONTRACT_METADATAV_3_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "ContractMetadatav3OpenseaMetadata",
            "safeName": "ContractMetadatav3OpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContractMetadatav3OpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "contractMetadatav3": {
      "name": {
        "typeId": "contractMetadatav3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "contractMetadatav3",
          "camelCase": {
            "unsafeName": "contractMetadatav3",
            "safeName": "contractMetadatav3"
          },
          "snakeCase": {
            "unsafeName": "contract_metadatav_3",
            "safeName": "contract_metadatav_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACT_METADATAV_3",
            "safeName": "CONTRACT_METADATAV_3"
          },
          "pascalCase": {
            "unsafeName": "ContractMetadatav3",
            "safeName": "ContractMetadatav3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Contract address for the queried NFT collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3Address_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3Name_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3Symbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3TotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ContractMetadatav3TokenType",
                    "camelCase": {
                      "unsafeName": "contractMetadatav3TokenType",
                      "safeName": "contractMetadatav3TokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "contract_metadatav_3_token_type",
                      "safeName": "contract_metadatav_3_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACT_METADATAV_3_TOKEN_TYPE",
                      "safeName": "CONTRACT_METADATAV_3_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "ContractMetadatav3TokenType",
                      "safeName": "ContractMetadatav3TokenType"
                    }
                  },
                  "typeId": "ContractMetadatav3TokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3TokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3ContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3DeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ContractMetadatav3OpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "contractMetadatav3OpenseaMetadata",
                      "safeName": "contractMetadatav3OpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "contract_metadatav_3_opensea_metadata",
                      "safeName": "contract_metadatav_3_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACT_METADATAV_3_OPENSEA_METADATA",
                      "safeName": "CONTRACT_METADATAV_3_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "ContractMetadatav3OpenseaMetadata",
                      "safeName": "ContractMetadatav3OpenseaMetadata"
                    }
                  },
                  "typeId": "ContractMetadatav3OpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContractMetadatav3OpenseaMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "contractMetadatav3_example_autogenerated": {}
        }
      }
    },
    "CollectionMetadatav3FloorPrice": {
      "name": {
        "typeId": "CollectionMetadatav3FloorPrice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "CollectionMetadatav3FloorPrice",
          "camelCase": {
            "unsafeName": "collectionMetadatav3FloorPrice",
            "safeName": "collectionMetadatav3FloorPrice"
          },
          "snakeCase": {
            "unsafeName": "collection_metadatav_3_floor_price",
            "safeName": "collection_metadatav_3_floor_price"
          },
          "screamingSnakeCase": {
            "unsafeName": "COLLECTION_METADATAV_3_FLOOR_PRICE",
            "safeName": "COLLECTION_METADATAV_3_FLOOR_PRICE"
          },
          "pascalCase": {
            "unsafeName": "CollectionMetadatav3FloorPrice",
            "safeName": "CollectionMetadatav3FloorPrice"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "marketplace",
                "camelCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "snakeCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MARKETPLACE",
                  "safeName": "MARKETPLACE"
                },
                "pascalCase": {
                  "unsafeName": "Marketplace",
                  "safeName": "Marketplace"
                }
              },
              "wireValue": "marketplace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The marketplace the floor price is on",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3FloorPriceMarketplace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price of the collection on the marketplace",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3FloorPriceFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "priceCurrency",
                "camelCase": {
                  "unsafeName": "priceCurrency",
                  "safeName": "priceCurrency"
                },
                "snakeCase": {
                  "unsafeName": "price_currency",
                  "safeName": "price_currency"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PRICE_CURRENCY",
                  "safeName": "PRICE_CURRENCY"
                },
                "pascalCase": {
                  "unsafeName": "PriceCurrency",
                  "safeName": "PriceCurrency"
                }
              },
              "wireValue": "priceCurrency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The currency of the floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3FloorPricePriceCurrency_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Floor price data for the collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CollectionMetadatav3FloorPrice_example_autogenerated": {}
        }
      }
    },
    "collectionMetadatav3": {
      "name": {
        "typeId": "collectionMetadatav3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "collectionMetadatav3",
          "camelCase": {
            "unsafeName": "collectionMetadatav3",
            "safeName": "collectionMetadatav3"
          },
          "snakeCase": {
            "unsafeName": "collection_metadatav_3",
            "safeName": "collection_metadatav_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "COLLECTION_METADATAV_3",
            "safeName": "COLLECTION_METADATAV_3"
          },
          "pascalCase": {
            "unsafeName": "CollectionMetadatav3",
            "safeName": "CollectionMetadatav3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the queried NFT Collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3Name_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The human-readable string used to identify the collection on OpenSea.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3Slug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "CollectionMetadatav3FloorPrice",
                    "camelCase": {
                      "unsafeName": "collectionMetadatav3FloorPrice",
                      "safeName": "collectionMetadatav3FloorPrice"
                    },
                    "snakeCase": {
                      "unsafeName": "collection_metadatav_3_floor_price",
                      "safeName": "collection_metadatav_3_floor_price"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "COLLECTION_METADATAV_3_FLOOR_PRICE",
                      "safeName": "COLLECTION_METADATAV_3_FLOOR_PRICE"
                    },
                    "pascalCase": {
                      "unsafeName": "CollectionMetadatav3FloorPrice",
                      "safeName": "CollectionMetadatav3FloorPrice"
                    }
                  },
                  "typeId": "CollectionMetadatav3FloorPrice",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price data for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3FloorPrice_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3Description_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3ExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3TwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CollectionMetadatav3DiscordUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "collectionMetadatav3_example_autogenerated": {}
        }
      }
    },
    "Contractv3TokenType": {
      "name": {
        "typeId": "Contractv3TokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Contractv3TokenType",
          "camelCase": {
            "unsafeName": "contractv3TokenType",
            "safeName": "contractv3TokenType"
          },
          "snakeCase": {
            "unsafeName": "contractv_3_token_type",
            "safeName": "contractv_3_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACTV_3_TOKEN_TYPE",
            "safeName": "CONTRACTV_3_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "Contractv3TokenType",
            "safeName": "Contractv3TokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Contractv3TokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "Contractv3OpenseaMetadata": {
      "name": {
        "typeId": "Contractv3OpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Contractv3OpenseaMetadata",
          "camelCase": {
            "unsafeName": "contractv3OpenseaMetadata",
            "safeName": "contractv3OpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "contractv_3_opensea_metadata",
            "safeName": "contractv_3_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACTV_3_OPENSEA_METADATA",
            "safeName": "CONTRACTV_3_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "Contractv3OpenseaMetadata",
            "safeName": "Contractv3OpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Contractv3OpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "contractv3": {
      "name": {
        "typeId": "contractv3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "contractv3",
          "camelCase": {
            "unsafeName": "contractv3",
            "safeName": "contractv3"
          },
          "snakeCase": {
            "unsafeName": "contractv_3",
            "safeName": "contractv_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTRACTV_3",
            "safeName": "CONTRACTV_3"
          },
          "pascalCase": {
            "unsafeName": "Contractv3",
            "safeName": "Contractv3"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3Address_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3Name_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3Symbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3TotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Contractv3TokenType",
                    "camelCase": {
                      "unsafeName": "contractv3TokenType",
                      "safeName": "contractv3TokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "contractv_3_token_type",
                      "safeName": "contractv_3_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACTV_3_TOKEN_TYPE",
                      "safeName": "CONTRACTV_3_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "Contractv3TokenType",
                      "safeName": "Contractv3TokenType"
                    }
                  },
                  "typeId": "Contractv3TokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3TokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3ContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3DeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "Contractv3OpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "contractv3OpenseaMetadata",
                      "safeName": "contractv3OpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "contractv_3_opensea_metadata",
                      "safeName": "contractv_3_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACTV_3_OPENSEA_METADATA",
                      "safeName": "CONTRACTV_3_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "Contractv3OpenseaMetadata",
                      "safeName": "Contractv3OpenseaMetadata"
                    }
                  },
                  "typeId": "Contractv3OpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3OpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3IsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "Contractv3SpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The contract object that has details of a contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "contractv3_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersOrderBy"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_order_by",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_order_by"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_ORDER_BY",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_ORDER_BY"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "transferTime",
                "camelCase": {
                  "unsafeName": "transferTime",
                  "safeName": "transferTime"
                },
                "snakeCase": {
                  "unsafeName": "transfer_time",
                  "safeName": "transfer_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSFER_TIME",
                  "safeName": "TRANSFER_TIME"
                },
                "pascalCase": {
                  "unsafeName": "TransferTime",
                  "safeName": "TransferTime"
                }
              },
              "wireValue": "transferTime"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy_example_autogenerated": "transferTime"
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_exclude_filters_schema_items",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_exclude_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_include_filters_schema_items",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_include_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_spam_confidence_level",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_spam_confidence_level"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "VERY_HIGH",
                "camelCase": {
                  "unsafeName": "veryHigh",
                  "safeName": "veryHigh"
                },
                "snakeCase": {
                  "unsafeName": "very_high",
                  "safeName": "very_high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERY_HIGH",
                  "safeName": "VERY_HIGH"
                },
                "pascalCase": {
                  "unsafeName": "VeryHigh",
                  "safeName": "VeryHigh"
                }
              },
              "wireValue": "VERY_HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "HIGH",
                "camelCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "snakeCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGH",
                  "safeName": "HIGH"
                },
                "pascalCase": {
                  "unsafeName": "High",
                  "safeName": "High"
                }
              },
              "wireValue": "HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "MEDIUM",
                "camelCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "snakeCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIUM",
                  "safeName": "MEDIUM"
                },
                "pascalCase": {
                  "unsafeName": "Medium",
                  "safeName": "Medium"
                }
              },
              "wireValue": "MEDIUM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "LOW",
                "camelCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "snakeCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOW",
                  "safeName": "LOW"
                },
                "pascalCase": {
                  "unsafeName": "Low",
                  "safeName": "Low"
                }
              },
              "wireValue": "LOW"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel_example_autogenerated": "VERY_HIGH"
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_token_type",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_opensea_metadata",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_token_type",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_opensea_metadata",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractOpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The contract object that has details of a contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_image",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_IMAGE",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata_attributes_items",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
                          "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata_attributes_items",
                          "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
                          "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRawError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_collection",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_collection"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_COLLECTION",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_COLLECTION"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - OpenSea collection slug",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollectionSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL for the external site of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollectionExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bannerImageUrl",
                "camelCase": {
                  "unsafeName": "bannerImageUrl",
                  "safeName": "bannerImageUrl"
                },
                "snakeCase": {
                  "unsafeName": "banner_image_url",
                  "safeName": "banner_image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BANNER_IMAGE_URL",
                  "safeName": "BANNER_IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "BannerImageUrl",
                  "safeName": "BannerImageUrl"
                }
              },
              "wireValue": "bannerImageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Banner image URL for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollectionBannerImageUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The collection object that has details of a collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_acquired_at",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The contract object that has details of a contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_image",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_IMAGE",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsImage_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_raw"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_RAW"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsRaw_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collection",
                "camelCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "snakeCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION",
                  "safeName": "COLLECTION"
                },
                "pascalCase": {
                  "unsafeName": "Collection",
                  "safeName": "Collection"
                }
              },
              "wireValue": "collection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_collection",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_collection"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_COLLECTION",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_COLLECTION"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The collection object that has details of a collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsCollection_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_acquired_at",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
            "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_valid_at",
            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_valid_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
            "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The block number above information is valid as of",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAtBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The block hash above information is valid as of",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAtBlockHash_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The block timestamp above information is valid as of",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Block Information of the block as of which the corresponding data is valid",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt_example_autogenerated": {}
        }
      }
    },
    "NFT Ownership Endpoints_getNFTsForOwner-v3_Response_200": {
      "name": {
        "typeId": "NFT Ownership Endpoints_getNFTsForOwner-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Ownership Endpoints_getNFTsForOwner-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftOwnershipEndpointsGetNfTsForOwnerV3Response200",
            "safeName": "nftOwnershipEndpointsGetNfTsForOwnerV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_ownership_endpoints_get_nf_ts_for_owner_v_3_response_200",
            "safeName": "nft_ownership_endpoints_get_nf_ts_for_owner_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_NF_TS_FOR_OWNER_V_3_RESPONSE_200",
            "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_NF_TS_FOR_OWNER_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftOwnershipEndpointsGetNfTsForOwnerV3Response200",
            "safeName": "NftOwnershipEndpointsGetNfTsForOwnerV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "ownedNfts",
                "camelCase": {
                  "unsafeName": "ownedNfts",
                  "safeName": "ownedNfts"
                },
                "snakeCase": {
                  "unsafeName": "owned_nfts",
                  "safeName": "owned_nfts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OWNED_NFTS",
                  "safeName": "OWNED_NFTS"
                },
                "pascalCase": {
                  "unsafeName": "OwnedNfts",
                  "safeName": "OwnedNfts"
                }
              },
              "wireValue": "ownedNfts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                          "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items",
                          "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_owned_nfts_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                          "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Array of the NFT objects corresponding to the NFTs owned by the owner",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaOwnedNfts_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalCount",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "totalCount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - Total number of NFTs (distinct `tokenIds`) owned by the given address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "validAt",
                "camelCase": {
                  "unsafeName": "validAt",
                  "safeName": "validAt"
                },
                "snakeCase": {
                  "unsafeName": "valid_at",
                  "safeName": "valid_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALID_AT",
                  "safeName": "VALID_AT"
                },
                "pascalCase": {
                  "unsafeName": "ValidAt",
                  "safeName": "ValidAt"
                }
              },
              "wireValue": "validAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
                      "safeName": "v3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_valid_at",
                      "safeName": "v_3_api_key_get_nf_ts_for_owner_get_responses_content_application_json_schema_valid_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
                      "safeName": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block Information of the block as of which the corresponding data is valid",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForOwnerGetResponsesContentApplicationJsonSchemaValidAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Ownership Endpoints_getNFTsForOwner-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_token_type",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_opensea_metadata",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_token_type",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_opensea_metadata",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractOpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContractSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The contract object that has details of a contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_image",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_IMAGE",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata_attributes_items",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
                          "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata_attributes_items",
                          "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
                          "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRawError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_collection",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_collection"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_COLLECTION",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_COLLECTION"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - OpenSea collection slug",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollectionSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL for the external site of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollectionExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bannerImageUrl",
                "camelCase": {
                  "unsafeName": "bannerImageUrl",
                  "safeName": "bannerImageUrl"
                },
                "snakeCase": {
                  "unsafeName": "banner_image_url",
                  "safeName": "banner_image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BANNER_IMAGE_URL",
                  "safeName": "BANNER_IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "BannerImageUrl",
                  "safeName": "BannerImageUrl"
                }
              },
              "wireValue": "bannerImageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Banner image URL for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollectionBannerImageUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The collection object that has details of a collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_acquired_at",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ACQUIRED_AT",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
            "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items",
            "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
            "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The contract object that has details of a contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_image",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_IMAGE",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsImage_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_raw"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_RAW"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsRaw_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collection",
                "camelCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "snakeCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION",
                  "safeName": "COLLECTION"
                },
                "pascalCase": {
                  "unsafeName": "Collection",
                  "safeName": "Collection"
                }
              },
              "wireValue": "collection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_collection",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_collection"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_COLLECTION",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_COLLECTION"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The collection object that has details of a collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsCollection_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
                      "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_acquired_at",
                      "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ACQUIRED_AT",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
                      "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItemsAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_getNFTsForContract-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_getNFTsForContract-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_getNFTsForContract-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsGetNfTsForContractV3Response200",
            "safeName": "nftMetadataEndpointsGetNfTsForContractV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_get_nf_ts_for_contract_v_3_response_200",
            "safeName": "nft_metadata_endpoints_get_nf_ts_for_contract_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_CONTRACT_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_CONTRACT_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsGetNfTsForContractV3Response200",
            "safeName": "NftMetadataEndpointsGetNfTsForContractV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "nfts",
                "camelCase": {
                  "unsafeName": "nfts",
                  "safeName": "nfts"
                },
                "snakeCase": {
                  "unsafeName": "nfts",
                  "safeName": "nfts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NFTS",
                  "safeName": "NFTS"
                },
                "pascalCase": {
                  "unsafeName": "Nfts",
                  "safeName": "Nfts"
                }
              },
              "wireValue": "nfts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
                          "safeName": "v3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items",
                          "safeName": "v_3_api_key_get_nf_ts_for_contract_get_responses_content_application_json_schema_nfts_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NF_TS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
                          "safeName": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNftsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of objects that represent NFTs stored under the queried contract address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaNfts_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - An offset used for pagination. Can be passed back as the \"startToken\" of a subsequent request to get the next page of results. Absent if there are no more results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForContractGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_getNFTsForContract-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUriRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUriGateway_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "external_url",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "external_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The image URL that appears alongside the asset image on NFT platforms.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "background_color",
                "camelCase": {
                  "unsafeName": "backgroundColor",
                  "safeName": "backgroundColor"
                },
                "snakeCase": {
                  "unsafeName": "background_color",
                  "safeName": "background_color"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BACKGROUND_COLOR",
                  "safeName": "BACKGROUND_COLOR"
                },
                "pascalCase": {
                  "unsafeName": "BackgroundColor",
                  "safeName": "BackgroundColor"
                }
              },
              "wireValue": "background_color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataBackgroundColor_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                          "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items",
                          "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                          "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                          "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items",
                          "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                          "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems": {
      "name": {
        "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
            "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items",
            "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS",
            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
            "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                      "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata",
                      "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA",
                      "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                      "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_getNFTsForCollection-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_getNFTsForCollection-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_getNFTsForCollection-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsGetNfTsForCollectionV3Response200",
            "safeName": "nftMetadataEndpointsGetNfTsForCollectionV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_get_nf_ts_for_collection_v_3_response_200",
            "safeName": "nft_metadata_endpoints_get_nf_ts_for_collection_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_COLLECTION_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_COLLECTION_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsGetNfTsForCollectionV3Response200",
            "safeName": "NftMetadataEndpointsGetNfTsForCollectionV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "nfts",
                "camelCase": {
                  "unsafeName": "nfts",
                  "safeName": "nfts"
                },
                "snakeCase": {
                  "unsafeName": "nfts",
                  "safeName": "nfts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NFTS",
                  "safeName": "NFTS"
                },
                "pascalCase": {
                  "unsafeName": "Nfts",
                  "safeName": "Nfts"
                }
              },
              "wireValue": "nfts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                          "safeName": "v3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items",
                          "safeName": "v_3_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                          "safeName": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of objects that represent NFTs stored under the queried contract address or collection slug.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNfts_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nextToken",
                "camelCase": {
                  "unsafeName": "nextToken",
                  "safeName": "nextToken"
                },
                "snakeCase": {
                  "unsafeName": "next_token",
                  "safeName": "next_token"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NEXT_TOKEN",
                  "safeName": "NEXT_TOKEN"
                },
                "pascalCase": {
                  "unsafeName": "NextToken",
                  "safeName": "NextToken"
                }
              },
              "wireValue": "nextToken"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - An offset used for pagination. Can be passed back as the \"startToken\" of a subsequent request to get the next page of results. Absent if there are no more results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNextToken_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_getNFTsForCollection-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_token_type",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_opensea_metadata",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_token_type",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_opensea_metadata",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractOpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The contract object that has details of a contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_image",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_IMAGE",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata_attributes_items",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
                          "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata_attributes_items",
                          "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
                          "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRawError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_collection",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_collection"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTION",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTION"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - OpenSea collection slug",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollectionSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL for the external site of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollectionExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bannerImageUrl",
                "camelCase": {
                  "unsafeName": "bannerImageUrl",
                  "safeName": "bannerImageUrl"
                },
                "snakeCase": {
                  "unsafeName": "banner_image_url",
                  "safeName": "banner_image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BANNER_IMAGE_URL",
                  "safeName": "BANNER_IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "BannerImageUrl",
                  "safeName": "BannerImageUrl"
                }
              },
              "wireValue": "bannerImageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Banner image URL for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollectionBannerImageUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The collection object that has details of a collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
            "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at",
            "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
            "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_getNFTMetadata-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_getNFTMetadata-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_getNFTMetadata-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsGetNftMetadataV3Response200",
            "safeName": "nftMetadataEndpointsGetNftMetadataV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_get_nft_metadata_v_3_response_200",
            "safeName": "nft_metadata_endpoints_get_nft_metadata_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_GET_NFT_METADATA_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_GET_NFT_METADATA_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsGetNftMetadataV3Response200",
            "safeName": "NftMetadataEndpointsGetNftMetadataV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The contract object that has details of a contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_image",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_IMAGE",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaImage_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_raw"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RAW"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaRaw_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collection",
                "camelCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "snakeCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION",
                  "safeName": "COLLECTION"
                },
                "pascalCase": {
                  "unsafeName": "Collection",
                  "safeName": "Collection"
                }
              },
              "wireValue": "collection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_collection",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_collection"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTION",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTION"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The collection object that has details of a collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaCollection_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                      "safeName": "v3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at",
                      "safeName": "v_3_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                      "safeName": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_getNFTMetadata-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contractAddress",
                "camelCase": {
                  "unsafeName": "contractAddress",
                  "safeName": "contractAddress"
                },
                "snakeCase": {
                  "unsafeName": "contract_address",
                  "safeName": "contract_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESS",
                  "safeName": "CONTRACT_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddress",
                  "safeName": "ContractAddress"
                }
              },
              "wireValue": "contractAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItemsContractAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItemsTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItemsTokenType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_token_type",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_opensea_metadata",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_token_type",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_opensea_metadata",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractOpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The contract object that has details of a contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_image",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_IMAGE",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata_attributes_items",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
                          "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata_attributes_items",
                          "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
                          "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRawError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_collection",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_collection"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_COLLECTION",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_COLLECTION"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - OpenSea collection slug",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollectionSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL for the external site of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollectionExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bannerImageUrl",
                "camelCase": {
                  "unsafeName": "bannerImageUrl",
                  "safeName": "bannerImageUrl"
                },
                "snakeCase": {
                  "unsafeName": "banner_image_url",
                  "safeName": "banner_image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BANNER_IMAGE_URL",
                  "safeName": "BANNER_IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "BannerImageUrl",
                  "safeName": "BannerImageUrl"
                }
              },
              "wireValue": "bannerImageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Banner image URL for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollectionBannerImageUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The collection object that has details of a collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items",
            "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The contract object that has details of a contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_image",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_IMAGE",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsImage_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_raw"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_RAW"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Raw details of the NFT like its tokenUri and metadata info obtained directly from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsRaw_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collection",
                "camelCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "snakeCase": {
                  "unsafeName": "collection",
                  "safeName": "collection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION",
                  "safeName": "COLLECTION"
                },
                "pascalCase": {
                  "unsafeName": "Collection",
                  "safeName": "Collection"
                }
              },
              "wireValue": "collection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_collection",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_collection"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_COLLECTION",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_COLLECTION"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The collection object that has details of a collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsCollection_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                      "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at",
                      "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT",
                      "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                      "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
            "safeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_token_type",
            "safeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
            "safeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
            "safeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_opensea_metadata",
            "safeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
            "safeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_getContractMetadata-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_getContractMetadata-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_getContractMetadata-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsGetContractMetadataV3Response200",
            "safeName": "nftMetadataEndpointsGetContractMetadataV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_get_contract_metadata_v_3_response_200",
            "safeName": "nft_metadata_endpoints_get_contract_metadata_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_GET_CONTRACT_METADATA_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_GET_CONTRACT_METADATA_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsGetContractMetadataV3Response200",
            "safeName": "NftMetadataEndpointsGetContractMetadataV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Contract address for the queried NFT collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
                      "safeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_token_type",
                      "safeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
                      "safeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
                      "safeName": "v3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_opensea_metadata",
                      "safeName": "v_3_api_key_get_contract_metadata_get_responses_content_application_json_schema_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
                      "safeName": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaOpenseaMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_getContractMetadata-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
            "safeName": "v3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collection_metadata_get_responses_content_application_json_schema_floor_price",
            "safeName": "v_3_api_key_get_collection_metadata_get_responses_content_application_json_schema_floor_price"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTION_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_FLOOR_PRICE",
            "safeName": "V_3_API_KEY_GET_COLLECTION_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_FLOOR_PRICE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
            "safeName": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "marketplace",
                "camelCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "snakeCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MARKETPLACE",
                  "safeName": "MARKETPLACE"
                },
                "pascalCase": {
                  "unsafeName": "Marketplace",
                  "safeName": "Marketplace"
                }
              },
              "wireValue": "marketplace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The marketplace the floor price is on",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPriceMarketplace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price of the collection on the marketplace",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPriceFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "priceCurrency",
                "camelCase": {
                  "unsafeName": "priceCurrency",
                  "safeName": "priceCurrency"
                },
                "snakeCase": {
                  "unsafeName": "price_currency",
                  "safeName": "price_currency"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PRICE_CURRENCY",
                  "safeName": "PRICE_CURRENCY"
                },
                "pascalCase": {
                  "unsafeName": "PriceCurrency",
                  "safeName": "PriceCurrency"
                }
              },
              "wireValue": "priceCurrency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The currency of the floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPricePriceCurrency_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Floor price data for the collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_getCollectionMetadata-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_getCollectionMetadata-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_getCollectionMetadata-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsGetCollectionMetadataV3Response200",
            "safeName": "nftMetadataEndpointsGetCollectionMetadataV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_get_collection_metadata_v_3_response_200",
            "safeName": "nft_metadata_endpoints_get_collection_metadata_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_GET_COLLECTION_METADATA_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_GET_COLLECTION_METADATA_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsGetCollectionMetadataV3Response200",
            "safeName": "NftMetadataEndpointsGetCollectionMetadataV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the queried NFT Collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The human-readable string used to identify the collection on OpenSea.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
                      "safeName": "v3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_collection_metadata_get_responses_content_application_json_schema_floor_price",
                      "safeName": "v_3_api_key_get_collection_metadata_get_responses_content_application_json_schema_floor_price"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_COLLECTION_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_FLOOR_PRICE",
                      "safeName": "V_3_API_KEY_GET_COLLECTION_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_FLOOR_PRICE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
                      "safeName": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice"
                    }
                  },
                  "typeId": "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price data for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaFloorPrice_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionMetadataGetResponsesContentApplicationJsonSchemaDiscordUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_getCollectionMetadata-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_invalidateContract-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_invalidateContract-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_invalidateContract-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsInvalidateContractV3Response200",
            "safeName": "nftMetadataEndpointsInvalidateContractV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_invalidate_contract_v_3_response_200",
            "safeName": "nft_metadata_endpoints_invalidate_contract_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_INVALIDATE_CONTRACT_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_INVALIDATE_CONTRACT_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsInvalidateContractV3Response200",
            "safeName": "NftMetadataEndpointsInvalidateContractV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "success",
                "camelCase": {
                  "unsafeName": "success",
                  "safeName": "success"
                },
                "snakeCase": {
                  "unsafeName": "success",
                  "safeName": "success"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUCCESS",
                  "safeName": "SUCCESS"
                },
                "pascalCase": {
                  "unsafeName": "Success",
                  "safeName": "Success"
                }
              },
              "wireValue": "success"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "<br /> True if the contract was invalidated. <br/> False - if it wasn't.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyInvalidateContractGetResponsesContentApplicationJsonSchemaSuccess_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numTokensInvalidated",
                "camelCase": {
                  "unsafeName": "numTokensInvalidated",
                  "safeName": "numTokensInvalidated"
                },
                "snakeCase": {
                  "unsafeName": "num_tokens_invalidated",
                  "safeName": "num_tokens_invalidated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_TOKENS_INVALIDATED",
                  "safeName": "NUM_TOKENS_INVALIDATED"
                },
                "pascalCase": {
                  "unsafeName": "NumTokensInvalidated",
                  "safeName": "NumTokensInvalidated"
                }
              },
              "wireValue": "numTokensInvalidated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The number of tokens that were invalidated as a result of running this query.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyInvalidateContractGetResponsesContentApplicationJsonSchemaNumTokensInvalidated_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "<br/> True - if the queried contract is marked as spam. <br/> False - if the queried contract is considered valid.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_invalidateContract-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
            "safeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_token_type",
            "safeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
            "safeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
            "safeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_opensea_metadata",
            "safeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
            "safeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items",
            "safeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Contract address for the queried NFT collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
                      "safeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_token_type",
                      "safeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
                      "safeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                      "safeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_opensea_metadata",
                      "safeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                      "safeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsOpenseaMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems_example_autogenerated": {}
        }
      }
    },
    "NFT Ownership Endpoints_getOwnersForNFT-v3_Response_200": {
      "name": {
        "typeId": "NFT Ownership Endpoints_getOwnersForNFT-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Ownership Endpoints_getOwnersForNFT-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftOwnershipEndpointsGetOwnersForNftV3Response200",
            "safeName": "nftOwnershipEndpointsGetOwnersForNftV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_ownership_endpoints_get_owners_for_nft_v_3_response_200",
            "safeName": "nft_ownership_endpoints_get_owners_for_nft_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_NFT_V_3_RESPONSE_200",
            "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_NFT_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftOwnershipEndpointsGetOwnersForNftV3Response200",
            "safeName": "NftOwnershipEndpointsGetOwnersForNftV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "owners",
                "camelCase": {
                  "unsafeName": "owners",
                  "safeName": "owners"
                },
                "snakeCase": {
                  "unsafeName": "owners",
                  "safeName": "owners"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OWNERS",
                  "safeName": "OWNERS"
                },
                "pascalCase": {
                  "unsafeName": "Owners",
                  "safeName": "Owners"
                }
              },
              "wireValue": "owners"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of all addresses that own the given NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetOwnersForNftGetResponsesContentApplicationJsonSchemaOwners_example_autogenerated": [
                  "foo"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetOwnersForNftGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Ownership Endpoints_getOwnersForNFT-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems": {
      "name": {
        "typeId": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
            "safeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items_token_balances_items",
            "safeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items_token_balances_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS_TOKEN_BALANCES_ITEMS",
            "safeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS_TOKEN_BALANCES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
            "safeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "tokenId of the NFT in the collection that an owner has",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItemsTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "balance",
                "camelCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "snakeCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BALANCE",
                  "safeName": "BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "Balance",
                  "safeName": "Balance"
                }
              },
              "wireValue": "balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "the number of the specified token in the collection that the user owns",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItemsBalance_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems": {
      "name": {
        "typeId": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
            "safeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items",
            "safeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS",
            "safeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
            "safeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "ownerAddress",
                "camelCase": {
                  "unsafeName": "ownerAddress",
                  "safeName": "ownerAddress"
                },
                "snakeCase": {
                  "unsafeName": "owner_address",
                  "safeName": "owner_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OWNER_ADDRESS",
                  "safeName": "OWNER_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "OwnerAddress",
                  "safeName": "OwnerAddress"
                }
              },
              "wireValue": "ownerAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsOwnerAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenBalances",
                "camelCase": {
                  "unsafeName": "tokenBalances",
                  "safeName": "tokenBalances"
                },
                "snakeCase": {
                  "unsafeName": "token_balances",
                  "safeName": "token_balances"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_BALANCES",
                  "safeName": "TOKEN_BALANCES"
                },
                "pascalCase": {
                  "unsafeName": "TokenBalances",
                  "safeName": "TokenBalances"
                }
              },
              "wireValue": "tokenBalances"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
                          "safeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items_token_balances_items",
                          "safeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items_token_balances_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS_TOKEN_BALANCES_ITEMS",
                          "safeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS_TOKEN_BALANCES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
                          "safeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalancesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "a list of the token ids and balances for the owner of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItemsTokenBalances_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems_example_autogenerated": {}
        }
      }
    },
    "NFT Ownership Endpoints_getOwnersForContract-v3_Response_200": {
      "name": {
        "typeId": "NFT Ownership Endpoints_getOwnersForContract-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Ownership Endpoints_getOwnersForContract-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftOwnershipEndpointsGetOwnersForContractV3Response200",
            "safeName": "nftOwnershipEndpointsGetOwnersForContractV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_ownership_endpoints_get_owners_for_contract_v_3_response_200",
            "safeName": "nft_ownership_endpoints_get_owners_for_contract_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_CONTRACT_V_3_RESPONSE_200",
            "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_CONTRACT_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftOwnershipEndpointsGetOwnersForContractV3Response200",
            "safeName": "NftOwnershipEndpointsGetOwnersForContractV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "owners",
                "camelCase": {
                  "unsafeName": "owners",
                  "safeName": "owners"
                },
                "snakeCase": {
                  "unsafeName": "owners",
                  "safeName": "owners"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OWNERS",
                  "safeName": "OWNERS"
                },
                "pascalCase": {
                  "unsafeName": "Owners",
                  "safeName": "Owners"
                }
              },
              "wireValue": "owners"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
                          "safeName": "v3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items",
                          "safeName": "v_3_api_key_get_owners_for_contract_get_responses_content_application_json_schema_owners_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS",
                          "safeName": "V_3_API_KEY_GET_OWNERS_FOR_CONTRACT_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNERS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
                          "safeName": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwnersItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of all addresses that own one of the NFTs from the queried contract address. The format is applicable when `withTokenBalances=true`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetOwnersForContractGetResponsesContentApplicationJsonSchemaOwners_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Ownership Endpoints_getOwnersForContract-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT Spam Endpoints_getSpamContracts-v3_Response_200": {
      "name": {
        "typeId": "NFT Spam Endpoints_getSpamContracts-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Spam Endpoints_getSpamContracts-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftSpamEndpointsGetSpamContractsV3Response200",
            "safeName": "nftSpamEndpointsGetSpamContractsV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_spam_endpoints_get_spam_contracts_v_3_response_200",
            "safeName": "nft_spam_endpoints_get_spam_contracts_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_SPAM_ENDPOINTS_GET_SPAM_CONTRACTS_V_3_RESPONSE_200",
            "safeName": "NFT_SPAM_ENDPOINTS_GET_SPAM_CONTRACTS_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftSpamEndpointsGetSpamContractsV3Response200",
            "safeName": "NftSpamEndpointsGetSpamContractsV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contractAddresses",
                "camelCase": {
                  "unsafeName": "contractAddresses",
                  "safeName": "contractAddresses"
                },
                "snakeCase": {
                  "unsafeName": "contract_addresses",
                  "safeName": "contract_addresses"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESSES",
                  "safeName": "CONTRACT_ADDRESSES"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddresses",
                  "safeName": "ContractAddresses"
                }
              },
              "wireValue": "contractAddresses"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A list of contract addresses earmarked as spam by Alchemy.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetSpamContractsGetResponsesContentApplicationJsonSchemaContractAddresses_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object that contains a list of contract addresses.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Spam Endpoints_getSpamContracts-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT Spam Endpoints_isSpamContract-v3_Response_200": {
      "name": {
        "typeId": "NFT Spam Endpoints_isSpamContract-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Spam Endpoints_isSpamContract-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftSpamEndpointsIsSpamContractV3Response200",
            "safeName": "nftSpamEndpointsIsSpamContractV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_spam_endpoints_is_spam_contract_v_3_response_200",
            "safeName": "nft_spam_endpoints_is_spam_contract_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_SPAM_ENDPOINTS_IS_SPAM_CONTRACT_V_3_RESPONSE_200",
            "safeName": "NFT_SPAM_ENDPOINTS_IS_SPAM_CONTRACT_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftSpamEndpointsIsSpamContractV3Response200",
            "safeName": "NftSpamEndpointsIsSpamContractV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isSpamContract",
                "camelCase": {
                  "unsafeName": "isSpamContract",
                  "safeName": "isSpamContract"
                },
                "snakeCase": {
                  "unsafeName": "is_spam_contract",
                  "safeName": "is_spam_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM_CONTRACT",
                  "safeName": "IS_SPAM_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "IsSpamContract",
                  "safeName": "IsSpamContract"
                }
              },
              "wireValue": "isSpamContract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "<br/> True - if the queried contract is marked as spam. <br/> False - if the queried contract is considered valid.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyIsSpamContractGetResponsesContentApplicationJsonSchemaIsSpamContract_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "This object contains a boolean value indicating the spam status of the contract.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Spam Endpoints_isSpamContract-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT Spam Endpoints_isAirdropNFT-v3_Response_200": {
      "name": {
        "typeId": "NFT Spam Endpoints_isAirdropNFT-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Spam Endpoints_isAirdropNFT-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftSpamEndpointsIsAirdropNftV3Response200",
            "safeName": "nftSpamEndpointsIsAirdropNftV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_spam_endpoints_is_airdrop_nft_v_3_response_200",
            "safeName": "nft_spam_endpoints_is_airdrop_nft_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_SPAM_ENDPOINTS_IS_AIRDROP_NFT_V_3_RESPONSE_200",
            "safeName": "NFT_SPAM_ENDPOINTS_IS_AIRDROP_NFT_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftSpamEndpointsIsAirdropNftV3Response200",
            "safeName": "NftSpamEndpointsIsAirdropNftV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isAirdrop",
                "camelCase": {
                  "unsafeName": "isAirdrop",
                  "safeName": "isAirdrop"
                },
                "snakeCase": {
                  "unsafeName": "is_airdrop",
                  "safeName": "is_airdrop"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_AIRDROP",
                  "safeName": "IS_AIRDROP"
                },
                "pascalCase": {
                  "unsafeName": "IsAirdrop",
                  "safeName": "IsAirdrop"
                }
              },
              "wireValue": "isAirdrop"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "<br/> True - if the queried token is marked as an airdrop. <br/> False - if the queried token is not marked as an airdrop.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyIsAirdropNftGetResponsesContentApplicationJsonSchemaIsAirdrop_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "This object contains a boolean value indicating whether the token is an airdrop.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Spam Endpoints_isAirdropNFT-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary": {
      "name": {
        "typeId": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
          "camelCase": {
            "unsafeName": "v3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
            "safeName": "v3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary",
            "safeName": "v_3_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY",
            "safeName": "V_3_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
            "safeName": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object mapping trait types to the prevalence of each trait within that type.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_summarizeNFTAttributes-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_summarizeNFTAttributes-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_summarizeNFTAttributes-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsSummarizeNftAttributesV3Response200",
            "safeName": "nftMetadataEndpointsSummarizeNftAttributesV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_summarize_nft_attributes_v_3_response_200",
            "safeName": "nft_metadata_endpoints_summarize_nft_attributes_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_SUMMARIZE_NFT_ATTRIBUTES_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_SUMMARIZE_NFT_ATTRIBUTES_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsSummarizeNftAttributesV3Response200",
            "safeName": "NftMetadataEndpointsSummarizeNftAttributesV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                }
              },
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                    "camelCase": {
                      "unsafeName": "v3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                      "safeName": "v3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary",
                      "safeName": "v_3_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY",
                      "safeName": "V_3_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                      "safeName": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
                    }
                  },
                  "typeId": "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object mapping trait types to the prevalence of each trait within that type.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractAddress",
                "camelCase": {
                  "unsafeName": "contractAddress",
                  "safeName": "contractAddress"
                },
                "snakeCase": {
                  "unsafeName": "contract_address",
                  "safeName": "contract_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESS",
                  "safeName": "CONTRACT_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddress",
                  "safeName": "ContractAddress"
                }
              },
              "wireValue": "contractAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaContractAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Prevalence counts for each attribute within a collection.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_summarizeNFTAttributes-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency": {
      "name": {
        "typeId": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
            "safeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name_price_currency",
            "safeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name_price_currency"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME_PRICE_CURRENCY",
            "safeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME_PRICE_CURRENCY"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
            "safeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ETH",
                "camelCase": {
                  "unsafeName": "eth",
                  "safeName": "eth"
                },
                "snakeCase": {
                  "unsafeName": "eth",
                  "safeName": "eth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH",
                  "safeName": "ETH"
                },
                "pascalCase": {
                  "unsafeName": "Eth",
                  "safeName": "Eth"
                }
              },
              "wireValue": "ETH"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - The currency in which the floor price is denominated. Typically, denominated in ETH",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency_example_autogenerated": "ETH"
        }
      }
    },
    "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName": {
      "name": {
        "typeId": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
            "safeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name",
            "safeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME",
            "safeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
            "safeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The floor price of the collection on the given marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNameFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "priceCurrency",
                "camelCase": {
                  "unsafeName": "priceCurrency",
                  "safeName": "priceCurrency"
                },
                "snakeCase": {
                  "unsafeName": "price_currency",
                  "safeName": "price_currency"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PRICE_CURRENCY",
                  "safeName": "PRICE_CURRENCY"
                },
                "pascalCase": {
                  "unsafeName": "PriceCurrency",
                  "safeName": "PriceCurrency"
                }
              },
              "wireValue": "priceCurrency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
                      "safeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name_price_currency",
                      "safeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name_price_currency"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME_PRICE_CURRENCY",
                      "safeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME_PRICE_CURRENCY"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
                      "safeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency"
                    }
                  },
                  "typeId": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The currency in which the floor price is denominated. Typically, denominated in ETH",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNamePriceCurrency_example_autogenerated": "ETH"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionUrl",
                "camelCase": {
                  "unsafeName": "collectionUrl",
                  "safeName": "collectionUrl"
                },
                "snakeCase": {
                  "unsafeName": "collection_url",
                  "safeName": "collection_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_URL",
                  "safeName": "COLLECTION_URL"
                },
                "pascalCase": {
                  "unsafeName": "CollectionUrl",
                  "safeName": "CollectionUrl"
                }
              },
              "wireValue": "collectionUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Link to the collection on the given marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNameCollectionUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "retrievedAt",
                "camelCase": {
                  "unsafeName": "retrievedAt",
                  "safeName": "retrievedAt"
                },
                "snakeCase": {
                  "unsafeName": "retrieved_at",
                  "safeName": "retrieved_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RETRIEVED_AT",
                  "safeName": "RETRIEVED_AT"
                },
                "pascalCase": {
                  "unsafeName": "RetrievedAt",
                  "safeName": "RetrievedAt"
                }
              },
              "wireValue": "retrievedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - UTC timestamp of when the floor price was retrieved from the marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNameRetrievedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Returns the error `unable to fetch floor price` if there was an error fetching floor prices from the given marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceNameError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Name of the NFT marketplace where the collection is listed (in camel case). Current marketplaces supported - `openSea`, `looksRare`. So instead of the word `nftMarketplaceName` you will see marketplace names like `openSea` here.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName_example_autogenerated": {}
        }
      }
    },
    "NFT Sales Endpoints_getFloorPrice-v3_Response_200": {
      "name": {
        "typeId": "NFT Sales Endpoints_getFloorPrice-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Sales Endpoints_getFloorPrice-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftSalesEndpointsGetFloorPriceV3Response200",
            "safeName": "nftSalesEndpointsGetFloorPriceV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_sales_endpoints_get_floor_price_v_3_response_200",
            "safeName": "nft_sales_endpoints_get_floor_price_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_SALES_ENDPOINTS_GET_FLOOR_PRICE_V_3_RESPONSE_200",
            "safeName": "NFT_SALES_ENDPOINTS_GET_FLOOR_PRICE_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftSalesEndpointsGetFloorPriceV3Response200",
            "safeName": "NftSalesEndpointsGetFloorPriceV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "nftMarketplaceName",
                "camelCase": {
                  "unsafeName": "nftMarketplaceName",
                  "safeName": "nftMarketplaceName"
                },
                "snakeCase": {
                  "unsafeName": "nft_marketplace_name",
                  "safeName": "nft_marketplace_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NFT_MARKETPLACE_NAME",
                  "safeName": "NFT_MARKETPLACE_NAME"
                },
                "pascalCase": {
                  "unsafeName": "NftMarketplaceName",
                  "safeName": "NftMarketplaceName"
                }
              },
              "wireValue": "nftMarketplaceName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
                      "safeName": "v3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name",
                      "safeName": "v_3_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_name"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME",
                      "safeName": "V_3_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_NAME"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
                      "safeName": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName"
                    }
                  },
                  "typeId": "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the NFT marketplace where the collection is listed (in camel case). Current marketplaces supported - `openSea`, `looksRare`. So instead of the word `nftMarketplaceName` you will see marketplace names like `openSea` here.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceName_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Sales Endpoints_getFloorPrice-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType": {
      "name": {
        "typeId": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
            "safeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_token_type",
            "safeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
            "safeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
            "safeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_opensea_metadata",
            "safeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
            "safeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems": {
      "name": {
        "typeId": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
            "safeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items",
            "safeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
            "safeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Contract address for the queried NFT collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
                      "safeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_token_type",
                      "safeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
                      "safeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType"
                    }
                  },
                  "typeId": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                      "safeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_opensea_metadata",
                      "safeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                      "safeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsOpenseaMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems_example_autogenerated": {}
        }
      }
    },
    "NFT Ownership Endpoints_isHolderOfContract-v3_Response_200": {
      "name": {
        "typeId": "NFT Ownership Endpoints_isHolderOfContract-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Ownership Endpoints_isHolderOfContract-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftOwnershipEndpointsIsHolderOfContractV3Response200",
            "safeName": "nftOwnershipEndpointsIsHolderOfContractV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_ownership_endpoints_is_holder_of_contract_v_3_response_200",
            "safeName": "nft_ownership_endpoints_is_holder_of_contract_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_IS_HOLDER_OF_CONTRACT_V_3_RESPONSE_200",
            "safeName": "NFT_OWNERSHIP_ENDPOINTS_IS_HOLDER_OF_CONTRACT_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftOwnershipEndpointsIsHolderOfContractV3Response200",
            "safeName": "NftOwnershipEndpointsIsHolderOfContractV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isHolderOfContract",
                "camelCase": {
                  "unsafeName": "isHolderOfContract",
                  "safeName": "isHolderOfContract"
                },
                "snakeCase": {
                  "unsafeName": "is_holder_of_contract",
                  "safeName": "is_holder_of_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_HOLDER_OF_CONTRACT",
                  "safeName": "IS_HOLDER_OF_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "IsHolderOfContract",
                  "safeName": "IsHolderOfContract"
                }
              },
              "wireValue": "isHolderOfContract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether the given wallet owns any token in the given NFT contract.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyIsHolderOfContractGetResponsesContentApplicationJsonSchemaIsHolderOfContract_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Data related to a wallet's ownership of any token in an NFT contract.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Ownership Endpoints_isHolderOfContract-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems": {
      "name": {
        "typeId": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
            "safeName": "v3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items",
            "safeName": "v_3_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS",
            "safeName": "V_3_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
            "safeName": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the trait category, i.e., Hat, Color, Face, etc.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItemsTraitType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value for the trait, i.e., White Cap, Blue, Angry, etc.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "prevalence",
                "camelCase": {
                  "unsafeName": "prevalence",
                  "safeName": "prevalence"
                },
                "snakeCase": {
                  "unsafeName": "prevalence",
                  "safeName": "prevalence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREVALENCE",
                  "safeName": "PREVALENCE"
                },
                "pascalCase": {
                  "unsafeName": "Prevalence",
                  "safeName": "Prevalence"
                }
              },
              "wireValue": "prevalence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floating point value from 0 to 1 representing the prevalence of this value for this trait type.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItemsPrevalence_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_computeRarity-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_computeRarity-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_computeRarity-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsComputeRarityV3Response200",
            "safeName": "nftMetadataEndpointsComputeRarityV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_compute_rarity_v_3_response_200",
            "safeName": "nft_metadata_endpoints_compute_rarity_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_COMPUTE_RARITY_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_COMPUTE_RARITY_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsComputeRarityV3Response200",
            "safeName": "NftMetadataEndpointsComputeRarityV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "rarities",
                "camelCase": {
                  "unsafeName": "rarities",
                  "safeName": "rarities"
                },
                "snakeCase": {
                  "unsafeName": "rarities",
                  "safeName": "rarities"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RARITIES",
                  "safeName": "RARITIES"
                },
                "pascalCase": {
                  "unsafeName": "Rarities",
                  "safeName": "Rarities"
                }
              },
              "wireValue": "rarities"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                          "safeName": "v3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items",
                          "safeName": "v_3_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS",
                          "safeName": "V_3_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                          "safeName": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
                        }
                      },
                      "typeId": "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT attributes and their associated prevalence.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRarities_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object containing the rarity info of the collection.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_computeRarity-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftSalesGetParametersOrder": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetParametersOrder",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetParametersOrder",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetParametersOrder",
            "safeName": "v3ApiKeyGetNftSalesGetParametersOrder"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_parameters_order",
            "safeName": "v_3_api_key_get_nft_sales_get_parameters_order"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetParametersOrder",
            "safeName": "V3ApiKeyGetNftSalesGetParametersOrder"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "asc",
              "camelCase": {
                "unsafeName": "asc",
                "safeName": "asc"
              },
              "snakeCase": {
                "unsafeName": "asc",
                "safeName": "asc"
              },
              "screamingSnakeCase": {
                "unsafeName": "ASC",
                "safeName": "ASC"
              },
              "pascalCase": {
                "unsafeName": "Asc",
                "safeName": "Asc"
              }
            },
            "wireValue": "asc"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "asc",
                "camelCase": {
                  "unsafeName": "asc",
                  "safeName": "asc"
                },
                "snakeCase": {
                  "unsafeName": "asc",
                  "safeName": "asc"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASC",
                  "safeName": "ASC"
                },
                "pascalCase": {
                  "unsafeName": "Asc",
                  "safeName": "Asc"
                }
              },
              "wireValue": "asc"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "desc",
                "camelCase": {
                  "unsafeName": "desc",
                  "safeName": "desc"
                },
                "snakeCase": {
                  "unsafeName": "desc",
                  "safeName": "desc"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESC",
                  "safeName": "DESC"
                },
                "pascalCase": {
                  "unsafeName": "Desc",
                  "safeName": "Desc"
                }
              },
              "wireValue": "desc"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetParametersOrder_example_autogenerated": "asc"
        }
      }
    },
    "V3ApiKeyGetNftSalesGetParametersMarketplace": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetParametersMarketplace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetParametersMarketplace",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetParametersMarketplace",
            "safeName": "v3ApiKeyGetNftSalesGetParametersMarketplace"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_parameters_marketplace",
            "safeName": "v_3_api_key_get_nft_sales_get_parameters_marketplace"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetParametersMarketplace",
            "safeName": "V3ApiKeyGetNftSalesGetParametersMarketplace"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "seaport",
                "camelCase": {
                  "unsafeName": "seaport",
                  "safeName": "seaport"
                },
                "snakeCase": {
                  "unsafeName": "seaport",
                  "safeName": "seaport"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEAPORT",
                  "safeName": "SEAPORT"
                },
                "pascalCase": {
                  "unsafeName": "Seaport",
                  "safeName": "Seaport"
                }
              },
              "wireValue": "seaport"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "looksrare",
                "camelCase": {
                  "unsafeName": "looksrare",
                  "safeName": "looksrare"
                },
                "snakeCase": {
                  "unsafeName": "looksrare",
                  "safeName": "looksrare"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOOKSRARE",
                  "safeName": "LOOKSRARE"
                },
                "pascalCase": {
                  "unsafeName": "Looksrare",
                  "safeName": "Looksrare"
                }
              },
              "wireValue": "looksrare"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "x2y2",
                "camelCase": {
                  "unsafeName": "x2Y2",
                  "safeName": "x2Y2"
                },
                "snakeCase": {
                  "unsafeName": "x_2_y_2",
                  "safeName": "x_2_y_2"
                },
                "screamingSnakeCase": {
                  "unsafeName": "X_2_Y_2",
                  "safeName": "X_2_Y_2"
                },
                "pascalCase": {
                  "unsafeName": "X2Y2",
                  "safeName": "X2Y2"
                }
              },
              "wireValue": "x2y2"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "wyvern",
                "camelCase": {
                  "unsafeName": "wyvern",
                  "safeName": "wyvern"
                },
                "snakeCase": {
                  "unsafeName": "wyvern",
                  "safeName": "wyvern"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WYVERN",
                  "safeName": "WYVERN"
                },
                "pascalCase": {
                  "unsafeName": "Wyvern",
                  "safeName": "Wyvern"
                }
              },
              "wireValue": "wyvern"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blur",
                "camelCase": {
                  "unsafeName": "blur",
                  "safeName": "blur"
                },
                "snakeCase": {
                  "unsafeName": "blur",
                  "safeName": "blur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLUR",
                  "safeName": "BLUR"
                },
                "pascalCase": {
                  "unsafeName": "Blur",
                  "safeName": "Blur"
                }
              },
              "wireValue": "blur"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "cryptopunks",
                "camelCase": {
                  "unsafeName": "cryptopunks",
                  "safeName": "cryptopunks"
                },
                "snakeCase": {
                  "unsafeName": "cryptopunks",
                  "safeName": "cryptopunks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CRYPTOPUNKS",
                  "safeName": "CRYPTOPUNKS"
                },
                "pascalCase": {
                  "unsafeName": "Cryptopunks",
                  "safeName": "Cryptopunks"
                }
              },
              "wireValue": "cryptopunks"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetParametersMarketplace_example_autogenerated": "seaport"
        }
      }
    },
    "V3ApiKeyGetNftSalesGetParametersTaker": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetParametersTaker",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetParametersTaker",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetParametersTaker",
            "safeName": "v3ApiKeyGetNftSalesGetParametersTaker"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_parameters_taker",
            "safeName": "v_3_api_key_get_nft_sales_get_parameters_taker"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetParametersTaker",
            "safeName": "V3ApiKeyGetNftSalesGetParametersTaker"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "BUYER",
                "camelCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "snakeCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUYER",
                  "safeName": "BUYER"
                },
                "pascalCase": {
                  "unsafeName": "Buyer",
                  "safeName": "Buyer"
                }
              },
              "wireValue": "BUYER"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "SELLER",
                "camelCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "snakeCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER",
                  "safeName": "SELLER"
                },
                "pascalCase": {
                  "unsafeName": "Seller",
                  "safeName": "Seller"
                }
              },
              "wireValue": "SELLER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetParametersTaker_example_autogenerated": "BUYER"
        }
      }
    },
    "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
            "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker",
            "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
            "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "BUYER",
                "camelCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "snakeCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUYER",
                  "safeName": "BUYER"
                },
                "pascalCase": {
                  "unsafeName": "Buyer",
                  "safeName": "Buyer"
                }
              },
              "wireValue": "BUYER"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "SELLER",
                "camelCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "snakeCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER",
                  "safeName": "SELLER"
                },
                "pascalCase": {
                  "unsafeName": "Seller",
                  "safeName": "Seller"
                }
              },
              "wireValue": "SELLER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - Whether the price taker in the trade was the buyer or the seller.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker_example_autogenerated": "BUYER"
        }
      }
    },
    "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
            "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee",
            "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
            "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The amount of the payment from the buyer to seller as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFeeAmount_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenAddress",
                "camelCase": {
                  "unsafeName": "tokenAddress",
                  "safeName": "tokenAddress"
                },
                "snakeCase": {
                  "unsafeName": "token_address",
                  "safeName": "token_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ADDRESS",
                  "safeName": "TOKEN_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "TokenAddress",
                  "safeName": "TokenAddress"
                }
              },
              "wireValue": "tokenAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The smart contract address of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFeeTokenAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The symbol of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFeeSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "decimals",
                "camelCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "snakeCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DECIMALS",
                  "safeName": "DECIMALS"
                },
                "pascalCase": {
                  "unsafeName": "Decimals",
                  "safeName": "Decimals"
                }
              },
              "wireValue": "decimals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of decimals of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFeeDecimals_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The payment from buyer to the seller.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
            "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee",
            "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
            "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The amount of the payment to the marketplace as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFeeAmount_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenAddress",
                "camelCase": {
                  "unsafeName": "tokenAddress",
                  "safeName": "tokenAddress"
                },
                "snakeCase": {
                  "unsafeName": "token_address",
                  "safeName": "token_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ADDRESS",
                  "safeName": "TOKEN_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "TokenAddress",
                  "safeName": "TokenAddress"
                }
              },
              "wireValue": "tokenAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The smart contract address of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFeeTokenAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The symbol of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFeeSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "decimals",
                "camelCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "snakeCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DECIMALS",
                  "safeName": "DECIMALS"
                },
                "pascalCase": {
                  "unsafeName": "Decimals",
                  "safeName": "Decimals"
                }
              },
              "wireValue": "decimals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of decimals of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFeeDecimals_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The payment from buyer to the NFT marketplace protocol.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
            "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee",
            "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
            "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The amount of the payment to the royalty collector as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFeeAmount_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenAddress",
                "camelCase": {
                  "unsafeName": "tokenAddress",
                  "safeName": "tokenAddress"
                },
                "snakeCase": {
                  "unsafeName": "token_address",
                  "safeName": "token_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ADDRESS",
                  "safeName": "TOKEN_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "TokenAddress",
                  "safeName": "TokenAddress"
                }
              },
              "wireValue": "tokenAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The smart contract address of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFeeTokenAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The symbol of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFeeSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "decimals",
                "camelCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "snakeCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DECIMALS",
                  "safeName": "DECIMALS"
                },
                "pascalCase": {
                  "unsafeName": "Decimals",
                  "safeName": "Decimals"
                }
              },
              "wireValue": "decimals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of decimals of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFeeDecimals_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The payment from buyer to the royalty address of the NFT collection.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
            "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items",
            "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
            "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "marketplace",
                "camelCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "snakeCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MARKETPLACE",
                  "safeName": "MARKETPLACE"
                },
                "pascalCase": {
                  "unsafeName": "Marketplace",
                  "safeName": "Marketplace"
                }
              },
              "wireValue": "marketplace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The marketplace the sale took place on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsMarketplace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "marketplaceAddress",
                "camelCase": {
                  "unsafeName": "marketplaceAddress",
                  "safeName": "marketplaceAddress"
                },
                "snakeCase": {
                  "unsafeName": "marketplace_address",
                  "safeName": "marketplace_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MARKETPLACE_ADDRESS",
                  "safeName": "MARKETPLACE_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "MarketplaceAddress",
                  "safeName": "MarketplaceAddress"
                }
              },
              "wireValue": "marketplaceAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The address of the marketplace contract.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsMarketplaceAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractAddress",
                "camelCase": {
                  "unsafeName": "contractAddress",
                  "safeName": "contractAddress"
                },
                "snakeCase": {
                  "unsafeName": "contract_address",
                  "safeName": "contract_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESS",
                  "safeName": "CONTRACT_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddress",
                  "safeName": "ContractAddress"
                }
              },
              "wireValue": "contractAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The contract address of the collection the NFT belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The decimal token ID of the NFT being sold.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "quantity",
                "camelCase": {
                  "unsafeName": "quantity",
                  "safeName": "quantity"
                },
                "snakeCase": {
                  "unsafeName": "quantity",
                  "safeName": "quantity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUANTITY",
                  "safeName": "QUANTITY"
                },
                "pascalCase": {
                  "unsafeName": "Quantity",
                  "safeName": "Quantity"
                }
              },
              "wireValue": "quantity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of tokens sold in the sale as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsQuantity_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "buyerAddress",
                "camelCase": {
                  "unsafeName": "buyerAddress",
                  "safeName": "buyerAddress"
                },
                "snakeCase": {
                  "unsafeName": "buyer_address",
                  "safeName": "buyer_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUYER_ADDRESS",
                  "safeName": "BUYER_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "BuyerAddress",
                  "safeName": "BuyerAddress"
                }
              },
              "wireValue": "buyerAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The address of the buyer in the NFT sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsBuyerAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sellerAddress",
                "camelCase": {
                  "unsafeName": "sellerAddress",
                  "safeName": "sellerAddress"
                },
                "snakeCase": {
                  "unsafeName": "seller_address",
                  "safeName": "seller_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER_ADDRESS",
                  "safeName": "SELLER_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "SellerAddress",
                  "safeName": "SellerAddress"
                }
              },
              "wireValue": "sellerAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The address of the seller in the NFT sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "taker",
                "camelCase": {
                  "unsafeName": "taker",
                  "safeName": "taker"
                },
                "snakeCase": {
                  "unsafeName": "taker",
                  "safeName": "taker"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TAKER",
                  "safeName": "TAKER"
                },
                "pascalCase": {
                  "unsafeName": "Taker",
                  "safeName": "Taker"
                }
              },
              "wireValue": "taker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                      "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker",
                      "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER",
                      "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                      "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Whether the price taker in the trade was the buyer or the seller.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker_example_autogenerated": "BUYER"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sellerFee",
                "camelCase": {
                  "unsafeName": "sellerFee",
                  "safeName": "sellerFee"
                },
                "snakeCase": {
                  "unsafeName": "seller_fee",
                  "safeName": "seller_fee"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER_FEE",
                  "safeName": "SELLER_FEE"
                },
                "pascalCase": {
                  "unsafeName": "SellerFee",
                  "safeName": "SellerFee"
                }
              },
              "wireValue": "sellerFee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                      "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee",
                      "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE",
                      "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                      "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The payment from buyer to the seller.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "protocolFee",
                "camelCase": {
                  "unsafeName": "protocolFee",
                  "safeName": "protocolFee"
                },
                "snakeCase": {
                  "unsafeName": "protocol_fee",
                  "safeName": "protocol_fee"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROTOCOL_FEE",
                  "safeName": "PROTOCOL_FEE"
                },
                "pascalCase": {
                  "unsafeName": "ProtocolFee",
                  "safeName": "ProtocolFee"
                }
              },
              "wireValue": "protocolFee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                      "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee",
                      "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE",
                      "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                      "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The payment from buyer to the NFT marketplace protocol.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "royaltyFee",
                "camelCase": {
                  "unsafeName": "royaltyFee",
                  "safeName": "royaltyFee"
                },
                "snakeCase": {
                  "unsafeName": "royalty_fee",
                  "safeName": "royalty_fee"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROYALTY_FEE",
                  "safeName": "ROYALTY_FEE"
                },
                "pascalCase": {
                  "unsafeName": "RoyaltyFee",
                  "safeName": "RoyaltyFee"
                }
              },
              "wireValue": "royaltyFee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                      "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee",
                      "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE",
                      "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                      "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The payment from buyer to the royalty address of the NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The block number the NFT sale took place in.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logIndex",
                "camelCase": {
                  "unsafeName": "logIndex",
                  "safeName": "logIndex"
                },
                "snakeCase": {
                  "unsafeName": "log_index",
                  "safeName": "log_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOG_INDEX",
                  "safeName": "LOG_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "LogIndex",
                  "safeName": "LogIndex"
                }
              },
              "wireValue": "logIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The log number of the sale event emitted within the block.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsLogIndex_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bundleIndex",
                "camelCase": {
                  "unsafeName": "bundleIndex",
                  "safeName": "bundleIndex"
                },
                "snakeCase": {
                  "unsafeName": "bundle_index",
                  "safeName": "bundle_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUNDLE_INDEX",
                  "safeName": "BUNDLE_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "BundleIndex",
                  "safeName": "BundleIndex"
                }
              },
              "wireValue": "bundleIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The index of the token within the bundle of NFTs sold in the sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsBundleIndex_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionHash",
                "camelCase": {
                  "unsafeName": "transactionHash",
                  "safeName": "transactionHash"
                },
                "snakeCase": {
                  "unsafeName": "transaction_hash",
                  "safeName": "transaction_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_HASH",
                  "safeName": "TRANSACTION_HASH"
                },
                "pascalCase": {
                  "unsafeName": "TransactionHash",
                  "safeName": "TransactionHash"
                }
              },
              "wireValue": "transactionHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The transaction hash of the transaction containing the sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTransactionHash_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt": {
      "name": {
        "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
            "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_valid_at",
            "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_valid_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT",
            "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
            "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The block number above information is valid as of",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAtBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The block hash above information is valid as of",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAtBlockHash_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The block timestamp above information is valid as of",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Block Information of the block as of which the corresponding data is valid",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt_example_autogenerated": {}
        }
      }
    },
    "NFT Sales Endpoints_getNFTSales-v3_Response_200": {
      "name": {
        "typeId": "NFT Sales Endpoints_getNFTSales-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Sales Endpoints_getNFTSales-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftSalesEndpointsGetNftSalesV3Response200",
            "safeName": "nftSalesEndpointsGetNftSalesV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_sales_endpoints_get_nft_sales_v_3_response_200",
            "safeName": "nft_sales_endpoints_get_nft_sales_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_SALES_ENDPOINTS_GET_NFT_SALES_V_3_RESPONSE_200",
            "safeName": "NFT_SALES_ENDPOINTS_GET_NFT_SALES_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftSalesEndpointsGetNftSalesV3Response200",
            "safeName": "NftSalesEndpointsGetNftSalesV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "nftSales",
                "camelCase": {
                  "unsafeName": "nftSales",
                  "safeName": "nftSales"
                },
                "snakeCase": {
                  "unsafeName": "nft_sales",
                  "safeName": "nft_sales"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NFT_SALES",
                  "safeName": "NFT_SALES"
                },
                "pascalCase": {
                  "unsafeName": "NftSales",
                  "safeName": "NftSales"
                }
              },
              "wireValue": "nftSales"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                          "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items",
                          "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                          "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of NFT sales that match the query.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSales_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The page key to use to fetch the next page of results. Returns null if there are no more results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "validAt",
                "camelCase": {
                  "unsafeName": "validAt",
                  "safeName": "validAt"
                },
                "snakeCase": {
                  "unsafeName": "valid_at",
                  "safeName": "valid_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALID_AT",
                  "safeName": "VALID_AT"
                },
                "pascalCase": {
                  "unsafeName": "ValidAt",
                  "safeName": "ValidAt"
                }
              },
              "wireValue": "validAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
                      "safeName": "v3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_valid_at",
                      "safeName": "v_3_api_key_get_nft_sales_get_responses_content_application_json_schema_valid_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT",
                      "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_VALID_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
                      "safeName": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt"
                    }
                  },
                  "typeId": "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block Information of the block as of which the corresponding data is valid",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaValidAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Sales Endpoints_getNFTSales-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "v3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "v3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetParametersOrderBy": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersOrderBy",
            "safeName": "v3ApiKeyGetContractsForOwnerGetParametersOrderBy"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_order_by",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_order_by"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy",
            "safeName": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "transferTime",
                "camelCase": {
                  "unsafeName": "transferTime",
                  "safeName": "transferTime"
                },
                "snakeCase": {
                  "unsafeName": "transfer_time",
                  "safeName": "transfer_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSFER_TIME",
                  "safeName": "TRANSFER_TIME"
                },
                "pascalCase": {
                  "unsafeName": "TransferTime",
                  "safeName": "TransferTime"
                }
              },
              "wireValue": "transferTime"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetParametersOrderBy_example_autogenerated": "transferTime"
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
            "safeName": "v3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
            "safeName": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "VERY_HIGH",
                "camelCase": {
                  "unsafeName": "veryHigh",
                  "safeName": "veryHigh"
                },
                "snakeCase": {
                  "unsafeName": "very_high",
                  "safeName": "very_high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERY_HIGH",
                  "safeName": "VERY_HIGH"
                },
                "pascalCase": {
                  "unsafeName": "VeryHigh",
                  "safeName": "VeryHigh"
                }
              },
              "wireValue": "VERY_HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "HIGH",
                "camelCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "snakeCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGH",
                  "safeName": "HIGH"
                },
                "pascalCase": {
                  "unsafeName": "High",
                  "safeName": "High"
                }
              },
              "wireValue": "HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "MEDIUM",
                "camelCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "snakeCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIUM",
                  "safeName": "MEDIUM"
                },
                "pascalCase": {
                  "unsafeName": "Medium",
                  "safeName": "Medium"
                }
              },
              "wireValue": "MEDIUM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "LOW",
                "camelCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "snakeCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOW",
                  "safeName": "LOW"
                },
                "pascalCase": {
                  "unsafeName": "Low",
                  "safeName": "Low"
                }
              },
              "wireValue": "LOW"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel_example_autogenerated": "VERY_HIGH"
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
            "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea_metadata",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA_METADATA",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
            "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadataLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
            "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_display_nft",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_display_nft"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_DISPLAY_NFT",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_DISPLAY_NFT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
            "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "One of the tokens from this contract held by the owner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNftTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The title of the token held by the owner i.e. \"Something #22\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNftName_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
            "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_image",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_IMAGE",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
            "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems": {
      "name": {
        "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
            "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items",
            "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS",
            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
            "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the contract, i.e. \"Bored Ape Yacht Club\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The symbol of the contract, i.e. BAYC.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "openseaMetadata",
                "camelCase": {
                  "unsafeName": "openseaMetadata",
                  "safeName": "openseaMetadata"
                },
                "snakeCase": {
                  "unsafeName": "opensea_metadata",
                  "safeName": "opensea_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA_METADATA",
                  "safeName": "OPENSEA_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "OpenseaMetadata",
                  "safeName": "OpenseaMetadata"
                }
              },
              "wireValue": "openseaMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
                      "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea_metadata",
                      "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA_METADATA",
                      "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
                      "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata"
                    }
                  },
                  "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalBalance",
                "camelCase": {
                  "unsafeName": "totalBalance",
                  "safeName": "totalBalance"
                },
                "snakeCase": {
                  "unsafeName": "total_balance",
                  "safeName": "total_balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_BALANCE",
                  "safeName": "TOTAL_BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "TotalBalance",
                  "safeName": "TotalBalance"
                }
              },
              "wireValue": "totalBalance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sum of NFT balances across all token IDs held by the owner. For non-fungible tokens this will be equal to the `numDistinctTokensOwned`, but it may be higher if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsTotalBalance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numDistinctTokensOwned",
                "camelCase": {
                  "unsafeName": "numDistinctTokensOwned",
                  "safeName": "numDistinctTokensOwned"
                },
                "snakeCase": {
                  "unsafeName": "num_distinct_tokens_owned",
                  "safeName": "num_distinct_tokens_owned"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_DISTINCT_TOKENS_OWNED",
                  "safeName": "NUM_DISTINCT_TOKENS_OWNED"
                },
                "pascalCase": {
                  "unsafeName": "NumDistinctTokensOwned",
                  "safeName": "NumDistinctTokensOwned"
                }
              },
              "wireValue": "numDistinctTokensOwned"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of distinct token IDs held by the owner. For non-fungible tokens this will be equal to the `totalBalance`, but it may be lower if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsNumDistinctTokensOwned_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "`True` if the contract is detected as spam contract. `False` if it is not spam or has not been evaluated by our system yet",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsIsSpam_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "displayNft",
                "camelCase": {
                  "unsafeName": "displayNft",
                  "safeName": "displayNft"
                },
                "snakeCase": {
                  "unsafeName": "display_nft",
                  "safeName": "display_nft"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISPLAY_NFT",
                  "safeName": "DISPLAY_NFT"
                },
                "pascalCase": {
                  "unsafeName": "DisplayNft",
                  "safeName": "DisplayNft"
                }
              },
              "wireValue": "displayNft"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
                      "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_display_nft",
                      "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_display_nft"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_DISPLAY_NFT",
                      "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_DISPLAY_NFT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
                      "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft"
                    }
                  },
                  "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDisplayNft_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
                      "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_image",
                      "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_IMAGE",
                      "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
                      "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage"
                    }
                  },
                  "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsImage_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents a smart contract and has all data corresponding to that contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems_example_autogenerated": {}
        }
      }
    },
    "NFT Ownership Endpoints_getContractsForOwner-v3_Response_200": {
      "name": {
        "typeId": "NFT Ownership Endpoints_getContractsForOwner-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Ownership Endpoints_getContractsForOwner-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftOwnershipEndpointsGetContractsForOwnerV3Response200",
            "safeName": "nftOwnershipEndpointsGetContractsForOwnerV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_ownership_endpoints_get_contracts_for_owner_v_3_response_200",
            "safeName": "nft_ownership_endpoints_get_contracts_for_owner_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_CONTRACTS_FOR_OWNER_V_3_RESPONSE_200",
            "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_CONTRACTS_FOR_OWNER_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftOwnershipEndpointsGetContractsForOwnerV3Response200",
            "safeName": "NftOwnershipEndpointsGetContractsForOwnerV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contracts",
                "camelCase": {
                  "unsafeName": "contracts",
                  "safeName": "contracts"
                },
                "snakeCase": {
                  "unsafeName": "contracts",
                  "safeName": "contracts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACTS",
                  "safeName": "CONTRACTS"
                },
                "pascalCase": {
                  "unsafeName": "Contracts",
                  "safeName": "Contracts"
                }
              },
              "wireValue": "contracts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                          "safeName": "v3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items",
                          "safeName": "v_3_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS",
                          "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                          "safeName": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContracts_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalCount",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "totalCount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFT contracts held by the given address returned in this page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaTotalCount_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Ownership Endpoints_getContractsForOwner-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_parameters_include_filters_schema_items",
            "safeName": "v_3_api_key_get_collections_for_owner_get_parameters_include_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_parameters_exclude_filters_schema_items",
            "safeName": "v_3_api_key_get_collections_for_owner_get_parameters_exclude_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_floor_price",
            "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_floor_price"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_FLOOR_PRICE",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_FLOOR_PRICE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "marketplace",
                "camelCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "snakeCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MARKETPLACE",
                  "safeName": "MARKETPLACE"
                },
                "pascalCase": {
                  "unsafeName": "Marketplace",
                  "safeName": "Marketplace"
                }
              },
              "wireValue": "marketplace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The marketplace the floor price is on",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPriceMarketplace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price of the collection on the marketplace",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPriceFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "priceCurrency",
                "camelCase": {
                  "unsafeName": "priceCurrency",
                  "safeName": "priceCurrency"
                },
                "snakeCase": {
                  "unsafeName": "price_currency",
                  "safeName": "price_currency"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PRICE_CURRENCY",
                  "safeName": "PRICE_CURRENCY"
                },
                "pascalCase": {
                  "unsafeName": "PriceCurrency",
                  "safeName": "PriceCurrency"
                }
              },
              "wireValue": "priceCurrency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The currency of the floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPricePriceCurrency_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Floor price data for the collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract_token_type",
            "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT_TOKEN_TYPE",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract",
            "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
                      "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract_token_type",
                      "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT_TOKEN_TYPE",
                      "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
                      "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType"
                    }
                  },
                  "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContractDeployedBlockNumber_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Contract-level data for a collection, such as contract type, name, and symbol.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_display_nft",
            "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_display_nft"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_DISPLAY_NFT",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_DISPLAY_NFT"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "One of the tokens from this contract held by the owner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNftTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The title of the token held by the owner i.e. \"Something #22\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNftName_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_image",
            "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_image"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_IMAGE",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_IMAGE"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "cachedUrl",
                "camelCase": {
                  "unsafeName": "cachedUrl",
                  "safeName": "cachedUrl"
                },
                "snakeCase": {
                  "unsafeName": "cached_url",
                  "safeName": "cached_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CACHED_URL",
                  "safeName": "CACHED_URL"
                },
                "pascalCase": {
                  "unsafeName": "CachedUrl",
                  "safeName": "CachedUrl"
                }
              },
              "wireValue": "cachedUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImageCachedUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnailUrl",
                "camelCase": {
                  "unsafeName": "thumbnailUrl",
                  "safeName": "thumbnailUrl"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail_url",
                  "safeName": "thumbnail_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL_URL",
                  "safeName": "THUMBNAIL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ThumbnailUrl",
                  "safeName": "ThumbnailUrl"
                }
              },
              "wireValue": "thumbnailUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the thumbnail version of the NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImageThumbnailUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pngUrl",
                "camelCase": {
                  "unsafeName": "pngUrl",
                  "safeName": "pngUrl"
                },
                "snakeCase": {
                  "unsafeName": "png_url",
                  "safeName": "png_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PNG_URL",
                  "safeName": "PNG_URL"
                },
                "pascalCase": {
                  "unsafeName": "PngUrl",
                  "safeName": "PngUrl"
                }
              },
              "wireValue": "pngUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url that has the NFT image in png",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImagePngUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contentType",
                "camelCase": {
                  "unsafeName": "contentType",
                  "safeName": "contentType"
                },
                "snakeCase": {
                  "unsafeName": "content_type",
                  "safeName": "content_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_TYPE",
                  "safeName": "CONTENT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ContentType",
                  "safeName": "ContentType"
                }
              },
              "wireValue": "contentType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Url of the image stored in Alchemy cache",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImageContentType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImageSize_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "originalUrl",
                "camelCase": {
                  "unsafeName": "originalUrl",
                  "safeName": "originalUrl"
                },
                "snakeCase": {
                  "unsafeName": "original_url",
                  "safeName": "original_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_URL",
                  "safeName": "ORIGINAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "OriginalUrl",
                  "safeName": "OriginalUrl"
                }
              },
              "wireValue": "originalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The original Url of the image coming straight from the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImageOriginalUrl_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Details of the image corresponding to this contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage_example_autogenerated": {}
        }
      }
    },
    "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems": {
      "name": {
        "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
          "camelCase": {
            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
            "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems"
          },
          "snakeCase": {
            "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items",
            "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS",
            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
            "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the collection, i.e. \"Bored Ape Yacht Club\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The human-readable string used to identify the collection on OpenSea.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
                      "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_floor_price",
                      "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_floor_price"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_FLOOR_PRICE",
                      "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_FLOOR_PRICE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
                      "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice"
                    }
                  },
                  "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floor price data for the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsFloorPrice_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
                      "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract",
                      "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT",
                      "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
                      "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract"
                    }
                  },
                  "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Contract-level data for a collection, such as contract type, name, and symbol.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalBalance",
                "camelCase": {
                  "unsafeName": "totalBalance",
                  "safeName": "totalBalance"
                },
                "snakeCase": {
                  "unsafeName": "total_balance",
                  "safeName": "total_balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_BALANCE",
                  "safeName": "TOTAL_BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "TotalBalance",
                  "safeName": "TotalBalance"
                }
              },
              "wireValue": "totalBalance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sum of NFT balances across all token IDs held by the owner. For non-fungible tokens this will be equal to the `numDistinctTokensOwned`, but it may be higher if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsTotalBalance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numDistinctTokensOwned",
                "camelCase": {
                  "unsafeName": "numDistinctTokensOwned",
                  "safeName": "numDistinctTokensOwned"
                },
                "snakeCase": {
                  "unsafeName": "num_distinct_tokens_owned",
                  "safeName": "num_distinct_tokens_owned"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_DISTINCT_TOKENS_OWNED",
                  "safeName": "NUM_DISTINCT_TOKENS_OWNED"
                },
                "pascalCase": {
                  "unsafeName": "NumDistinctTokensOwned",
                  "safeName": "NumDistinctTokensOwned"
                }
              },
              "wireValue": "numDistinctTokensOwned"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of distinct token IDs held by the owner. For non-fungible tokens this will be equal to the `totalBalance`, but it may be lower if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsNumDistinctTokensOwned_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "displayNft",
                "camelCase": {
                  "unsafeName": "displayNft",
                  "safeName": "displayNft"
                },
                "snakeCase": {
                  "unsafeName": "display_nft",
                  "safeName": "display_nft"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISPLAY_NFT",
                  "safeName": "DISPLAY_NFT"
                },
                "pascalCase": {
                  "unsafeName": "DisplayNft",
                  "safeName": "DisplayNft"
                }
              },
              "wireValue": "displayNft"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
                      "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_display_nft",
                      "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_display_nft"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_DISPLAY_NFT",
                      "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_DISPLAY_NFT"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
                      "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft"
                    }
                  },
                  "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the display NFT for this contract. This NFT and its image can be used to represent the contract when displaying info about it.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsDisplayNft_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
                    "camelCase": {
                      "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
                      "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage"
                    },
                    "snakeCase": {
                      "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_image",
                      "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items_image"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_IMAGE",
                      "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS_IMAGE"
                    },
                    "pascalCase": {
                      "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
                      "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage"
                    }
                  },
                  "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Details of the image corresponding to this contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItemsImage_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Metadata for an NFT collection held by an owner address. Includes general metadata about the collection, as well as information specific to the owner such as the total balance and the token ID of a random NFT for display purposes.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems_example_autogenerated": {}
        }
      }
    },
    "NFT Ownership Endpoints_getCollectionsForOwner-v3_Response_200": {
      "name": {
        "typeId": "NFT Ownership Endpoints_getCollectionsForOwner-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Ownership Endpoints_getCollectionsForOwner-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftOwnershipEndpointsGetCollectionsForOwnerV3Response200",
            "safeName": "nftOwnershipEndpointsGetCollectionsForOwnerV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_ownership_endpoints_get_collections_for_owner_v_3_response_200",
            "safeName": "nft_ownership_endpoints_get_collections_for_owner_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_COLLECTIONS_FOR_OWNER_V_3_RESPONSE_200",
            "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_COLLECTIONS_FOR_OWNER_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftOwnershipEndpointsGetCollectionsForOwnerV3Response200",
            "safeName": "NftOwnershipEndpointsGetCollectionsForOwnerV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "collections",
                "camelCase": {
                  "unsafeName": "collections",
                  "safeName": "collections"
                },
                "snakeCase": {
                  "unsafeName": "collections",
                  "safeName": "collections"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTIONS",
                  "safeName": "COLLECTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Collections",
                  "safeName": "Collections"
                }
              },
              "wireValue": "collections"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
                          "safeName": "v3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items",
                          "safeName": "v_3_api_key_get_collections_for_owner_get_responses_content_application_json_schema_collections_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS",
                          "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_COLLECTIONS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
                          "safeName": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollectionsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaCollections_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalCount",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "totalCount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFT collections held by the given address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyGetCollectionsForOwnerGetResponsesContentApplicationJsonSchemaTotalCount_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Ownership Endpoints_getCollectionsForOwner-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT Metadata Endpoints_refreshNftMetadata-v3_Response_200": {
      "name": {
        "typeId": "NFT Metadata Endpoints_refreshNftMetadata-v3_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT Metadata Endpoints_refreshNftMetadata-v3_Response_200",
          "camelCase": {
            "unsafeName": "nftMetadataEndpointsRefreshNftMetadataV3Response200",
            "safeName": "nftMetadataEndpointsRefreshNftMetadataV3Response200"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints_refresh_nft_metadata_v_3_response_200",
            "safeName": "nft_metadata_endpoints_refresh_nft_metadata_v_3_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS_REFRESH_NFT_METADATA_V_3_RESPONSE_200",
            "safeName": "NFT_METADATA_ENDPOINTS_REFRESH_NFT_METADATA_V_3_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpointsRefreshNftMetadataV3Response200",
            "safeName": "NftMetadataEndpointsRefreshNftMetadataV3Response200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "If the token is successfully queued for ingestion the value will be \"Queued\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyRefreshNftMetadataPostResponsesContentApplicationJsonSchemaStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "estimatedMsToRefresh",
                "camelCase": {
                  "unsafeName": "estimatedMsToRefresh",
                  "safeName": "estimatedMsToRefresh"
                },
                "snakeCase": {
                  "unsafeName": "estimated_ms_to_refresh",
                  "safeName": "estimated_ms_to_refresh"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ESTIMATED_MS_TO_REFRESH",
                  "safeName": "ESTIMATED_MS_TO_REFRESH"
                },
                "pascalCase": {
                  "unsafeName": "EstimatedMsToRefresh",
                  "safeName": "EstimatedMsToRefresh"
                }
              },
              "wireValue": "estimatedMsToRefresh"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Estimated time until the metadata refresh is complete for this token.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V3ApiKeyRefreshNftMetadataPostResponsesContentApplicationJsonSchemaEstimatedMsToRefresh_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT Metadata Endpoints_refreshNftMetadata-v3_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetParametersOrderBy": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetParametersOrderBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetParametersOrderBy",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetParametersOrderBy",
            "safeName": "v2ApiKeyGetNfTsGetParametersOrderBy"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_order_by",
            "safeName": "v_2_api_key_get_nf_ts_get_parameters_order_by"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_ORDER_BY",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_ORDER_BY"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetParametersOrderBy",
            "safeName": "V2ApiKeyGetNfTsGetParametersOrderBy"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "transferTime",
                "camelCase": {
                  "unsafeName": "transferTime",
                  "safeName": "transferTime"
                },
                "snakeCase": {
                  "unsafeName": "transfer_time",
                  "safeName": "transfer_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSFER_TIME",
                  "safeName": "TRANSFER_TIME"
                },
                "pascalCase": {
                  "unsafeName": "TransferTime",
                  "safeName": "TransferTime"
                }
              },
              "wireValue": "transferTime"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetParametersOrderBy_example_autogenerated": "transferTime"
        }
      }
    },
    "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
            "safeName": "v2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_exclude_filters_schema_items",
            "safeName": "v_2_api_key_get_nf_ts_get_parameters_exclude_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
            "safeName": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
            "safeName": "v2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_include_filters_schema_items",
            "safeName": "v_2_api_key_get_nf_ts_get_parameters_include_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
            "safeName": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
            "safeName": "v2ApiKeyGetNfTsGetParametersSpamConfidenceLevel"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_spam_confidence_level",
            "safeName": "v_2_api_key_get_nf_ts_get_parameters_spam_confidence_level"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
            "safeName": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "VERY_HIGH",
                "camelCase": {
                  "unsafeName": "veryHigh",
                  "safeName": "veryHigh"
                },
                "snakeCase": {
                  "unsafeName": "very_high",
                  "safeName": "very_high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERY_HIGH",
                  "safeName": "VERY_HIGH"
                },
                "pascalCase": {
                  "unsafeName": "VeryHigh",
                  "safeName": "VeryHigh"
                }
              },
              "wireValue": "VERY_HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "HIGH",
                "camelCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "snakeCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGH",
                  "safeName": "HIGH"
                },
                "pascalCase": {
                  "unsafeName": "High",
                  "safeName": "High"
                }
              },
              "wireValue": "HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "MEDIUM",
                "camelCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "snakeCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIUM",
                  "safeName": "MEDIUM"
                },
                "pascalCase": {
                  "unsafeName": "Medium",
                  "safeName": "Medium"
                }
              },
              "wireValue": "MEDIUM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "LOW",
                "camelCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "snakeCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOW",
                  "safeName": "LOW"
                },
                "pascalCase": {
                  "unsafeName": "Low",
                  "safeName": "Low"
                }
              },
              "wireValue": "LOW"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel_example_autogenerated": "VERY_HIGH"
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address of NFT contract.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractAddress_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object - Contract for returned NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata_token_type",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata_token_type",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsIdTokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_token_uri",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_token_uri"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_TOKEN_URI",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_TOKEN_URI"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUriRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUriGateway_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_media",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_media"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_MEDIA",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_MEDIA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMediaRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMediaGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMediaThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMediaFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMediaBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_attributes_items",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_media_items",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_MEDIA_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "external_url",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "external_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The image URL that appears alongside the asset image on NFT platforms.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "background_color",
                "camelCase": {
                  "unsafeName": "backgroundColor",
                  "safeName": "backgroundColor"
                },
                "snakeCase": {
                  "unsafeName": "background_color",
                  "safeName": "background_color"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BACKGROUND_COLOR",
                  "safeName": "BACKGROUND_COLOR"
                },
                "pascalCase": {
                  "unsafeName": "BackgroundColor",
                  "safeName": "BackgroundColor"
                }
              },
              "wireValue": "background_color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataBackgroundColor_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
                          "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_attributes_items",
                          "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
                          "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
                          "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_media_items",
                          "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_MEDIA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
                          "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_token_type",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_opensea",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_token_type",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_opensea",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_spam_info",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_spam_info"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_SPAM_INFO",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_SPAM_INFO"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfoIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfoSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Information about whether and why a contract was marked as spam.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_acquired_at",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
            "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items",
            "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
            "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Contract for returned NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsId_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "balance",
                "camelCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "snakeCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BALANCE",
                  "safeName": "BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "Balance",
                  "safeName": "Balance"
                }
              },
              "wireValue": "balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Token balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsBalance_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "title",
                "camelCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "snakeCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TITLE",
                  "safeName": "TITLE"
                },
                "pascalCase": {
                  "unsafeName": "Title",
                  "safeName": "Title"
                }
              },
              "wireValue": "title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTitle_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_token_uri",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_token_uri"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_TOKEN_URI",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_TOKEN_URI"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTokenUri_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_media",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_media"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_MEDIA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_MEDIA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMedia_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsError_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsContractMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamInfo",
                "camelCase": {
                  "unsafeName": "spamInfo",
                  "safeName": "spamInfo"
                },
                "snakeCase": {
                  "unsafeName": "spam_info",
                  "safeName": "spam_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_INFO",
                  "safeName": "SPAM_INFO"
                },
                "pascalCase": {
                  "unsafeName": "SpamInfo",
                  "safeName": "SpamInfo"
                }
              },
              "wireValue": "spamInfo"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_spam_info",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_spam_info"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_SPAM_INFO",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_SPAM_INFO"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Information about whether and why a contract was marked as spam.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsSpamInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                      "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_acquired_at",
                      "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT",
                      "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                      "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItemsAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getNFTs_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getNFTs_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getNFTs_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetNfTsResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetNfTsResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_nf_ts_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_nf_ts_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetNfTsResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetNfTsResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "ownedNfts",
                "camelCase": {
                  "unsafeName": "ownedNfts",
                  "safeName": "ownedNfts"
                },
                "snakeCase": {
                  "unsafeName": "owned_nfts",
                  "safeName": "owned_nfts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OWNED_NFTS",
                  "safeName": "OWNED_NFTS"
                },
                "pascalCase": {
                  "unsafeName": "OwnedNfts",
                  "safeName": "OwnedNfts"
                }
              },
              "wireValue": "ownedNfts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                          "safeName": "v2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items",
                          "safeName": "v_2_api_key_get_nf_ts_get_responses_content_application_json_schema_owned_nfts_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NF_TS_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_OWNED_NFTS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                          "safeName": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNftsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaOwnedNfts_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalCount",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "totalCount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - Total number of NFTs (distinct `tokenIds`) owned by the given address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaTotalCount_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The canonical head block hash of when your request was received i.e. the block corresponding to `latest`",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsGetResponsesContentApplicationJsonSchemaBlockHash_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getNFTs_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address of NFT contract.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractAddress_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object - Contract for returned NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata_token_type",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata_token_type",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaIdTokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_token_uri",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_token_uri"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_URI",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_URI"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUriRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUriGateway_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_media",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_media"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_MEDIA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_MEDIA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMediaRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMediaGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMediaThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMediaFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMediaBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_attributes_items",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_media_items",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_MEDIA_ITEMS",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "external_url",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "external_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The image URL that appears alongside the asset image on NFT platforms.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "background_color",
                "camelCase": {
                  "unsafeName": "backgroundColor",
                  "safeName": "backgroundColor"
                },
                "snakeCase": {
                  "unsafeName": "background_color",
                  "safeName": "background_color"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BACKGROUND_COLOR",
                  "safeName": "BACKGROUND_COLOR"
                },
                "pascalCase": {
                  "unsafeName": "BackgroundColor",
                  "safeName": "BackgroundColor"
                }
              },
              "wireValue": "background_color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataBackgroundColor_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
                          "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_attributes_items",
                          "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
                          "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
                          "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_media_items",
                          "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_MEDIA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
                          "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_token_type",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_opensea",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_token_type",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_opensea",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_spam_info",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_spam_info"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SPAM_INFO",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SPAM_INFO"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfoIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfoSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Information about whether and why a contract was marked as spam.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
            "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at",
            "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
            "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getNFTMetadata_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getNFTMetadata_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getNFTMetadata_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetNftMetadataResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetNftMetadataResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_nft_metadata_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_nft_metadata_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_METADATA_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_METADATA_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetNftMetadataResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetNftMetadataResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Contract for returned NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaId_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "balance",
                "camelCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "snakeCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BALANCE",
                  "safeName": "BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "Balance",
                  "safeName": "Balance"
                }
              },
              "wireValue": "balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Token balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaBalance_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "title",
                "camelCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "snakeCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TITLE",
                  "safeName": "TITLE"
                },
                "pascalCase": {
                  "unsafeName": "Title",
                  "safeName": "Title"
                }
              },
              "wireValue": "title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTitle_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_token_uri",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_token_uri"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_URI",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_TOKEN_URI"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTokenUri_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_media",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_media"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_MEDIA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_MEDIA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMedia_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaError_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaContractMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamInfo",
                "camelCase": {
                  "unsafeName": "spamInfo",
                  "safeName": "spamInfo"
                },
                "snakeCase": {
                  "unsafeName": "spam_info",
                  "safeName": "spam_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_INFO",
                  "safeName": "SPAM_INFO"
                },
                "pascalCase": {
                  "unsafeName": "SpamInfo",
                  "safeName": "SpamInfo"
                }
              },
              "wireValue": "spamInfo"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_spam_info",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_spam_info"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SPAM_INFO",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SPAM_INFO"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Information about whether and why a contract was marked as spam.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaSpamInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                      "safeName": "v2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at",
                      "safeName": "v_2_api_key_get_nft_metadata_get_responses_content_application_json_schema_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                      "safeName": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataGetResponsesContentApplicationJsonSchemaAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getNFTMetadata_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contractAddress",
                "camelCase": {
                  "unsafeName": "contractAddress",
                  "safeName": "contractAddress"
                },
                "snakeCase": {
                  "unsafeName": "contract_address",
                  "safeName": "contract_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESS",
                  "safeName": "CONTRACT_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddress",
                  "safeName": "ContractAddress"
                }
              },
              "wireValue": "contractAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItemsContractAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItemsTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItemsTokenType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address of NFT contract.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractAddress_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object - Contract for returned NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata_token_type",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata_token_type",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsIdTokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_token_uri",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_token_uri"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_URI",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_URI"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUriRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUriGateway_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_media",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_media"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_MEDIA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_MEDIA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMediaRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMediaGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMediaThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMediaFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMediaBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_attributes_items",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_media_items",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_MEDIA_ITEMS",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "external_url",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "external_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The image URL that appears alongside the asset image on NFT platforms.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "background_color",
                "camelCase": {
                  "unsafeName": "backgroundColor",
                  "safeName": "backgroundColor"
                },
                "snakeCase": {
                  "unsafeName": "background_color",
                  "safeName": "background_color"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BACKGROUND_COLOR",
                  "safeName": "BACKGROUND_COLOR"
                },
                "pascalCase": {
                  "unsafeName": "BackgroundColor",
                  "safeName": "BackgroundColor"
                }
              },
              "wireValue": "background_color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataBackgroundColor_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
                          "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_attributes_items",
                          "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
                          "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
                          "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_media_items",
                          "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_MEDIA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
                          "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_token_type",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_token_type",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_spam_info",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_spam_info"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_SPAM_INFO",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_SPAM_INFO"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "\"true\" if contract is spam, else \"false\". **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfoIsSpam_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamClassifications",
                "camelCase": {
                  "unsafeName": "spamClassifications",
                  "safeName": "spamClassifications"
                },
                "snakeCase": {
                  "unsafeName": "spam_classifications",
                  "safeName": "spam_classifications"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_CLASSIFICATIONS",
                  "safeName": "SPAM_CLASSIFICATIONS"
                },
                "pascalCase": {
                  "unsafeName": "SpamClassifications",
                  "safeName": "SpamClassifications"
                }
              },
              "wireValue": "spamClassifications"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of reasons why a contract was classified as spam. **Only available on paid tiers.**",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfoSpamClassifications_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Information about whether and why a contract was marked as spam.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockTimestamp",
                "camelCase": {
                  "unsafeName": "blockTimestamp",
                  "safeName": "blockTimestamp"
                },
                "snakeCase": {
                  "unsafeName": "block_timestamp",
                  "safeName": "block_timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_TIMESTAMP",
                  "safeName": "BLOCK_TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "BlockTimestamp",
                  "safeName": "BlockTimestamp"
                }
              },
              "wireValue": "blockTimestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block timestamp of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAtBlockTimestamp_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Block number of the block where the NFT was most recently acquired.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAtBlockNumber_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Only present if the request specified `orderBy=transferTime`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems": {
      "name": {
        "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items",
            "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
            "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contract",
                "camelCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "snakeCase": {
                  "unsafeName": "contract",
                  "safeName": "contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT",
                  "safeName": "CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "Contract",
                  "safeName": "Contract"
                }
              },
              "wireValue": "contract"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Contract for returned NFT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContract_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsId_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "balance",
                "camelCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "snakeCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BALANCE",
                  "safeName": "BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "Balance",
                  "safeName": "Balance"
                }
              },
              "wireValue": "balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Token balance",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsBalance_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "title",
                "camelCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "snakeCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TITLE",
                  "safeName": "TITLE"
                },
                "pascalCase": {
                  "unsafeName": "Title",
                  "safeName": "Title"
                }
              },
              "wireValue": "title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTitle_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Brief human-readable description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_token_uri",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_token_uri"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_URI",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_TOKEN_URI"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTokenUri_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_media",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_media"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_MEDIA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_MEDIA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMedia_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsError_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "spamInfo",
                "camelCase": {
                  "unsafeName": "spamInfo",
                  "safeName": "spamInfo"
                },
                "snakeCase": {
                  "unsafeName": "spam_info",
                  "safeName": "spam_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM_INFO",
                  "safeName": "SPAM_INFO"
                },
                "pascalCase": {
                  "unsafeName": "SpamInfo",
                  "safeName": "SpamInfo"
                }
              },
              "wireValue": "spamInfo"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_spam_info",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_spam_info"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_SPAM_INFO",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_SPAM_INFO"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Information about whether and why a contract was marked as spam.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsSpamInfo_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acquiredAt",
                "camelCase": {
                  "unsafeName": "acquiredAt",
                  "safeName": "acquiredAt"
                },
                "snakeCase": {
                  "unsafeName": "acquired_at",
                  "safeName": "acquired_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACQUIRED_AT",
                  "safeName": "ACQUIRED_AT"
                },
                "pascalCase": {
                  "unsafeName": "AcquiredAt",
                  "safeName": "AcquiredAt"
                }
              },
              "wireValue": "acquiredAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                      "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at",
                      "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items_acquired_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT",
                      "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_ACQUIRED_AT"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                      "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Only present if the request specified `orderBy=transferTime`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAcquiredAt_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents an NFT and has all data corresponding to that NFT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
            "safeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_token_type",
            "safeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
            "safeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea": {
      "name": {
        "typeId": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
            "safeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_opensea",
            "safeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
            "safeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
            "safeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata",
            "safeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA",
            "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
            "safeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                      "safeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_token_type",
                      "safeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                      "safeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                      "safeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_opensea",
                      "safeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                      "safeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea"
                    }
                  },
                  "typeId": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getContractMetadata_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getContractMetadata_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getContractMetadata_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetContractMetadataResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetContractMetadataResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_contract_metadata_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_contract_metadata_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACT_METADATA_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACT_METADATA_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetContractMetadataResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetContractMetadataResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Contract address for the queried NFT collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                      "safeName": "v2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata",
                      "safeName": "v_2_api_key_get_contract_metadata_get_responses_content_application_json_schema_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA",
                      "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                      "safeName": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataGetResponsesContentApplicationJsonSchemaContractMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getContractMetadata_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems": {
      "name": {
        "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
            "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_media_items",
            "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_MEDIA_ITEMS",
            "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
            "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea": {
      "name": {
        "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
            "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea",
            "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
            "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
            "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata",
            "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA",
            "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
            "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalBalance",
                "camelCase": {
                  "unsafeName": "totalBalance",
                  "safeName": "totalBalance"
                },
                "snakeCase": {
                  "unsafeName": "total_balance",
                  "safeName": "total_balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_BALANCE",
                  "safeName": "TOTAL_BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "TotalBalance",
                  "safeName": "TotalBalance"
                }
              },
              "wireValue": "totalBalance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sum of NFT balances across all token IDs held by the owner. For non-fungible tokens this will be equal to the `numDistinctTokensOwned`, but it may be higher if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTotalBalance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numDistinctTokensOwned",
                "camelCase": {
                  "unsafeName": "numDistinctTokensOwned",
                  "safeName": "numDistinctTokensOwned"
                },
                "snakeCase": {
                  "unsafeName": "num_distinct_tokens_owned",
                  "safeName": "num_distinct_tokens_owned"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_DISTINCT_TOKENS_OWNED",
                  "safeName": "NUM_DISTINCT_TOKENS_OWNED"
                },
                "pascalCase": {
                  "unsafeName": "NumDistinctTokensOwned",
                  "safeName": "NumDistinctTokensOwned"
                }
              },
              "wireValue": "numDistinctTokensOwned"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of distinct token IDs held by the owner. For non-fungible tokens this will be equal to the `totalBalance`, but it may be lower if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataNumDistinctTokensOwned_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataIsSpam_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "One of the tokens from this contract held by the owner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the contract, i.e. \"Bored Ape Yacht Club\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "title",
                "camelCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "snakeCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TITLE",
                  "safeName": "TITLE"
                },
                "pascalCase": {
                  "unsafeName": "Title",
                  "safeName": "Title"
                }
              },
              "wireValue": "title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The title of the token held by the owner i.e. \"Something #22\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTitle_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The symbol of the contract, i.e. BAYC.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The NFT standard used by the contract, i.e. ERC721 or ERC1155.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
                          "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_media_items",
                          "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_MEDIA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
                          "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                      "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea",
                      "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                      "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
                    }
                  },
                  "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents a smart contract and has all data corresponding to that contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems": {
      "name": {
        "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items",
            "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
            "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
            "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                      "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata",
                      "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA",
                      "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                      "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The object that represents a smart contract and has all data corresponding to that contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItemsContractMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "44",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenId_example_autogenerated": "44"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenMetadata",
                "camelCase": {
                  "unsafeName": "tokenMetadata",
                  "safeName": "tokenMetadata"
                },
                "snakeCase": {
                  "unsafeName": "token_metadata",
                  "safeName": "token_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_METADATA",
                  "safeName": "TOKEN_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "TokenMetadata",
                  "safeName": "TokenMetadata"
                }
              },
              "wireValue": "tokenMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id_token_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID_TOKEN_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsIdTokenMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUriRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUriGateway_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItemsTraitType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                }
              },
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataImage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "external_url",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "external_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The image URL that appears alongside the asset image on NFT platforms.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "background_color",
                "camelCase": {
                  "unsafeName": "backgroundColor",
                  "safeName": "backgroundColor"
                },
                "snakeCase": {
                  "unsafeName": "background_color",
                  "safeName": "background_color"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BACKGROUND_COLOR",
                  "safeName": "BACKGROUND_COLOR"
                },
                "pascalCase": {
                  "unsafeName": "BackgroundColor",
                  "safeName": "BackgroundColor"
                }
              },
              "wireValue": "background_color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataBackgroundColor_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Name of the NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "attributes",
                "camelCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "snakeCase": {
                  "unsafeName": "attributes",
                  "safeName": "attributes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ATTRIBUTES",
                  "safeName": "ATTRIBUTES"
                },
                "pascalCase": {
                  "unsafeName": "Attributes",
                  "safeName": "Attributes"
                }
              },
              "wireValue": "attributes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                          "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items",
                          "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_attributes_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_ATTRIBUTES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                          "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object - Traits/attributes/characteristics for each NFT asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataAttributes_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                          "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items",
                          "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                          "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadataMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems": {
      "name": {
        "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
            "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items",
            "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS",
            "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
            "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsId_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenUri",
                "camelCase": {
                  "unsafeName": "tokenUri",
                  "safeName": "tokenUri"
                },
                "snakeCase": {
                  "unsafeName": "token_uri",
                  "safeName": "token_uri"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_URI",
                  "safeName": "TOKEN_URI"
                },
                "pascalCase": {
                  "unsafeName": "TokenUri",
                  "safeName": "TokenUri"
                }
              },
              "wireValue": "tokenUri"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_token_uri"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_TOKEN_URI"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTokenUri_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timeLastUpdated",
                "camelCase": {
                  "unsafeName": "timeLastUpdated",
                  "safeName": "timeLastUpdated"
                },
                "snakeCase": {
                  "unsafeName": "time_last_updated",
                  "safeName": "time_last_updated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME_LAST_UPDATED",
                  "safeName": "TIME_LAST_UPDATED"
                },
                "pascalCase": {
                  "unsafeName": "TimeLastUpdated",
                  "safeName": "TimeLastUpdated"
                }
              },
              "wireValue": "timeLastUpdated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - ISO timestamp of the last cache refresh for the information returned in the metadata field.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsTimeLastUpdated_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                      "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata",
                      "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA",
                      "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                      "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata"
                    }
                  },
                  "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItemsContractMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getNFTsForCollection_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getNFTsForCollection_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getNFTsForCollection_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_nf_ts_for_collection_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_nf_ts_for_collection_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_FOR_COLLECTION_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_FOR_COLLECTION_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "nfts",
                "camelCase": {
                  "unsafeName": "nfts",
                  "safeName": "nfts"
                },
                "snakeCase": {
                  "unsafeName": "nfts",
                  "safeName": "nfts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NFTS",
                  "safeName": "NFTS"
                },
                "pascalCase": {
                  "unsafeName": "Nfts",
                  "safeName": "Nfts"
                }
              },
              "wireValue": "nfts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                          "safeName": "v2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items",
                          "safeName": "v_2_api_key_get_nf_ts_for_collection_get_responses_content_application_json_schema_nfts_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NF_TS_FOR_COLLECTION_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFTS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                          "safeName": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNftsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of objects that represent NFTs stored under the queried contract address or collection slug.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNfts_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nextToken",
                "camelCase": {
                  "unsafeName": "nextToken",
                  "safeName": "nextToken"
                },
                "snakeCase": {
                  "unsafeName": "next_token",
                  "safeName": "next_token"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NEXT_TOKEN",
                  "safeName": "NEXT_TOKEN"
                },
                "pascalCase": {
                  "unsafeName": "NextToken",
                  "safeName": "NextToken"
                }
              },
              "wireValue": "nextToken"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - An offset used for pagination. Can be passed back as the \"startToken\" of a subsequent request to get the next page of results. Absent if there are no more results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNfTsForCollectionGetResponsesContentApplicationJsonSchemaNextToken_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getNFTsForCollection_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getOwnersForToken_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getOwnersForToken_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getOwnersForToken_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetOwnersForTokenResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetOwnersForTokenResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_owners_for_token_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_owners_for_token_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_OWNERS_FOR_TOKEN_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_OWNERS_FOR_TOKEN_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetOwnersForTokenResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetOwnersForTokenResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "owners",
                "camelCase": {
                  "unsafeName": "owners",
                  "safeName": "owners"
                },
                "snakeCase": {
                  "unsafeName": "owners",
                  "safeName": "owners"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OWNERS",
                  "safeName": "OWNERS"
                },
                "pascalCase": {
                  "unsafeName": "Owners",
                  "safeName": "Owners"
                }
              },
              "wireValue": "owners"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of all addresses that own the given NFT.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetOwnersForTokenGetResponsesContentApplicationJsonSchemaOwners_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getOwnersForToken_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getSpamContracts_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getSpamContracts_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getSpamContracts_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetSpamContractsResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetSpamContractsResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_spam_contracts_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_spam_contracts_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_SPAM_CONTRACTS_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_SPAM_CONTRACTS_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetSpamContractsResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetSpamContractsResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contractAddresses",
                "camelCase": {
                  "unsafeName": "contractAddresses",
                  "safeName": "contractAddresses"
                },
                "snakeCase": {
                  "unsafeName": "contract_addresses",
                  "safeName": "contract_addresses"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESSES",
                  "safeName": "CONTRACT_ADDRESSES"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddresses",
                  "safeName": "ContractAddresses"
                }
              },
              "wireValue": "contractAddresses"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "A list of contract addresses earmarked as spam by Alchemy.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetSpamContractsGetResponsesContentApplicationJsonSchemaContractAddresses_example_autogenerated": [
                  "foo"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object that has list of contract addresses",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getSpamContracts_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_invalidateContract_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_invalidateContract_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_invalidateContract_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionInvalidateContractResponse200",
            "safeName": "nftApiV2MethodsOlderVersionInvalidateContractResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_invalidate_contract_response_200",
            "safeName": "nft_api_v_2_methods_older_version_invalidate_contract_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_INVALIDATE_CONTRACT_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_INVALIDATE_CONTRACT_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionInvalidateContractResponse200",
            "safeName": "NftApiV2MethodsOlderVersionInvalidateContractResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "success",
                "camelCase": {
                  "unsafeName": "success",
                  "safeName": "success"
                },
                "snakeCase": {
                  "unsafeName": "success",
                  "safeName": "success"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUCCESS",
                  "safeName": "SUCCESS"
                },
                "pascalCase": {
                  "unsafeName": "Success",
                  "safeName": "Success"
                }
              },
              "wireValue": "success"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "<br /> True if the contract was invalidated. <br/> False - if it wasn't.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyInvalidateContractGetResponsesContentApplicationJsonSchemaSuccess_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numTokensInvalidated",
                "camelCase": {
                  "unsafeName": "numTokensInvalidated",
                  "safeName": "numTokensInvalidated"
                },
                "snakeCase": {
                  "unsafeName": "num_tokens_invalidated",
                  "safeName": "num_tokens_invalidated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_TOKENS_INVALIDATED",
                  "safeName": "NUM_TOKENS_INVALIDATED"
                },
                "pascalCase": {
                  "unsafeName": "NumTokensInvalidated",
                  "safeName": "NumTokensInvalidated"
                }
              },
              "wireValue": "numTokensInvalidated"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The number of tokens that were invalidated as a result of running this query.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyInvalidateContractGetResponsesContentApplicationJsonSchemaNumTokensInvalidated_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "<br/> True - if the queried contract is marked as spam. <br/> False - if the queried contract is considered valid.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_invalidateContract_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency": {
      "name": {
        "typeId": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
            "safeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_price_currency",
            "safeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_price_currency"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_PRICE_CURRENCY",
            "safeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_PRICE_CURRENCY"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
            "safeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ETH",
                "camelCase": {
                  "unsafeName": "eth",
                  "safeName": "eth"
                },
                "snakeCase": {
                  "unsafeName": "eth",
                  "safeName": "eth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH",
                  "safeName": "ETH"
                },
                "pascalCase": {
                  "unsafeName": "Eth",
                  "safeName": "Eth"
                }
              },
              "wireValue": "ETH"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - The currency in which the floor price is denominated. Typically, denominated in ETH",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency_example_autogenerated": "ETH"
        }
      }
    },
    "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace": {
      "name": {
        "typeId": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
            "safeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace",
            "safeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE",
            "safeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
            "safeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The floor price of the collection on the given marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "priceCurrency",
                "camelCase": {
                  "unsafeName": "priceCurrency",
                  "safeName": "priceCurrency"
                },
                "snakeCase": {
                  "unsafeName": "price_currency",
                  "safeName": "price_currency"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PRICE_CURRENCY",
                  "safeName": "PRICE_CURRENCY"
                },
                "pascalCase": {
                  "unsafeName": "PriceCurrency",
                  "safeName": "PriceCurrency"
                }
              },
              "wireValue": "priceCurrency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
                      "safeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_price_currency",
                      "safeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace_price_currency"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_PRICE_CURRENCY",
                      "safeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE_PRICE_CURRENCY"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
                      "safeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency"
                    }
                  },
                  "typeId": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The currency in which the floor price is denominated. Typically, denominated in ETH",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplacePriceCurrency_example_autogenerated": "ETH"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionUrl",
                "camelCase": {
                  "unsafeName": "collectionUrl",
                  "safeName": "collectionUrl"
                },
                "snakeCase": {
                  "unsafeName": "collection_url",
                  "safeName": "collection_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_URL",
                  "safeName": "COLLECTION_URL"
                },
                "pascalCase": {
                  "unsafeName": "CollectionUrl",
                  "safeName": "CollectionUrl"
                }
              },
              "wireValue": "collectionUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Link to the collection on the given marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceCollectionUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "retrievedAt",
                "camelCase": {
                  "unsafeName": "retrievedAt",
                  "safeName": "retrievedAt"
                },
                "snakeCase": {
                  "unsafeName": "retrieved_at",
                  "safeName": "retrieved_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RETRIEVED_AT",
                  "safeName": "RETRIEVED_AT"
                },
                "pascalCase": {
                  "unsafeName": "RetrievedAt",
                  "safeName": "RetrievedAt"
                }
              },
              "wireValue": "retrievedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - UTC timestamp of when the floor price was retrieved from the marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceRetrievedAt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Returns an error if there was an error fetching floor prices from the given marketplace.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplaceError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Name of the NFT marketplace where the collection is listed. Current marketplaces supported -  OpenSea, LooksRare",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getFloorPrice_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getFloorPrice_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getFloorPrice_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetFloorPriceResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetFloorPriceResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_floor_price_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_floor_price_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_FLOOR_PRICE_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_FLOOR_PRICE_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetFloorPriceResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetFloorPriceResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "nftMarketplace",
                "camelCase": {
                  "unsafeName": "nftMarketplace",
                  "safeName": "nftMarketplace"
                },
                "snakeCase": {
                  "unsafeName": "nft_marketplace",
                  "safeName": "nft_marketplace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NFT_MARKETPLACE",
                  "safeName": "NFT_MARKETPLACE"
                },
                "pascalCase": {
                  "unsafeName": "NftMarketplace",
                  "safeName": "NftMarketplace"
                }
              },
              "wireValue": "nftMarketplace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
                      "safeName": "v2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace",
                      "safeName": "v_2_api_key_get_floor_price_get_responses_content_application_json_schema_nft_marketplace"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE",
                      "safeName": "V_2_API_KEY_GET_FLOOR_PRICE_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_MARKETPLACE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
                      "safeName": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace"
                    }
                  },
                  "typeId": "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the NFT marketplace where the collection is listed. Current marketplaces supported -  OpenSea, LooksRare",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetFloorPriceGetResponsesContentApplicationJsonSchemaNftMarketplace_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getFloorPrice_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems": {
      "name": {
        "typeId": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
            "safeName": "v2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items",
            "safeName": "v_2_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS",
            "safeName": "V_2_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
            "safeName": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "trait_type",
                "camelCase": {
                  "unsafeName": "traitType",
                  "safeName": "traitType"
                },
                "snakeCase": {
                  "unsafeName": "trait_type",
                  "safeName": "trait_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRAIT_TYPE",
                  "safeName": "TRAIT_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TraitType",
                  "safeName": "TraitType"
                }
              },
              "wireValue": "trait_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Name of the trait category, i.e. Hat, Color, Face, etc.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItemsTraitType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Value for the trait, i.e. White Cap, Blue, Angry, etc.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItemsValue_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "prevalence",
                "camelCase": {
                  "unsafeName": "prevalence",
                  "safeName": "prevalence"
                },
                "snakeCase": {
                  "unsafeName": "prevalence",
                  "safeName": "prevalence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREVALENCE",
                  "safeName": "PREVALENCE"
                },
                "pascalCase": {
                  "unsafeName": "Prevalence",
                  "safeName": "Prevalence"
                }
              },
              "wireValue": "prevalence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Floating point value from 0 to 1 representing the prevalence of this value for this trait type.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItemsPrevalence_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_computeRarity_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_computeRarity_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_computeRarity_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionComputeRarityResponse200",
            "safeName": "nftApiV2MethodsOlderVersionComputeRarityResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_compute_rarity_response_200",
            "safeName": "nft_api_v_2_methods_older_version_compute_rarity_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_COMPUTE_RARITY_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_COMPUTE_RARITY_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionComputeRarityResponse200",
            "safeName": "NftApiV2MethodsOlderVersionComputeRarityResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "rarities",
                "camelCase": {
                  "unsafeName": "rarities",
                  "safeName": "rarities"
                },
                "snakeCase": {
                  "unsafeName": "rarities",
                  "safeName": "rarities"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RARITIES",
                  "safeName": "RARITIES"
                },
                "pascalCase": {
                  "unsafeName": "Rarities",
                  "safeName": "Rarities"
                }
              },
              "wireValue": "rarities"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                          "safeName": "v2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items",
                          "safeName": "v_2_api_key_compute_rarity_get_responses_content_application_json_schema_rarities_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS",
                          "safeName": "V_2_API_KEY_COMPUTE_RARITY_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_RARITIES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                          "safeName": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems"
                        }
                      },
                      "typeId": "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRaritiesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT attributes and their associated prevalence.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyComputeRarityGetResponsesContentApplicationJsonSchemaRarities_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object containing the rarity info of the collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_computeRarity_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType": {
      "name": {
        "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
          "camelCase": {
            "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
            "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_token_type",
            "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_token_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
            "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
            "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "ERC721",
                "camelCase": {
                  "unsafeName": "erc721",
                  "safeName": "erc721"
                },
                "snakeCase": {
                  "unsafeName": "erc_721",
                  "safeName": "erc_721"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_721",
                  "safeName": "ERC_721"
                },
                "pascalCase": {
                  "unsafeName": "Erc721",
                  "safeName": "Erc721"
                }
              },
              "wireValue": "ERC721"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "ERC1155",
                "camelCase": {
                  "unsafeName": "erc1155",
                  "safeName": "erc1155"
                },
                "snakeCase": {
                  "unsafeName": "erc_1155",
                  "safeName": "erc_1155"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERC_1155",
                  "safeName": "ERC_1155"
                },
                "pascalCase": {
                  "unsafeName": "Erc1155",
                  "safeName": "Erc1155"
                }
              },
              "wireValue": "ERC1155"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NO_SUPPORTED_NFT_STANDARD",
                "camelCase": {
                  "unsafeName": "noSupportedNftStandard",
                  "safeName": "noSupportedNftStandard"
                },
                "snakeCase": {
                  "unsafeName": "no_supported_nft_standard",
                  "safeName": "no_supported_nft_standard"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NO_SUPPORTED_NFT_STANDARD",
                  "safeName": "NO_SUPPORTED_NFT_STANDARD"
                },
                "pascalCase": {
                  "unsafeName": "NoSupportedNftStandard",
                  "safeName": "NoSupportedNftStandard"
                }
              },
              "wireValue": "NO_SUPPORTED_NFT_STANDARD"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "NOT_A_CONTRACT",
                "camelCase": {
                  "unsafeName": "notAContract",
                  "safeName": "notAContract"
                },
                "snakeCase": {
                  "unsafeName": "not_a_contract",
                  "safeName": "not_a_contract"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOT_A_CONTRACT",
                  "safeName": "NOT_A_CONTRACT"
                },
                "pascalCase": {
                  "unsafeName": "NotAContract",
                  "safeName": "NotAContract"
                }
              },
              "wireValue": "NOT_A_CONTRACT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType_example_autogenerated": "ERC721"
        }
      }
    },
    "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea": {
      "name": {
        "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
            "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_opensea",
            "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA",
            "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
            "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata": {
      "name": {
        "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
          "camelCase": {
            "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
            "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata",
            "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA",
            "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
            "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - NFT contract symbol abbreviation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                    "camelCase": {
                      "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                      "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_token_type",
                      "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_token_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE",
                      "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_TOKEN_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                      "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType"
                    }
                  },
                  "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - For valid NFTs, 'ERC721' or 'ERC1155.' For invalid NFTs, a descriptive reason such as 'NO_SUPPORTED_NFT_STANDARD' if the input contract address doesn't support a known NFT standard, or 'NOT_A_CONTRACT' if there is no contract deployed at the input address.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataTokenType_example_autogenerated": "ERC721"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                      "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_opensea",
                      "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA",
                      "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                      "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea"
                    }
                  },
                  "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadataOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems": {
      "name": {
        "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
            "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items",
            "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
            "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
            "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractMetadata",
                "camelCase": {
                  "unsafeName": "contractMetadata",
                  "safeName": "contractMetadata"
                },
                "snakeCase": {
                  "unsafeName": "contract_metadata",
                  "safeName": "contract_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_METADATA",
                  "safeName": "CONTRACT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ContractMetadata",
                  "safeName": "ContractMetadata"
                }
              },
              "wireValue": "contractMetadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
                    "camelCase": {
                      "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
                      "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata",
                      "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items_contract_metadata"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA",
                      "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS_CONTRACT_METADATA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
                      "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata"
                    }
                  },
                  "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItemsContractMetadata_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary": {
      "name": {
        "typeId": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
          "camelCase": {
            "unsafeName": "v2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
            "safeName": "v2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary",
            "safeName": "v_2_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY",
            "safeName": "V_2_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
            "safeName": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Object mapping trait types to the prevalence of each trait within that type.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_summarizeNFTAttributes_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_summarizeNFTAttributes_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_summarizeNFTAttributes_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200",
            "safeName": "nftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_summarize_nft_attributes_response_200",
            "safeName": "nft_api_v_2_methods_older_version_summarize_nft_attributes_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_SUMMARIZE_NFT_ATTRIBUTES_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_SUMMARIZE_NFT_ATTRIBUTES_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200",
            "safeName": "NftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "totalSupply",
                "camelCase": {
                  "unsafeName": "totalSupply",
                  "safeName": "totalSupply"
                },
                "snakeCase": {
                  "unsafeName": "total_supply",
                  "safeName": "total_supply"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_SUPPLY",
                  "safeName": "TOTAL_SUPPLY"
                },
                "pascalCase": {
                  "unsafeName": "TotalSupply",
                  "safeName": "TotalSupply"
                }
              },
              "wireValue": "totalSupply"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFTs in a given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaTotalSupply_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                }
              },
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                    "camelCase": {
                      "unsafeName": "v2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                      "safeName": "v2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary",
                      "safeName": "v_2_api_key_summarize_nft_attributes_get_responses_content_application_json_schema_summary"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY",
                      "safeName": "V_2_API_KEY_SUMMARIZE_NFT_ATTRIBUTES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_SUMMARY"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                      "safeName": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary"
                    }
                  },
                  "typeId": "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Object mapping trait types to the prevalence of each trait within that type.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaSummary_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractAddress",
                "camelCase": {
                  "unsafeName": "contractAddress",
                  "safeName": "contractAddress"
                },
                "snakeCase": {
                  "unsafeName": "contract_address",
                  "safeName": "contract_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESS",
                  "safeName": "CONTRACT_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddress",
                  "safeName": "ContractAddress"
                }
              },
              "wireValue": "contractAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeySummarizeNftAttributesGetResponsesContentApplicationJsonSchemaContractAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Prevalence counts for each attribute within a collection.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_summarizeNFTAttributes_Response_200_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_isHolderOfCollection_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_isHolderOfCollection_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_isHolderOfCollection_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200",
            "safeName": "nftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_is_holder_of_collection_response_200",
            "safeName": "nft_api_v_2_methods_older_version_is_holder_of_collection_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_IS_HOLDER_OF_COLLECTION_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_IS_HOLDER_OF_COLLECTION_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200",
            "safeName": "NftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "isHolderOfCollection",
                "camelCase": {
                  "unsafeName": "isHolderOfCollection",
                  "safeName": "isHolderOfCollection"
                },
                "snakeCase": {
                  "unsafeName": "is_holder_of_collection",
                  "safeName": "is_holder_of_collection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_HOLDER_OF_COLLECTION",
                  "safeName": "IS_HOLDER_OF_COLLECTION"
                },
                "pascalCase": {
                  "unsafeName": "IsHolderOfCollection",
                  "safeName": "IsHolderOfCollection"
                }
              },
              "wireValue": "isHolderOfCollection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether the given wallet owns any token in the given NFT collection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyIsHolderOfCollectionGetResponsesContentApplicationJsonSchemaIsHolderOfCollection_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Data related to a wallet's ownership of any token in an NFT collection.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_isHolderOfCollection_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftSalesGetParametersOrder": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetParametersOrder",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetParametersOrder",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetParametersOrder",
            "safeName": "v2ApiKeyGetNftSalesGetParametersOrder"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_parameters_order",
            "safeName": "v_2_api_key_get_nft_sales_get_parameters_order"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetParametersOrder",
            "safeName": "V2ApiKeyGetNftSalesGetParametersOrder"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "asc",
              "camelCase": {
                "unsafeName": "asc",
                "safeName": "asc"
              },
              "snakeCase": {
                "unsafeName": "asc",
                "safeName": "asc"
              },
              "screamingSnakeCase": {
                "unsafeName": "ASC",
                "safeName": "ASC"
              },
              "pascalCase": {
                "unsafeName": "Asc",
                "safeName": "Asc"
              }
            },
            "wireValue": "asc"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "asc",
                "camelCase": {
                  "unsafeName": "asc",
                  "safeName": "asc"
                },
                "snakeCase": {
                  "unsafeName": "asc",
                  "safeName": "asc"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASC",
                  "safeName": "ASC"
                },
                "pascalCase": {
                  "unsafeName": "Asc",
                  "safeName": "Asc"
                }
              },
              "wireValue": "asc"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "desc",
                "camelCase": {
                  "unsafeName": "desc",
                  "safeName": "desc"
                },
                "snakeCase": {
                  "unsafeName": "desc",
                  "safeName": "desc"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESC",
                  "safeName": "DESC"
                },
                "pascalCase": {
                  "unsafeName": "Desc",
                  "safeName": "Desc"
                }
              },
              "wireValue": "desc"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetParametersOrder_example_autogenerated": "asc"
        }
      }
    },
    "V2ApiKeyGetNftSalesGetParametersMarketplace": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetParametersMarketplace",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetParametersMarketplace",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetParametersMarketplace",
            "safeName": "v2ApiKeyGetNftSalesGetParametersMarketplace"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_parameters_marketplace",
            "safeName": "v_2_api_key_get_nft_sales_get_parameters_marketplace"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetParametersMarketplace",
            "safeName": "V2ApiKeyGetNftSalesGetParametersMarketplace"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "seaport",
                "camelCase": {
                  "unsafeName": "seaport",
                  "safeName": "seaport"
                },
                "snakeCase": {
                  "unsafeName": "seaport",
                  "safeName": "seaport"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEAPORT",
                  "safeName": "SEAPORT"
                },
                "pascalCase": {
                  "unsafeName": "Seaport",
                  "safeName": "Seaport"
                }
              },
              "wireValue": "seaport"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "looksrare",
                "camelCase": {
                  "unsafeName": "looksrare",
                  "safeName": "looksrare"
                },
                "snakeCase": {
                  "unsafeName": "looksrare",
                  "safeName": "looksrare"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOOKSRARE",
                  "safeName": "LOOKSRARE"
                },
                "pascalCase": {
                  "unsafeName": "Looksrare",
                  "safeName": "Looksrare"
                }
              },
              "wireValue": "looksrare"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "x2y2",
                "camelCase": {
                  "unsafeName": "x2Y2",
                  "safeName": "x2Y2"
                },
                "snakeCase": {
                  "unsafeName": "x_2_y_2",
                  "safeName": "x_2_y_2"
                },
                "screamingSnakeCase": {
                  "unsafeName": "X_2_Y_2",
                  "safeName": "X_2_Y_2"
                },
                "pascalCase": {
                  "unsafeName": "X2Y2",
                  "safeName": "X2Y2"
                }
              },
              "wireValue": "x2y2"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "wyvern",
                "camelCase": {
                  "unsafeName": "wyvern",
                  "safeName": "wyvern"
                },
                "snakeCase": {
                  "unsafeName": "wyvern",
                  "safeName": "wyvern"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WYVERN",
                  "safeName": "WYVERN"
                },
                "pascalCase": {
                  "unsafeName": "Wyvern",
                  "safeName": "Wyvern"
                }
              },
              "wireValue": "wyvern"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blur",
                "camelCase": {
                  "unsafeName": "blur",
                  "safeName": "blur"
                },
                "snakeCase": {
                  "unsafeName": "blur",
                  "safeName": "blur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLUR",
                  "safeName": "BLUR"
                },
                "pascalCase": {
                  "unsafeName": "Blur",
                  "safeName": "Blur"
                }
              },
              "wireValue": "blur"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "cryptopunks",
                "camelCase": {
                  "unsafeName": "cryptopunks",
                  "safeName": "cryptopunks"
                },
                "snakeCase": {
                  "unsafeName": "cryptopunks",
                  "safeName": "cryptopunks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CRYPTOPUNKS",
                  "safeName": "CRYPTOPUNKS"
                },
                "pascalCase": {
                  "unsafeName": "Cryptopunks",
                  "safeName": "Cryptopunks"
                }
              },
              "wireValue": "cryptopunks"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetParametersMarketplace_example_autogenerated": "seaport"
        }
      }
    },
    "V2ApiKeyGetNftSalesGetParametersTaker": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetParametersTaker",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetParametersTaker",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetParametersTaker",
            "safeName": "v2ApiKeyGetNftSalesGetParametersTaker"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_parameters_taker",
            "safeName": "v_2_api_key_get_nft_sales_get_parameters_taker"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetParametersTaker",
            "safeName": "V2ApiKeyGetNftSalesGetParametersTaker"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "BUYER",
                "camelCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "snakeCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUYER",
                  "safeName": "BUYER"
                },
                "pascalCase": {
                  "unsafeName": "Buyer",
                  "safeName": "Buyer"
                }
              },
              "wireValue": "BUYER"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "SELLER",
                "camelCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "snakeCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER",
                  "safeName": "SELLER"
                },
                "pascalCase": {
                  "unsafeName": "Seller",
                  "safeName": "Seller"
                }
              },
              "wireValue": "SELLER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetParametersTaker_example_autogenerated": "BUYER"
        }
      }
    },
    "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
            "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker",
            "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
            "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "BUYER",
                "camelCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "snakeCase": {
                  "unsafeName": "buyer",
                  "safeName": "buyer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUYER",
                  "safeName": "BUYER"
                },
                "pascalCase": {
                  "unsafeName": "Buyer",
                  "safeName": "Buyer"
                }
              },
              "wireValue": "BUYER"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "SELLER",
                "camelCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "snakeCase": {
                  "unsafeName": "seller",
                  "safeName": "seller"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER",
                  "safeName": "SELLER"
                },
                "pascalCase": {
                  "unsafeName": "Seller",
                  "safeName": "Seller"
                }
              },
              "wireValue": "SELLER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "String - Whether the price taker in the trade was the buyer or the seller.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker_example_autogenerated": "BUYER"
        }
      }
    },
    "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
            "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee",
            "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
            "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The amount of the payment from the buyer to seller as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFeeAmount_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The symbol of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFeeSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "decimals",
                "camelCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "snakeCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DECIMALS",
                  "safeName": "DECIMALS"
                },
                "pascalCase": {
                  "unsafeName": "Decimals",
                  "safeName": "Decimals"
                }
              },
              "wireValue": "decimals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of decimals of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFeeDecimals_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The payment from buyer to the seller",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
            "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee",
            "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
            "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The amount of the payment to the marketplace as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFeeAmount_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The symbol of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFeeSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "decimals",
                "camelCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "snakeCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DECIMALS",
                  "safeName": "DECIMALS"
                },
                "pascalCase": {
                  "unsafeName": "Decimals",
                  "safeName": "Decimals"
                }
              },
              "wireValue": "decimals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of decimals of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFeeDecimals_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The payment from buyer to the NFT marketplace protocol",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
            "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee",
            "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
            "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The amount of the payment to the royalty collector as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFeeAmount_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The symbol of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFeeSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "decimals",
                "camelCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "snakeCase": {
                  "unsafeName": "decimals",
                  "safeName": "decimals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DECIMALS",
                  "safeName": "DECIMALS"
                },
                "pascalCase": {
                  "unsafeName": "Decimals",
                  "safeName": "Decimals"
                }
              },
              "wireValue": "decimals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of decimals of the token used for the payment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFeeDecimals_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The payment from buyer to the royalty address of the NFT collection",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems": {
      "name": {
        "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
            "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items",
            "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS",
            "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
            "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "marketplace",
                "camelCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "snakeCase": {
                  "unsafeName": "marketplace",
                  "safeName": "marketplace"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MARKETPLACE",
                  "safeName": "MARKETPLACE"
                },
                "pascalCase": {
                  "unsafeName": "Marketplace",
                  "safeName": "Marketplace"
                }
              },
              "wireValue": "marketplace"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The marketplace the sale took place on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsMarketplace_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractAddress",
                "camelCase": {
                  "unsafeName": "contractAddress",
                  "safeName": "contractAddress"
                },
                "snakeCase": {
                  "unsafeName": "contract_address",
                  "safeName": "contract_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESS",
                  "safeName": "CONTRACT_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddress",
                  "safeName": "ContractAddress"
                }
              },
              "wireValue": "contractAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The contract address of the collection the NFT belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsContractAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The decimal token ID of the NFT being sold.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "quantity",
                "camelCase": {
                  "unsafeName": "quantity",
                  "safeName": "quantity"
                },
                "snakeCase": {
                  "unsafeName": "quantity",
                  "safeName": "quantity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUANTITY",
                  "safeName": "QUANTITY"
                },
                "pascalCase": {
                  "unsafeName": "Quantity",
                  "safeName": "Quantity"
                }
              },
              "wireValue": "quantity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The number of tokens sold in the sale as a decimal integer string.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsQuantity_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "buyerAddress",
                "camelCase": {
                  "unsafeName": "buyerAddress",
                  "safeName": "buyerAddress"
                },
                "snakeCase": {
                  "unsafeName": "buyer_address",
                  "safeName": "buyer_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUYER_ADDRESS",
                  "safeName": "BUYER_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "BuyerAddress",
                  "safeName": "BuyerAddress"
                }
              },
              "wireValue": "buyerAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The address of the buyer in the NFT sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsBuyerAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sellerAddress",
                "camelCase": {
                  "unsafeName": "sellerAddress",
                  "safeName": "sellerAddress"
                },
                "snakeCase": {
                  "unsafeName": "seller_address",
                  "safeName": "seller_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER_ADDRESS",
                  "safeName": "SELLER_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "SellerAddress",
                  "safeName": "SellerAddress"
                }
              },
              "wireValue": "sellerAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The address of the seller in the NFT sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "taker",
                "camelCase": {
                  "unsafeName": "taker",
                  "safeName": "taker"
                },
                "snakeCase": {
                  "unsafeName": "taker",
                  "safeName": "taker"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TAKER",
                  "safeName": "TAKER"
                },
                "pascalCase": {
                  "unsafeName": "Taker",
                  "safeName": "Taker"
                }
              },
              "wireValue": "taker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                      "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker",
                      "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_taker"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER",
                      "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_TAKER"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                      "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Whether the price taker in the trade was the buyer or the seller.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTaker_example_autogenerated": "BUYER"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sellerFee",
                "camelCase": {
                  "unsafeName": "sellerFee",
                  "safeName": "sellerFee"
                },
                "snakeCase": {
                  "unsafeName": "seller_fee",
                  "safeName": "seller_fee"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SELLER_FEE",
                  "safeName": "SELLER_FEE"
                },
                "pascalCase": {
                  "unsafeName": "SellerFee",
                  "safeName": "SellerFee"
                }
              },
              "wireValue": "sellerFee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                      "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee",
                      "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_seller_fee"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE",
                      "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_SELLER_FEE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                      "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The payment from buyer to the seller",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsSellerFee_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "protocolFee",
                "camelCase": {
                  "unsafeName": "protocolFee",
                  "safeName": "protocolFee"
                },
                "snakeCase": {
                  "unsafeName": "protocol_fee",
                  "safeName": "protocol_fee"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROTOCOL_FEE",
                  "safeName": "PROTOCOL_FEE"
                },
                "pascalCase": {
                  "unsafeName": "ProtocolFee",
                  "safeName": "ProtocolFee"
                }
              },
              "wireValue": "protocolFee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                      "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee",
                      "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_protocol_fee"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE",
                      "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_PROTOCOL_FEE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                      "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The payment from buyer to the NFT marketplace protocol",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsProtocolFee_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "royaltyFee",
                "camelCase": {
                  "unsafeName": "royaltyFee",
                  "safeName": "royaltyFee"
                },
                "snakeCase": {
                  "unsafeName": "royalty_fee",
                  "safeName": "royalty_fee"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROYALTY_FEE",
                  "safeName": "ROYALTY_FEE"
                },
                "pascalCase": {
                  "unsafeName": "RoyaltyFee",
                  "safeName": "RoyaltyFee"
                }
              },
              "wireValue": "royaltyFee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                      "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee",
                      "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items_royalty_fee"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE",
                      "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS_ROYALTY_FEE"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                      "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee"
                    }
                  },
                  "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The payment from buyer to the royalty address of the NFT collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsRoyaltyFee_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The block number the NFT sale took place in.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logIndex",
                "camelCase": {
                  "unsafeName": "logIndex",
                  "safeName": "logIndex"
                },
                "snakeCase": {
                  "unsafeName": "log_index",
                  "safeName": "log_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOG_INDEX",
                  "safeName": "LOG_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "LogIndex",
                  "safeName": "LogIndex"
                }
              },
              "wireValue": "logIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The log number of the sale event emitted within the block.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsLogIndex_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bundleIndex",
                "camelCase": {
                  "unsafeName": "bundleIndex",
                  "safeName": "bundleIndex"
                },
                "snakeCase": {
                  "unsafeName": "bundle_index",
                  "safeName": "bundle_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUNDLE_INDEX",
                  "safeName": "BUNDLE_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "BundleIndex",
                  "safeName": "BundleIndex"
                }
              },
              "wireValue": "bundleIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Integer - The index of the token within the bundle of NFTs sold in the sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsBundleIndex_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionHash",
                "camelCase": {
                  "unsafeName": "transactionHash",
                  "safeName": "transactionHash"
                },
                "snakeCase": {
                  "unsafeName": "transaction_hash",
                  "safeName": "transaction_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_HASH",
                  "safeName": "TRANSACTION_HASH"
                },
                "pascalCase": {
                  "unsafeName": "TransactionHash",
                  "safeName": "TransactionHash"
                }
              },
              "wireValue": "transactionHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The transaction hash of the transaction containing the sale.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItemsTransactionHash_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getNFTSales_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getNFTSales_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getNFTSales_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetNftSalesResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetNftSalesResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_nft_sales_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_nft_sales_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_SALES_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_SALES_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetNftSalesResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetNftSalesResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "nftSales",
                "camelCase": {
                  "unsafeName": "nftSales",
                  "safeName": "nftSales"
                },
                "snakeCase": {
                  "unsafeName": "nft_sales",
                  "safeName": "nft_sales"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NFT_SALES",
                  "safeName": "NFT_SALES"
                },
                "pascalCase": {
                  "unsafeName": "NftSales",
                  "safeName": "NftSales"
                }
              },
              "wireValue": "nftSales"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                          "safeName": "v2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items",
                          "safeName": "v_2_api_key_get_nft_sales_get_responses_content_application_json_schema_nft_sales_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_NFT_SALES_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                          "safeName": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSalesItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of NFT sales that match the query",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaNftSales_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - The page key to use to fetch the next page of results. Returns null if there are no more results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetNftSalesGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getNFTSales_Response_200_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems": {
      "name": {
        "typeId": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "v2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items",
            "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
            "safeName": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems": {
      "name": {
        "typeId": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "v2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items",
            "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
            "safeName": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
          }
        }
      },
      "shape": {
        "default": {
          "name": {
            "name": {
              "originalName": "SPAM",
              "camelCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "snakeCase": {
                "unsafeName": "spam",
                "safeName": "spam"
              },
              "screamingSnakeCase": {
                "unsafeName": "SPAM",
                "safeName": "SPAM"
              },
              "pascalCase": {
                "unsafeName": "Spam",
                "safeName": "Spam"
              }
            },
            "wireValue": "SPAM"
          }
        },
        "values": [
          {
            "name": {
              "name": {
                "originalName": "SPAM",
                "camelCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "snakeCase": {
                  "unsafeName": "spam",
                  "safeName": "spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPAM",
                  "safeName": "SPAM"
                },
                "pascalCase": {
                  "unsafeName": "Spam",
                  "safeName": "Spam"
                }
              },
              "wireValue": "SPAM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AIRDROPS",
                "camelCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "snakeCase": {
                  "unsafeName": "airdrops",
                  "safeName": "airdrops"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AIRDROPS",
                  "safeName": "AIRDROPS"
                },
                "pascalCase": {
                  "unsafeName": "Airdrops",
                  "safeName": "Airdrops"
                }
              },
              "wireValue": "AIRDROPS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems_example_autogenerated": "SPAM"
        }
      }
    },
    "V2ApiKeyGetContractsForOwnerGetParametersOrderBy": {
      "name": {
        "typeId": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersOrderBy",
            "safeName": "v2ApiKeyGetContractsForOwnerGetParametersOrderBy"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_order_by",
            "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_order_by"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY",
            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy",
            "safeName": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "transferTime",
                "camelCase": {
                  "unsafeName": "transferTime",
                  "safeName": "transferTime"
                },
                "snakeCase": {
                  "unsafeName": "transfer_time",
                  "safeName": "transfer_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSFER_TIME",
                  "safeName": "TRANSFER_TIME"
                },
                "pascalCase": {
                  "unsafeName": "TransferTime",
                  "safeName": "TransferTime"
                }
              },
              "wireValue": "transferTime"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractsForOwnerGetParametersOrderBy_example_autogenerated": "transferTime"
        }
      }
    },
    "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel": {
      "name": {
        "typeId": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
            "safeName": "v2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level",
            "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
            "safeName": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "VERY_HIGH",
                "camelCase": {
                  "unsafeName": "veryHigh",
                  "safeName": "veryHigh"
                },
                "snakeCase": {
                  "unsafeName": "very_high",
                  "safeName": "very_high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERY_HIGH",
                  "safeName": "VERY_HIGH"
                },
                "pascalCase": {
                  "unsafeName": "VeryHigh",
                  "safeName": "VeryHigh"
                }
              },
              "wireValue": "VERY_HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "HIGH",
                "camelCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "snakeCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGH",
                  "safeName": "HIGH"
                },
                "pascalCase": {
                  "unsafeName": "High",
                  "safeName": "High"
                }
              },
              "wireValue": "HIGH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "MEDIUM",
                "camelCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "snakeCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIUM",
                  "safeName": "MEDIUM"
                },
                "pascalCase": {
                  "unsafeName": "Medium",
                  "safeName": "Medium"
                }
              },
              "wireValue": "MEDIUM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "LOW",
                "camelCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "snakeCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOW",
                  "safeName": "LOW"
                },
                "pascalCase": {
                  "unsafeName": "Low",
                  "safeName": "Low"
                }
              },
              "wireValue": "LOW"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel_example_autogenerated": "VERY_HIGH"
        }
      }
    },
    "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems": {
      "name": {
        "typeId": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
            "safeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_media_items",
            "safeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_media_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_MEDIA_ITEMS",
            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_MEDIA_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
            "safeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "raw",
                "camelCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "snakeCase": {
                  "unsafeName": "raw",
                  "safeName": "raw"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RAW",
                  "safeName": "RAW"
                },
                "pascalCase": {
                  "unsafeName": "Raw",
                  "safeName": "Raw"
                }
              },
              "wireValue": "raw"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItemsRaw_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gateway",
                "camelCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "snakeCase": {
                  "unsafeName": "gateway",
                  "safeName": "gateway"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GATEWAY",
                  "safeName": "GATEWAY"
                },
                "pascalCase": {
                  "unsafeName": "Gateway",
                  "safeName": "Gateway"
                }
              },
              "wireValue": "gateway"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Public gateway uri for the raw uri above.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItemsGateway_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "thumbnail",
                "camelCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "snakeCase": {
                  "unsafeName": "thumbnail",
                  "safeName": "thumbnail"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THUMBNAIL",
                  "safeName": "THUMBNAIL"
                },
                "pascalCase": {
                  "unsafeName": "Thumbnail",
                  "safeName": "Thumbnail"
                }
              },
              "wireValue": "thumbnail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "URL for a resized thumbnail of the NFT media asset.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItemsThumbnail_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                }
              },
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItemsFormat_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bytes",
                "camelCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "snakeCase": {
                  "unsafeName": "bytes",
                  "safeName": "bytes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BYTES",
                  "safeName": "BYTES"
                },
                "pascalCase": {
                  "unsafeName": "Bytes",
                  "safeName": "Bytes"
                }
              },
              "wireValue": "bytes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The size of the media asset in bytes.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItemsBytes_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea": {
      "name": {
        "typeId": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
            "safeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea",
            "safeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA",
            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
            "safeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "floorPrice",
                "camelCase": {
                  "unsafeName": "floorPrice",
                  "safeName": "floorPrice"
                },
                "snakeCase": {
                  "unsafeName": "floor_price",
                  "safeName": "floor_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FLOOR_PRICE",
                  "safeName": "FLOOR_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "FloorPrice",
                  "safeName": "FloorPrice"
                }
              },
              "wireValue": "floorPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "NFT floor price",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaFloorPrice_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "collectionName",
                "camelCase": {
                  "unsafeName": "collectionName",
                  "safeName": "collectionName"
                },
                "snakeCase": {
                  "unsafeName": "collection_name",
                  "safeName": "collection_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLLECTION_NAME",
                  "safeName": "COLLECTION_NAME"
                },
                "pascalCase": {
                  "unsafeName": "CollectionName",
                  "safeName": "CollectionName"
                }
              },
              "wireValue": "collectionName"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection name",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaCollectionName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safelistRequestStatus",
                "camelCase": {
                  "unsafeName": "safelistRequestStatus",
                  "safeName": "safelistRequestStatus"
                },
                "snakeCase": {
                  "unsafeName": "safelist_request_status",
                  "safeName": "safelist_request_status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFELIST_REQUEST_STATUS",
                  "safeName": "SAFELIST_REQUEST_STATUS"
                },
                "pascalCase": {
                  "unsafeName": "SafelistRequestStatus",
                  "safeName": "SafelistRequestStatus"
                }
              },
              "wireValue": "safelistRequestStatus"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection approval status within OpenSea. For more info, see the Opensea docs at docs.opensea.io/reference/collection-model",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaSafelistRequestStatus_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "imageUrl",
                "camelCase": {
                  "unsafeName": "imageUrl",
                  "safeName": "imageUrl"
                },
                "snakeCase": {
                  "unsafeName": "image_url",
                  "safeName": "image_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_URL",
                  "safeName": "IMAGE_URL"
                },
                "pascalCase": {
                  "unsafeName": "ImageUrl",
                  "safeName": "ImageUrl"
                }
              },
              "wireValue": "imageUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea CDN image URL",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaImageUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "OpenSea collection description",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "externalUrl",
                "camelCase": {
                  "unsafeName": "externalUrl",
                  "safeName": "externalUrl"
                },
                "snakeCase": {
                  "unsafeName": "external_url",
                  "safeName": "external_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTERNAL_URL",
                  "safeName": "EXTERNAL_URL"
                },
                "pascalCase": {
                  "unsafeName": "ExternalUrl",
                  "safeName": "ExternalUrl"
                }
              },
              "wireValue": "externalUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Collection homepage",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaExternalUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "twitterUsername",
                "camelCase": {
                  "unsafeName": "twitterUsername",
                  "safeName": "twitterUsername"
                },
                "snakeCase": {
                  "unsafeName": "twitter_username",
                  "safeName": "twitter_username"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TWITTER_USERNAME",
                  "safeName": "TWITTER_USERNAME"
                },
                "pascalCase": {
                  "unsafeName": "TwitterUsername",
                  "safeName": "TwitterUsername"
                }
              },
              "wireValue": "twitterUsername"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The twitter username of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaTwitterUsername_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "discordUrl",
                "camelCase": {
                  "unsafeName": "discordUrl",
                  "safeName": "discordUrl"
                },
                "snakeCase": {
                  "unsafeName": "discord_url",
                  "safeName": "discord_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISCORD_URL",
                  "safeName": "DISCORD_URL"
                },
                "pascalCase": {
                  "unsafeName": "DiscordUrl",
                  "safeName": "DiscordUrl"
                }
              },
              "wireValue": "discordUrl"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The discord URL of the collection",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaDiscordUrl_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "lastIngestedAt",
                "camelCase": {
                  "unsafeName": "lastIngestedAt",
                  "safeName": "lastIngestedAt"
                },
                "snakeCase": {
                  "unsafeName": "last_ingested_at",
                  "safeName": "last_ingested_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LAST_INGESTED_AT",
                  "safeName": "LAST_INGESTED_AT"
                },
                "pascalCase": {
                  "unsafeName": "LastIngestedAt",
                  "safeName": "LastIngestedAt"
                }
              },
              "wireValue": "lastIngestedAt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The timestamp when the collection was last ingested by us",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpenseaLastIngestedAt_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea_example_autogenerated": {}
        }
      }
    },
    "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems": {
      "name": {
        "typeId": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
          "camelCase": {
            "unsafeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
            "safeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
          },
          "snakeCase": {
            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items",
            "safeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS",
            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
            "safeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the held contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsAddress_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalBalance",
                "camelCase": {
                  "unsafeName": "totalBalance",
                  "safeName": "totalBalance"
                },
                "snakeCase": {
                  "unsafeName": "total_balance",
                  "safeName": "total_balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_BALANCE",
                  "safeName": "TOTAL_BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "TotalBalance",
                  "safeName": "TotalBalance"
                }
              },
              "wireValue": "totalBalance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Sum of NFT balances across all token IDs held by the owner. For non-fungible tokens this will be equal to the `numDistinctTokensOwned`, but it may be higher if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsTotalBalance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "numDistinctTokensOwned",
                "camelCase": {
                  "unsafeName": "numDistinctTokensOwned",
                  "safeName": "numDistinctTokensOwned"
                },
                "snakeCase": {
                  "unsafeName": "num_distinct_tokens_owned",
                  "safeName": "num_distinct_tokens_owned"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUM_DISTINCT_TOKENS_OWNED",
                  "safeName": "NUM_DISTINCT_TOKENS_OWNED"
                },
                "pascalCase": {
                  "unsafeName": "NumDistinctTokensOwned",
                  "safeName": "NumDistinctTokensOwned"
                }
              },
              "wireValue": "numDistinctTokensOwned"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number of distinct token IDs held by the owner. For non-fungible tokens this will be equal to the `totalBalance`, but it may be lower if the user holds some fungible ERC1155 tokens.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsNumDistinctTokensOwned_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "isSpam",
                "camelCase": {
                  "unsafeName": "isSpam",
                  "safeName": "isSpam"
                },
                "snakeCase": {
                  "unsafeName": "is_spam",
                  "safeName": "is_spam"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_SPAM",
                  "safeName": "IS_SPAM"
                },
                "pascalCase": {
                  "unsafeName": "IsSpam",
                  "safeName": "IsSpam"
                }
              },
              "wireValue": "isSpam"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsIsSpam_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenId",
                "camelCase": {
                  "unsafeName": "tokenId",
                  "safeName": "tokenId"
                },
                "snakeCase": {
                  "unsafeName": "token_id",
                  "safeName": "token_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_ID",
                  "safeName": "TOKEN_ID"
                },
                "pascalCase": {
                  "unsafeName": "TokenId",
                  "safeName": "TokenId"
                }
              },
              "wireValue": "tokenId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "One of the tokens from this contract held by the owner.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsTokenId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the contract, i.e. \"Bored Ape Yacht Club\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "title",
                "camelCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "snakeCase": {
                  "unsafeName": "title",
                  "safeName": "title"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TITLE",
                  "safeName": "TITLE"
                },
                "pascalCase": {
                  "unsafeName": "Title",
                  "safeName": "Title"
                }
              },
              "wireValue": "title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The title of the token held by the owner i.e. \"Something #22\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsTitle_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "symbol",
                "camelCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "snakeCase": {
                  "unsafeName": "symbol",
                  "safeName": "symbol_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMBOL",
                  "safeName": "SYMBOL"
                },
                "pascalCase": {
                  "unsafeName": "Symbol",
                  "safeName": "Symbol"
                }
              },
              "wireValue": "symbol"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The symbol of the contract, i.e. BAYC.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsSymbol_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tokenType",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                }
              },
              "wireValue": "tokenType"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The NFT standard used by the contract, i.e. ERC721 or ERC1155.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsTokenType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractDeployer",
                "camelCase": {
                  "unsafeName": "contractDeployer",
                  "safeName": "contractDeployer"
                },
                "snakeCase": {
                  "unsafeName": "contract_deployer",
                  "safeName": "contract_deployer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_DEPLOYER",
                  "safeName": "CONTRACT_DEPLOYER"
                },
                "pascalCase": {
                  "unsafeName": "ContractDeployer",
                  "safeName": "ContractDeployer"
                }
              },
              "wireValue": "contractDeployer"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Address that deployed the smart contract",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsContractDeployer_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deployedBlockNumber",
                "camelCase": {
                  "unsafeName": "deployedBlockNumber",
                  "safeName": "deployedBlockNumber"
                },
                "snakeCase": {
                  "unsafeName": "deployed_block_number",
                  "safeName": "deployed_block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DEPLOYED_BLOCK_NUMBER",
                  "safeName": "DEPLOYED_BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "DeployedBlockNumber",
                  "safeName": "DeployedBlockNumber"
                }
              },
              "wireValue": "deployedBlockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Number - The Block Number when the deployment transaction is successfully mined",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsDeployedBlockNumber_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "media",
                "camelCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "snakeCase": {
                  "unsafeName": "media",
                  "safeName": "media"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIA",
                  "safeName": "MEDIA"
                },
                "pascalCase": {
                  "unsafeName": "Media",
                  "safeName": "Media"
                }
              },
              "wireValue": "media"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
                          "safeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_media_items",
                          "safeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_media_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_MEDIA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_MEDIA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
                          "safeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMediaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsMedia_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "opensea",
                "camelCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "snakeCase": {
                  "unsafeName": "opensea",
                  "safeName": "opensea"
                },
                "screamingSnakeCase": {
                  "unsafeName": "OPENSEA",
                  "safeName": "OPENSEA"
                },
                "pascalCase": {
                  "unsafeName": "Opensea",
                  "safeName": "Opensea"
                }
              },
              "wireValue": "opensea"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
                    "camelCase": {
                      "unsafeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
                      "safeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea"
                    },
                    "snakeCase": {
                      "unsafeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea",
                      "safeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items_opensea"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA",
                      "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS_OPENSEA"
                    },
                    "pascalCase": {
                      "unsafeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
                      "safeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea"
                    }
                  },
                  "typeId": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Note that the OpenSea metadata object is currently only available on ETH and Polygon Mainnet. Please reach out to us at support@alchemy.com if you would like to access this data on other networks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItemsOpensea_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The object that represents a smart contract and has all data corresponding to that contract",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems_example_autogenerated": {}
        }
      }
    },
    "NFT API V2 Methods (Older Version)_getContractsForOwner_Response_200": {
      "name": {
        "typeId": "NFT API V2 Methods (Older Version)_getContractsForOwner_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NFT API V2 Methods (Older Version)_getContractsForOwner_Response_200",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersionGetContractsForOwnerResponse200",
            "safeName": "nftApiV2MethodsOlderVersionGetContractsForOwnerResponse200"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version_get_contracts_for_owner_response_200",
            "safeName": "nft_api_v_2_methods_older_version_get_contracts_for_owner_response_200"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACTS_FOR_OWNER_RESPONSE_200",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACTS_FOR_OWNER_RESPONSE_200"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersionGetContractsForOwnerResponse200",
            "safeName": "NftApiV2MethodsOlderVersionGetContractsForOwnerResponse200"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "contracts",
                "camelCase": {
                  "unsafeName": "contracts",
                  "safeName": "contracts"
                },
                "snakeCase": {
                  "unsafeName": "contracts",
                  "safeName": "contracts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACTS",
                  "safeName": "CONTRACTS"
                },
                "pascalCase": {
                  "unsafeName": "Contracts",
                  "safeName": "Contracts"
                }
              },
              "wireValue": "contracts"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                          "safeName": "v2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items",
                          "safeName": "v_2_api_key_get_contracts_for_owner_get_responses_content_application_json_schema_contracts_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS",
                          "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_CONTRACTS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                          "safeName": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContractsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaContracts_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pageKey",
                "camelCase": {
                  "unsafeName": "pageKey",
                  "safeName": "pageKey"
                },
                "snakeCase": {
                  "unsafeName": "page_key",
                  "safeName": "page_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_KEY",
                  "safeName": "PAGE_KEY"
                },
                "pascalCase": {
                  "unsafeName": "PageKey",
                  "safeName": "PageKey"
                }
              },
              "wireValue": "pageKey"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaPageKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "totalCount",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                }
              },
              "wireValue": "totalCount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "String - Total number of NFT contracts held by the given address returned in this page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "V2ApiKeyGetContractsForOwnerGetResponsesContentApplicationJsonSchemaTotalCount_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NFT API V2 Methods (Older Version)_getContractsForOwner_Response_200_example_autogenerated": {}
        }
      }
    }
  },
  "services": {
    "service_nftOwnershipEndpoints": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "NFT Ownership Endpoints",
              "camelCase": {
                "unsafeName": "nftOwnershipEndpoints",
                "safeName": "nftOwnershipEndpoints"
              },
              "snakeCase": {
                "unsafeName": "nft_ownership_endpoints",
                "safeName": "nft_ownership_endpoints"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_OWNERSHIP_ENDPOINTS",
                "safeName": "NFT_OWNERSHIP_ENDPOINTS"
              },
              "pascalCase": {
                "unsafeName": "NftOwnershipEndpoints",
                "safeName": "NftOwnershipEndpoints"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "NFT Ownership Endpoints",
            "camelCase": {
              "unsafeName": "nftOwnershipEndpoints",
              "safeName": "nftOwnershipEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_ownership_endpoints",
              "safeName": "nft_ownership_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_OWNERSHIP_ENDPOINTS",
              "safeName": "NFT_OWNERSHIP_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftOwnershipEndpoints",
              "safeName": "NftOwnershipEndpoints"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "NFTs By Owner",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForOwner"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "owner",
                  "camelCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "snakeCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "OWNER",
                    "safeName": "OWNER"
                  },
                  "pascalCase": {
                    "unsafeName": "Owner",
                    "safeName": "Owner"
                  }
                },
                "wireValue": "owner"
              },
              "docs": "String - Address for NFT owner (can be in ENS format for Eth Mainnet).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "owner_example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "contractAddresses[]",
                  "camelCase": {
                    "unsafeName": "contractAddresses",
                    "safeName": "contractAddresses"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_addresses",
                    "safeName": "contract_addresses"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESSES",
                    "safeName": "CONTRACT_ADDRESSES"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddresses",
                    "safeName": "ContractAddresses"
                  }
                },
                "wireValue": "contractAddresses[]"
              },
              "docs": "Array of contract addresses to filter the responses with. Max limit 45 contracts.",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "primitive": {
                          "v1": "STRING",
                          "v2": {
                            "validation": {},
                            "type": "string"
                          }
                        },
                        "type": "primitive"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddresses[]_example": [
                    "foo"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "orderBy",
                  "camelCase": {
                    "unsafeName": "orderBy",
                    "safeName": "orderBy"
                  },
                  "snakeCase": {
                    "unsafeName": "order_by",
                    "safeName": "order_by"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ORDER_BY",
                    "safeName": "ORDER_BY"
                  },
                  "pascalCase": {
                    "unsafeName": "OrderBy",
                    "safeName": "OrderBy"
                  }
                },
                "wireValue": "orderBy"
              },
              "docs": "Enum - ordering scheme to use for ordering NFTs in the response. If unspecified, NFTs will be ordered by contract address and token ID.\n  - transferTime: NFTs will be ordered by the time they were transferred into the wallet, with newest NFTs first. NOTE: this ordering is only supported on Ethereum Mainnet and Polygon Mainnet.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
                      "camelCase": {
                        "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
                        "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersOrderBy"
                      },
                      "snakeCase": {
                        "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_order_by",
                        "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_order_by"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_ORDER_BY",
                        "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_ORDER_BY"
                      },
                      "pascalCase": {
                        "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
                        "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy"
                      }
                    },
                    "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersOrderBy",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderBy_example": "transferTime"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "excludeFilters[]",
                  "camelCase": {
                    "unsafeName": "excludeFilters",
                    "safeName": "excludeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "exclude_filters",
                    "safeName": "exclude_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "EXCLUDE_FILTERS",
                    "safeName": "EXCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "ExcludeFilters",
                    "safeName": "ExcludeFilters"
                  }
                },
                "wireValue": "excludeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. NFTs that match one or more of these filters will be excluded from the response. May not be used in conjunction with includeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_exclude_filters_schema_items",
                            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_exclude_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersExcludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "excludeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "includeFilters[]",
                  "camelCase": {
                    "unsafeName": "includeFilters",
                    "safeName": "includeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "include_filters",
                    "safeName": "include_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_FILTERS",
                    "safeName": "INCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeFilters",
                    "safeName": "IncludeFilters"
                  }
                },
                "wireValue": "includeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. Only NFTs that match one or more of these filters will be included in the response. May not be used in conjunction with excludeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_include_filters_schema_items",
                            "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_include_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersIncludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "includeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "spamConfidenceLevel",
                  "camelCase": {
                    "unsafeName": "spamConfidenceLevel",
                    "safeName": "spamConfidenceLevel"
                  },
                  "snakeCase": {
                    "unsafeName": "spam_confidence_level",
                    "safeName": "spam_confidence_level"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SPAM_CONFIDENCE_LEVEL",
                    "safeName": "SPAM_CONFIDENCE_LEVEL"
                  },
                  "pascalCase": {
                    "unsafeName": "SpamConfidenceLevel",
                    "safeName": "SpamConfidenceLevel"
                  }
                },
                "wireValue": "spamConfidenceLevel"
              },
              "docs": "Enum - the confidence level at which to filter spam at.\n\nConfidence Levels:\n  - VERY_HIGH\n  - HIGH\n  - MEDIUM\n  - LOW\n\nThe confidence level set means that any spam that is at that confidence level or higher will be filtered out. For example, if the confidence level is HIGH, contracts that we have HIGH or VERY_HIGH confidence in being spam will be filtered out from the response. \nDefaults to VERY_HIGH for Ethereum Mainnet and MEDIUM for Matic Mainnet.\n\n**Please note that this filter is only available on paid tiers. Upgrade your account [here](https://dashboard.alchemyapi.io/settings/billing/).**",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
                      "camelCase": {
                        "unsafeName": "v3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
                        "safeName": "v3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel"
                      },
                      "snakeCase": {
                        "unsafeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_spam_confidence_level",
                        "safeName": "v_3_api_key_get_nf_ts_for_owner_get_parameters_spam_confidence_level"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
                        "safeName": "V_3_API_KEY_GET_NF_TS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
                      },
                      "pascalCase": {
                        "unsafeName": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
                        "safeName": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel"
                      }
                    },
                    "typeId": "V3ApiKeyGetNfTsForOwnerGetParametersSpamConfidenceLevel",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "spamConfidenceLevel_example": "VERY_HIGH"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenUriTimeoutInMs",
                  "camelCase": {
                    "unsafeName": "tokenUriTimeoutInMs",
                    "safeName": "tokenUriTimeoutInMs"
                  },
                  "snakeCase": {
                    "unsafeName": "token_uri_timeout_in_ms",
                    "safeName": "token_uri_timeout_in_ms"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                    "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenUriTimeoutInMs",
                    "safeName": "TokenUriTimeoutInMs"
                  }
                },
                "wireValue": "tokenUriTimeoutInMs"
              },
              "docs": "No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenUriTimeoutInMs_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageSize",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "pageSize"
              },
              "docs": "Number of NFTs to be returned per page. Defaults to 100. Max is 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 100,
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageSize_example": 100
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForOwner"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftOwnershipEndpoints.getNFTsForOwner-v3",
          "name": {
            "originalName": "getNFTsForOwner-v3",
            "camelCase": {
              "unsafeName": "getNfTsForOwnerV3",
              "safeName": "getNfTsForOwnerV3"
            },
            "snakeCase": {
              "unsafeName": "get_nf_ts_for_owner_v_3",
              "safeName": "get_nf_ts_for_owner_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NF_TS_FOR_OWNER_V_3",
              "safeName": "GET_NF_TS_FOR_OWNER_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetNfTsForOwnerV3",
              "safeName": "GetNfTsForOwnerV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Ownership Endpoints_getNFTsForOwner-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftOwnershipEndpointsGetNfTsForOwnerV3Response200",
                      "safeName": "nftOwnershipEndpointsGetNfTsForOwnerV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_ownership_endpoints_get_nf_ts_for_owner_v_3_response_200",
                      "safeName": "nft_ownership_endpoints_get_nf_ts_for_owner_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_NF_TS_FOR_OWNER_V_3_RESPONSE_200",
                      "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_NF_TS_FOR_OWNER_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftOwnershipEndpointsGetNfTsForOwnerV3Response200",
                      "safeName": "NftOwnershipEndpointsGetNfTsForOwnerV3Response200"
                    }
                  },
                  "typeId": "NFT Ownership Endpoints_getNFTsForOwner-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the list of all NFTs owned by the given address and satisfying the given input parameters.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Response (By Default)": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                            "name": "DuskBreakers",
                            "symbol": "DUSK",
                            "totalSupply": "10000",
                            "tokenType": "ERC721",
                            "contractDeployer": "0x9c78DDec1F16685ee6E58637a640514A1eD87BC4",
                            "deployedBlockNumber": 13736379,
                            "spamClassifications": [],
                            "openSeaMetadata": {
                              "floorPrice": 0.0582,
                              "collectionName": "DuskBreakers",
                              "safelistRequestStatus": "verified",
                              "imageUrl": "https://i.seadn.io/gae/LGbFRVdClz6-HDd-7WZKONJ5Ody0sBXTvFOQL71BYo3j2iU2wWCX_zlk-Zs0KEhq1qgXViF-6aG_0WS2MdIVNJx2GRSIIYTiciuf-A?w=500&auto=format",
                              "description": "Being a DuskBreaker means joining a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology. You will be part of a community that directly influences the development of upcoming interactive media and gaming experiences within the DuskBreakers universe. Each of you will play an important role in building out this world. You break it, you take it! \r\n\r\nVisit [DuskBreakers](https://duskbreakers.gg) to learn more.",
                              "externalUrl": "http://duskbreakers.gg",
                              "twitterUsername": "duskbreakers",
                              "discordUrl": "https://discord.gg/duskbreakers",
                              "lastIngestedAt": "2023-04-19T17:25:59.000Z"
                            },
                            "isSpam": {}
                          },
                          "tokenId": "28",
                          "tokenType": "ERC721",
                          "name": "DuskBreaker #28",
                          "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/1f9e8be3feb42b5b66452537a4032668",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/1f9e8be3feb42b5b66452537a4032668",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/1f9e8be3feb42b5b66452537a4032668",
                            "contentType": "image/png",
                            "size": 1474037,
                            "originalUrl": "https://duskbreakers.gg/breaker_images/28.png"
                          },
                          "raw": {
                            "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/28",
                            "metadata": {
                              "image": "https://duskbreakers.gg/breaker_images/28.png",
                              "name": "DuskBreaker #28",
                              "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                              "attributes": [
                                {
                                  "value": "Locust Rider Armor (Red)",
                                  "trait_type": "Clothes"
                                },
                                {
                                  "value": "Base Drone (Blue)",
                                  "trait_type": "Drone"
                                },
                                {
                                  "value": "Thin",
                                  "trait_type": "Eyebrows"
                                },
                                {
                                  "value": "Button",
                                  "trait_type": "Nose"
                                },
                                {
                                  "value": "Mohawk (Black)",
                                  "trait_type": "Hair"
                                },
                                {
                                  "value": "Almond 2 (Red)",
                                  "trait_type": "Eyes"
                                },
                                {
                                  "value": "Big Smile (Purple)",
                                  "trait_type": "Mouth"
                                },
                                {
                                  "value": "Light Brown",
                                  "trait_type": "Skin Tone"
                                },
                                {
                                  "value": "Yellow",
                                  "trait_type": "Background"
                                },
                                {
                                  "value": "Facepaint (Stripe)",
                                  "trait_type": "Face Augments"
                                }
                              ],
                              "external_url": "https://duskbreakers.gg/"
                            },
                            "error": {}
                          },
                          "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/28",
                          "timeLastUpdated": "2023-04-19T21:25:39.563Z",
                          "balance": "1"
                        },
                        {
                          "contract": {
                            "address": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                            "name": "DuskBreakers",
                            "symbol": "DUSK",
                            "totalSupply": "10000",
                            "tokenType": "ERC721",
                            "contractDeployer": "0x9c78DDec1F16685ee6E58637a640514A1eD87BC4",
                            "deployedBlockNumber": 13736379,
                            "spamClassifications": [],
                            "openSeaMetadata": {
                              "floorPrice": 0.0582,
                              "collectionName": "DuskBreakers",
                              "safelistRequestStatus": "verified",
                              "imageUrl": "https://i.seadn.io/gae/LGbFRVdClz6-HDd-7WZKONJ5Ody0sBXTvFOQL71BYo3j2iU2wWCX_zlk-Zs0KEhq1qgXViF-6aG_0WS2MdIVNJx2GRSIIYTiciuf-A?w=500&auto=format",
                              "description": "Being a DuskBreaker means joining a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology. You will be part of a community that directly influences the development of upcoming interactive media and gaming experiences within the DuskBreakers universe. Each of you will play an important role in building out this world. You break it, you take it! \r\n\r\nVisit [DuskBreakers](https://duskbreakers.gg) to learn more.",
                              "externalUrl": "http://duskbreakers.gg",
                              "twitterUsername": "duskbreakers",
                              "discordUrl": "https://discord.gg/duskbreakers",
                              "lastIngestedAt": "2023-04-19T17:25:59.000Z"
                            },
                            "isSpam": {}
                          },
                          "tokenId": "29",
                          "tokenType": "ERC721",
                          "name": "DuskBreaker #29",
                          "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/4eb0b7f434746250ff3c8200d10a2226",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/4eb0b7f434746250ff3c8200d10a2226",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/4eb0b7f434746250ff3c8200d10a2226",
                            "contentType": "image/png",
                            "size": 1480183,
                            "originalUrl": "https://duskbreakers.gg/breaker_images/29.png"
                          },
                          "raw": {
                            "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/29",
                            "metadata": {
                              "image": "https://duskbreakers.gg/breaker_images/29.png",
                              "name": "DuskBreaker #29",
                              "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                              "attributes": [
                                {
                                  "value": "Standard Issue Armor 1 (Orange)",
                                  "trait_type": "Clothes"
                                },
                                {
                                  "value": "Dark Metal",
                                  "trait_type": "SmartSkin"
                                },
                                {
                                  "value": "Base Drone (Purple)",
                                  "trait_type": "Drone"
                                },
                                {
                                  "value": "Thin",
                                  "trait_type": "Eyebrows"
                                },
                                {
                                  "value": "Broad",
                                  "trait_type": "Nose"
                                },
                                {
                                  "value": "Slick Back (Red)",
                                  "trait_type": "Hair"
                                },
                                {
                                  "value": "Sharp (Blue)",
                                  "trait_type": "Eyes"
                                },
                                {
                                  "value": "Smirk (Neutral)",
                                  "trait_type": "Mouth"
                                },
                                {
                                  "value": "Tan",
                                  "trait_type": "Skin Tone"
                                },
                                {
                                  "value": "Purple",
                                  "trait_type": "Background"
                                }
                              ],
                              "external_url": "https://duskbreakers.gg/"
                            },
                            "error": {}
                          },
                          "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/29",
                          "timeLastUpdated": "2023-04-19T21:25:39.704Z",
                          "balance": "1"
                        },
                        {
                          "contract": {
                            "address": "0x209cE666978779756Ae1E747608cD93e4dFf45fD",
                            "name": "Knight of Chains Genesis",
                            "symbol": "Knight of Chains Genesis",
                            "tokenType": "ERC1155",
                            "contractDeployer": "0xA92520aFF50c5A1a4d25FCF90c972AA49EbE5299",
                            "deployedBlockNumber": 14847327,
                            "spamClassifications": [],
                            "totalSupply": {},
                            "openSeaMetadata": {
                              "floorPrice": null,
                              "collectionName": "Knight of Chains Genesis.",
                              "safelistRequestStatus": "not_requested",
                              "imageUrl": "https://i.seadn.io/gae/eRhkkVikIOW_-lDc1moMrZlTcd5DPygPRmTJ69Anb-CfG_RMAxIsichM5kDvfdnXc6gfnKuGZOFCbP_58pUvz57TyUeNbFMKGydHoac?w=500&auto=format",
                              "description": "[The KnightsOfChain] (https://knightsofchain.link) is an exclusive community that can only be entered by owning a Knight.\n\nVisit [Website](https://knightsofchain.link) and get your benefits.\n\n(Genesis Knights #1-#31 were pre-minted by the team, and are held by high ranking community members. OG Knights #32-#231 have special benefits.)",
                              "externalUrl": "https://knightsofchain.link",
                              "twitterUsername": null,
                              "discordUrl": null,
                              "lastIngestedAt": "2023-03-20T03:52:07.000Z"
                            },
                            "isSpam": {}
                          },
                          "tokenId": "97",
                          "tokenType": "ERC1155",
                          "image": {
                            "cachedUrl": {},
                            "thumbnailUrl": {},
                            "pngUrl": {},
                            "contentType": {},
                            "size": {},
                            "originalUrl": {}
                          },
                          "raw": {
                            "tokenUri": "https://knightsofchain.link/ipfs/97",
                            "metadata": {},
                            "error": {}
                          },
                          "tokenUri": "https://knightsofchain.link/ipfs/97",
                          "timeLastUpdated": "2023-04-20T15:44:29.965Z",
                          "name": {},
                          "description": {},
                          "balance": "1"
                        }
                      ],
                      "totalCount": 3,
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      },
                      "pageKey": {}
                    },
                    "Response (withMetadata = false)": {
                      "ownedNfts": [
                        {
                          "tokenId": "28",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        },
                        {
                          "tokenId": "29",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        }
                      ],
                      "totalCount": 2,
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      },
                      "pageKey": {}
                    },
                    "Response (with contract filtering)": {
                      "ownedNfts": [
                        {
                          "tokenId": "28",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        },
                        {
                          "tokenId": "29",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        }
                      ],
                      "totalCount": 2,
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      },
                      "pageKey": {}
                    },
                    "Response (with pagination)": {
                      "ownedNfts": [
                        {
                          "tokenId": "28",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        },
                        {
                          "tokenId": "29",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        }
                      ],
                      "totalCount": 2,
                      "pageKey": "88434286-7eaa-472d-8739-32a0497c2a18",
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      }
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getNFTsForOwner - Retrieves all NFTs currently owned by a specified address. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Response (By Default)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                            "name": "DuskBreakers",
                            "symbol": "DUSK",
                            "totalSupply": "10000",
                            "tokenType": "ERC721",
                            "contractDeployer": "0x9c78DDec1F16685ee6E58637a640514A1eD87BC4",
                            "deployedBlockNumber": 13736379,
                            "spamClassifications": [],
                            "openSeaMetadata": {
                              "floorPrice": 0.0582,
                              "collectionName": "DuskBreakers",
                              "safelistRequestStatus": "verified",
                              "imageUrl": "https://i.seadn.io/gae/LGbFRVdClz6-HDd-7WZKONJ5Ody0sBXTvFOQL71BYo3j2iU2wWCX_zlk-Zs0KEhq1qgXViF-6aG_0WS2MdIVNJx2GRSIIYTiciuf-A?w=500&auto=format",
                              "description": "Being a DuskBreaker means joining a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology. You will be part of a community that directly influences the development of upcoming interactive media and gaming experiences within the DuskBreakers universe. Each of you will play an important role in building out this world. You break it, you take it! \r\n\r\nVisit [DuskBreakers](https://duskbreakers.gg) to learn more.",
                              "externalUrl": "http://duskbreakers.gg",
                              "twitterUsername": "duskbreakers",
                              "discordUrl": "https://discord.gg/duskbreakers",
                              "lastIngestedAt": "2023-04-19T17:25:59.000Z"
                            },
                            "isSpam": {}
                          },
                          "tokenId": "28",
                          "tokenType": "ERC721",
                          "name": "DuskBreaker #28",
                          "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/1f9e8be3feb42b5b66452537a4032668",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/1f9e8be3feb42b5b66452537a4032668",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/1f9e8be3feb42b5b66452537a4032668",
                            "contentType": "image/png",
                            "size": 1474037,
                            "originalUrl": "https://duskbreakers.gg/breaker_images/28.png"
                          },
                          "raw": {
                            "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/28",
                            "metadata": {
                              "image": "https://duskbreakers.gg/breaker_images/28.png",
                              "name": "DuskBreaker #28",
                              "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                              "attributes": [
                                {
                                  "value": "Locust Rider Armor (Red)",
                                  "trait_type": "Clothes"
                                },
                                {
                                  "value": "Base Drone (Blue)",
                                  "trait_type": "Drone"
                                },
                                {
                                  "value": "Thin",
                                  "trait_type": "Eyebrows"
                                },
                                {
                                  "value": "Button",
                                  "trait_type": "Nose"
                                },
                                {
                                  "value": "Mohawk (Black)",
                                  "trait_type": "Hair"
                                },
                                {
                                  "value": "Almond 2 (Red)",
                                  "trait_type": "Eyes"
                                },
                                {
                                  "value": "Big Smile (Purple)",
                                  "trait_type": "Mouth"
                                },
                                {
                                  "value": "Light Brown",
                                  "trait_type": "Skin Tone"
                                },
                                {
                                  "value": "Yellow",
                                  "trait_type": "Background"
                                },
                                {
                                  "value": "Facepaint (Stripe)",
                                  "trait_type": "Face Augments"
                                }
                              ],
                              "external_url": "https://duskbreakers.gg/"
                            },
                            "error": {}
                          },
                          "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/28",
                          "timeLastUpdated": "2023-04-19T21:25:39.563Z",
                          "balance": "1"
                        },
                        {
                          "contract": {
                            "address": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                            "name": "DuskBreakers",
                            "symbol": "DUSK",
                            "totalSupply": "10000",
                            "tokenType": "ERC721",
                            "contractDeployer": "0x9c78DDec1F16685ee6E58637a640514A1eD87BC4",
                            "deployedBlockNumber": 13736379,
                            "spamClassifications": [],
                            "openSeaMetadata": {
                              "floorPrice": 0.0582,
                              "collectionName": "DuskBreakers",
                              "safelistRequestStatus": "verified",
                              "imageUrl": "https://i.seadn.io/gae/LGbFRVdClz6-HDd-7WZKONJ5Ody0sBXTvFOQL71BYo3j2iU2wWCX_zlk-Zs0KEhq1qgXViF-6aG_0WS2MdIVNJx2GRSIIYTiciuf-A?w=500&auto=format",
                              "description": "Being a DuskBreaker means joining a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology. You will be part of a community that directly influences the development of upcoming interactive media and gaming experiences within the DuskBreakers universe. Each of you will play an important role in building out this world. You break it, you take it! \r\n\r\nVisit [DuskBreakers](https://duskbreakers.gg) to learn more.",
                              "externalUrl": "http://duskbreakers.gg",
                              "twitterUsername": "duskbreakers",
                              "discordUrl": "https://discord.gg/duskbreakers",
                              "lastIngestedAt": "2023-04-19T17:25:59.000Z"
                            },
                            "isSpam": {}
                          },
                          "tokenId": "29",
                          "tokenType": "ERC721",
                          "name": "DuskBreaker #29",
                          "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/4eb0b7f434746250ff3c8200d10a2226",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/4eb0b7f434746250ff3c8200d10a2226",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/4eb0b7f434746250ff3c8200d10a2226",
                            "contentType": "image/png",
                            "size": 1480183,
                            "originalUrl": "https://duskbreakers.gg/breaker_images/29.png"
                          },
                          "raw": {
                            "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/29",
                            "metadata": {
                              "image": "https://duskbreakers.gg/breaker_images/29.png",
                              "name": "DuskBreaker #29",
                              "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                              "attributes": [
                                {
                                  "value": "Standard Issue Armor 1 (Orange)",
                                  "trait_type": "Clothes"
                                },
                                {
                                  "value": "Dark Metal",
                                  "trait_type": "SmartSkin"
                                },
                                {
                                  "value": "Base Drone (Purple)",
                                  "trait_type": "Drone"
                                },
                                {
                                  "value": "Thin",
                                  "trait_type": "Eyebrows"
                                },
                                {
                                  "value": "Broad",
                                  "trait_type": "Nose"
                                },
                                {
                                  "value": "Slick Back (Red)",
                                  "trait_type": "Hair"
                                },
                                {
                                  "value": "Sharp (Blue)",
                                  "trait_type": "Eyes"
                                },
                                {
                                  "value": "Smirk (Neutral)",
                                  "trait_type": "Mouth"
                                },
                                {
                                  "value": "Tan",
                                  "trait_type": "Skin Tone"
                                },
                                {
                                  "value": "Purple",
                                  "trait_type": "Background"
                                }
                              ],
                              "external_url": "https://duskbreakers.gg/"
                            },
                            "error": {}
                          },
                          "tokenUri": "https://api.duskbreakers.gg/metadata/duskbreakers/29",
                          "timeLastUpdated": "2023-04-19T21:25:39.704Z",
                          "balance": "1"
                        },
                        {
                          "contract": {
                            "address": "0x209cE666978779756Ae1E747608cD93e4dFf45fD",
                            "name": "Knight of Chains Genesis",
                            "symbol": "Knight of Chains Genesis",
                            "tokenType": "ERC1155",
                            "contractDeployer": "0xA92520aFF50c5A1a4d25FCF90c972AA49EbE5299",
                            "deployedBlockNumber": 14847327,
                            "spamClassifications": [],
                            "totalSupply": {},
                            "openSeaMetadata": {
                              "floorPrice": null,
                              "collectionName": "Knight of Chains Genesis.",
                              "safelistRequestStatus": "not_requested",
                              "imageUrl": "https://i.seadn.io/gae/eRhkkVikIOW_-lDc1moMrZlTcd5DPygPRmTJ69Anb-CfG_RMAxIsichM5kDvfdnXc6gfnKuGZOFCbP_58pUvz57TyUeNbFMKGydHoac?w=500&auto=format",
                              "description": "[The KnightsOfChain] (https://knightsofchain.link) is an exclusive community that can only be entered by owning a Knight.\n\nVisit [Website](https://knightsofchain.link) and get your benefits.\n\n(Genesis Knights #1-#31 were pre-minted by the team, and are held by high ranking community members. OG Knights #32-#231 have special benefits.)",
                              "externalUrl": "https://knightsofchain.link",
                              "twitterUsername": null,
                              "discordUrl": null,
                              "lastIngestedAt": "2023-03-20T03:52:07.000Z"
                            },
                            "isSpam": {}
                          },
                          "tokenId": "97",
                          "tokenType": "ERC1155",
                          "image": {
                            "cachedUrl": {},
                            "thumbnailUrl": {},
                            "pngUrl": {},
                            "contentType": {},
                            "size": {},
                            "originalUrl": {}
                          },
                          "raw": {
                            "tokenUri": "https://knightsofchain.link/ipfs/97",
                            "metadata": {},
                            "error": {}
                          },
                          "tokenUri": "https://knightsofchain.link/ipfs/97",
                          "timeLastUpdated": "2023-04-20T15:44:29.965Z",
                          "name": {},
                          "description": {},
                          "balance": "1"
                        }
                      ],
                      "totalCount": 3,
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      },
                      "pageKey": {}
                    },
                    "type": "json"
                  }
                }
              },
              "Response (withMetadata = false)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "tokenId": "28",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        },
                        {
                          "tokenId": "29",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        }
                      ],
                      "totalCount": 2,
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      },
                      "pageKey": {}
                    },
                    "type": "json"
                  }
                }
              },
              "Response (with contract filtering)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "tokenId": "28",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        },
                        {
                          "tokenId": "29",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        }
                      ],
                      "totalCount": 2,
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      },
                      "pageKey": {}
                    },
                    "type": "json"
                  }
                }
              },
              "Response (with pagination)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "tokenId": "28",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        },
                        {
                          "tokenId": "29",
                          "contractAddress": "0x0bEed7099AF7514cCEDF642CfEA435731176Fb02",
                          "balance": "1"
                        }
                      ],
                      "totalCount": 2,
                      "pageKey": "88434286-7eaa-472d-8739-32a0497c2a18",
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        },
        {
          "displayName": "Owners By NFT",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForNFT"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForNFT"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftOwnershipEndpoints.getOwnersForNFT-v3",
          "name": {
            "originalName": "getOwnersForNFT-v3",
            "camelCase": {
              "unsafeName": "getOwnersForNftV3",
              "safeName": "getOwnersForNftV3"
            },
            "snakeCase": {
              "unsafeName": "get_owners_for_nft_v_3",
              "safeName": "get_owners_for_nft_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_OWNERS_FOR_NFT_V_3",
              "safeName": "GET_OWNERS_FOR_NFT_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetOwnersForNftV3",
              "safeName": "GetOwnersForNftV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Ownership Endpoints_getOwnersForNFT-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftOwnershipEndpointsGetOwnersForNftV3Response200",
                      "safeName": "nftOwnershipEndpointsGetOwnersForNftV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_ownership_endpoints_get_owners_for_nft_v_3_response_200",
                      "safeName": "nft_ownership_endpoints_get_owners_for_nft_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_NFT_V_3_RESPONSE_200",
                      "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_NFT_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftOwnershipEndpointsGetOwnersForNftV3Response200",
                      "safeName": "NftOwnershipEndpointsGetOwnersForNftV3Response200"
                    }
                  },
                  "typeId": "NFT Ownership Endpoints_getOwnersForNFT-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the owner(s) of the specified NFT.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "getOwnersForNFT_response": {
                      "owners": [
                        "0x9f4F78A6c4a5E6F8AFA81631b9120ae3C831b494"
                      ],
                      "pageKey": {}
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getOwnersForNFT - Retrieves the owner(s) for a specific token. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "getOwnersForNFT_response": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getOwnersForNFT"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "owners": [
                        "0x9f4F78A6c4a5E6F8AFA81631b9120ae3C831b494"
                      ],
                      "pageKey": {}
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        },
        {
          "displayName": "Owners By Contract",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForContract"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withTokenBalances",
                  "camelCase": {
                    "unsafeName": "withTokenBalances",
                    "safeName": "withTokenBalances"
                  },
                  "snakeCase": {
                    "unsafeName": "with_token_balances",
                    "safeName": "with_token_balances"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_TOKEN_BALANCES",
                    "safeName": "WITH_TOKEN_BALANCES"
                  },
                  "pascalCase": {
                    "unsafeName": "WithTokenBalances",
                    "safeName": "WithTokenBalances"
                  }
                },
                "wireValue": "withTokenBalances"
              },
              "docs": "Boolean - If set to `true` the query will include the token balances per token id for each owner. `false` by default.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withTokenBalances_example": false
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - used for contracts with >50,000 owners. `pageKey` field can be passed back as request parameter to get the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForContract"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftOwnershipEndpoints.getOwnersForContract-v3",
          "name": {
            "originalName": "getOwnersForContract-v3",
            "camelCase": {
              "unsafeName": "getOwnersForContractV3",
              "safeName": "getOwnersForContractV3"
            },
            "snakeCase": {
              "unsafeName": "get_owners_for_contract_v_3",
              "safeName": "get_owners_for_contract_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_OWNERS_FOR_CONTRACT_V_3",
              "safeName": "GET_OWNERS_FOR_CONTRACT_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetOwnersForContractV3",
              "safeName": "GetOwnersForContractV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Ownership Endpoints_getOwnersForContract-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftOwnershipEndpointsGetOwnersForContractV3Response200",
                      "safeName": "nftOwnershipEndpointsGetOwnersForContractV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_ownership_endpoints_get_owners_for_contract_v_3_response_200",
                      "safeName": "nft_ownership_endpoints_get_owners_for_contract_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_CONTRACT_V_3_RESPONSE_200",
                      "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_OWNERS_FOR_CONTRACT_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftOwnershipEndpointsGetOwnersForContractV3Response200",
                      "safeName": "NftOwnershipEndpointsGetOwnersForContractV3Response200"
                    }
                  },
                  "typeId": "NFT Ownership Endpoints_getOwnersForContract-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a list of all owners for the specified contract.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftOwnershipEndpointsGetOwnersForContractV3Example": {
                      "owners": [
                        {
                          "ownerAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                          "tokenBalances": [
                            {
                              "tokenId": "foo",
                              "balance": 42
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getOwnersForContract - Retrieves all owners associated with a specific NFT contract. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "getOwnersForContractV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getOwnersForContract"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "owners": [
                        {
                          "ownerAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                          "tokenBalances": [
                            {
                              "tokenId": "foo",
                              "balance": 42
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Is Holder Of Contract",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isHolderOfContract"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "wallet",
                  "camelCase": {
                    "unsafeName": "wallet",
                    "safeName": "wallet"
                  },
                  "snakeCase": {
                    "unsafeName": "wallet",
                    "safeName": "wallet"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WALLET",
                    "safeName": "WALLET"
                  },
                  "pascalCase": {
                    "unsafeName": "Wallet",
                    "safeName": "Wallet"
                  }
                },
                "wireValue": "wallet"
              },
              "docs": "String - Wallet address to check for contract ownership.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "wallet_example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isHolderOfContract"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftOwnershipEndpoints.isHolderOfContract-v3",
          "name": {
            "originalName": "isHolderOfContract-v3",
            "camelCase": {
              "unsafeName": "isHolderOfContractV3",
              "safeName": "isHolderOfContractV3"
            },
            "snakeCase": {
              "unsafeName": "is_holder_of_contract_v_3",
              "safeName": "is_holder_of_contract_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "IS_HOLDER_OF_CONTRACT_V_3",
              "safeName": "IS_HOLDER_OF_CONTRACT_V_3"
            },
            "pascalCase": {
              "unsafeName": "IsHolderOfContractV3",
              "safeName": "IsHolderOfContractV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Ownership Endpoints_isHolderOfContract-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftOwnershipEndpointsIsHolderOfContractV3Response200",
                      "safeName": "nftOwnershipEndpointsIsHolderOfContractV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_ownership_endpoints_is_holder_of_contract_v_3_response_200",
                      "safeName": "nft_ownership_endpoints_is_holder_of_contract_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_IS_HOLDER_OF_CONTRACT_V_3_RESPONSE_200",
                      "safeName": "NFT_OWNERSHIP_ENDPOINTS_IS_HOLDER_OF_CONTRACT_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftOwnershipEndpointsIsHolderOfContractV3Response200",
                      "safeName": "NftOwnershipEndpointsIsHolderOfContractV3Response200"
                    }
                  },
                  "typeId": "NFT Ownership Endpoints_isHolderOfContract-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns whether the specified wallet holds any NFT from the given contract.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftOwnershipEndpointsIsHolderOfContractV3Example": {
                      "isHolderOfContract": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "isHolderOfContract - Determines whether a specific wallet holds any NFT from a given contract. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "isHolderOfContractV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/isHolderOfContract"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "wallet": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "isHolderOfContract": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Contracts By Owner",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractsForOwner"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "owner",
                  "camelCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "snakeCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "OWNER",
                    "safeName": "OWNER"
                  },
                  "pascalCase": {
                    "unsafeName": "Owner",
                    "safeName": "Owner"
                  }
                },
                "wireValue": "owner"
              },
              "docs": "String - Address for NFT owner (can be in ENS format for Eth Mainnet).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "owner_example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageSize",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "pageSize"
              },
              "docs": "Number of NFTs to be returned per page. Defaults to 100. Max is 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 100,
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageSize_example": 100
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "includeFilters[]",
                  "camelCase": {
                    "unsafeName": "includeFilters",
                    "safeName": "includeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "include_filters",
                    "safeName": "include_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_FILTERS",
                    "safeName": "INCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeFilters",
                    "safeName": "IncludeFilters"
                  }
                },
                "wireValue": "includeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. Only NFTs that match one or more of these filters will be included in the response. May not be used in conjunction with excludeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "v3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items",
                            "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V3ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "includeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "excludeFilters[]",
                  "camelCase": {
                    "unsafeName": "excludeFilters",
                    "safeName": "excludeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "exclude_filters",
                    "safeName": "exclude_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "EXCLUDE_FILTERS",
                    "safeName": "EXCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "ExcludeFilters",
                    "safeName": "ExcludeFilters"
                  }
                },
                "wireValue": "excludeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. NFTs that match one or more of these filters will be excluded from the response. May not be used in conjunction with includeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "v3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items",
                            "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V3ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "excludeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "orderBy",
                  "camelCase": {
                    "unsafeName": "orderBy",
                    "safeName": "orderBy"
                  },
                  "snakeCase": {
                    "unsafeName": "order_by",
                    "safeName": "order_by"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ORDER_BY",
                    "safeName": "ORDER_BY"
                  },
                  "pascalCase": {
                    "unsafeName": "OrderBy",
                    "safeName": "OrderBy"
                  }
                },
                "wireValue": "orderBy"
              },
              "docs": "Enum - ordering scheme to use for ordering NFTs in the response. If unspecified, NFTs will be ordered by contract address and token ID.\n  - transferTime: NFTs will be ordered by the time they were transferred into the wallet, with newest NFTs first. NOTE: this ordering is only supported on Ethereum Mainnet and Polygon Mainnet.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy",
                      "camelCase": {
                        "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersOrderBy",
                        "safeName": "v3ApiKeyGetContractsForOwnerGetParametersOrderBy"
                      },
                      "snakeCase": {
                        "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_order_by",
                        "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_order_by"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY",
                        "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY"
                      },
                      "pascalCase": {
                        "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy",
                        "safeName": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy"
                      }
                    },
                    "typeId": "V3ApiKeyGetContractsForOwnerGetParametersOrderBy",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderBy_example": "transferTime"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "spamConfidenceLevel",
                  "camelCase": {
                    "unsafeName": "spamConfidenceLevel",
                    "safeName": "spamConfidenceLevel"
                  },
                  "snakeCase": {
                    "unsafeName": "spam_confidence_level",
                    "safeName": "spam_confidence_level"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SPAM_CONFIDENCE_LEVEL",
                    "safeName": "SPAM_CONFIDENCE_LEVEL"
                  },
                  "pascalCase": {
                    "unsafeName": "SpamConfidenceLevel",
                    "safeName": "SpamConfidenceLevel"
                  }
                },
                "wireValue": "spamConfidenceLevel"
              },
              "docs": "Enum - the confidence level at which to filter spam at.\n\nConfidence Levels:\n  - VERY_HIGH\n  - HIGH\n  - MEDIUM\n  - LOW\n\nThe confidence level set means that any spam that is at that confidence level or higher will be filtered out. For example, if the confidence level is HIGH, contracts that we have HIGH or VERY_HIGH confidence in being spam will be filtered out from the response. \nDefaults to VERY_HIGH for Ethereum Mainnet and MEDIUM for Matic Mainnet.\n\n**Please note that this filter is only available on paid tiers. Upgrade your account [here](https://dashboard.alchemyapi.io/settings/billing/).**",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                      "camelCase": {
                        "unsafeName": "v3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                        "safeName": "v3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
                      },
                      "snakeCase": {
                        "unsafeName": "v_3_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level",
                        "safeName": "v_3_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
                        "safeName": "V_3_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
                      },
                      "pascalCase": {
                        "unsafeName": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                        "safeName": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
                      }
                    },
                    "typeId": "V3ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "spamConfidenceLevel_example": "VERY_HIGH"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractsForOwner"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftOwnershipEndpoints.getContractsForOwner-v3",
          "name": {
            "originalName": "getContractsForOwner-v3",
            "camelCase": {
              "unsafeName": "getContractsForOwnerV3",
              "safeName": "getContractsForOwnerV3"
            },
            "snakeCase": {
              "unsafeName": "get_contracts_for_owner_v_3",
              "safeName": "get_contracts_for_owner_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONTRACTS_FOR_OWNER_V_3",
              "safeName": "GET_CONTRACTS_FOR_OWNER_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetContractsForOwnerV3",
              "safeName": "GetContractsForOwnerV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Ownership Endpoints_getContractsForOwner-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftOwnershipEndpointsGetContractsForOwnerV3Response200",
                      "safeName": "nftOwnershipEndpointsGetContractsForOwnerV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_ownership_endpoints_get_contracts_for_owner_v_3_response_200",
                      "safeName": "nft_ownership_endpoints_get_contracts_for_owner_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_CONTRACTS_FOR_OWNER_V_3_RESPONSE_200",
                      "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_CONTRACTS_FOR_OWNER_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftOwnershipEndpointsGetContractsForOwnerV3Response200",
                      "safeName": "NftOwnershipEndpointsGetContractsForOwnerV3Response200"
                    }
                  },
                  "typeId": "NFT Ownership Endpoints_getContractsForOwner-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a list of NFT contracts held by the specified owner address.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Response (withMetadata = false)": {
                      "contracts": [
                        {
                          "address": "0x000386e3f7559d9b6a2f5c46b4ad1a9587d59dc3",
                          "totalBalance": 912,
                          "numDistinctTokensOwned": 80,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000001"
                        },
                        {
                          "address": "0x0015f391949f25c3211063104ad4afc99210f85c",
                          "totalBalance": 17,
                          "numDistinctTokensOwned": 6,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000002"
                        },
                        {
                          "address": "0x005b92d71a934dbe48e985b6469881cf4b0308fc",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000003"
                        }
                      ],
                      "pageKey": "20ef9df5-0d81-42e5-b741-140f595a407b",
                      "totalCount": "2120"
                    },
                    "Response (withMetadata = true)": {
                      "contracts": [
                        {
                          "address": "0x1C310c2fbB0D9755A6b918F990bC8D3504f2c684",
                          "name": "The Wonderful Husl Founder Cards",
                          "symbol": "The Wonderful Husl Founder Cards",
                          "tokenType": "ERC1155",
                          "contractDeployer": "0x0bdD0AEC835F92a465290cdd57b27FBd00376F53",
                          "deployedBlockNumber": 15664554,
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "displayNft": {
                            "tokenId": "233",
                            "name": {}
                          },
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "contentType": "video/mp4",
                            "size": 36190302,
                            "originalUrl": "https://ipfs.io/ipfs/QmX2mM8r33W7KUBQSWXFAKNC2t654EXmWiX9vkrfrEaEnS"
                          },
                          "totalSupply": {},
                          "openSeaMetadata": {
                            "floorPrice": null,
                            "collectionName": "The Wonderful Husl Founder Cards",
                            "safelistRequestStatus": "not_requested",
                            "imageUrl": "https://i.seadn.io/gcs/files/754e38769c80c9d6188444dddb10ec80.png?w=500&auto=format",
                            "description": "[Husl](https://www.huslnft.xyz) is building the bridge between business and NFTs. Husl Founders are the driven, the passionate and the focused members of the community ready to change their future. Owning a Founders Card gets you exclusive perks, early access to business management, and discounts on managed services for your business as NFT. [Learn More](https://www.huslnft.xyz)",
                            "externalUrl": "https://www.huslnft.xyz",
                            "twitterUsername": null,
                            "discordUrl": null,
                            "lastIngestedAt": "2023-03-20T01:36:19.000Z"
                          }
                        }
                      ],
                      "pageKey": "03949322-9b2c-4fdd-aab6-1369e29fa5b2",
                      "totalCount": "2120"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getContractsForOwner - Retrieves all NFT contracts held by a specified owner address.",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Response (withMetadata = false)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getContractsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contracts": [
                        {
                          "address": "0x000386e3f7559d9b6a2f5c46b4ad1a9587d59dc3",
                          "totalBalance": 912,
                          "numDistinctTokensOwned": 80,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000001"
                        },
                        {
                          "address": "0x0015f391949f25c3211063104ad4afc99210f85c",
                          "totalBalance": 17,
                          "numDistinctTokensOwned": 6,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000002"
                        },
                        {
                          "address": "0x005b92d71a934dbe48e985b6469881cf4b0308fc",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000003"
                        }
                      ],
                      "pageKey": "20ef9df5-0d81-42e5-b741-140f595a407b",
                      "totalCount": "2120"
                    },
                    "type": "json"
                  }
                }
              },
              "Response (withMetadata = true)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getContractsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contracts": [
                        {
                          "address": "0x1C310c2fbB0D9755A6b918F990bC8D3504f2c684",
                          "name": "The Wonderful Husl Founder Cards",
                          "symbol": "The Wonderful Husl Founder Cards",
                          "tokenType": "ERC1155",
                          "contractDeployer": "0x0bdD0AEC835F92a465290cdd57b27FBd00376F53",
                          "deployedBlockNumber": 15664554,
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "displayNft": {
                            "tokenId": "233",
                            "name": {}
                          },
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "contentType": "video/mp4",
                            "size": 36190302,
                            "originalUrl": "https://ipfs.io/ipfs/QmX2mM8r33W7KUBQSWXFAKNC2t654EXmWiX9vkrfrEaEnS"
                          },
                          "totalSupply": {},
                          "openSeaMetadata": {
                            "floorPrice": null,
                            "collectionName": "The Wonderful Husl Founder Cards",
                            "safelistRequestStatus": "not_requested",
                            "imageUrl": "https://i.seadn.io/gcs/files/754e38769c80c9d6188444dddb10ec80.png?w=500&auto=format",
                            "description": "[Husl](https://www.huslnft.xyz) is building the bridge between business and NFTs. Husl Founders are the driven, the passionate and the focused members of the community ready to change their future. Owning a Founders Card gets you exclusive perks, early access to business management, and discounts on managed services for your business as NFT. [Learn More](https://www.huslnft.xyz)",
                            "externalUrl": "https://www.huslnft.xyz",
                            "twitterUsername": null,
                            "discordUrl": null,
                            "lastIngestedAt": "2023-03-20T01:36:19.000Z"
                          }
                        }
                      ],
                      "pageKey": "03949322-9b2c-4fdd-aab6-1369e29fa5b2",
                      "totalCount": "2120"
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        },
        {
          "displayName": "Collections By Owner",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getCollectionsForOwner"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "owner",
                  "camelCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "snakeCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "OWNER",
                    "safeName": "OWNER"
                  },
                  "pascalCase": {
                    "unsafeName": "Owner",
                    "safeName": "Owner"
                  }
                },
                "wireValue": "owner"
              },
              "docs": "String - Address for NFT owner (can be in ENS format for Eth Mainnet).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "owner_example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageSize",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "pageSize"
              },
              "docs": "Number of NFTs to be returned per page. Defaults to 100. Max is 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 100,
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageSize_example": 100
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "includeFilters[]",
                  "camelCase": {
                    "unsafeName": "includeFilters",
                    "safeName": "includeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "include_filters",
                    "safeName": "include_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_FILTERS",
                    "safeName": "INCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeFilters",
                    "safeName": "IncludeFilters"
                  }
                },
                "wireValue": "includeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. Only NFTs that match one or more of these filters will be included in the response. May not be used in conjunction with excludeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "v3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_3_api_key_get_collections_for_owner_get_parameters_include_filters_schema_items",
                            "safeName": "v_3_api_key_get_collections_for_owner_get_parameters_include_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V3ApiKeyGetCollectionsForOwnerGetParametersIncludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "includeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "excludeFilters[]",
                  "camelCase": {
                    "unsafeName": "excludeFilters",
                    "safeName": "excludeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "exclude_filters",
                    "safeName": "exclude_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "EXCLUDE_FILTERS",
                    "safeName": "EXCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "ExcludeFilters",
                    "safeName": "ExcludeFilters"
                  }
                },
                "wireValue": "excludeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. NFTs that match one or more of these filters will be excluded from the response. May not be used in conjunction with includeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "v3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_3_api_key_get_collections_for_owner_get_parameters_exclude_filters_schema_items",
                            "safeName": "v_3_api_key_get_collections_for_owner_get_parameters_exclude_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_3_API_KEY_GET_COLLECTIONS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V3ApiKeyGetCollectionsForOwnerGetParametersExcludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "excludeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getCollectionsForOwner"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftOwnershipEndpoints.getCollectionsForOwner-v3",
          "name": {
            "originalName": "getCollectionsForOwner-v3",
            "camelCase": {
              "unsafeName": "getCollectionsForOwnerV3",
              "safeName": "getCollectionsForOwnerV3"
            },
            "snakeCase": {
              "unsafeName": "get_collections_for_owner_v_3",
              "safeName": "get_collections_for_owner_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_COLLECTIONS_FOR_OWNER_V_3",
              "safeName": "GET_COLLECTIONS_FOR_OWNER_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetCollectionsForOwnerV3",
              "safeName": "GetCollectionsForOwnerV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Ownership Endpoints_getCollectionsForOwner-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftOwnershipEndpointsGetCollectionsForOwnerV3Response200",
                      "safeName": "nftOwnershipEndpointsGetCollectionsForOwnerV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_ownership_endpoints_get_collections_for_owner_v_3_response_200",
                      "safeName": "nft_ownership_endpoints_get_collections_for_owner_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_OWNERSHIP_ENDPOINTS_GET_COLLECTIONS_FOR_OWNER_V_3_RESPONSE_200",
                      "safeName": "NFT_OWNERSHIP_ENDPOINTS_GET_COLLECTIONS_FOR_OWNER_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftOwnershipEndpointsGetCollectionsForOwnerV3Response200",
                      "safeName": "NftOwnershipEndpointsGetCollectionsForOwnerV3Response200"
                    }
                  },
                  "typeId": "NFT Ownership Endpoints_getCollectionsForOwner-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a list of NFT collections held by the specified owner address.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Response (withMetadata = false)": {
                      "collections": [
                        {
                          "name": "The Humanoids ",
                          "slug": "thehumanoids",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": "false",
                          "address": "0x3a5051566b2241285BE871f650C445A88A970edd"
                        }
                      ],
                      "pageKey": "20ef9df5-0d81-42e5-b741-140f595a407b",
                      "totalCount": "2120"
                    },
                    "Response (withMetadata = true)": {
                      "collections": [
                        {
                          "name": "The Humanoids",
                          "slug": "thehumanoids",
                          "floorPrice": {
                            "marketplace": "seaport",
                            "floorPrice": 0.37,
                            "priceCurrency": "ETH"
                          },
                          "description": "The Humanoids (Gen 1) is a collection of 10,000 unique 3D 4K personalities.\n\n[GEN 1.1 (CUSTOMIZABLE PFP)](https://opensea.io/collection/the-humanoids-gen-1-1/) | [DISCORD](https://discord.gg/thehumanoids) | [TWITTER](https://twitter.com/thehumanoids)\n\nStake your Gen 1 Humanoid and earn $ION to customize Gen 1.1 Humanoids using our proprietary Trait Factory.\n\nNote: Holder Count is inaccurate as Humanoids are currently being staked.",
                          "externalUrl": "http://thehumanoids.com",
                          "twitterUsername": "thehumanoids",
                          "discordUrl": "https://discord.gg/thehumanoids",
                          "contract": {
                            "address": "0x3a5051566b2241285BE871f650C445A88A970edd",
                            "name": "The Humanoids ",
                            "symbol": "HMNDS",
                            "tokenType": "ERC721",
                            "contractDeployer": "0xB8256c1c6654cedb9607644b07deC91Ca15fb9f6",
                            "deployedBlockNumber": 13313830
                          },
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": "false",
                          "displayNft": {
                            "tokenId": "5880",
                            "name": "Humanoid #5880"
                          },
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/57dab2f078ca70e310c387064f66daaa",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/57dab2f078ca70e310c387064f66daaa",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/57dab2f078ca70e310c387064f66daaa",
                            "contentType": "image/jpeg",
                            "size": 1898134,
                            "originalUrl": "https://ipfs.io/ipfs/QmcjYgWMokcqnaSGZ31GVbGDe9V9z1KeNerRGfgeBEkn4k/5880.jpg"
                          }
                        }
                      ],
                      "pageKey": "03949322-9b2c-4fdd-aab6-1369e29fa5b2",
                      "totalCount": "2120"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves all NFT collections held by a specified owner address.\n\n<Note>This endpoint is only supported on Ethereum. Use `getContractsForOwner` for support across all other chains we support!</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Response (withMetadata = false)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getCollectionsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "collections": [
                        {
                          "name": "The Humanoids ",
                          "slug": "thehumanoids",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": "false",
                          "address": "0x3a5051566b2241285BE871f650C445A88A970edd"
                        }
                      ],
                      "pageKey": "20ef9df5-0d81-42e5-b741-140f595a407b",
                      "totalCount": "2120"
                    },
                    "type": "json"
                  }
                }
              },
              "Response (withMetadata = true)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getCollectionsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "collections": [
                        {
                          "name": "The Humanoids",
                          "slug": "thehumanoids",
                          "floorPrice": {
                            "marketplace": "seaport",
                            "floorPrice": 0.37,
                            "priceCurrency": "ETH"
                          },
                          "description": "The Humanoids (Gen 1) is a collection of 10,000 unique 3D 4K personalities.\n\n[GEN 1.1 (CUSTOMIZABLE PFP)](https://opensea.io/collection/the-humanoids-gen-1-1/) | [DISCORD](https://discord.gg/thehumanoids) | [TWITTER](https://twitter.com/thehumanoids)\n\nStake your Gen 1 Humanoid and earn $ION to customize Gen 1.1 Humanoids using our proprietary Trait Factory.\n\nNote: Holder Count is inaccurate as Humanoids are currently being staked.",
                          "externalUrl": "http://thehumanoids.com",
                          "twitterUsername": "thehumanoids",
                          "discordUrl": "https://discord.gg/thehumanoids",
                          "contract": {
                            "address": "0x3a5051566b2241285BE871f650C445A88A970edd",
                            "name": "The Humanoids ",
                            "symbol": "HMNDS",
                            "tokenType": "ERC721",
                            "contractDeployer": "0xB8256c1c6654cedb9607644b07deC91Ca15fb9f6",
                            "deployedBlockNumber": 13313830
                          },
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": "false",
                          "displayNft": {
                            "tokenId": "5880",
                            "name": "Humanoid #5880"
                          },
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/57dab2f078ca70e310c387064f66daaa",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/57dab2f078ca70e310c387064f66daaa",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/57dab2f078ca70e310c387064f66daaa",
                            "contentType": "image/jpeg",
                            "size": 1898134,
                            "originalUrl": "https://ipfs.io/ipfs/QmcjYgWMokcqnaSGZ31GVbGDe9V9z1KeNerRGfgeBEkn4k/5880.jpg"
                          }
                        }
                      ],
                      "pageKey": "03949322-9b2c-4fdd-aab6-1369e29fa5b2",
                      "totalCount": "2120"
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "service_nftMetadataEndpoints": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "NFT Metadata Endpoints",
              "camelCase": {
                "unsafeName": "nftMetadataEndpoints",
                "safeName": "nftMetadataEndpoints"
              },
              "snakeCase": {
                "unsafeName": "nft_metadata_endpoints",
                "safeName": "nft_metadata_endpoints"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_METADATA_ENDPOINTS",
                "safeName": "NFT_METADATA_ENDPOINTS"
              },
              "pascalCase": {
                "unsafeName": "NftMetadataEndpoints",
                "safeName": "NftMetadataEndpoints"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "NFT Metadata Endpoints",
            "camelCase": {
              "unsafeName": "nftMetadataEndpoints",
              "safeName": "nftMetadataEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_metadata_endpoints",
              "safeName": "nft_metadata_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_METADATA_ENDPOINTS",
              "safeName": "NFT_METADATA_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftMetadataEndpoints",
              "safeName": "NftMetadataEndpoints"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "NFTs By Contract",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForContract"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "startToken",
                  "camelCase": {
                    "unsafeName": "startToken",
                    "safeName": "startToken"
                  },
                  "snakeCase": {
                    "unsafeName": "start_token",
                    "safeName": "start_token"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "START_TOKEN",
                    "safeName": "START_TOKEN"
                  },
                  "pascalCase": {
                    "unsafeName": "StartToken",
                    "safeName": "StartToken"
                  }
                },
                "wireValue": "startToken"
              },
              "docs": "String - A tokenID offset used for pagination. Can be a hex string, or a decimal. Users can specify the offset themselves to start from a custom offset, or to fetch multiple token ranges in parallel.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "startToken_example": "startToken"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "limit",
                  "camelCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "snakeCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIMIT",
                    "safeName": "LIMIT"
                  },
                  "pascalCase": {
                    "unsafeName": "Limit",
                    "safeName": "Limit"
                  }
                },
                "wireValue": "limit"
              },
              "docs": "Integer - Sets the total number of NFTs returned in the response. Defaults to 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenUriTimeoutInMs",
                  "camelCase": {
                    "unsafeName": "tokenUriTimeoutInMs",
                    "safeName": "tokenUriTimeoutInMs"
                  },
                  "snakeCase": {
                    "unsafeName": "token_uri_timeout_in_ms",
                    "safeName": "token_uri_timeout_in_ms"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                    "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenUriTimeoutInMs",
                    "safeName": "TokenUriTimeoutInMs"
                  }
                },
                "wireValue": "tokenUriTimeoutInMs"
              },
              "docs": "No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenUriTimeoutInMs_example": 42
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForContract"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.getNFTsForContract-v3",
          "name": {
            "originalName": "getNFTsForContract-v3",
            "camelCase": {
              "unsafeName": "getNfTsForContractV3",
              "safeName": "getNfTsForContractV3"
            },
            "snakeCase": {
              "unsafeName": "get_nf_ts_for_contract_v_3",
              "safeName": "get_nf_ts_for_contract_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NF_TS_FOR_CONTRACT_V_3",
              "safeName": "GET_NF_TS_FOR_CONTRACT_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetNfTsForContractV3",
              "safeName": "GetNfTsForContractV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_getNFTsForContract-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsGetNfTsForContractV3Response200",
                      "safeName": "nftMetadataEndpointsGetNfTsForContractV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_get_nf_ts_for_contract_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_get_nf_ts_for_contract_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_CONTRACT_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_CONTRACT_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsGetNfTsForContractV3Response200",
                      "safeName": "NftMetadataEndpointsGetNfTsForContractV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_getNFTsForContract-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a list of NFTs associated with the specified contract address.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsGetNfTsForContractV3Example": {
                      "nfts": [
                        {
                          "contract": {
                            "address": "foo",
                            "name": "foo",
                            "symbol": "foo",
                            "totalSupply": "foo",
                            "tokenType": "ERC721",
                            "contractDeployer": "foo",
                            "deployedBlockNumber": 42,
                            "openseaMetadata": {
                              "floorPrice": 42,
                              "collectionName": "foo",
                              "safelistRequestStatus": "foo",
                              "imageUrl": "foo",
                              "description": "foo",
                              "externalUrl": "foo",
                              "twitterUsername": "foo",
                              "discordUrl": "foo",
                              "lastIngestedAt": "foo"
                            },
                            "isSpam": "foo",
                            "spamClassifications": [
                              "foo"
                            ]
                          },
                          "tokenId": "44",
                          "tokenType": "foo",
                          "name": "foo",
                          "description": "foo",
                          "image": {
                            "cachedUrl": "foo",
                            "thumbnailUrl": "foo",
                            "pngUrl": "foo",
                            "contentType": "foo",
                            "size": 42,
                            "originalUrl": "foo"
                          },
                          "raw": {
                            "tokenUri": "foo",
                            "metadata": {
                              "image": "foo",
                              "name": "foo",
                              "description": "foo",
                              "attributes": [
                                {
                                  "value": "foo",
                                  "trait_type": "foo"
                                }
                              ]
                            },
                            "error": "foo"
                          },
                          "collection": {
                            "name": "foo",
                            "slug": "foo",
                            "externalUrl": "foo",
                            "bannerImageUrl": "foo"
                          },
                          "tokenUri": "foo",
                          "timeLastUpdated": "foo",
                          "acquiredAt": {
                            "blockTimestamp": "foo",
                            "blockNumber": "foo"
                          }
                        }
                      ],
                      "pageKey": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getNFTsForContract - Retrieves all NFTs associated with a specific NFT contract. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "getNfTsForContractV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTsForContract"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "nfts": [
                        {
                          "contract": {
                            "address": "foo",
                            "name": "foo",
                            "symbol": "foo",
                            "totalSupply": "foo",
                            "tokenType": "ERC721",
                            "contractDeployer": "foo",
                            "deployedBlockNumber": 42,
                            "openseaMetadata": {
                              "floorPrice": 42,
                              "collectionName": "foo",
                              "safelistRequestStatus": "foo",
                              "imageUrl": "foo",
                              "description": "foo",
                              "externalUrl": "foo",
                              "twitterUsername": "foo",
                              "discordUrl": "foo",
                              "lastIngestedAt": "foo"
                            },
                            "isSpam": "foo",
                            "spamClassifications": [
                              "foo"
                            ]
                          },
                          "tokenId": "44",
                          "tokenType": "foo",
                          "name": "foo",
                          "description": "foo",
                          "image": {
                            "cachedUrl": "foo",
                            "thumbnailUrl": "foo",
                            "pngUrl": "foo",
                            "contentType": "foo",
                            "size": 42,
                            "originalUrl": "foo"
                          },
                          "raw": {
                            "tokenUri": "foo",
                            "metadata": {
                              "image": "foo",
                              "name": "foo",
                              "description": "foo",
                              "attributes": [
                                {
                                  "value": "foo",
                                  "trait_type": "foo"
                                }
                              ]
                            },
                            "error": "foo"
                          },
                          "collection": {
                            "name": "foo",
                            "slug": "foo",
                            "externalUrl": "foo",
                            "bannerImageUrl": "foo"
                          },
                          "tokenUri": "foo",
                          "timeLastUpdated": "foo",
                          "acquiredAt": {
                            "blockTimestamp": "foo",
                            "blockNumber": "foo"
                          }
                        }
                      ],
                      "pageKey": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "NFTs By Collection",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForCollection"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "collectionSlug",
                  "camelCase": {
                    "unsafeName": "collectionSlug",
                    "safeName": "collectionSlug"
                  },
                  "snakeCase": {
                    "unsafeName": "collection_slug",
                    "safeName": "collection_slug"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "COLLECTION_SLUG",
                    "safeName": "COLLECTION_SLUG"
                  },
                  "pascalCase": {
                    "unsafeName": "CollectionSlug",
                    "safeName": "CollectionSlug"
                  }
                },
                "wireValue": "collectionSlug"
              },
              "docs": "String - OpenSea slug for the NFT collection.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "boredapeyachtclub",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "collectionSlug_example": "boredapeyachtclub"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "startToken",
                  "camelCase": {
                    "unsafeName": "startToken",
                    "safeName": "startToken"
                  },
                  "snakeCase": {
                    "unsafeName": "start_token",
                    "safeName": "start_token"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "START_TOKEN",
                    "safeName": "START_TOKEN"
                  },
                  "pascalCase": {
                    "unsafeName": "StartToken",
                    "safeName": "StartToken"
                  }
                },
                "wireValue": "startToken"
              },
              "docs": "String - A tokenID offset used for pagination. Can be a hex string, or a decimal. Users can specify the offset themselves to start from a custom offset, or to fetch multiple token ranges in parallel.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "startToken_example": "startToken"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "limit",
                  "camelCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "snakeCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIMIT",
                    "safeName": "LIMIT"
                  },
                  "pascalCase": {
                    "unsafeName": "Limit",
                    "safeName": "Limit"
                  }
                },
                "wireValue": "limit"
              },
              "docs": "Integer - Sets the total number of NFTs returned in the response. Defaults to 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenUriTimeoutInMs",
                  "camelCase": {
                    "unsafeName": "tokenUriTimeoutInMs",
                    "safeName": "tokenUriTimeoutInMs"
                  },
                  "snakeCase": {
                    "unsafeName": "token_uri_timeout_in_ms",
                    "safeName": "token_uri_timeout_in_ms"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                    "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenUriTimeoutInMs",
                    "safeName": "TokenUriTimeoutInMs"
                  }
                },
                "wireValue": "tokenUriTimeoutInMs"
              },
              "docs": "No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenUriTimeoutInMs_example": 42
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForCollection"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.getNFTsForCollection-v3",
          "name": {
            "originalName": "getNFTsForCollection-v3",
            "camelCase": {
              "unsafeName": "getNfTsForCollectionV3",
              "safeName": "getNfTsForCollectionV3"
            },
            "snakeCase": {
              "unsafeName": "get_nf_ts_for_collection_v_3",
              "safeName": "get_nf_ts_for_collection_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NF_TS_FOR_COLLECTION_V_3",
              "safeName": "GET_NF_TS_FOR_COLLECTION_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetNfTsForCollectionV3",
              "safeName": "GetNfTsForCollectionV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_getNFTsForCollection-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsGetNfTsForCollectionV3Response200",
                      "safeName": "nftMetadataEndpointsGetNfTsForCollectionV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_get_nf_ts_for_collection_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_get_nf_ts_for_collection_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_COLLECTION_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_GET_NF_TS_FOR_COLLECTION_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsGetNfTsForCollectionV3Response200",
                      "safeName": "NftMetadataEndpointsGetNfTsForCollectionV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_getNFTsForCollection-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a list of NFTs associated with the specified collection.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsGetNfTsForCollectionV3Example": {
                      "nfts": [
                        {
                          "id": {
                            "tokenId": "44",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "tokenUri": {
                            "raw": "foo",
                            "gateway": "foo"
                          },
                          "metadata": {
                            "image": "foo",
                            "external_url": "foo",
                            "background_color": "foo",
                            "name": "foo",
                            "description": "foo",
                            "attributes": [
                              {
                                "value": "foo",
                                "trait_type": "foo"
                              }
                            ],
                            "media": [
                              {
                                "raw": "foo",
                                "gateway": "foo",
                                "thumbnail": "foo",
                                "format": "foo",
                                "bytes": 42
                              }
                            ]
                          },
                          "timeLastUpdated": "foo",
                          "contractMetadata": {
                            "name": "foo",
                            "symbol": "foo",
                            "totalSupply": "foo",
                            "tokenType": "ERC721",
                            "contractDeployer": "foo",
                            "deployedBlockNumber": 42,
                            "opensea": {
                              "floorPrice": 42,
                              "collectionName": "foo",
                              "safelistRequestStatus": "foo",
                              "imageUrl": "foo",
                              "description": "foo",
                              "externalUrl": "foo",
                              "twitterUsername": "foo",
                              "discordUrl": "foo",
                              "lastIngestedAt": "foo"
                            }
                          }
                        }
                      ],
                      "nextToken": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getNFTsForCollection - Retrieves all NFTs associated with a specific NFT collection. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "getNfTsForCollectionV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTsForCollection"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "nfts": [
                        {
                          "id": {
                            "tokenId": "44",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "tokenUri": {
                            "raw": "foo",
                            "gateway": "foo"
                          },
                          "metadata": {
                            "image": "foo",
                            "external_url": "foo",
                            "background_color": "foo",
                            "name": "foo",
                            "description": "foo",
                            "attributes": [
                              {
                                "value": "foo",
                                "trait_type": "foo"
                              }
                            ],
                            "media": [
                              {
                                "raw": "foo",
                                "gateway": "foo",
                                "thumbnail": "foo",
                                "format": "foo",
                                "bytes": 42
                              }
                            ]
                          },
                          "timeLastUpdated": "foo",
                          "contractMetadata": {
                            "name": "foo",
                            "symbol": "foo",
                            "totalSupply": "foo",
                            "tokenType": "ERC721",
                            "contractDeployer": "foo",
                            "deployedBlockNumber": 42,
                            "opensea": {
                              "floorPrice": 42,
                              "collectionName": "foo",
                              "safelistRequestStatus": "foo",
                              "imageUrl": "foo",
                              "description": "foo",
                              "externalUrl": "foo",
                              "twitterUsername": "foo",
                              "discordUrl": "foo",
                              "lastIngestedAt": "foo"
                            }
                          }
                        }
                      ],
                      "nextToken": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "NFT Metadata By Token ID",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenType",
                  "camelCase": {
                    "unsafeName": "tokenType",
                    "safeName": "tokenType"
                  },
                  "snakeCase": {
                    "unsafeName": "token_type",
                    "safeName": "token_type"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_TYPE",
                    "safeName": "TOKEN_TYPE"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenType",
                    "safeName": "TokenType"
                  }
                },
                "wireValue": "tokenType"
              },
              "docs": "String - 'ERC721' or 'ERC1155'; specifies type of token to query for. API requests will perform faster if this is specified.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenType_example": "tokenType"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenUriTimeoutInMs",
                  "camelCase": {
                    "unsafeName": "tokenUriTimeoutInMs",
                    "safeName": "tokenUriTimeoutInMs"
                  },
                  "snakeCase": {
                    "unsafeName": "token_uri_timeout_in_ms",
                    "safeName": "token_uri_timeout_in_ms"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                    "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenUriTimeoutInMs",
                    "safeName": "TokenUriTimeoutInMs"
                  }
                },
                "wireValue": "tokenUriTimeoutInMs"
              },
              "docs": "No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenUriTimeoutInMs_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "refreshCache",
                  "camelCase": {
                    "unsafeName": "refreshCache",
                    "safeName": "refreshCache"
                  },
                  "snakeCase": {
                    "unsafeName": "refresh_cache",
                    "safeName": "refresh_cache"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REFRESH_CACHE",
                    "safeName": "REFRESH_CACHE"
                  },
                  "pascalCase": {
                    "unsafeName": "RefreshCache",
                    "safeName": "RefreshCache"
                  }
                },
                "wireValue": "refreshCache"
              },
              "docs": "Defaults to false for faster response times.  If true will refresh metadata for given token. If false will check the cache and use it or refresh if cache doesn't exist.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "refreshCache_example": false
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.getNFTMetadata-v3",
          "name": {
            "originalName": "getNFTMetadata-v3",
            "camelCase": {
              "unsafeName": "getNftMetadataV3",
              "safeName": "getNftMetadataV3"
            },
            "snakeCase": {
              "unsafeName": "get_nft_metadata_v_3",
              "safeName": "get_nft_metadata_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NFT_METADATA_V_3",
              "safeName": "GET_NFT_METADATA_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetNftMetadataV3",
              "safeName": "GetNftMetadataV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_getNFTMetadata-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsGetNftMetadataV3Response200",
                      "safeName": "nftMetadataEndpointsGetNftMetadataV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_get_nft_metadata_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_get_nft_metadata_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_GET_NFT_METADATA_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_GET_NFT_METADATA_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsGetNftMetadataV3Response200",
                      "safeName": "NftMetadataEndpointsGetNftMetadataV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_getNFTMetadata-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the metadata of the specified NFT.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsGetNftMetadataV3Example": {
                      "contract": {
                        "address": "foo",
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "openseaMetadata": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        },
                        "isSpam": "foo",
                        "spamClassifications": [
                          "foo"
                        ]
                      },
                      "tokenId": "44",
                      "tokenType": "foo",
                      "name": "foo",
                      "description": "foo",
                      "image": {
                        "cachedUrl": "foo",
                        "thumbnailUrl": "foo",
                        "pngUrl": "foo",
                        "contentType": "foo",
                        "size": 42,
                        "originalUrl": "foo"
                      },
                      "raw": {
                        "tokenUri": "foo",
                        "metadata": {
                          "image": "foo",
                          "name": "foo",
                          "description": "foo",
                          "attributes": [
                            {
                              "value": "foo",
                              "trait_type": "foo"
                            }
                          ]
                        },
                        "error": "foo"
                      },
                      "collection": {
                        "name": "foo",
                        "slug": "foo",
                        "externalUrl": "foo",
                        "bannerImageUrl": "foo"
                      },
                      "tokenUri": "foo",
                      "timeLastUpdated": "foo",
                      "acquiredAt": {
                        "blockTimestamp": "foo",
                        "blockNumber": "foo"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getNFTMetadata - Retrieves the metadata associated with a specific NFT. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "getNftMetadataV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTMetadata"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contract": {
                        "address": "foo",
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "openseaMetadata": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        },
                        "isSpam": "foo",
                        "spamClassifications": [
                          "foo"
                        ]
                      },
                      "tokenId": "44",
                      "tokenType": "foo",
                      "name": "foo",
                      "description": "foo",
                      "image": {
                        "cachedUrl": "foo",
                        "thumbnailUrl": "foo",
                        "pngUrl": "foo",
                        "contentType": "foo",
                        "size": 42,
                        "originalUrl": "foo"
                      },
                      "raw": {
                        "tokenUri": "foo",
                        "metadata": {
                          "image": "foo",
                          "name": "foo",
                          "description": "foo",
                          "attributes": [
                            {
                              "value": "foo",
                              "trait_type": "foo"
                            }
                          ]
                        },
                        "error": "foo"
                      },
                      "collection": {
                        "name": "foo",
                        "slug": "foo",
                        "externalUrl": "foo",
                        "bannerImageUrl": "foo"
                      },
                      "tokenUri": "foo",
                      "timeLastUpdated": "foo",
                      "acquiredAt": {
                        "blockTimestamp": "foo",
                        "blockNumber": "foo"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "NFT Metadata By Token ID [Batch]",
          "method": "POST",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadataBatch"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadataBatch"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.getNFTMetadataBatch-v3",
          "name": {
            "originalName": "getNFTMetadataBatch-v3",
            "camelCase": {
              "unsafeName": "getNftMetadataBatchV3",
              "safeName": "getNftMetadataBatchV3"
            },
            "snakeCase": {
              "unsafeName": "get_nft_metadata_batch_v_3",
              "safeName": "get_nft_metadata_batch_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NFT_METADATA_BATCH_V_3",
              "safeName": "GET_NFT_METADATA_BATCH_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetNftMetadataBatchV3",
              "safeName": "GetNftMetadataBatchV3"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "NFT Metadata Endpoints_getNFTMetadataBatch-v3_Request",
              "camelCase": {
                "unsafeName": "nftMetadataEndpointsGetNftMetadataBatchV3Request",
                "safeName": "nftMetadataEndpointsGetNftMetadataBatchV3Request"
              },
              "snakeCase": {
                "unsafeName": "nft_metadata_endpoints_get_nft_metadata_batch_v_3_request",
                "safeName": "nft_metadata_endpoints_get_nft_metadata_batch_v_3_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_METADATA_ENDPOINTS_GET_NFT_METADATA_BATCH_V_3_REQUEST",
                "safeName": "NFT_METADATA_ENDPOINTS_GET_NFT_METADATA_BATCH_V_3_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "NftMetadataEndpointsGetNftMetadataBatchV3Request",
                "safeName": "NftMetadataEndpointsGetNftMetadataBatchV3Request"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "tokens",
                    "camelCase": {
                      "unsafeName": "tokens",
                      "safeName": "tokens"
                    },
                    "snakeCase": {
                      "unsafeName": "tokens",
                      "safeName": "tokens"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOKENS",
                      "safeName": "TOKENS"
                    },
                    "pascalCase": {
                      "unsafeName": "Tokens",
                      "safeName": "Tokens"
                    }
                  },
                  "wireValue": "tokens"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                            "camelCase": {
                              "unsafeName": "v3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                              "safeName": "v3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
                            },
                            "snakeCase": {
                              "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items",
                              "safeName": "v_3_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS",
                              "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS"
                            },
                            "pascalCase": {
                              "unsafeName": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                              "safeName": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
                            }
                          },
                          "typeId": "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "List of token objects to batch request NFT metadata for. Maximum 100.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokens_example_autogenerated": [
                      {}
                    ]
                  }
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "tokenUriTimeoutInMs",
                    "camelCase": {
                      "unsafeName": "tokenUriTimeoutInMs",
                      "safeName": "tokenUriTimeoutInMs"
                    },
                    "snakeCase": {
                      "unsafeName": "token_uri_timeout_in_ms",
                      "safeName": "token_uri_timeout_in_ms"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                      "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                    },
                    "pascalCase": {
                      "unsafeName": "TokenUriTimeoutInMs",
                      "safeName": "TokenUriTimeoutInMs"
                    }
                  },
                  "wireValue": "tokenUriTimeoutInMs"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokenUriTimeoutInMs_example_autogenerated": 42
                  }
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "refreshCache",
                    "camelCase": {
                      "unsafeName": "refreshCache",
                      "safeName": "refreshCache"
                    },
                    "snakeCase": {
                      "unsafeName": "refresh_cache",
                      "safeName": "refresh_cache"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REFRESH_CACHE",
                      "safeName": "REFRESH_CACHE"
                    },
                    "pascalCase": {
                      "unsafeName": "RefreshCache",
                      "safeName": "RefreshCache"
                    }
                  },
                  "wireValue": "refreshCache"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "default": false,
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V3ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaRefreshCache_example_autogenerated": false
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "nftMetadataEndpointsGetNftMetadataBatchV3Example": {}
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "v3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items",
                          "safeName": "v_3_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
                          "safeName": "V_3_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Returns an array of NFT metadata corresponding to the batch query.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsGetNftMetadataBatchV3Example": [
                      {
                        "contract": {
                          "address": "foo",
                          "name": "foo",
                          "symbol": "foo",
                          "totalSupply": "foo",
                          "tokenType": "ERC721",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "openseaMetadata": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          },
                          "isSpam": "foo",
                          "spamClassifications": [
                            "foo"
                          ]
                        },
                        "tokenId": "44",
                        "tokenType": "foo",
                        "name": "foo",
                        "description": "foo",
                        "image": {
                          "cachedUrl": "foo",
                          "thumbnailUrl": "foo",
                          "pngUrl": "foo",
                          "contentType": "foo",
                          "size": 42,
                          "originalUrl": "foo"
                        },
                        "raw": {
                          "tokenUri": "foo",
                          "metadata": {
                            "image": "foo",
                            "name": "foo",
                            "description": "foo",
                            "attributes": [
                              {
                                "value": "foo",
                                "trait_type": "foo"
                              }
                            ]
                          },
                          "error": "foo"
                        },
                        "collection": {
                          "name": "foo",
                          "slug": "foo",
                          "externalUrl": "foo",
                          "bannerImageUrl": "foo"
                        },
                        "tokenUri": "foo",
                        "timeLastUpdated": "foo",
                        "acquiredAt": {
                          "blockTimestamp": "foo",
                          "blockNumber": "foo"
                        }
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getNFTMetadataBatch - Retrieves metadata for up to 100 specified NFT contracts in a single request. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "nftMetadataEndpointsGetNftMetadataBatchV3Example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/docs-demo/getNFTMetadataBatch"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "contract": {
                          "address": "foo",
                          "name": "foo",
                          "symbol": "foo",
                          "totalSupply": "foo",
                          "tokenType": "ERC721",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "openseaMetadata": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          },
                          "isSpam": "foo",
                          "spamClassifications": [
                            "foo"
                          ]
                        },
                        "tokenId": "44",
                        "tokenType": "foo",
                        "name": "foo",
                        "description": "foo",
                        "image": {
                          "cachedUrl": "foo",
                          "thumbnailUrl": "foo",
                          "pngUrl": "foo",
                          "contentType": "foo",
                          "size": 42,
                          "originalUrl": "foo"
                        },
                        "raw": {
                          "tokenUri": "foo",
                          "metadata": {
                            "image": "foo",
                            "name": "foo",
                            "description": "foo",
                            "attributes": [
                              {
                                "value": "foo",
                                "trait_type": "foo"
                              }
                            ]
                          },
                          "error": "foo"
                        },
                        "collection": {
                          "name": "foo",
                          "slug": "foo",
                          "externalUrl": "foo",
                          "bannerImageUrl": "foo"
                        },
                        "tokenUri": "foo",
                        "timeLastUpdated": "foo",
                        "acquiredAt": {
                          "blockTimestamp": "foo",
                          "blockNumber": "foo"
                        }
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Contract Metadata By Address",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.getContractMetadata-v3",
          "name": {
            "originalName": "getContractMetadata-v3",
            "camelCase": {
              "unsafeName": "getContractMetadataV3",
              "safeName": "getContractMetadataV3"
            },
            "snakeCase": {
              "unsafeName": "get_contract_metadata_v_3",
              "safeName": "get_contract_metadata_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONTRACT_METADATA_V_3",
              "safeName": "GET_CONTRACT_METADATA_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetContractMetadataV3",
              "safeName": "GetContractMetadataV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_getContractMetadata-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsGetContractMetadataV3Response200",
                      "safeName": "nftMetadataEndpointsGetContractMetadataV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_get_contract_metadata_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_get_contract_metadata_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_GET_CONTRACT_METADATA_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_GET_CONTRACT_METADATA_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsGetContractMetadataV3Response200",
                      "safeName": "NftMetadataEndpointsGetContractMetadataV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_getContractMetadata-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the contract metadata for the specified address.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsGetContractMetadataV3Example": {
                      "address": "foo",
                      "name": "foo",
                      "symbol": "foo",
                      "totalSupply": "foo",
                      "tokenType": "ERC721",
                      "contractDeployer": "foo",
                      "deployedBlockNumber": 42,
                      "openseaMetadata": {
                        "floorPrice": 42,
                        "collectionName": "foo",
                        "safelistRequestStatus": "foo",
                        "imageUrl": "foo",
                        "description": "foo",
                        "externalUrl": "foo",
                        "twitterUsername": "foo",
                        "discordUrl": "foo",
                        "lastIngestedAt": "foo"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getContractMetadata - Retrieves high-level collection or contract-level information for an NFT. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "getContractMetadataV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getContractMetadata"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "address": "foo",
                      "name": "foo",
                      "symbol": "foo",
                      "totalSupply": "foo",
                      "tokenType": "ERC721",
                      "contractDeployer": "foo",
                      "deployedBlockNumber": 42,
                      "openseaMetadata": {
                        "floorPrice": 42,
                        "collectionName": "foo",
                        "safelistRequestStatus": "foo",
                        "imageUrl": "foo",
                        "description": "foo",
                        "externalUrl": "foo",
                        "twitterUsername": "foo",
                        "discordUrl": "foo",
                        "lastIngestedAt": "foo"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Collection Metadata By Slug",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getCollectionMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "collectionSlug",
                  "camelCase": {
                    "unsafeName": "collectionSlug",
                    "safeName": "collectionSlug"
                  },
                  "snakeCase": {
                    "unsafeName": "collection_slug",
                    "safeName": "collection_slug"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "COLLECTION_SLUG",
                    "safeName": "COLLECTION_SLUG"
                  },
                  "pascalCase": {
                    "unsafeName": "CollectionSlug",
                    "safeName": "CollectionSlug"
                  }
                },
                "wireValue": "collectionSlug"
              },
              "docs": "String - OpenSea slug for the NFT collection.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "boredapeyachtclub",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "collectionSlug_example": "boredapeyachtclub"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getCollectionMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.getCollectionMetadata-v3",
          "name": {
            "originalName": "getCollectionMetadata-v3",
            "camelCase": {
              "unsafeName": "getCollectionMetadataV3",
              "safeName": "getCollectionMetadataV3"
            },
            "snakeCase": {
              "unsafeName": "get_collection_metadata_v_3",
              "safeName": "get_collection_metadata_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_COLLECTION_METADATA_V_3",
              "safeName": "GET_COLLECTION_METADATA_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetCollectionMetadataV3",
              "safeName": "GetCollectionMetadataV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_getCollectionMetadata-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsGetCollectionMetadataV3Response200",
                      "safeName": "nftMetadataEndpointsGetCollectionMetadataV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_get_collection_metadata_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_get_collection_metadata_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_GET_COLLECTION_METADATA_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_GET_COLLECTION_METADATA_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsGetCollectionMetadataV3Response200",
                      "safeName": "NftMetadataEndpointsGetCollectionMetadataV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_getCollectionMetadata-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the collection metadata for the specified slug.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsGetCollectionMetadataV3Example": {
                      "name": "foo",
                      "slug": "foo",
                      "floorPrice": {
                        "marketplace": "foo",
                        "floorPrice": 42,
                        "priceCurrency": "foo"
                      },
                      "description": "foo",
                      "externalUrl": "foo",
                      "twitterUsername": "foo",
                      "discordUrl": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getCollectionMetadata - Retrieves high-level collection or contract-level information for an NFT collection. This endpoint is supported on Ethereum and many L2s, including Polygon, Arbitrum, Optimism, Base, World Chain and more. See the full list of supported networks [here](https://dashboard.alchemy.com/chains?service=token-api&utm_source=readme&utm_medium=link&utm_campaign=docs_method_chains_link_v1_tokens).",
          "v2Examples": {
            "autogeneratedExamples": {
              "getCollectionMetadataV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getCollectionMetadata"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "collectionSlug": "boredapeyachtclub"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "foo",
                      "slug": "foo",
                      "floorPrice": {
                        "marketplace": "foo",
                        "floorPrice": 42,
                        "priceCurrency": "foo"
                      },
                      "description": "foo",
                      "externalUrl": "foo",
                      "twitterUsername": "foo",
                      "discordUrl": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Invalidate Contract Cache",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/invalidateContract"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/invalidateContract"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.invalidateContract-v3",
          "name": {
            "originalName": "invalidateContract-v3",
            "camelCase": {
              "unsafeName": "invalidateContractV3",
              "safeName": "invalidateContractV3"
            },
            "snakeCase": {
              "unsafeName": "invalidate_contract_v_3",
              "safeName": "invalidate_contract_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "INVALIDATE_CONTRACT_V_3",
              "safeName": "INVALIDATE_CONTRACT_V_3"
            },
            "pascalCase": {
              "unsafeName": "InvalidateContractV3",
              "safeName": "InvalidateContractV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_invalidateContract-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsInvalidateContractV3Response200",
                      "safeName": "nftMetadataEndpointsInvalidateContractV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_invalidate_contract_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_invalidate_contract_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_INVALIDATE_CONTRACT_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_INVALIDATE_CONTRACT_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsInvalidateContractV3Response200",
                      "safeName": "NftMetadataEndpointsInvalidateContractV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_invalidateContract-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns confirmation of cache invalidation along with the number of tokens invalidated.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsInvalidateContractV3Example": {
                      "success": "foo",
                      "numTokensInvalidated": 42
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Marks all cached tokens for the specified contract as stale, ensuring the next query fetches live data instead of cached data.\n\n<Note>Please note that this endpoint is only available on **Ethereum**, **Polygon**, **Arbitrum**, **Optimism** & **Base** networks.</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "invalidateContractV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/invalidateContract"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "success": "foo",
                      "numTokensInvalidated": 42
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Contract Metadata By Address [Batch]",
          "method": "POST",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadataBatch"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadataBatch"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.getContractMetadataBatch-v3",
          "name": {
            "originalName": "getContractMetadataBatch-v3",
            "camelCase": {
              "unsafeName": "getContractMetadataBatchV3",
              "safeName": "getContractMetadataBatchV3"
            },
            "snakeCase": {
              "unsafeName": "get_contract_metadata_batch_v_3",
              "safeName": "get_contract_metadata_batch_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONTRACT_METADATA_BATCH_V_3",
              "safeName": "GET_CONTRACT_METADATA_BATCH_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetContractMetadataBatchV3",
              "safeName": "GetContractMetadataBatchV3"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "NFT Metadata Endpoints_getContractMetadataBatch-v3_Request",
              "camelCase": {
                "unsafeName": "nftMetadataEndpointsGetContractMetadataBatchV3Request",
                "safeName": "nftMetadataEndpointsGetContractMetadataBatchV3Request"
              },
              "snakeCase": {
                "unsafeName": "nft_metadata_endpoints_get_contract_metadata_batch_v_3_request",
                "safeName": "nft_metadata_endpoints_get_contract_metadata_batch_v_3_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_METADATA_ENDPOINTS_GET_CONTRACT_METADATA_BATCH_V_3_REQUEST",
                "safeName": "NFT_METADATA_ENDPOINTS_GET_CONTRACT_METADATA_BATCH_V_3_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "NftMetadataEndpointsGetContractMetadataBatchV3Request",
                "safeName": "NftMetadataEndpointsGetContractMetadataBatchV3Request"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "contractAddresses",
                    "camelCase": {
                      "unsafeName": "contractAddresses",
                      "safeName": "contractAddresses"
                    },
                    "snakeCase": {
                      "unsafeName": "contract_addresses",
                      "safeName": "contract_addresses"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACT_ADDRESSES",
                      "safeName": "CONTRACT_ADDRESSES"
                    },
                    "pascalCase": {
                      "unsafeName": "ContractAddresses",
                      "safeName": "ContractAddresses"
                    }
                  },
                  "wireValue": "contractAddresses"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "List of contract addresses to batch metadata requests for.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V3ApiKeyGetContractMetadataBatchPostRequestBodyContentApplicationJsonSchemaContractAddresses_example_autogenerated": [
                      "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                    ]
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "nftMetadataEndpointsGetContractMetadataBatchV3Example": {}
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "v3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items",
                          "safeName": "v_3_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
                          "safeName": "V_3_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        }
                      },
                      "typeId": "V3ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Returns an array of contract metadata corresponding to the batch query.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsGetContractMetadataBatchV3Example": [
                      {
                        "address": "foo",
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "openseaMetadata": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "getContractMetadataBatch - Retrieves metadata for a list of specified contract addresses in a single request.",
          "v2Examples": {
            "autogeneratedExamples": {
              "nftMetadataEndpointsGetContractMetadataBatchV3Example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/docs-demo/getContractMetadataBatch"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "address": "foo",
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "openseaMetadata": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Attributes Summary By Contract",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/summarizeNFTAttributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/summarizeNFTAttributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.summarizeNFTAttributes-v3",
          "name": {
            "originalName": "summarizeNFTAttributes-v3",
            "camelCase": {
              "unsafeName": "summarizeNftAttributesV3",
              "safeName": "summarizeNftAttributesV3"
            },
            "snakeCase": {
              "unsafeName": "summarize_nft_attributes_v_3",
              "safeName": "summarize_nft_attributes_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUMMARIZE_NFT_ATTRIBUTES_V_3",
              "safeName": "SUMMARIZE_NFT_ATTRIBUTES_V_3"
            },
            "pascalCase": {
              "unsafeName": "SummarizeNftAttributesV3",
              "safeName": "SummarizeNftAttributesV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_summarizeNFTAttributes-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsSummarizeNftAttributesV3Response200",
                      "safeName": "nftMetadataEndpointsSummarizeNftAttributesV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_summarize_nft_attributes_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_summarize_nft_attributes_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_SUMMARIZE_NFT_ATTRIBUTES_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_SUMMARIZE_NFT_ATTRIBUTES_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsSummarizeNftAttributesV3Response200",
                      "safeName": "NftMetadataEndpointsSummarizeNftAttributesV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_summarizeNFTAttributes-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a summary of attribute prevalence for the specified NFT collection.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "summarizeNFTAttributes_response": {
                      "totalSupply": "10000",
                      "summary": {
                        "Earrings": {
                          "WoW Coins": 437,
                          "Pizza Lovers": 188,
                          "Lucky Charms": 415,
                          "White Ovals": 210,
                          "Artist Palettes": 21,
                          "Queen's Emeralds": 206,
                          "Silver Drops": 822,
                          "Flower Power": 366,
                          "Pearls": 833,
                          "Spikes": 776,
                          "Yam's Fave": 381,
                          "Classic Hoops": 780,
                          "Ocean Hoops": 770,
                          "Triple Rings": 823,
                          "60s Fantasy": 399,
                          "Lightning Bolts": 226,
                          "Empresses Of Darkness": 103
                        },
                        "Necklace": {
                          "WoW Coin": 481,
                          "Malka": 494,
                          "Amazonite Energy": 490,
                          "Satin Choker": 721,
                          "Back To The 90s": 706,
                          "Empress of Darkness": 58,
                          "Spike Choker": 449,
                          "Golden Bib": 251,
                          "Golden Flakes": 710,
                          "Art Lover": 29,
                          "Rainbow": 474,
                          "Gold Ruler": 477,
                          "Wolf Pendant": 229,
                          "Tutti Frutti Beads": 691,
                          "Sun Keeper": 730
                        },
                        "Eyes": {
                          "Purple To The Left": 158,
                          "Heterochromia To The Left": 57,
                          "Brown To The Right": 455,
                          "Black Eye Roll": 881,
                          "Yellow To The Left": 141,
                          "Purple Eye Roll": 145,
                          "Green Straight": 433,
                          "Blue To The Left": 407,
                          "Green To The Right": 410,
                          "Black Straight": 794,
                          "Purple To The Right": 145,
                          "Black To The Right": 870,
                          "Green Eye Roll": 413,
                          "Yellow Straight": 128,
                          "Brown To The Left": 465,
                          "Brown Eye Roll": 416,
                          "Heterochromia To The Right": 76,
                          "Blue Straight": 415,
                          "Black To The Left": 877,
                          "Heterochromia Eye Roll": 85,
                          "Purple Straight": 158,
                          "Brown Straight": 434,
                          "Yellow Eye Roll": 141,
                          "Heterochromia Straight": 77,
                          "Yellow To The Right": 139,
                          "Blue To The Right": 416,
                          "Green To The Left": 424,
                          "Blue Eye Roll": 440
                        },
                        "Background": {
                          "Green Purple": 905,
                          "Purple Pink": 905,
                          "Dark Emerald": 924,
                          "Yellow Pink": 896,
                          "Pink Pastel": 849,
                          "Blue Green": 924,
                          "Soft Purple": 983,
                          "Green Orange": 907,
                          "Dark Purple": 876,
                          "Red Turquoise": 914,
                          "Orange Yellow": 917
                        },
                        "Mouth": {
                          "Cigarette": 502,
                          "Whistle": 868,
                          "Slight Smile": 1666,
                          "Stern": 1733,
                          "Countryside": 927,
                          "Huh": 506,
                          "Slightly Open": 1661,
                          "Bubble Gum": 404,
                          "Surprised": 1733
                        },
                        "Clothes": {
                          "80s Silk Shirt": 400,
                          "70s Shirt": 421,
                          "Fantasy Shirt": 542,
                          "Adventurer": 583,
                          "Striped Tee": 567,
                          "Naiade": 98,
                          "Tunic": 193,
                          "Checkmate": 396,
                          "Painter's Overall": 550,
                          "Witch Dress": 198,
                          "Little Red Dress": 437,
                          "Cabaret Corset": 535,
                          "Polka Dot Top": 573,
                          "Freedom Is Power Tee": 368,
                          "Warrior Armor": 177,
                          "Emerald Elven Cape": 117,
                          "Faux Fur Coat": 404,
                          "Red Leather Jacket": 374,
                          "White Tee": 533,
                          "Tuxedo": 100,
                          "Steampunk Octopus Top": 186,
                          "Queen's Dress": 391,
                          "Cherry Tee": 590,
                          "NFT Goddesses Top": 189,
                          "Gala Dress": 192,
                          "Psychedelic Dress": 492,
                          "Futuristic Dress": 394
                        },
                        "Facial Features": {
                          "Nose Piercing": 598,
                          "Red Eyeliner": 608,
                          "Leader": 224,
                          "Neck Tattoo": 227,
                          "Pearl Eyes": 207,
                          "Red Blue Bolt": 97,
                          "Rose Tattoo": 286,
                          "Feline Eyes": 590,
                          "Elven Warrior": 99,
                          "Marilyn": 633,
                          "Freckles": 581,
                          "Flashy Blue": 304,
                          "Sunset": 297,
                          "Heart Tattoo": 591,
                          "Rainbow": 578,
                          "Eyebrow Tattoo MMXXI": 303,
                          "Eye Scar": 308,
                          "Treble Bass Clef Tattoo": 210,
                          "Crystal Queen": 221,
                          "Antoinette": 582,
                          "Cyber Warrior": 120,
                          "Eyebrow Piercing": 619,
                          "Claw Scar": 236
                        },
                        "Hairstyle": {
                          "Badass Bob": 178,
                          "Curly Ponytail": 390,
                          "Finger Waves": 398,
                          "Colorful": 186,
                          "Fuchsia": 562,
                          "Retro": 408,
                          "Royal": 227,
                          "Boy Cut": 566,
                          "Bob": 653,
                          "Bun": 607,
                          "Long Dark": 416,
                          "Curly Pearl Updo": 122,
                          "Lucky Green": 417,
                          "Lioness": 600,
                          "Natural Red": 608,
                          "Double Buns": 182,
                          "Cotton Candy": 228,
                          "Rose Hair": 388,
                          "Purple Rainbow": 187,
                          "Lollipop": 612,
                          "Silver": 205,
                          "Braided Ponytail": 561,
                          "Platinum Pixie": 570,
                          "Black And White": 110,
                          "Feeling Turquoise": 412
                        },
                        "Lips Color": {
                          "Space": 195,
                          "Gold": 622,
                          "Purple": 1967,
                          "Burgundy": 1995,
                          "Party Pink": 1114,
                          "Passion Red": 3008,
                          "Flashy Blue": 1099
                        },
                        "Skin Tone": {
                          "Rainbow Bright": 197,
                          "Light Warm Yellow": 1021,
                          "Burning Red": 497,
                          "Cyber Green": 511,
                          "Night Goddess": 85,
                          "Deep Warm Gold": 1026,
                          "Light Medium Warm Gold": 997,
                          "Deep Bronze": 1047,
                          "Medium Olive": 976,
                          "Deep Neutral": 996,
                          "Medium Gold": 937,
                          "Light Warm Olive": 1031,
                          "Cool Blue": 486,
                          "Golden": 193
                        },
                        "Face Accessories": {
                          "Oversized Statement Sunglasses": 396,
                          "Psychedelic Sunglasses": 390,
                          "Resting Butterfly": 83,
                          "Red Round Sunglasses": 695,
                          "Classic Aviator WoW": 414,
                          "Black Mask": 398,
                          "Cateye Sunglasses": 221,
                          "On Fire": 116,
                          "70s Feels": 718,
                          "3D Glasses": 216,
                          "Round Glasses": 704,
                          "Black Round Retro": 403,
                          "Hypnotic Glasses": 209
                        }
                      },
                      "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Generates a summary of attribute prevalence for a specific NFT collection.\n\n<Note>Please note that this endpoint is only available on Ethereum (mainnet) & Polygon (mainnet & mumbai).</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "summarizeNFTAttributes_response": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/summarizeNFTAttributes"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "totalSupply": "10000",
                      "summary": {
                        "Earrings": {
                          "WoW Coins": 437,
                          "Pizza Lovers": 188,
                          "Lucky Charms": 415,
                          "White Ovals": 210,
                          "Artist Palettes": 21,
                          "Queen's Emeralds": 206,
                          "Silver Drops": 822,
                          "Flower Power": 366,
                          "Pearls": 833,
                          "Spikes": 776,
                          "Yam's Fave": 381,
                          "Classic Hoops": 780,
                          "Ocean Hoops": 770,
                          "Triple Rings": 823,
                          "60s Fantasy": 399,
                          "Lightning Bolts": 226,
                          "Empresses Of Darkness": 103
                        },
                        "Necklace": {
                          "WoW Coin": 481,
                          "Malka": 494,
                          "Amazonite Energy": 490,
                          "Satin Choker": 721,
                          "Back To The 90s": 706,
                          "Empress of Darkness": 58,
                          "Spike Choker": 449,
                          "Golden Bib": 251,
                          "Golden Flakes": 710,
                          "Art Lover": 29,
                          "Rainbow": 474,
                          "Gold Ruler": 477,
                          "Wolf Pendant": 229,
                          "Tutti Frutti Beads": 691,
                          "Sun Keeper": 730
                        },
                        "Eyes": {
                          "Purple To The Left": 158,
                          "Heterochromia To The Left": 57,
                          "Brown To The Right": 455,
                          "Black Eye Roll": 881,
                          "Yellow To The Left": 141,
                          "Purple Eye Roll": 145,
                          "Green Straight": 433,
                          "Blue To The Left": 407,
                          "Green To The Right": 410,
                          "Black Straight": 794,
                          "Purple To The Right": 145,
                          "Black To The Right": 870,
                          "Green Eye Roll": 413,
                          "Yellow Straight": 128,
                          "Brown To The Left": 465,
                          "Brown Eye Roll": 416,
                          "Heterochromia To The Right": 76,
                          "Blue Straight": 415,
                          "Black To The Left": 877,
                          "Heterochromia Eye Roll": 85,
                          "Purple Straight": 158,
                          "Brown Straight": 434,
                          "Yellow Eye Roll": 141,
                          "Heterochromia Straight": 77,
                          "Yellow To The Right": 139,
                          "Blue To The Right": 416,
                          "Green To The Left": 424,
                          "Blue Eye Roll": 440
                        },
                        "Background": {
                          "Green Purple": 905,
                          "Purple Pink": 905,
                          "Dark Emerald": 924,
                          "Yellow Pink": 896,
                          "Pink Pastel": 849,
                          "Blue Green": 924,
                          "Soft Purple": 983,
                          "Green Orange": 907,
                          "Dark Purple": 876,
                          "Red Turquoise": 914,
                          "Orange Yellow": 917
                        },
                        "Mouth": {
                          "Cigarette": 502,
                          "Whistle": 868,
                          "Slight Smile": 1666,
                          "Stern": 1733,
                          "Countryside": 927,
                          "Huh": 506,
                          "Slightly Open": 1661,
                          "Bubble Gum": 404,
                          "Surprised": 1733
                        },
                        "Clothes": {
                          "80s Silk Shirt": 400,
                          "70s Shirt": 421,
                          "Fantasy Shirt": 542,
                          "Adventurer": 583,
                          "Striped Tee": 567,
                          "Naiade": 98,
                          "Tunic": 193,
                          "Checkmate": 396,
                          "Painter's Overall": 550,
                          "Witch Dress": 198,
                          "Little Red Dress": 437,
                          "Cabaret Corset": 535,
                          "Polka Dot Top": 573,
                          "Freedom Is Power Tee": 368,
                          "Warrior Armor": 177,
                          "Emerald Elven Cape": 117,
                          "Faux Fur Coat": 404,
                          "Red Leather Jacket": 374,
                          "White Tee": 533,
                          "Tuxedo": 100,
                          "Steampunk Octopus Top": 186,
                          "Queen's Dress": 391,
                          "Cherry Tee": 590,
                          "NFT Goddesses Top": 189,
                          "Gala Dress": 192,
                          "Psychedelic Dress": 492,
                          "Futuristic Dress": 394
                        },
                        "Facial Features": {
                          "Nose Piercing": 598,
                          "Red Eyeliner": 608,
                          "Leader": 224,
                          "Neck Tattoo": 227,
                          "Pearl Eyes": 207,
                          "Red Blue Bolt": 97,
                          "Rose Tattoo": 286,
                          "Feline Eyes": 590,
                          "Elven Warrior": 99,
                          "Marilyn": 633,
                          "Freckles": 581,
                          "Flashy Blue": 304,
                          "Sunset": 297,
                          "Heart Tattoo": 591,
                          "Rainbow": 578,
                          "Eyebrow Tattoo MMXXI": 303,
                          "Eye Scar": 308,
                          "Treble Bass Clef Tattoo": 210,
                          "Crystal Queen": 221,
                          "Antoinette": 582,
                          "Cyber Warrior": 120,
                          "Eyebrow Piercing": 619,
                          "Claw Scar": 236
                        },
                        "Hairstyle": {
                          "Badass Bob": 178,
                          "Curly Ponytail": 390,
                          "Finger Waves": 398,
                          "Colorful": 186,
                          "Fuchsia": 562,
                          "Retro": 408,
                          "Royal": 227,
                          "Boy Cut": 566,
                          "Bob": 653,
                          "Bun": 607,
                          "Long Dark": 416,
                          "Curly Pearl Updo": 122,
                          "Lucky Green": 417,
                          "Lioness": 600,
                          "Natural Red": 608,
                          "Double Buns": 182,
                          "Cotton Candy": 228,
                          "Rose Hair": 388,
                          "Purple Rainbow": 187,
                          "Lollipop": 612,
                          "Silver": 205,
                          "Braided Ponytail": 561,
                          "Platinum Pixie": 570,
                          "Black And White": 110,
                          "Feeling Turquoise": 412
                        },
                        "Lips Color": {
                          "Space": 195,
                          "Gold": 622,
                          "Purple": 1967,
                          "Burgundy": 1995,
                          "Party Pink": 1114,
                          "Passion Red": 3008,
                          "Flashy Blue": 1099
                        },
                        "Skin Tone": {
                          "Rainbow Bright": 197,
                          "Light Warm Yellow": 1021,
                          "Burning Red": 497,
                          "Cyber Green": 511,
                          "Night Goddess": 85,
                          "Deep Warm Gold": 1026,
                          "Light Medium Warm Gold": 997,
                          "Deep Bronze": 1047,
                          "Medium Olive": 976,
                          "Deep Neutral": 996,
                          "Medium Gold": 937,
                          "Light Warm Olive": 1031,
                          "Cool Blue": 486,
                          "Golden": 193
                        },
                        "Face Accessories": {
                          "Oversized Statement Sunglasses": 396,
                          "Psychedelic Sunglasses": 390,
                          "Resting Butterfly": 83,
                          "Red Round Sunglasses": 695,
                          "Classic Aviator WoW": 414,
                          "Black Mask": 398,
                          "Cateye Sunglasses": 221,
                          "On Fire": 116,
                          "70s Feels": 718,
                          "3D Glasses": 216,
                          "Round Glasses": 704,
                          "Black Round Retro": 403,
                          "Hypnotic Glasses": 209
                        }
                      },
                      "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        },
        {
          "displayName": "Search Contract Metadata",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/searchContractMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "query",
                  "camelCase": {
                    "unsafeName": "query",
                    "safeName": "query"
                  },
                  "snakeCase": {
                    "unsafeName": "query",
                    "safeName": "query"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "QUERY",
                    "safeName": "QUERY"
                  },
                  "pascalCase": {
                    "unsafeName": "Query",
                    "safeName": "Query"
                  }
                },
                "wireValue": "query"
              },
              "docs": "String - The search string that you want to search for in contract metadata",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "bored",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "query_example": "bored"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/searchContractMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.searchContractMetadata-v3",
          "name": {
            "originalName": "searchContractMetadata-v3",
            "camelCase": {
              "unsafeName": "searchContractMetadataV3",
              "safeName": "searchContractMetadataV3"
            },
            "snakeCase": {
              "unsafeName": "search_contract_metadata_v_3",
              "safeName": "search_contract_metadata_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "SEARCH_CONTRACT_METADATA_V_3",
              "safeName": "SEARCH_CONTRACT_METADATA_V_3"
            },
            "pascalCase": {
              "unsafeName": "SearchContractMetadataV3",
              "safeName": "SearchContractMetadataV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                        "camelCase": {
                          "unsafeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                          "safeName": "v3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items",
                          "safeName": "v_3_api_key_search_contract_metadata_get_responses_content_application_json_schema_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
                          "safeName": "V_3_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                          "safeName": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
                        }
                      },
                      "typeId": "V3ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Returns the list of NFT contracts where the metadata has one or more keywords from the search string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsSearchContractMetadataV3Example": [
                      {
                        "address": "foo",
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "openseaMetadata": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Searches for a keyword across metadata of all ERC-721 and ERC-1155 smart contracts.\n\n<Warning>This endpoint is currently in BETA. Please report any feedback you have for this endpoint via Alchemy's [Discord](https://discord.gg/alchemy).</Warning>\n\n<Note>Please note that this endpoint is only available on **Ethereum**, **Polygon**, **Arbitrum**, **Optimism** & **Base** networks.</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "searchContractMetadataV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/searchContractMetadata"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "query": "bored"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "address": "foo",
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "openseaMetadata": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Attribute Rarity By NFT",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/computeRarity"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/computeRarity"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.computeRarity-v3",
          "name": {
            "originalName": "computeRarity-v3",
            "camelCase": {
              "unsafeName": "computeRarityV3",
              "safeName": "computeRarityV3"
            },
            "snakeCase": {
              "unsafeName": "compute_rarity_v_3",
              "safeName": "compute_rarity_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "COMPUTE_RARITY_V_3",
              "safeName": "COMPUTE_RARITY_V_3"
            },
            "pascalCase": {
              "unsafeName": "ComputeRarityV3",
              "safeName": "ComputeRarityV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_computeRarity-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsComputeRarityV3Response200",
                      "safeName": "nftMetadataEndpointsComputeRarityV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_compute_rarity_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_compute_rarity_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_COMPUTE_RARITY_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_COMPUTE_RARITY_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsComputeRarityV3Response200",
                      "safeName": "NftMetadataEndpointsComputeRarityV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_computeRarity-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the rarity information for each attribute of the specified NFT.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftMetadataEndpointsComputeRarityV3Example": {
                      "rarities": [
                        {
                          "trait_type": "foo",
                          "value": "foo",
                          "prevalence": 42
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Calculates the rarity of each attribute within an NFT.\n\n<Note>Please note that this endpoint is only available on Ethereum (mainnet) & Polygon (mainnet & mumbai).</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "computeRarityV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/computeRarity"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "rarities": [
                        {
                          "trait_type": "foo",
                          "value": "foo",
                          "prevalence": 42
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Refresh NFT Metadata",
          "method": "POST",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/refreshNftMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/refreshNftMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftMetadataEndpoints.refreshNftMetadata-v3",
          "name": {
            "originalName": "refreshNftMetadata-v3",
            "camelCase": {
              "unsafeName": "refreshNftMetadataV3",
              "safeName": "refreshNftMetadataV3"
            },
            "snakeCase": {
              "unsafeName": "refresh_nft_metadata_v_3",
              "safeName": "refresh_nft_metadata_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "REFRESH_NFT_METADATA_V_3",
              "safeName": "REFRESH_NFT_METADATA_V_3"
            },
            "pascalCase": {
              "unsafeName": "RefreshNftMetadataV3",
              "safeName": "RefreshNftMetadataV3"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "NFT Metadata Endpoints_refreshNftMetadata-v3_Request",
              "camelCase": {
                "unsafeName": "nftMetadataEndpointsRefreshNftMetadataV3Request",
                "safeName": "nftMetadataEndpointsRefreshNftMetadataV3Request"
              },
              "snakeCase": {
                "unsafeName": "nft_metadata_endpoints_refresh_nft_metadata_v_3_request",
                "safeName": "nft_metadata_endpoints_refresh_nft_metadata_v_3_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_METADATA_ENDPOINTS_REFRESH_NFT_METADATA_V_3_REQUEST",
                "safeName": "NFT_METADATA_ENDPOINTS_REFRESH_NFT_METADATA_V_3_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "NftMetadataEndpointsRefreshNftMetadataV3Request",
                "safeName": "NftMetadataEndpointsRefreshNftMetadataV3Request"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "contractAddress",
                    "camelCase": {
                      "unsafeName": "contractAddress",
                      "safeName": "contractAddress"
                    },
                    "snakeCase": {
                      "unsafeName": "contract_address",
                      "safeName": "contract_address"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACT_ADDRESS",
                      "safeName": "CONTRACT_ADDRESS"
                    },
                    "pascalCase": {
                      "unsafeName": "ContractAddress",
                      "safeName": "ContractAddress"
                    }
                  },
                  "wireValue": "contractAddress"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "Contract address of the token you want to refresh.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V3ApiKeyRefreshNftMetadataPostRequestBodyContentApplicationJsonSchemaContractAddress_example_autogenerated": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  }
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "tokenId",
                    "camelCase": {
                      "unsafeName": "tokenId",
                      "safeName": "tokenId"
                    },
                    "snakeCase": {
                      "unsafeName": "token_id",
                      "safeName": "token_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOKEN_ID",
                      "safeName": "TOKEN_ID"
                    },
                    "pascalCase": {
                      "unsafeName": "TokenId",
                      "safeName": "TokenId"
                    }
                  },
                  "wireValue": "tokenId"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "default": "44",
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "Token ID of the token you want to refresh. Must belong to the contract address.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V3ApiKeyRefreshNftMetadataPostRequestBodyContentApplicationJsonSchemaTokenId_example_autogenerated": "44"
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "nftMetadataEndpointsRefreshNftMetadataV3Example": {}
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Metadata Endpoints_refreshNftMetadata-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftMetadataEndpointsRefreshNftMetadataV3Response200",
                      "safeName": "nftMetadataEndpointsRefreshNftMetadataV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_metadata_endpoints_refresh_nft_metadata_v_3_response_200",
                      "safeName": "nft_metadata_endpoints_refresh_nft_metadata_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_METADATA_ENDPOINTS_REFRESH_NFT_METADATA_V_3_RESPONSE_200",
                      "safeName": "NFT_METADATA_ENDPOINTS_REFRESH_NFT_METADATA_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftMetadataEndpointsRefreshNftMetadataV3Response200",
                      "safeName": "NftMetadataEndpointsRefreshNftMetadataV3Response200"
                    }
                  },
                  "typeId": "NFT Metadata Endpoints_refreshNftMetadata-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the status of the refresh request along with the estimated time to complete.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Successful Response": {
                      "status": "Queued",
                      "estimatedMsToRefresh": "10000"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Submits a request for Alchemy to refresh the cached metadata of a specific NFT token.\n\n<Note>Please note that this endpoint is only supported on Ethereum (Mainnet & Sepolia), Polygon (Mainnet, Mumbai & Amoy), Arbitrum One (mainnet), Optimism (mainnet) & Base (mainnet). For other chains, you could use the `getNFTMetadata` endpoint with the `refreshCache` parameter set to `true` to refresh the metadata!</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Successful Response": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v3/docs-demo/refreshNftMetadata"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "status": "Queued",
                      "estimatedMsToRefresh": "10000"
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "service_nftSpamEndpoints": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "NFT Spam Endpoints",
              "camelCase": {
                "unsafeName": "nftSpamEndpoints",
                "safeName": "nftSpamEndpoints"
              },
              "snakeCase": {
                "unsafeName": "nft_spam_endpoints",
                "safeName": "nft_spam_endpoints"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_SPAM_ENDPOINTS",
                "safeName": "NFT_SPAM_ENDPOINTS"
              },
              "pascalCase": {
                "unsafeName": "NftSpamEndpoints",
                "safeName": "NftSpamEndpoints"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "NFT Spam Endpoints",
            "camelCase": {
              "unsafeName": "nftSpamEndpoints",
              "safeName": "nftSpamEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_spam_endpoints",
              "safeName": "nft_spam_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_SPAM_ENDPOINTS",
              "safeName": "NFT_SPAM_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftSpamEndpoints",
              "safeName": "NftSpamEndpoints"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Spam Contracts",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getSpamContracts"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getSpamContracts"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftSpamEndpoints.getSpamContracts-v3",
          "name": {
            "originalName": "getSpamContracts-v3",
            "camelCase": {
              "unsafeName": "getSpamContractsV3",
              "safeName": "getSpamContractsV3"
            },
            "snakeCase": {
              "unsafeName": "get_spam_contracts_v_3",
              "safeName": "get_spam_contracts_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPAM_CONTRACTS_V_3",
              "safeName": "GET_SPAM_CONTRACTS_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetSpamContractsV3",
              "safeName": "GetSpamContractsV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Spam Endpoints_getSpamContracts-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftSpamEndpointsGetSpamContractsV3Response200",
                      "safeName": "nftSpamEndpointsGetSpamContractsV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_spam_endpoints_get_spam_contracts_v_3_response_200",
                      "safeName": "nft_spam_endpoints_get_spam_contracts_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_SPAM_ENDPOINTS_GET_SPAM_CONTRACTS_V_3_RESPONSE_200",
                      "safeName": "NFT_SPAM_ENDPOINTS_GET_SPAM_CONTRACTS_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftSpamEndpointsGetSpamContractsV3Response200",
                      "safeName": "NftSpamEndpointsGetSpamContractsV3Response200"
                    }
                  },
                  "typeId": "NFT Spam Endpoints_getSpamContracts-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a list of all spam contracts marked by Alchemy.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftSpamEndpointsGetSpamContractsV3Example": {
                      "contractAddresses": [
                        "foo"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of all spam contracts marked by Alchemy.\n\n<Note>Please note that this API endpoint is only available to paid tier customers. Upgrade your account [here](https://dashboard.alchemy.com/account/).</Note>\n\n<Note>Spam NFT functionality is available on Mainnet for the following chains: Base, Arbitrum, Optimism, Ethereum, Polygon, Worldchain, Avax, Gnosis, Zksync, and Blast. More to come soon!</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "getSpamContractsV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getSpamContracts"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contractAddresses": [
                        "foo"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Is Spam Contract",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isSpamContract"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isSpamContract"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftSpamEndpoints.isSpamContract-v3",
          "name": {
            "originalName": "isSpamContract-v3",
            "camelCase": {
              "unsafeName": "isSpamContractV3",
              "safeName": "isSpamContractV3"
            },
            "snakeCase": {
              "unsafeName": "is_spam_contract_v_3",
              "safeName": "is_spam_contract_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "IS_SPAM_CONTRACT_V_3",
              "safeName": "IS_SPAM_CONTRACT_V_3"
            },
            "pascalCase": {
              "unsafeName": "IsSpamContractV3",
              "safeName": "IsSpamContractV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Spam Endpoints_isSpamContract-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftSpamEndpointsIsSpamContractV3Response200",
                      "safeName": "nftSpamEndpointsIsSpamContractV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_spam_endpoints_is_spam_contract_v_3_response_200",
                      "safeName": "nft_spam_endpoints_is_spam_contract_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_SPAM_ENDPOINTS_IS_SPAM_CONTRACT_V_3_RESPONSE_200",
                      "safeName": "NFT_SPAM_ENDPOINTS_IS_SPAM_CONTRACT_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftSpamEndpointsIsSpamContractV3Response200",
                      "safeName": "NftSpamEndpointsIsSpamContractV3Response200"
                    }
                  },
                  "typeId": "NFT Spam Endpoints_isSpamContract-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns whether the specified contract is marked as spam.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftSpamEndpointsIsSpamContractV3Example": {
                      "isSpamContract": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Determines whether a specific contract is marked as spam by Alchemy.\n\n<Note>Please note that this API endpoint is only available to paid tier customers. Upgrade your account [here](https://dashboard.alchemy.com/account/).</Note>\n\n<Note>Spam NFT functionality is available on Mainnet for the following chains: Base, Arbitrum, Optimism, Ethereum, Polygon, Worldchain, Avax, Gnosis, Zksync, and Blast. More to come soon!</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "isSpamContractV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/isSpamContract"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "isSpamContract": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Is Airdrop NFT",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isAirdropNFT"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isAirdropNFT"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftSpamEndpoints.isAirdropNFT-v3",
          "name": {
            "originalName": "isAirdropNFT-v3",
            "camelCase": {
              "unsafeName": "isAirdropNftV3",
              "safeName": "isAirdropNftV3"
            },
            "snakeCase": {
              "unsafeName": "is_airdrop_nft_v_3",
              "safeName": "is_airdrop_nft_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "IS_AIRDROP_NFT_V_3",
              "safeName": "IS_AIRDROP_NFT_V_3"
            },
            "pascalCase": {
              "unsafeName": "IsAirdropNftV3",
              "safeName": "IsAirdropNftV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Spam Endpoints_isAirdropNFT-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftSpamEndpointsIsAirdropNftV3Response200",
                      "safeName": "nftSpamEndpointsIsAirdropNftV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_spam_endpoints_is_airdrop_nft_v_3_response_200",
                      "safeName": "nft_spam_endpoints_is_airdrop_nft_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_SPAM_ENDPOINTS_IS_AIRDROP_NFT_V_3_RESPONSE_200",
                      "safeName": "NFT_SPAM_ENDPOINTS_IS_AIRDROP_NFT_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftSpamEndpointsIsAirdropNftV3Response200",
                      "safeName": "NftSpamEndpointsIsAirdropNftV3Response200"
                    }
                  },
                  "typeId": "NFT Spam Endpoints_isAirdropNFT-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns whether the specified token is marked as an airdrop.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftSpamEndpointsIsAirdropNftV3Example": {
                      "isAirdrop": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Determines whether a specific token is marked as an airdrop. Airdrops are defined as NFTs minted to a user address in a transaction sent by a different address.\n\n<Note>Please note that this endpoint is only available on Ethereum (mainnet only) & Polygon (mainnet, amoy & mumbai).</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "isAirdropNftV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/isAirdropNFT"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "isAirdrop": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Report Spam Address",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/reportSpam"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "address",
                  "camelCase": {
                    "unsafeName": "address",
                    "safeName": "address"
                  },
                  "snakeCase": {
                    "unsafeName": "address",
                    "safeName": "address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ADDRESS",
                    "safeName": "ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "Address",
                    "safeName": "Address"
                  }
                },
                "wireValue": "address"
              },
              "docs": "String - any valid blockchain address for NFT collections, contracts, mints, etc.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "address_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/reportSpam"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftSpamEndpoints.reportSpam-v3",
          "name": {
            "originalName": "reportSpam-v3",
            "camelCase": {
              "unsafeName": "reportSpamV3",
              "safeName": "reportSpamV3"
            },
            "snakeCase": {
              "unsafeName": "report_spam_v_3",
              "safeName": "report_spam_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "REPORT_SPAM_V_3",
              "safeName": "REPORT_SPAM_V_3"
            },
            "pascalCase": {
              "unsafeName": "ReportSpamV3",
              "safeName": "ReportSpamV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "Returns a confirmation message if the address was successfully reported as spam.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftSpamEndpointsReportSpamV3Example": "foo"
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Reports a specific address to the API if it is suspected to be spam.\n\n<Note>Spam NFT functionality is available on Mainnet for the following chains: Base, Arbitrum, Optimism, Ethereum, Polygon, Worldchain, Avax, Gnosis, Zksync, and Blast. More to come soon!</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "reportSpamV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/reportSpam"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "address": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": "foo",
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_nftSalesEndpoints": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "NFT Sales Endpoints",
              "camelCase": {
                "unsafeName": "nftSalesEndpoints",
                "safeName": "nftSalesEndpoints"
              },
              "snakeCase": {
                "unsafeName": "nft_sales_endpoints",
                "safeName": "nft_sales_endpoints"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_SALES_ENDPOINTS",
                "safeName": "NFT_SALES_ENDPOINTS"
              },
              "pascalCase": {
                "unsafeName": "NftSalesEndpoints",
                "safeName": "NftSalesEndpoints"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "NFT Sales Endpoints",
            "camelCase": {
              "unsafeName": "nftSalesEndpoints",
              "safeName": "nftSalesEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_sales_endpoints",
              "safeName": "nft_sales_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_SALES_ENDPOINTS",
              "safeName": "NFT_SALES_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftSalesEndpoints",
              "safeName": "NftSalesEndpoints"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Floor Prices By Slug",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getFloorPrice"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "collectionSlug",
                  "camelCase": {
                    "unsafeName": "collectionSlug",
                    "safeName": "collectionSlug"
                  },
                  "snakeCase": {
                    "unsafeName": "collection_slug",
                    "safeName": "collection_slug"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "COLLECTION_SLUG",
                    "safeName": "COLLECTION_SLUG"
                  },
                  "pascalCase": {
                    "unsafeName": "CollectionSlug",
                    "safeName": "CollectionSlug"
                  }
                },
                "wireValue": "collectionSlug"
              },
              "docs": "String - OpenSea slug for the NFT collection.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "boredapeyachtclub",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "collectionSlug_example": "boredapeyachtclub"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getFloorPrice"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftSalesEndpoints.getFloorPrice-v3",
          "name": {
            "originalName": "getFloorPrice-v3",
            "camelCase": {
              "unsafeName": "getFloorPriceV3",
              "safeName": "getFloorPriceV3"
            },
            "snakeCase": {
              "unsafeName": "get_floor_price_v_3",
              "safeName": "get_floor_price_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_FLOOR_PRICE_V_3",
              "safeName": "GET_FLOOR_PRICE_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetFloorPriceV3",
              "safeName": "GetFloorPriceV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Sales Endpoints_getFloorPrice-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftSalesEndpointsGetFloorPriceV3Response200",
                      "safeName": "nftSalesEndpointsGetFloorPriceV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_sales_endpoints_get_floor_price_v_3_response_200",
                      "safeName": "nft_sales_endpoints_get_floor_price_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_SALES_ENDPOINTS_GET_FLOOR_PRICE_V_3_RESPONSE_200",
                      "safeName": "NFT_SALES_ENDPOINTS_GET_FLOOR_PRICE_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftSalesEndpointsGetFloorPriceV3Response200",
                      "safeName": "NftSalesEndpointsGetFloorPriceV3Response200"
                    }
                  },
                  "typeId": "NFT Sales Endpoints_getFloorPrice-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the floor prices of the specified NFT collection across different marketplaces.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftSalesEndpointsGetFloorPriceV3Example": {
                      "nftMarketplaceName": {
                        "floorPrice": 42,
                        "priceCurrency": "ETH",
                        "collectionUrl": "foo",
                        "retrievedAt": "foo",
                        "error": "foo"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves the floor prices of an NFT collection across different marketplaces.\n\n<Note>Please note that this endpoint is only available on Ethereum mainnet for Opensea & Looksrare marketplaces.</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {
              "getFloorPriceV3Example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getFloorPrice"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "nftMarketplaceName": {
                        "floorPrice": 42,
                        "priceCurrency": "ETH",
                        "collectionUrl": "foo",
                        "retrievedAt": "foo",
                        "error": "foo"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "NFT Sales",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTSales"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "fromBlock",
                  "camelCase": {
                    "unsafeName": "fromBlock",
                    "safeName": "fromBlock"
                  },
                  "snakeCase": {
                    "unsafeName": "from_block",
                    "safeName": "from_block"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "FROM_BLOCK",
                    "safeName": "FROM_BLOCK"
                  },
                  "pascalCase": {
                    "unsafeName": "FromBlock",
                    "safeName": "FromBlock"
                  }
                },
                "wireValue": "fromBlock"
              },
              "docs": "String - The block number to start fetching NFT sales data from. Allowed values are decimal and hex integers, and \"latest\". Defaults to \"0\".",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "0",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "fromBlock_example": "0"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "toBlock",
                  "camelCase": {
                    "unsafeName": "toBlock",
                    "safeName": "toBlock"
                  },
                  "snakeCase": {
                    "unsafeName": "to_block",
                    "safeName": "to_block"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TO_BLOCK",
                    "safeName": "TO_BLOCK"
                  },
                  "pascalCase": {
                    "unsafeName": "ToBlock",
                    "safeName": "ToBlock"
                  }
                },
                "wireValue": "toBlock"
              },
              "docs": "String - The block number to start fetching NFT sales data from. Allowed values are decimal and hex integers, and \"latest\". Defaults to \"latest\".",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "latest",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "toBlock_example": "latest"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "order",
                  "camelCase": {
                    "unsafeName": "order",
                    "safeName": "order"
                  },
                  "snakeCase": {
                    "unsafeName": "order",
                    "safeName": "order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ORDER",
                    "safeName": "ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "Order",
                    "safeName": "Order"
                  }
                },
                "wireValue": "order"
              },
              "docs": "Enum - Whether to return the results ascending from startBlock or descending from startBlock. Defaults to descending (false).",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V3ApiKeyGetNftSalesGetParametersOrder",
                      "camelCase": {
                        "unsafeName": "v3ApiKeyGetNftSalesGetParametersOrder",
                        "safeName": "v3ApiKeyGetNftSalesGetParametersOrder"
                      },
                      "snakeCase": {
                        "unsafeName": "v_3_api_key_get_nft_sales_get_parameters_order",
                        "safeName": "v_3_api_key_get_nft_sales_get_parameters_order"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER",
                        "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER"
                      },
                      "pascalCase": {
                        "unsafeName": "V3ApiKeyGetNftSalesGetParametersOrder",
                        "safeName": "V3ApiKeyGetNftSalesGetParametersOrder"
                      }
                    },
                    "typeId": "V3ApiKeyGetNftSalesGetParametersOrder",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "order_example": "asc"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "marketplace",
                  "camelCase": {
                    "unsafeName": "marketplace",
                    "safeName": "marketplace"
                  },
                  "snakeCase": {
                    "unsafeName": "marketplace",
                    "safeName": "marketplace"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "MARKETPLACE",
                    "safeName": "MARKETPLACE"
                  },
                  "pascalCase": {
                    "unsafeName": "Marketplace",
                    "safeName": "Marketplace"
                  }
                },
                "wireValue": "marketplace"
              },
              "docs": "Enum - The name of the NFT marketplace to filter sales by. The endpoint currently supports \"seaport\", \"wyvern\", \"looksrare\", \"x2y2\", \"blur\", and \"cryptopunks\". Defaults to returning sales from all supported marketplaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V3ApiKeyGetNftSalesGetParametersMarketplace",
                      "camelCase": {
                        "unsafeName": "v3ApiKeyGetNftSalesGetParametersMarketplace",
                        "safeName": "v3ApiKeyGetNftSalesGetParametersMarketplace"
                      },
                      "snakeCase": {
                        "unsafeName": "v_3_api_key_get_nft_sales_get_parameters_marketplace",
                        "safeName": "v_3_api_key_get_nft_sales_get_parameters_marketplace"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE",
                        "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE"
                      },
                      "pascalCase": {
                        "unsafeName": "V3ApiKeyGetNftSalesGetParametersMarketplace",
                        "safeName": "V3ApiKeyGetNftSalesGetParametersMarketplace"
                      }
                    },
                    "typeId": "V3ApiKeyGetNftSalesGetParametersMarketplace",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "marketplace_example": "seaport"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - The contract address of an NFT collection to filter sales by. Defaults to returning all NFT contracts.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The token ID of an NFT within the collection specified by contractAddress to filter sales by. Defaults to returning all token IDs.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "44",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "buyerAddress",
                  "camelCase": {
                    "unsafeName": "buyerAddress",
                    "safeName": "buyerAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "buyer_address",
                    "safeName": "buyer_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BUYER_ADDRESS",
                    "safeName": "BUYER_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "BuyerAddress",
                    "safeName": "BuyerAddress"
                  }
                },
                "wireValue": "buyerAddress"
              },
              "docs": "String - The address of the NFT buyer to filter sales by. Defaults to returning sales involving any buyer.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "buyerAddress_example": "buyerAddress"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "sellerAddress",
                  "camelCase": {
                    "unsafeName": "sellerAddress",
                    "safeName": "sellerAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "seller_address",
                    "safeName": "seller_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SELLER_ADDRESS",
                    "safeName": "SELLER_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "SellerAddress",
                    "safeName": "SellerAddress"
                  }
                },
                "wireValue": "sellerAddress"
              },
              "docs": "String - The address of the NFT seller to filter sales by. Defaults to returning sales involving any seller.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "sellerAddress_example": "sellerAddress"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "taker",
                  "camelCase": {
                    "unsafeName": "taker",
                    "safeName": "taker"
                  },
                  "snakeCase": {
                    "unsafeName": "taker",
                    "safeName": "taker"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TAKER",
                    "safeName": "TAKER"
                  },
                  "pascalCase": {
                    "unsafeName": "Taker",
                    "safeName": "Taker"
                  }
                },
                "wireValue": "taker"
              },
              "docs": "Enum - Filter by whether the buyer or seller was the taker in the NFT trade. Allowed filter values are \"BUYER\" and \"SELLER\". Defaults to returning both buyer and seller taker trades.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V3ApiKeyGetNftSalesGetParametersTaker",
                      "camelCase": {
                        "unsafeName": "v3ApiKeyGetNftSalesGetParametersTaker",
                        "safeName": "v3ApiKeyGetNftSalesGetParametersTaker"
                      },
                      "snakeCase": {
                        "unsafeName": "v_3_api_key_get_nft_sales_get_parameters_taker",
                        "safeName": "v_3_api_key_get_nft_sales_get_parameters_taker"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER",
                        "safeName": "V_3_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER"
                      },
                      "pascalCase": {
                        "unsafeName": "V3ApiKeyGetNftSalesGetParametersTaker",
                        "safeName": "V3ApiKeyGetNftSalesGetParametersTaker"
                      }
                    },
                    "typeId": "V3ApiKeyGetNftSalesGetParametersTaker",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "taker_example": "BUYER"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "limit",
                  "camelCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "snakeCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIMIT",
                    "safeName": "LIMIT"
                  },
                  "pascalCase": {
                    "unsafeName": "Limit",
                    "safeName": "Limit"
                  }
                },
                "wireValue": "limit"
              },
              "docs": "Integer - The maximum number of NFT sales to return. Maximum and default values are 1000.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v3/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTSales"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftSalesEndpoints.getNFTSales-v3",
          "name": {
            "originalName": "getNFTSales-v3",
            "camelCase": {
              "unsafeName": "getNftSalesV3",
              "safeName": "getNftSalesV3"
            },
            "snakeCase": {
              "unsafeName": "get_nft_sales_v_3",
              "safeName": "get_nft_sales_v_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NFT_SALES_V_3",
              "safeName": "GET_NFT_SALES_V_3"
            },
            "pascalCase": {
              "unsafeName": "GetNftSalesV3",
              "safeName": "GetNftSalesV3"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT Sales Endpoints_getNFTSales-v3_Response_200",
                    "camelCase": {
                      "unsafeName": "nftSalesEndpointsGetNftSalesV3Response200",
                      "safeName": "nftSalesEndpointsGetNftSalesV3Response200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_sales_endpoints_get_nft_sales_v_3_response_200",
                      "safeName": "nft_sales_endpoints_get_nft_sales_v_3_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_SALES_ENDPOINTS_GET_NFT_SALES_V_3_RESPONSE_200",
                      "safeName": "NFT_SALES_ENDPOINTS_GET_NFT_SALES_V_3_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftSalesEndpointsGetNftSalesV3Response200",
                      "safeName": "NftSalesEndpointsGetNftSalesV3Response200"
                    }
                  },
                  "typeId": "NFT Sales Endpoints_getNFTSales-v3_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns a list of NFT sales that match the query parameters.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Response (with pagination)": {
                      "nftSales": [
                        {
                          "marketplace": "seaport",
                          "contractAddress": "0x49cf6f5d44e70224e2e23fdcdd2c053f30ada28b",
                          "tokenId": "13749",
                          "quantity": "1",
                          "buyerAddress": "0x78f6c2458b53d0735208992c693bb2b2dafebb52",
                          "sellerAddress": "0x558a18f94cabdea4e47c5965384f457d8e870419",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "11100000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "300000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "600000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 130,
                          "bundleIndex": 0,
                          "transactionHash": "0xecfa1b29c9016bd2556fde637c6b48484eeb14f273af54c49317e3856ab7cb16"
                        },
                        {
                          "marketplace": "looksrare",
                          "contractAddress": "0x34d85c9cdeb23fa97cb08333b511ac86e1c4e258",
                          "tokenId": "75417",
                          "quantity": "1",
                          "buyerAddress": "0xb3aa9923489bc2bfec323bf05346acd4afbc92a0",
                          "sellerAddress": "0x206ccba024c236dced07c35b4e9eb0bade7ef166",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "2222700000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "47800000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "119500000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 197,
                          "bundleIndex": 0,
                          "transactionHash": "0x4c23163e4f855e143e573776bc6129bee370dff6ce760e71553fc93201b292e2"
                        }
                      ],
                      "pageKey": "MTUwMDAwNzgsODcsMA",
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      }
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Retrieves NFT sales that have occurred through on-chain marketplaces.\n\n<Note>Please note that this endpoint is only available on Ethereum (Seaport, Wyvern, X2Y2, Blur, LooksRare, Cryptopunks), Polygon (Seaport) & Optimism (Seaport) mainnets.</Note>\n",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Response (with pagination)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v3/docs-demo/getNFTSales"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "nftSales": [
                        {
                          "marketplace": "seaport",
                          "contractAddress": "0x49cf6f5d44e70224e2e23fdcdd2c053f30ada28b",
                          "tokenId": "13749",
                          "quantity": "1",
                          "buyerAddress": "0x78f6c2458b53d0735208992c693bb2b2dafebb52",
                          "sellerAddress": "0x558a18f94cabdea4e47c5965384f457d8e870419",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "11100000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "300000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "600000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 130,
                          "bundleIndex": 0,
                          "transactionHash": "0xecfa1b29c9016bd2556fde637c6b48484eeb14f273af54c49317e3856ab7cb16"
                        },
                        {
                          "marketplace": "looksrare",
                          "contractAddress": "0x34d85c9cdeb23fa97cb08333b511ac86e1c4e258",
                          "tokenId": "75417",
                          "quantity": "1",
                          "buyerAddress": "0xb3aa9923489bc2bfec323bf05346acd4afbc92a0",
                          "sellerAddress": "0x206ccba024c236dced07c35b4e9eb0bade7ef166",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "2222700000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "47800000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "119500000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 197,
                          "bundleIndex": 0,
                          "transactionHash": "0x4c23163e4f855e143e573776bc6129bee370dff6ce760e71553fc93201b292e2"
                        }
                      ],
                      "pageKey": "MTUwMDAwNzgsODcsMA",
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "service_nftApiV2MethodsOlderVersion": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "NFT API V2 Methods (Older Version)",
              "camelCase": {
                "unsafeName": "nftApiV2MethodsOlderVersion",
                "safeName": "nftApiV2MethodsOlderVersion"
              },
              "snakeCase": {
                "unsafeName": "nft_api_v_2_methods_older_version",
                "safeName": "nft_api_v_2_methods_older_version"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION",
                "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION"
              },
              "pascalCase": {
                "unsafeName": "NftApiV2MethodsOlderVersion",
                "safeName": "NftApiV2MethodsOlderVersion"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "NFT API V2 Methods (Older Version)",
            "camelCase": {
              "unsafeName": "nftApiV2MethodsOlderVersion",
              "safeName": "nftApiV2MethodsOlderVersion"
            },
            "snakeCase": {
              "unsafeName": "nft_api_v_2_methods_older_version",
              "safeName": "nft_api_v_2_methods_older_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION",
              "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION"
            },
            "pascalCase": {
              "unsafeName": "NftApiV2MethodsOlderVersion",
              "safeName": "NftApiV2MethodsOlderVersion"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "getNFTs",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTs"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "owner",
                  "camelCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "snakeCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "OWNER",
                    "safeName": "OWNER"
                  },
                  "pascalCase": {
                    "unsafeName": "Owner",
                    "safeName": "Owner"
                  }
                },
                "wireValue": "owner"
              },
              "docs": "String - Address for NFT owner (can be in ENS format for Eth Mainnet).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "owner_example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "contractAddresses[]",
                  "camelCase": {
                    "unsafeName": "contractAddresses",
                    "safeName": "contractAddresses"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_addresses",
                    "safeName": "contract_addresses"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESSES",
                    "safeName": "CONTRACT_ADDRESSES"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddresses",
                    "safeName": "ContractAddresses"
                  }
                },
                "wireValue": "contractAddresses[]"
              },
              "docs": "Array of contract addresses to filter the responses with. Max limit 45 contracts.",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "primitive": {
                          "v1": "STRING",
                          "v2": {
                            "validation": {},
                            "type": "string"
                          }
                        },
                        "type": "primitive"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddresses[]_example": [
                    "foo"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "orderBy",
                  "camelCase": {
                    "unsafeName": "orderBy",
                    "safeName": "orderBy"
                  },
                  "snakeCase": {
                    "unsafeName": "order_by",
                    "safeName": "order_by"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ORDER_BY",
                    "safeName": "ORDER_BY"
                  },
                  "pascalCase": {
                    "unsafeName": "OrderBy",
                    "safeName": "OrderBy"
                  }
                },
                "wireValue": "orderBy"
              },
              "docs": "Enum - ordering scheme to use for ordering NFTs in the response. If unspecified, NFTs will be ordered by contract address and token ID.\n  - transferTime: NFTs will be ordered by the time they were transferred into the wallet, with newest NFTs first. NOTE: this ordering is only supported on Ethereum Mainnet and Polygon Mainnet.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V2ApiKeyGetNfTsGetParametersOrderBy",
                      "camelCase": {
                        "unsafeName": "v2ApiKeyGetNfTsGetParametersOrderBy",
                        "safeName": "v2ApiKeyGetNfTsGetParametersOrderBy"
                      },
                      "snakeCase": {
                        "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_order_by",
                        "safeName": "v_2_api_key_get_nf_ts_get_parameters_order_by"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_ORDER_BY",
                        "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_ORDER_BY"
                      },
                      "pascalCase": {
                        "unsafeName": "V2ApiKeyGetNfTsGetParametersOrderBy",
                        "safeName": "V2ApiKeyGetNfTsGetParametersOrderBy"
                      }
                    },
                    "typeId": "V2ApiKeyGetNfTsGetParametersOrderBy",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderBy_example": "transferTime"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "excludeFilters[]",
                  "camelCase": {
                    "unsafeName": "excludeFilters",
                    "safeName": "excludeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "exclude_filters",
                    "safeName": "exclude_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "EXCLUDE_FILTERS",
                    "safeName": "EXCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "ExcludeFilters",
                    "safeName": "ExcludeFilters"
                  }
                },
                "wireValue": "excludeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. NFTs that match one or more of these filters will be excluded from the response. May not be used in conjunction with includeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
                            "safeName": "v2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_exclude_filters_schema_items",
                            "safeName": "v_2_api_key_get_nf_ts_get_parameters_exclude_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
                            "safeName": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V2ApiKeyGetNfTsGetParametersExcludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "excludeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "includeFilters[]",
                  "camelCase": {
                    "unsafeName": "includeFilters",
                    "safeName": "includeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "include_filters",
                    "safeName": "include_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_FILTERS",
                    "safeName": "INCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeFilters",
                    "safeName": "IncludeFilters"
                  }
                },
                "wireValue": "includeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. Only NFTs that match one or more of these filters will be included in the response. May not be used in conjunction with excludeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
                            "safeName": "v2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_include_filters_schema_items",
                            "safeName": "v_2_api_key_get_nf_ts_get_parameters_include_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
                            "safeName": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V2ApiKeyGetNfTsGetParametersIncludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "includeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "spamConfidenceLevel",
                  "camelCase": {
                    "unsafeName": "spamConfidenceLevel",
                    "safeName": "spamConfidenceLevel"
                  },
                  "snakeCase": {
                    "unsafeName": "spam_confidence_level",
                    "safeName": "spam_confidence_level"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SPAM_CONFIDENCE_LEVEL",
                    "safeName": "SPAM_CONFIDENCE_LEVEL"
                  },
                  "pascalCase": {
                    "unsafeName": "SpamConfidenceLevel",
                    "safeName": "SpamConfidenceLevel"
                  }
                },
                "wireValue": "spamConfidenceLevel"
              },
              "docs": "Enum - the confidence level at which to filter spam at.\n\nConfidence Levels:\n  - VERY_HIGH\n  - HIGH\n  - MEDIUM\n  - LOW\n\nThe confidence level set means that any spam that is at that confidence level or higher will be filtered out. For example, if the confidence level is HIGH, contracts that we have HIGH or VERY_HIGH confidence in being spam will be filtered out from the response. \nDefaults to VERY_HIGH for Ethereum Mainnet and MEDIUM for Matic Mainnet.\n\n**Please note that this filter is only available on paid tiers. Upgrade your account [here](https://dashboard.alchemyapi.io/settings/billing/).**",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
                      "camelCase": {
                        "unsafeName": "v2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
                        "safeName": "v2ApiKeyGetNfTsGetParametersSpamConfidenceLevel"
                      },
                      "snakeCase": {
                        "unsafeName": "v_2_api_key_get_nf_ts_get_parameters_spam_confidence_level",
                        "safeName": "v_2_api_key_get_nf_ts_get_parameters_spam_confidence_level"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
                        "safeName": "V_2_API_KEY_GET_NF_TS_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
                      },
                      "pascalCase": {
                        "unsafeName": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
                        "safeName": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel"
                      }
                    },
                    "typeId": "V2ApiKeyGetNfTsGetParametersSpamConfidenceLevel",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "spamConfidenceLevel_example": "VERY_HIGH"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenUriTimeoutInMs",
                  "camelCase": {
                    "unsafeName": "tokenUriTimeoutInMs",
                    "safeName": "tokenUriTimeoutInMs"
                  },
                  "snakeCase": {
                    "unsafeName": "token_uri_timeout_in_ms",
                    "safeName": "token_uri_timeout_in_ms"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                    "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenUriTimeoutInMs",
                    "safeName": "TokenUriTimeoutInMs"
                  }
                },
                "wireValue": "tokenUriTimeoutInMs"
              },
              "docs": "No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenUriTimeoutInMs_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageSize",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "pageSize"
              },
              "docs": "Number of NFTs to be returned per page. Defaults to 100. Max is 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 100,
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageSize_example": 100
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTs"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getNFTs",
          "name": {
            "originalName": "getNFTs",
            "camelCase": {
              "unsafeName": "getNfTs",
              "safeName": "getNfTs"
            },
            "snakeCase": {
              "unsafeName": "get_nf_ts",
              "safeName": "get_nf_ts"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NF_TS",
              "safeName": "GET_NF_TS"
            },
            "pascalCase": {
              "unsafeName": "GetNfTs",
              "safeName": "GetNfTs"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getNFTs_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetNfTsResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetNfTsResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_nf_ts_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_nf_ts_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetNfTsResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetNfTsResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getNFTs_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "Returns the list of all NFTs owned by the given address and satisfying the given input parameters.",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Response (By Default)": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x0beed7099af7514ccedf642cfea435731176fb02"
                          },
                          "id": {
                            "tokenId": "28",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "title": "DuskBreaker #28",
                          "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                          "tokenUri": {
                            "raw": "https://duskbreakers.gg/api/breakers/28",
                            "gateway": "https://duskbreakers.gg/api/breakers/28"
                          },
                          "media": {
                            "0": {
                              "raw": "https://duskbreakers.gg/breaker_images/28.png",
                              "gateway": "https://duskbreakers.gg/breaker_images/28.png"
                            }
                          },
                          "metadata": {
                            "image": "https://duskbreakers.gg/breaker_images/28.png",
                            "external_url": "https://duskbreakers.gg",
                            "name": "DuskBreaker #28",
                            "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                            "attributes": [
                              {
                                "value": "Locust Rider Armor (Red)",
                                "trait_type": "Clothes"
                              },
                              {
                                "value": "Big Smile (Purple)",
                                "trait_type": "Mouth"
                              },
                              {
                                "value": "Yellow",
                                "trait_type": "Background"
                              }
                            ]
                          },
                          "timeLastUpdated": "2022-02-16T22:52:54.719Z",
                          "contractMetadata": {
                            "name": "DuskBreakers",
                            "symbol": "DUSK",
                            "totalSupply": "10000",
                            "tokenType": "ERC721"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "5527",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "title": "Runner #5527",
                          "description": "Chain Runners are Mega City renegades 100% generated on chain.",
                          "tokenUri": {
                            "raw": "https://api.chainrunners.xyz/tokens/metadata/5527?dna=73247164192459371523281785218958151913554625578441142916970699984935810987041",
                            "gateway": "https://api.chainrunners.xyz/tokens/metadata/5527?dna=73247164192459371523281785218958151913554625578441142916970699984935810987041"
                          },
                          "media": {
                            "0": {
                              "raw": "https://img.chainrunners.xyz/api/v1/tokens/png/5527",
                              "gateway": "https://img.chainrunners.xyz/api/v1/tokens/png/5527"
                            }
                          },
                          "metadata": {
                            "image": "https://img.chainrunners.xyz/api/v1/tokens/png/5527",
                            "name": "Runner #5527",
                            "description": "Chain Runners are Mega City renegades 100% generated on chain.",
                            "attributes": [
                              {
                                "value": "Purple Green Diag",
                                "trait_type": "Background"
                              },
                              {
                                "value": "Human",
                                "trait_type": "Race"
                              },
                              {
                                "value": "Cig",
                                "trait_type": "Mouth Accessory"
                              }
                            ]
                          },
                          "timeLastUpdated": "2022-02-18T00:42:04.401Z",
                          "contractMetadata": {
                            "name": "Chain Runners",
                            "symbol": "RUN",
                            "totalSupply": "10000",
                            "tokenType": "ERC721"
                          }
                        }
                      ],
                      "totalCount": 6,
                      "blockHash": "0xeb2d26af5b6175344a14091777535a2cb21c681665a734a8285f889981987630"
                    },
                    "Response (withMetadata = false)": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x0beed7099af7514ccedf642cfea435731176fb02"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000001c"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x0beed7099af7514ccedf642cfea435731176fb02"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000001d"
                          },
                          "balance": "1"
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000001597"
                          },
                          "balance": "1"
                        }
                      ],
                      "totalCount": 6,
                      "blockHash": "0xf9a2a4e15116680e22b160c734529f62d89d54cde0759daf5135672fad0ecebc"
                    },
                    "Response (with contract filtering)": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x34d77a17038491a2a9eaa6e690b7c7cd39fc8392"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000277"
                          }
                        }
                      ],
                      "totalCount": 1,
                      "blockHash": "0x3d8bca59c08e41f55d46ebbe738327eb12955cf280bd06ef7d40352919c188d8"
                    },
                    "Response (with pagination)": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000009cb"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000009cc"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x5ab21ec0bfa0b29545230395e3adaca7d552c948"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000006dc"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x3b3ee1931dc30c1957379fac9aba94d1c48a5405"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000001a"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x69c40e500b84660cb2ab09cb9614fa2387f95f64"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000391"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000008d5"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000a1d"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000002a"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000038e"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000244b"
                          }
                        }
                      ],
                      "pageKey": "88434286-7eaa-472d-8739-32a0497c2a18",
                      "totalCount": 277,
                      "blockHash": "0x94d5ab52b8a6571733f6b183ef89f31573b82a4e78f8129b0ce90ef0beaf208b"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all NFTs currently owned by a given address.",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Response (By Default)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getNFTs"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x0beed7099af7514ccedf642cfea435731176fb02"
                          },
                          "id": {
                            "tokenId": "28",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "title": "DuskBreaker #28",
                          "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                          "tokenUri": {
                            "raw": "https://duskbreakers.gg/api/breakers/28",
                            "gateway": "https://duskbreakers.gg/api/breakers/28"
                          },
                          "media": {
                            "0": {
                              "raw": "https://duskbreakers.gg/breaker_images/28.png",
                              "gateway": "https://duskbreakers.gg/breaker_images/28.png"
                            }
                          },
                          "metadata": {
                            "image": "https://duskbreakers.gg/breaker_images/28.png",
                            "external_url": "https://duskbreakers.gg",
                            "name": "DuskBreaker #28",
                            "description": "Breakers have the honor of serving humanity through their work on The Dusk. They are part of a select squad of 10,000 recruits who spend their days exploring a mysterious alien spaceship filled with friends, foes, and otherworldly technology.",
                            "attributes": [
                              {
                                "value": "Locust Rider Armor (Red)",
                                "trait_type": "Clothes"
                              },
                              {
                                "value": "Big Smile (Purple)",
                                "trait_type": "Mouth"
                              },
                              {
                                "value": "Yellow",
                                "trait_type": "Background"
                              }
                            ]
                          },
                          "timeLastUpdated": "2022-02-16T22:52:54.719Z",
                          "contractMetadata": {
                            "name": "DuskBreakers",
                            "symbol": "DUSK",
                            "totalSupply": "10000",
                            "tokenType": "ERC721"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "5527",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "title": "Runner #5527",
                          "description": "Chain Runners are Mega City renegades 100% generated on chain.",
                          "tokenUri": {
                            "raw": "https://api.chainrunners.xyz/tokens/metadata/5527?dna=73247164192459371523281785218958151913554625578441142916970699984935810987041",
                            "gateway": "https://api.chainrunners.xyz/tokens/metadata/5527?dna=73247164192459371523281785218958151913554625578441142916970699984935810987041"
                          },
                          "media": {
                            "0": {
                              "raw": "https://img.chainrunners.xyz/api/v1/tokens/png/5527",
                              "gateway": "https://img.chainrunners.xyz/api/v1/tokens/png/5527"
                            }
                          },
                          "metadata": {
                            "image": "https://img.chainrunners.xyz/api/v1/tokens/png/5527",
                            "name": "Runner #5527",
                            "description": "Chain Runners are Mega City renegades 100% generated on chain.",
                            "attributes": [
                              {
                                "value": "Purple Green Diag",
                                "trait_type": "Background"
                              },
                              {
                                "value": "Human",
                                "trait_type": "Race"
                              },
                              {
                                "value": "Cig",
                                "trait_type": "Mouth Accessory"
                              }
                            ]
                          },
                          "timeLastUpdated": "2022-02-18T00:42:04.401Z",
                          "contractMetadata": {
                            "name": "Chain Runners",
                            "symbol": "RUN",
                            "totalSupply": "10000",
                            "tokenType": "ERC721"
                          }
                        }
                      ],
                      "totalCount": 6,
                      "blockHash": "0xeb2d26af5b6175344a14091777535a2cb21c681665a734a8285f889981987630"
                    },
                    "type": "json"
                  }
                }
              },
              "Response (withMetadata = false)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getNFTs"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x0beed7099af7514ccedf642cfea435731176fb02"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000001c"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x0beed7099af7514ccedf642cfea435731176fb02"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000001d"
                          },
                          "balance": "1"
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000001597"
                          },
                          "balance": "1"
                        }
                      ],
                      "totalCount": 6,
                      "blockHash": "0xf9a2a4e15116680e22b160c734529f62d89d54cde0759daf5135672fad0ecebc"
                    },
                    "type": "json"
                  }
                }
              },
              "Response (with contract filtering)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getNFTs"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x34d77a17038491a2a9eaa6e690b7c7cd39fc8392"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000277"
                          }
                        }
                      ],
                      "totalCount": 1,
                      "blockHash": "0x3d8bca59c08e41f55d46ebbe738327eb12955cf280bd06ef7d40352919c188d8"
                    },
                    "type": "json"
                  }
                }
              },
              "Response (with pagination)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getNFTs"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "ownedNfts": [
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000009cb"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000009cc"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x5ab21ec0bfa0b29545230395e3adaca7d552c948"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000006dc"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x3b3ee1931dc30c1957379fac9aba94d1c48a5405"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000001a"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x69c40e500b84660cb2ab09cb9614fa2387f95f64"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000391"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x00000000000000000000000000000000000000000000000000000000000008d5"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000a1d"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000002a"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000038e"
                          }
                        },
                        {
                          "contract": {
                            "address": "0x97597002980134bea46250aa0510c9b90d87a587"
                          },
                          "id": {
                            "tokenId": "0x000000000000000000000000000000000000000000000000000000000000244b"
                          }
                        }
                      ],
                      "pageKey": "88434286-7eaa-472d-8739-32a0497c2a18",
                      "totalCount": 277,
                      "blockHash": "0x94d5ab52b8a6571733f6b183ef89f31573b82a4e78f8129b0ce90ef0beaf208b"
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        },
        {
          "displayName": "getNFTMetadata",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenType",
                  "camelCase": {
                    "unsafeName": "tokenType",
                    "safeName": "tokenType"
                  },
                  "snakeCase": {
                    "unsafeName": "token_type",
                    "safeName": "token_type"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_TYPE",
                    "safeName": "TOKEN_TYPE"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenType",
                    "safeName": "TokenType"
                  }
                },
                "wireValue": "tokenType"
              },
              "docs": "String - 'ERC721' or 'ERC1155'; specifies type of token to query for. API requests will perform faster if this is specified.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenType_example": "tokenType"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenUriTimeoutInMs",
                  "camelCase": {
                    "unsafeName": "tokenUriTimeoutInMs",
                    "safeName": "tokenUriTimeoutInMs"
                  },
                  "snakeCase": {
                    "unsafeName": "token_uri_timeout_in_ms",
                    "safeName": "token_uri_timeout_in_ms"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                    "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenUriTimeoutInMs",
                    "safeName": "TokenUriTimeoutInMs"
                  }
                },
                "wireValue": "tokenUriTimeoutInMs"
              },
              "docs": "No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenUriTimeoutInMs_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "refreshCache",
                  "camelCase": {
                    "unsafeName": "refreshCache",
                    "safeName": "refreshCache"
                  },
                  "snakeCase": {
                    "unsafeName": "refresh_cache",
                    "safeName": "refresh_cache"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REFRESH_CACHE",
                    "safeName": "REFRESH_CACHE"
                  },
                  "pascalCase": {
                    "unsafeName": "RefreshCache",
                    "safeName": "RefreshCache"
                  }
                },
                "wireValue": "refreshCache"
              },
              "docs": "Defaults to false for faster response times.  If true will refresh metadata for given token. If false will check the cache and use it or refresh if cache doesn't exist.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "refreshCache_example": false
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getNFTMetadata",
          "name": {
            "originalName": "getNFTMetadata",
            "camelCase": {
              "unsafeName": "getNftMetadata",
              "safeName": "getNftMetadata"
            },
            "snakeCase": {
              "unsafeName": "get_nft_metadata",
              "safeName": "get_nft_metadata"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NFT_METADATA",
              "safeName": "GET_NFT_METADATA"
            },
            "pascalCase": {
              "unsafeName": "GetNftMetadata",
              "safeName": "GetNftMetadata"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getNFTMetadata_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetNftMetadataResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetNftMetadataResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_nft_metadata_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_nft_metadata_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_METADATA_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_METADATA_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetNftMetadataResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetNftMetadataResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getNFTMetadata_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetNftMetadataExample": {
                      "contract": {
                        "address": "foo"
                      },
                      "id": {
                        "tokenId": "44",
                        "tokenMetadata": {
                          "tokenType": "ERC721"
                        }
                      },
                      "balance": "foo",
                      "title": "foo",
                      "description": "foo",
                      "tokenUri": {
                        "raw": "foo",
                        "gateway": "foo"
                      },
                      "media": {
                        "raw": "foo",
                        "gateway": "foo",
                        "thumbnail": "foo",
                        "format": "foo",
                        "bytes": 42
                      },
                      "metadata": {
                        "image": "foo",
                        "external_url": "foo",
                        "background_color": "foo",
                        "name": "foo",
                        "description": "foo",
                        "attributes": [
                          {
                            "value": "foo",
                            "trait_type": "foo"
                          }
                        ],
                        "media": [
                          {
                            "raw": "foo",
                            "gateway": "foo",
                            "thumbnail": "foo",
                            "format": "foo",
                            "bytes": 42
                          }
                        ]
                      },
                      "timeLastUpdated": "foo",
                      "error": "foo",
                      "contractMetadata": {
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "opensea": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      },
                      "spamInfo": {
                        "isSpam": "foo",
                        "spamClassifications": [
                          "foo"
                        ]
                      },
                      "acquiredAt": {
                        "blockTimestamp": "foo",
                        "blockNumber": "foo"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets the metadata associated with a given NFT.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getNftMetadataExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getNFTMetadata"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contract": {
                        "address": "foo"
                      },
                      "id": {
                        "tokenId": "44",
                        "tokenMetadata": {
                          "tokenType": "ERC721"
                        }
                      },
                      "balance": "foo",
                      "title": "foo",
                      "description": "foo",
                      "tokenUri": {
                        "raw": "foo",
                        "gateway": "foo"
                      },
                      "media": {
                        "raw": "foo",
                        "gateway": "foo",
                        "thumbnail": "foo",
                        "format": "foo",
                        "bytes": 42
                      },
                      "metadata": {
                        "image": "foo",
                        "external_url": "foo",
                        "background_color": "foo",
                        "name": "foo",
                        "description": "foo",
                        "attributes": [
                          {
                            "value": "foo",
                            "trait_type": "foo"
                          }
                        ],
                        "media": [
                          {
                            "raw": "foo",
                            "gateway": "foo",
                            "thumbnail": "foo",
                            "format": "foo",
                            "bytes": 42
                          }
                        ]
                      },
                      "timeLastUpdated": "foo",
                      "error": "foo",
                      "contractMetadata": {
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "opensea": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      },
                      "spamInfo": {
                        "isSpam": "foo",
                        "spamClassifications": [
                          "foo"
                        ]
                      },
                      "acquiredAt": {
                        "blockTimestamp": "foo",
                        "blockNumber": "foo"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getNFTMetadataBatch",
          "method": "POST",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadataBatch"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTMetadataBatch"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getNFTMetadataBatch",
          "name": {
            "originalName": "getNFTMetadataBatch",
            "camelCase": {
              "unsafeName": "getNftMetadataBatch",
              "safeName": "getNftMetadataBatch"
            },
            "snakeCase": {
              "unsafeName": "get_nft_metadata_batch",
              "safeName": "get_nft_metadata_batch"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NFT_METADATA_BATCH",
              "safeName": "GET_NFT_METADATA_BATCH"
            },
            "pascalCase": {
              "unsafeName": "GetNftMetadataBatch",
              "safeName": "GetNftMetadataBatch"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "NFT API V2 Methods (Older Version)_getNFTMetadataBatch_Request",
              "camelCase": {
                "unsafeName": "nftApiV2MethodsOlderVersionGetNftMetadataBatchRequest",
                "safeName": "nftApiV2MethodsOlderVersionGetNftMetadataBatchRequest"
              },
              "snakeCase": {
                "unsafeName": "nft_api_v_2_methods_older_version_get_nft_metadata_batch_request",
                "safeName": "nft_api_v_2_methods_older_version_get_nft_metadata_batch_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_METADATA_BATCH_REQUEST",
                "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_METADATA_BATCH_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "NftApiV2MethodsOlderVersionGetNftMetadataBatchRequest",
                "safeName": "NftApiV2MethodsOlderVersionGetNftMetadataBatchRequest"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "tokens",
                    "camelCase": {
                      "unsafeName": "tokens",
                      "safeName": "tokens"
                    },
                    "snakeCase": {
                      "unsafeName": "tokens",
                      "safeName": "tokens"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOKENS",
                      "safeName": "TOKENS"
                    },
                    "pascalCase": {
                      "unsafeName": "Tokens",
                      "safeName": "Tokens"
                    }
                  },
                  "wireValue": "tokens"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                            "camelCase": {
                              "unsafeName": "v2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                              "safeName": "v2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
                            },
                            "snakeCase": {
                              "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items",
                              "safeName": "v_2_api_key_get_nft_metadata_batch_post_request_body_content_application_json_schema_tokens_items"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS",
                              "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_REQUEST_BODY_CONTENT_APPLICATION_JSON_SCHEMA_TOKENS_ITEMS"
                            },
                            "pascalCase": {
                              "unsafeName": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                              "safeName": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems"
                            }
                          },
                          "typeId": "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokensItems",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "List of token objects to batch request NFT metadata for. Maximum 100.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokens_example_autogenerated": [
                      {}
                    ]
                  }
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "tokenUriTimeoutInMs",
                    "camelCase": {
                      "unsafeName": "tokenUriTimeoutInMs",
                      "safeName": "tokenUriTimeoutInMs"
                    },
                    "snakeCase": {
                      "unsafeName": "token_uri_timeout_in_ms",
                      "safeName": "token_uri_timeout_in_ms"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                      "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                    },
                    "pascalCase": {
                      "unsafeName": "TokenUriTimeoutInMs",
                      "safeName": "TokenUriTimeoutInMs"
                    }
                  },
                  "wireValue": "tokenUriTimeoutInMs"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaTokenUriTimeoutInMs_example_autogenerated": 42
                  }
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "refreshCache",
                    "camelCase": {
                      "unsafeName": "refreshCache",
                      "safeName": "refreshCache"
                    },
                    "snakeCase": {
                      "unsafeName": "refresh_cache",
                      "safeName": "refresh_cache"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REFRESH_CACHE",
                      "safeName": "REFRESH_CACHE"
                    },
                    "pascalCase": {
                      "unsafeName": "RefreshCache",
                      "safeName": "RefreshCache"
                    }
                  },
                  "wireValue": "refreshCache"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "default": false,
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V2ApiKeyGetNftMetadataBatchPostRequestBodyContentApplicationJsonSchemaRefreshCache_example_autogenerated": false
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "nftApiV2MethodsOlderVersionGetNftMetadataBatchExample": {}
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "v2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items",
                          "safeName": "v_2_api_key_get_nft_metadata_batch_post_responses_content_application_json_schema_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_NFT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetNftMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetNftMetadataBatchExample": [
                      {
                        "contract": {
                          "address": "foo"
                        },
                        "id": {
                          "tokenId": "44",
                          "tokenMetadata": {
                            "tokenType": "ERC721"
                          }
                        },
                        "balance": "foo",
                        "title": "foo",
                        "description": "foo",
                        "tokenUri": {
                          "raw": "foo",
                          "gateway": "foo"
                        },
                        "media": {
                          "raw": "foo",
                          "gateway": "foo",
                          "thumbnail": "foo",
                          "format": "foo",
                          "bytes": 42
                        },
                        "metadata": {
                          "image": "foo",
                          "external_url": "foo",
                          "background_color": "foo",
                          "name": "foo",
                          "description": "foo",
                          "attributes": [
                            {
                              "value": "foo",
                              "trait_type": "foo"
                            }
                          ],
                          "media": [
                            {
                              "raw": "foo",
                              "gateway": "foo",
                              "thumbnail": "foo",
                              "format": "foo",
                              "bytes": 42
                            }
                          ]
                        },
                        "timeLastUpdated": "foo",
                        "error": "foo",
                        "contractMetadata": {
                          "name": "foo",
                          "symbol": "foo",
                          "totalSupply": "foo",
                          "tokenType": "ERC721",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "opensea": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          }
                        },
                        "spamInfo": {
                          "isSpam": "foo",
                          "spamClassifications": [
                            "foo"
                          ]
                        },
                        "acquiredAt": {
                          "blockTimestamp": "foo",
                          "blockNumber": "foo"
                        }
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets the metadata associated with up to 100 given NFT contracts.",
          "v2Examples": {
            "autogeneratedExamples": {
              "nftApiV2MethodsOlderVersionGetNftMetadataBatchExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/docs-demo/getNFTMetadataBatch"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "contract": {
                          "address": "foo"
                        },
                        "id": {
                          "tokenId": "44",
                          "tokenMetadata": {
                            "tokenType": "ERC721"
                          }
                        },
                        "balance": "foo",
                        "title": "foo",
                        "description": "foo",
                        "tokenUri": {
                          "raw": "foo",
                          "gateway": "foo"
                        },
                        "media": {
                          "raw": "foo",
                          "gateway": "foo",
                          "thumbnail": "foo",
                          "format": "foo",
                          "bytes": 42
                        },
                        "metadata": {
                          "image": "foo",
                          "external_url": "foo",
                          "background_color": "foo",
                          "name": "foo",
                          "description": "foo",
                          "attributes": [
                            {
                              "value": "foo",
                              "trait_type": "foo"
                            }
                          ],
                          "media": [
                            {
                              "raw": "foo",
                              "gateway": "foo",
                              "thumbnail": "foo",
                              "format": "foo",
                              "bytes": 42
                            }
                          ]
                        },
                        "timeLastUpdated": "foo",
                        "error": "foo",
                        "contractMetadata": {
                          "name": "foo",
                          "symbol": "foo",
                          "totalSupply": "foo",
                          "tokenType": "ERC721",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "opensea": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          }
                        },
                        "spamInfo": {
                          "isSpam": "foo",
                          "spamClassifications": [
                            "foo"
                          ]
                        },
                        "acquiredAt": {
                          "blockTimestamp": "foo",
                          "blockNumber": "foo"
                        }
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getContractMetadata",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getContractMetadata",
          "name": {
            "originalName": "getContractMetadata",
            "camelCase": {
              "unsafeName": "getContractMetadata",
              "safeName": "getContractMetadata"
            },
            "snakeCase": {
              "unsafeName": "get_contract_metadata",
              "safeName": "get_contract_metadata"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONTRACT_METADATA",
              "safeName": "GET_CONTRACT_METADATA"
            },
            "pascalCase": {
              "unsafeName": "GetContractMetadata",
              "safeName": "GetContractMetadata"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getContractMetadata_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetContractMetadataResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetContractMetadataResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_contract_metadata_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_contract_metadata_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACT_METADATA_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACT_METADATA_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetContractMetadataResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetContractMetadataResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getContractMetadata_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetContractMetadataExample": {
                      "address": "foo",
                      "contractMetadata": {
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "opensea": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Queries NFT high-level collection/contract level information.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getContractMetadataExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getContractMetadata"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "address": "foo",
                      "contractMetadata": {
                        "name": "foo",
                        "symbol": "foo",
                        "totalSupply": "foo",
                        "tokenType": "ERC721",
                        "contractDeployer": "foo",
                        "deployedBlockNumber": 42,
                        "opensea": {
                          "floorPrice": 42,
                          "collectionName": "foo",
                          "safelistRequestStatus": "foo",
                          "imageUrl": "foo",
                          "description": "foo",
                          "externalUrl": "foo",
                          "twitterUsername": "foo",
                          "discordUrl": "foo",
                          "lastIngestedAt": "foo"
                        }
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getContractMetadataBatch",
          "method": "POST",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadataBatch"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractMetadataBatch"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getContractMetadataBatch",
          "name": {
            "originalName": "getContractMetadataBatch",
            "camelCase": {
              "unsafeName": "getContractMetadataBatch",
              "safeName": "getContractMetadataBatch"
            },
            "snakeCase": {
              "unsafeName": "get_contract_metadata_batch",
              "safeName": "get_contract_metadata_batch"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONTRACT_METADATA_BATCH",
              "safeName": "GET_CONTRACT_METADATA_BATCH"
            },
            "pascalCase": {
              "unsafeName": "GetContractMetadataBatch",
              "safeName": "GetContractMetadataBatch"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "NFT API V2 Methods (Older Version)_getContractMetadataBatch_Request",
              "camelCase": {
                "unsafeName": "nftApiV2MethodsOlderVersionGetContractMetadataBatchRequest",
                "safeName": "nftApiV2MethodsOlderVersionGetContractMetadataBatchRequest"
              },
              "snakeCase": {
                "unsafeName": "nft_api_v_2_methods_older_version_get_contract_metadata_batch_request",
                "safeName": "nft_api_v_2_methods_older_version_get_contract_metadata_batch_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACT_METADATA_BATCH_REQUEST",
                "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACT_METADATA_BATCH_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "NftApiV2MethodsOlderVersionGetContractMetadataBatchRequest",
                "safeName": "NftApiV2MethodsOlderVersionGetContractMetadataBatchRequest"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "contractAddresses",
                    "camelCase": {
                      "unsafeName": "contractAddresses",
                      "safeName": "contractAddresses"
                    },
                    "snakeCase": {
                      "unsafeName": "contract_addresses",
                      "safeName": "contract_addresses"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTRACT_ADDRESSES",
                      "safeName": "CONTRACT_ADDRESSES"
                    },
                    "pascalCase": {
                      "unsafeName": "ContractAddresses",
                      "safeName": "ContractAddresses"
                    }
                  },
                  "wireValue": "contractAddresses"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "docs": "list of contract addresses to batch metadata requests for",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "V2ApiKeyGetContractMetadataBatchPostRequestBodyContentApplicationJsonSchemaContractAddresses_example_autogenerated": [
                      "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                    ]
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "nftApiV2MethodsOlderVersionGetContractMetadataBatchExample": {}
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "v2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items",
                          "safeName": "v_2_api_key_get_contract_metadata_batch_post_responses_content_application_json_schema_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
                          "safeName": "V_2_API_KEY_GET_CONTRACT_METADATA_BATCH_POST_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                          "safeName": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems"
                        }
                      },
                      "typeId": "V2ApiKeyGetContractMetadataBatchPostResponsesContentApplicationJsonSchemaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetContractMetadataBatchExample": [
                      {
                        "address": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "contractMetadata": {
                          "address": "foo",
                          "totalBalance": 42,
                          "numDistinctTokensOwned": 42,
                          "isSpam": true,
                          "tokenId": "foo",
                          "name": "foo",
                          "title": "foo",
                          "symbol": "foo",
                          "tokenType": "foo",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "media": [
                            {
                              "raw": "foo",
                              "gateway": "foo",
                              "thumbnail": "foo",
                              "format": "foo",
                              "bytes": 42
                            }
                          ],
                          "opensea": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          }
                        }
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets the metadata associated with the given list of contract addresses",
          "v2Examples": {
            "autogeneratedExamples": {
              "nftApiV2MethodsOlderVersionGetContractMetadataBatchExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v2/docs-demo/getContractMetadataBatch"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "address": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "contractMetadata": {
                          "address": "foo",
                          "totalBalance": 42,
                          "numDistinctTokensOwned": 42,
                          "isSpam": true,
                          "tokenId": "foo",
                          "name": "foo",
                          "title": "foo",
                          "symbol": "foo",
                          "tokenType": "foo",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "media": [
                            {
                              "raw": "foo",
                              "gateway": "foo",
                              "thumbnail": "foo",
                              "format": "foo",
                              "bytes": 42
                            }
                          ],
                          "opensea": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          }
                        }
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getNFTsForCollection",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForCollection"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "collectionSlug",
                  "camelCase": {
                    "unsafeName": "collectionSlug",
                    "safeName": "collectionSlug"
                  },
                  "snakeCase": {
                    "unsafeName": "collection_slug",
                    "safeName": "collection_slug"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "COLLECTION_SLUG",
                    "safeName": "COLLECTION_SLUG"
                  },
                  "pascalCase": {
                    "unsafeName": "CollectionSlug",
                    "safeName": "CollectionSlug"
                  }
                },
                "wireValue": "collectionSlug"
              },
              "docs": "String - OpenSea slug for the NFT collection.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "boredapeyachtclub",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "collectionSlug_example": "boredapeyachtclub"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "startToken",
                  "camelCase": {
                    "unsafeName": "startToken",
                    "safeName": "startToken"
                  },
                  "snakeCase": {
                    "unsafeName": "start_token",
                    "safeName": "start_token"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "START_TOKEN",
                    "safeName": "START_TOKEN"
                  },
                  "pascalCase": {
                    "unsafeName": "StartToken",
                    "safeName": "StartToken"
                  }
                },
                "wireValue": "startToken"
              },
              "docs": "String - A tokenID offset used for pagination. Can be a hex string, or a decimal. Users can specify the offset themselves to start from a custom offset, or to fetch multiple token ranges in parallel.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "startToken_example": "startToken"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "limit",
                  "camelCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "snakeCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIMIT",
                    "safeName": "LIMIT"
                  },
                  "pascalCase": {
                    "unsafeName": "Limit",
                    "safeName": "Limit"
                  }
                },
                "wireValue": "limit"
              },
              "docs": "Integer - Sets the total number of NFTs returned in the response. Defaults to 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenUriTimeoutInMs",
                  "camelCase": {
                    "unsafeName": "tokenUriTimeoutInMs",
                    "safeName": "tokenUriTimeoutInMs"
                  },
                  "snakeCase": {
                    "unsafeName": "token_uri_timeout_in_ms",
                    "safeName": "token_uri_timeout_in_ms"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_URI_TIMEOUT_IN_MS",
                    "safeName": "TOKEN_URI_TIMEOUT_IN_MS"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenUriTimeoutInMs",
                    "safeName": "TokenUriTimeoutInMs"
                  }
                },
                "wireValue": "tokenUriTimeoutInMs"
              },
              "docs": "No set timeout by default - When metadata is requested, this parameter is the timeout (in milliseconds) for the website hosting the metadata to respond. If you want to _only_ access the cache and not live fetch any metadata for cache misses then set this value to 0.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenUriTimeoutInMs_example": 42
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTsForCollection"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getNFTsForCollection",
          "name": {
            "originalName": "getNFTsForCollection",
            "camelCase": {
              "unsafeName": "getNfTsForCollection",
              "safeName": "getNfTsForCollection"
            },
            "snakeCase": {
              "unsafeName": "get_nf_ts_for_collection",
              "safeName": "get_nf_ts_for_collection"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NF_TS_FOR_COLLECTION",
              "safeName": "GET_NF_TS_FOR_COLLECTION"
            },
            "pascalCase": {
              "unsafeName": "GetNfTsForCollection",
              "safeName": "GetNfTsForCollection"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getNFTsForCollection_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_nf_ts_for_collection_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_nf_ts_for_collection_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_FOR_COLLECTION_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NF_TS_FOR_COLLECTION_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetNfTsForCollectionResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getNFTsForCollection_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetNfTsForCollectionExample": {
                      "nfts": [
                        {
                          "id": {
                            "tokenId": "44",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "tokenUri": {
                            "raw": "foo",
                            "gateway": "foo"
                          },
                          "metadata": {
                            "image": "foo",
                            "external_url": "foo",
                            "background_color": "foo",
                            "name": "foo",
                            "description": "foo",
                            "attributes": [
                              {
                                "value": "foo",
                                "trait_type": "foo"
                              }
                            ],
                            "media": [
                              {
                                "raw": "foo",
                                "gateway": "foo",
                                "thumbnail": "foo",
                                "format": "foo",
                                "bytes": 42
                              }
                            ]
                          },
                          "timeLastUpdated": "foo",
                          "contractMetadata": {
                            "name": "foo",
                            "symbol": "foo",
                            "totalSupply": "foo",
                            "tokenType": "ERC721",
                            "contractDeployer": "foo",
                            "deployedBlockNumber": 42,
                            "opensea": {
                              "floorPrice": 42,
                              "collectionName": "foo",
                              "safelistRequestStatus": "foo",
                              "imageUrl": "foo",
                              "description": "foo",
                              "externalUrl": "foo",
                              "twitterUsername": "foo",
                              "discordUrl": "foo",
                              "lastIngestedAt": "foo"
                            }
                          }
                        }
                      ],
                      "nextToken": "foo"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all NFTs for a given NFT contract.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getNfTsForCollectionExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getNFTsForCollection"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "nfts": [
                        {
                          "id": {
                            "tokenId": "44",
                            "tokenMetadata": {
                              "tokenType": "ERC721"
                            }
                          },
                          "tokenUri": {
                            "raw": "foo",
                            "gateway": "foo"
                          },
                          "metadata": {
                            "image": "foo",
                            "external_url": "foo",
                            "background_color": "foo",
                            "name": "foo",
                            "description": "foo",
                            "attributes": [
                              {
                                "value": "foo",
                                "trait_type": "foo"
                              }
                            ],
                            "media": [
                              {
                                "raw": "foo",
                                "gateway": "foo",
                                "thumbnail": "foo",
                                "format": "foo",
                                "bytes": 42
                              }
                            ]
                          },
                          "timeLastUpdated": "foo",
                          "contractMetadata": {
                            "name": "foo",
                            "symbol": "foo",
                            "totalSupply": "foo",
                            "tokenType": "ERC721",
                            "contractDeployer": "foo",
                            "deployedBlockNumber": 42,
                            "opensea": {
                              "floorPrice": 42,
                              "collectionName": "foo",
                              "safelistRequestStatus": "foo",
                              "imageUrl": "foo",
                              "description": "foo",
                              "externalUrl": "foo",
                              "twitterUsername": "foo",
                              "discordUrl": "foo",
                              "lastIngestedAt": "foo"
                            }
                          }
                        }
                      ],
                      "nextToken": "foo"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getOwnersForToken",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForToken"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageSize",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "pageSize"
              },
              "docs": "Number of owners to be returned per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageSize_example": 42
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForToken"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getOwnersForToken",
          "name": {
            "originalName": "getOwnersForToken",
            "camelCase": {
              "unsafeName": "getOwnersForToken",
              "safeName": "getOwnersForToken"
            },
            "snakeCase": {
              "unsafeName": "get_owners_for_token",
              "safeName": "get_owners_for_token"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_OWNERS_FOR_TOKEN",
              "safeName": "GET_OWNERS_FOR_TOKEN"
            },
            "pascalCase": {
              "unsafeName": "GetOwnersForToken",
              "safeName": "GetOwnersForToken"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getOwnersForToken_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetOwnersForTokenResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetOwnersForTokenResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_owners_for_token_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_owners_for_token_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_OWNERS_FOR_TOKEN_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_OWNERS_FOR_TOKEN_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetOwnersForTokenResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetOwnersForTokenResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getOwnersForToken_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetOwnersForTokenExample": {
                      "owners": [
                        "foo"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get the owner(s) for a token.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getOwnersForTokenExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getOwnersForToken"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "owners": [
                        "foo"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getOwnersForCollection",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForCollection"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withTokenBalances",
                  "camelCase": {
                    "unsafeName": "withTokenBalances",
                    "safeName": "withTokenBalances"
                  },
                  "snakeCase": {
                    "unsafeName": "with_token_balances",
                    "safeName": "with_token_balances"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_TOKEN_BALANCES",
                    "safeName": "WITH_TOKEN_BALANCES"
                  },
                  "pascalCase": {
                    "unsafeName": "WithTokenBalances",
                    "safeName": "WithTokenBalances"
                  }
                },
                "wireValue": "withTokenBalances"
              },
              "docs": "Boolean - If set to `true` the query will include the token balances per token id for each owner. `false` by default.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": false,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withTokenBalances_example": false
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - used for collections with >50,000 owners. `pageKey` field can be passed back as request parameter to get the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getOwnersForCollection"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getOwnersForCollection",
          "name": {
            "originalName": "getOwnersForCollection",
            "camelCase": {
              "unsafeName": "getOwnersForCollection",
              "safeName": "getOwnersForCollection"
            },
            "snakeCase": {
              "unsafeName": "get_owners_for_collection",
              "safeName": "get_owners_for_collection"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_OWNERS_FOR_COLLECTION",
              "safeName": "GET_OWNERS_FOR_COLLECTION"
            },
            "pascalCase": {
              "unsafeName": "GetOwnersForCollection",
              "safeName": "GetOwnersForCollection"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetOwnersForCollectionExample": [
                      "foo"
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all owners for a given NFT contract.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getOwnersForCollectionExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getOwnersForCollection"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      "foo"
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getSpamContracts",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getSpamContracts"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getSpamContracts"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getSpamContracts",
          "name": {
            "originalName": "getSpamContracts",
            "camelCase": {
              "unsafeName": "getSpamContracts",
              "safeName": "getSpamContracts"
            },
            "snakeCase": {
              "unsafeName": "get_spam_contracts",
              "safeName": "get_spam_contracts"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPAM_CONTRACTS",
              "safeName": "GET_SPAM_CONTRACTS"
            },
            "pascalCase": {
              "unsafeName": "GetSpamContracts",
              "safeName": "GetSpamContracts"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getSpamContracts_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetSpamContractsResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetSpamContractsResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_spam_contracts_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_spam_contracts_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_SPAM_CONTRACTS_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_SPAM_CONTRACTS_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetSpamContractsResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetSpamContractsResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getSpamContracts_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetSpamContractsExample": {
                      "contractAddresses": [
                        "foo"
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of all spam contracts marked by Alchemy.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getSpamContractsExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getSpamContracts"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contractAddresses": [
                        "foo"
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "isSpamContract",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isSpamContract"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isSpamContract"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.isSpamContract",
          "name": {
            "originalName": "isSpamContract",
            "camelCase": {
              "unsafeName": "isSpamContract",
              "safeName": "isSpamContract"
            },
            "snakeCase": {
              "unsafeName": "is_spam_contract",
              "safeName": "is_spam_contract"
            },
            "screamingSnakeCase": {
              "unsafeName": "IS_SPAM_CONTRACT",
              "safeName": "IS_SPAM_CONTRACT"
            },
            "pascalCase": {
              "unsafeName": "IsSpamContract",
              "safeName": "IsSpamContract"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionIsSpamContractExample": true
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns whether a contract is marked as spam or not by Alchemy.",
          "v2Examples": {
            "autogeneratedExamples": {
              "isSpamContractExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/isSpamContract"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": true,
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "isAirdrop",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isAirdrop"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isAirdrop"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.isAirdrop",
          "name": {
            "originalName": "isAirdrop",
            "camelCase": {
              "unsafeName": "isAirdrop",
              "safeName": "isAirdrop"
            },
            "snakeCase": {
              "unsafeName": "is_airdrop",
              "safeName": "is_airdrop"
            },
            "screamingSnakeCase": {
              "unsafeName": "IS_AIRDROP",
              "safeName": "IS_AIRDROP"
            },
            "pascalCase": {
              "unsafeName": "IsAirdrop",
              "safeName": "IsAirdrop"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionIsAirdropExample": true
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns whether a token is marked as an airdrop or not. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address.",
          "v2Examples": {
            "autogeneratedExamples": {
              "isAirdropExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/isAirdrop"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": true,
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "invalidateContract",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/invalidateContract"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/invalidateContract"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.invalidateContract",
          "name": {
            "originalName": "invalidateContract",
            "camelCase": {
              "unsafeName": "invalidateContract",
              "safeName": "invalidateContract"
            },
            "snakeCase": {
              "unsafeName": "invalidate_contract",
              "safeName": "invalidate_contract"
            },
            "screamingSnakeCase": {
              "unsafeName": "INVALIDATE_CONTRACT",
              "safeName": "INVALIDATE_CONTRACT"
            },
            "pascalCase": {
              "unsafeName": "InvalidateContract",
              "safeName": "InvalidateContract"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_invalidateContract_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionInvalidateContractResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionInvalidateContractResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_invalidate_contract_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_invalidate_contract_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_INVALIDATE_CONTRACT_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_INVALIDATE_CONTRACT_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionInvalidateContractResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionInvalidateContractResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_invalidateContract_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionInvalidateContractExample": {
                      "success": "foo",
                      "numTokensInvalidated": 42
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Marks all cached tokens for the particular contract as stale. So the next time the endpoint is queried it fetches live data instead of fetching from cache.",
          "v2Examples": {
            "autogeneratedExamples": {
              "invalidateContractExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/invalidateContract"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "success": "foo",
                      "numTokensInvalidated": 42
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getFloorPrice",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getFloorPrice"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getFloorPrice"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getFloorPrice",
          "name": {
            "originalName": "getFloorPrice",
            "camelCase": {
              "unsafeName": "getFloorPrice",
              "safeName": "getFloorPrice"
            },
            "snakeCase": {
              "unsafeName": "get_floor_price",
              "safeName": "get_floor_price"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_FLOOR_PRICE",
              "safeName": "GET_FLOOR_PRICE"
            },
            "pascalCase": {
              "unsafeName": "GetFloorPrice",
              "safeName": "GetFloorPrice"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getFloorPrice_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetFloorPriceResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetFloorPriceResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_floor_price_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_floor_price_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_FLOOR_PRICE_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_FLOOR_PRICE_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetFloorPriceResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetFloorPriceResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getFloorPrice_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionGetFloorPriceExample": {
                      "nftMarketplace": {
                        "floorPrice": 42,
                        "priceCurrency": "ETH",
                        "collectionUrl": "foo",
                        "retrievedAt": "foo",
                        "error": "foo"
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns the floor prices of a NFT collection by marketplace.",
          "v2Examples": {
            "autogeneratedExamples": {
              "getFloorPriceExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getFloorPrice"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "nftMarketplace": {
                        "floorPrice": 42,
                        "priceCurrency": "ETH",
                        "collectionUrl": "foo",
                        "retrievedAt": "foo",
                        "error": "foo"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "computeRarity",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/computeRarity"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The ID of the token. Can be in hex or decimal format.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "44",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/computeRarity"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.computeRarity",
          "name": {
            "originalName": "computeRarity",
            "camelCase": {
              "unsafeName": "computeRarity",
              "safeName": "computeRarity"
            },
            "snakeCase": {
              "unsafeName": "compute_rarity",
              "safeName": "compute_rarity"
            },
            "screamingSnakeCase": {
              "unsafeName": "COMPUTE_RARITY",
              "safeName": "COMPUTE_RARITY"
            },
            "pascalCase": {
              "unsafeName": "ComputeRarity",
              "safeName": "ComputeRarity"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_computeRarity_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionComputeRarityResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionComputeRarityResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_compute_rarity_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_compute_rarity_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_COMPUTE_RARITY_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_COMPUTE_RARITY_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionComputeRarityResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionComputeRarityResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_computeRarity_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionComputeRarityExample": {
                      "rarities": [
                        {
                          "trait_type": "foo",
                          "value": "foo",
                          "prevalence": 42
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Computes the rarity of each attribute of an NFT.",
          "v2Examples": {
            "autogeneratedExamples": {
              "computeRarityExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/computeRarity"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "tokenId": "44"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "rarities": [
                        {
                          "trait_type": "foo",
                          "value": "foo",
                          "prevalence": 42
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "searchContractMetadata",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/searchContractMetadata"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "query",
                  "camelCase": {
                    "unsafeName": "query",
                    "safeName": "query"
                  },
                  "snakeCase": {
                    "unsafeName": "query",
                    "safeName": "query"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "QUERY",
                    "safeName": "QUERY"
                  },
                  "pascalCase": {
                    "unsafeName": "Query",
                    "safeName": "Query"
                  }
                },
                "wireValue": "query"
              },
              "docs": "String - The search string that you want to search for in contract metadata",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "bored",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "query_example": "bored"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/searchContractMetadata"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.searchContractMetadata",
          "name": {
            "originalName": "searchContractMetadata",
            "camelCase": {
              "unsafeName": "searchContractMetadata",
              "safeName": "searchContractMetadata"
            },
            "snakeCase": {
              "unsafeName": "search_contract_metadata",
              "safeName": "search_contract_metadata"
            },
            "screamingSnakeCase": {
              "unsafeName": "SEARCH_CONTRACT_METADATA",
              "safeName": "SEARCH_CONTRACT_METADATA"
            },
            "pascalCase": {
              "unsafeName": "SearchContractMetadata",
              "safeName": "SearchContractMetadata"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                        "camelCase": {
                          "unsafeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                          "safeName": "v2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
                        },
                        "snakeCase": {
                          "unsafeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items",
                          "safeName": "v_2_api_key_search_contract_metadata_get_responses_content_application_json_schema_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS",
                          "safeName": "V_2_API_KEY_SEARCH_CONTRACT_METADATA_GET_RESPONSES_CONTENT_APPLICATION_JSON_SCHEMA_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                          "safeName": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems"
                        }
                      },
                      "typeId": "V2ApiKeySearchContractMetadataGetResponsesContentApplicationJsonSchemaItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "Returns the list of NFT contracts where the metadata has one or more keywords from the search string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionSearchContractMetadataExample": [
                      {
                        "address": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "contractMetadata": {
                          "name": "foo",
                          "symbol": "foo",
                          "totalSupply": "foo",
                          "tokenType": "ERC721",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "opensea": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          }
                        }
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Search for a keyword across metadata of all ERC-721 and ERC-1155 smart contracts",
          "v2Examples": {
            "autogeneratedExamples": {
              "searchContractMetadataExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/searchContractMetadata"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "query": "bored"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "address": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "contractMetadata": {
                          "name": "foo",
                          "symbol": "foo",
                          "totalSupply": "foo",
                          "tokenType": "ERC721",
                          "contractDeployer": "foo",
                          "deployedBlockNumber": 42,
                          "opensea": {
                            "floorPrice": 42,
                            "collectionName": "foo",
                            "safelistRequestStatus": "foo",
                            "imageUrl": "foo",
                            "description": "foo",
                            "externalUrl": "foo",
                            "twitterUsername": "foo",
                            "discordUrl": "foo",
                            "lastIngestedAt": "foo"
                          }
                        }
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "summarizeNFTAttributes",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/summarizeNFTAttributes"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/summarizeNFTAttributes"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.summarizeNFTAttributes",
          "name": {
            "originalName": "summarizeNFTAttributes",
            "camelCase": {
              "unsafeName": "summarizeNftAttributes",
              "safeName": "summarizeNftAttributes"
            },
            "snakeCase": {
              "unsafeName": "summarize_nft_attributes",
              "safeName": "summarize_nft_attributes"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUMMARIZE_NFT_ATTRIBUTES",
              "safeName": "SUMMARIZE_NFT_ATTRIBUTES"
            },
            "pascalCase": {
              "unsafeName": "SummarizeNftAttributes",
              "safeName": "SummarizeNftAttributes"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_summarizeNFTAttributes_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_summarize_nft_attributes_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_summarize_nft_attributes_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_SUMMARIZE_NFT_ATTRIBUTES_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_SUMMARIZE_NFT_ATTRIBUTES_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionSummarizeNftAttributesResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_summarizeNFTAttributes_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionSummarizeNftAttributesExample": {
                      "totalSupply": "foo",
                      "summary": {},
                      "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Generate a summary of attribute prevalence for an NFT collection.",
          "v2Examples": {
            "autogeneratedExamples": {
              "summarizeNftAttributesExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/summarizeNFTAttributes"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "totalSupply": "foo",
                      "summary": {},
                      "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "isHolderOfCollection",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isHolderOfCollection"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "owner",
                  "camelCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "snakeCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "OWNER",
                    "safeName": "OWNER"
                  },
                  "pascalCase": {
                    "unsafeName": "Owner",
                    "safeName": "Owner"
                  }
                },
                "wireValue": "owner"
              },
              "docs": "String - Address for NFT owner (can be in ENS format for Eth Mainnet).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "owner_example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - Contract address for the NFT contract (ERC721 and ERC1155 supported).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/isHolderOfCollection"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.isHolderOfCollection",
          "name": {
            "originalName": "isHolderOfCollection",
            "camelCase": {
              "unsafeName": "isHolderOfCollection",
              "safeName": "isHolderOfCollection"
            },
            "snakeCase": {
              "unsafeName": "is_holder_of_collection",
              "safeName": "is_holder_of_collection"
            },
            "screamingSnakeCase": {
              "unsafeName": "IS_HOLDER_OF_COLLECTION",
              "safeName": "IS_HOLDER_OF_COLLECTION"
            },
            "pascalCase": {
              "unsafeName": "IsHolderOfCollection",
              "safeName": "IsHolderOfCollection"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_isHolderOfCollection_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_is_holder_of_collection_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_is_holder_of_collection_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_IS_HOLDER_OF_COLLECTION_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_IS_HOLDER_OF_COLLECTION_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionIsHolderOfCollectionResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_isHolderOfCollection_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionIsHolderOfCollectionExample": {
                      "isHolderOfCollection": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Checks whether a wallet holds a NFT in a given collection",
          "v2Examples": {
            "autogeneratedExamples": {
              "isHolderOfCollectionExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/isHolderOfCollection"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "contractAddress": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "isHolderOfCollection": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "getNFTSales",
          "method": "GET",
          "baseUrl": "https://{network}.g.alchemy.com/nft",
          "v2BaseUrls": [
            "https://{network}.g.alchemy.com/nft"
          ],
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTSales"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "fromBlock",
                  "camelCase": {
                    "unsafeName": "fromBlock",
                    "safeName": "fromBlock"
                  },
                  "snakeCase": {
                    "unsafeName": "from_block",
                    "safeName": "from_block"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "FROM_BLOCK",
                    "safeName": "FROM_BLOCK"
                  },
                  "pascalCase": {
                    "unsafeName": "FromBlock",
                    "safeName": "FromBlock"
                  }
                },
                "wireValue": "fromBlock"
              },
              "docs": "String - The block number to start fetching NFT sales data from. Allowed values are decimal and hex integers, and \"latest\". Defaults to \"0\".",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "0",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "fromBlock_example": "0"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "toBlock",
                  "camelCase": {
                    "unsafeName": "toBlock",
                    "safeName": "toBlock"
                  },
                  "snakeCase": {
                    "unsafeName": "to_block",
                    "safeName": "to_block"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TO_BLOCK",
                    "safeName": "TO_BLOCK"
                  },
                  "pascalCase": {
                    "unsafeName": "ToBlock",
                    "safeName": "ToBlock"
                  }
                },
                "wireValue": "toBlock"
              },
              "docs": "String - The block number to start fetching NFT sales data from. Allowed values are decimal and hex integers, and \"latest\". Defaults to \"latest\".",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "latest",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "toBlock_example": "latest"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "order",
                  "camelCase": {
                    "unsafeName": "order",
                    "safeName": "order"
                  },
                  "snakeCase": {
                    "unsafeName": "order",
                    "safeName": "order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ORDER",
                    "safeName": "ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "Order",
                    "safeName": "Order"
                  }
                },
                "wireValue": "order"
              },
              "docs": "Enum - Whether to return the results ascending from startBlock or descending from startBlock. Defaults to descending (false).",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V2ApiKeyGetNftSalesGetParametersOrder",
                      "camelCase": {
                        "unsafeName": "v2ApiKeyGetNftSalesGetParametersOrder",
                        "safeName": "v2ApiKeyGetNftSalesGetParametersOrder"
                      },
                      "snakeCase": {
                        "unsafeName": "v_2_api_key_get_nft_sales_get_parameters_order",
                        "safeName": "v_2_api_key_get_nft_sales_get_parameters_order"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER",
                        "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_ORDER"
                      },
                      "pascalCase": {
                        "unsafeName": "V2ApiKeyGetNftSalesGetParametersOrder",
                        "safeName": "V2ApiKeyGetNftSalesGetParametersOrder"
                      }
                    },
                    "typeId": "V2ApiKeyGetNftSalesGetParametersOrder",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "order_example": "asc"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "marketplace",
                  "camelCase": {
                    "unsafeName": "marketplace",
                    "safeName": "marketplace"
                  },
                  "snakeCase": {
                    "unsafeName": "marketplace",
                    "safeName": "marketplace"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "MARKETPLACE",
                    "safeName": "MARKETPLACE"
                  },
                  "pascalCase": {
                    "unsafeName": "Marketplace",
                    "safeName": "Marketplace"
                  }
                },
                "wireValue": "marketplace"
              },
              "docs": "Enum - The name of the NFT marketplace to filter sales by. The endpoint currently supports \"seaport\", \"wyvern\", \"looksrare\", \"x2y2\", \"blur\", and \"cryptopunks\". Defaults to returning sales from all supported marketplaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V2ApiKeyGetNftSalesGetParametersMarketplace",
                      "camelCase": {
                        "unsafeName": "v2ApiKeyGetNftSalesGetParametersMarketplace",
                        "safeName": "v2ApiKeyGetNftSalesGetParametersMarketplace"
                      },
                      "snakeCase": {
                        "unsafeName": "v_2_api_key_get_nft_sales_get_parameters_marketplace",
                        "safeName": "v_2_api_key_get_nft_sales_get_parameters_marketplace"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE",
                        "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_MARKETPLACE"
                      },
                      "pascalCase": {
                        "unsafeName": "V2ApiKeyGetNftSalesGetParametersMarketplace",
                        "safeName": "V2ApiKeyGetNftSalesGetParametersMarketplace"
                      }
                    },
                    "typeId": "V2ApiKeyGetNftSalesGetParametersMarketplace",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "marketplace_example": "seaport"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "contractAddress",
                  "camelCase": {
                    "unsafeName": "contractAddress",
                    "safeName": "contractAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "contract_address",
                    "safeName": "contract_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONTRACT_ADDRESS",
                    "safeName": "CONTRACT_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "ContractAddress",
                    "safeName": "ContractAddress"
                  }
                },
                "wireValue": "contractAddress"
              },
              "docs": "String - The contract address of a NFT collection to filter sales by. Defaults to returning all NFT contracts.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "contractAddress_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "tokenId",
                  "camelCase": {
                    "unsafeName": "tokenId",
                    "safeName": "tokenId"
                  },
                  "snakeCase": {
                    "unsafeName": "token_id",
                    "safeName": "token_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN_ID",
                    "safeName": "TOKEN_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "TokenId",
                    "safeName": "TokenId"
                  }
                },
                "wireValue": "tokenId"
              },
              "docs": "String - The token ID of an NFT within the collection specified by contractAddress to filter sales by. Defaults to returning all token IDs.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "44",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "tokenId_example": "44"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "buyerAddress",
                  "camelCase": {
                    "unsafeName": "buyerAddress",
                    "safeName": "buyerAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "buyer_address",
                    "safeName": "buyer_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BUYER_ADDRESS",
                    "safeName": "BUYER_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "BuyerAddress",
                    "safeName": "BuyerAddress"
                  }
                },
                "wireValue": "buyerAddress"
              },
              "docs": "String - The address of the NFT buyer to filter sales by. Defaults to returning sales involving any buyer.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "buyerAddress_example": "buyerAddress"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "sellerAddress",
                  "camelCase": {
                    "unsafeName": "sellerAddress",
                    "safeName": "sellerAddress"
                  },
                  "snakeCase": {
                    "unsafeName": "seller_address",
                    "safeName": "seller_address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SELLER_ADDRESS",
                    "safeName": "SELLER_ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "SellerAddress",
                    "safeName": "SellerAddress"
                  }
                },
                "wireValue": "sellerAddress"
              },
              "docs": "String - The address of the NFT seller to filter sales by. Defaults to returning sales involving any seller.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "sellerAddress_example": "sellerAddress"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "taker",
                  "camelCase": {
                    "unsafeName": "taker",
                    "safeName": "taker"
                  },
                  "snakeCase": {
                    "unsafeName": "taker",
                    "safeName": "taker"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TAKER",
                    "safeName": "TAKER"
                  },
                  "pascalCase": {
                    "unsafeName": "Taker",
                    "safeName": "Taker"
                  }
                },
                "wireValue": "taker"
              },
              "docs": "Enum - Filter by whether the buyer or seller was the taker in the NFT trade. Allowed filter values are \"BUYER\" and \"SELLER\". Defaults to returning both buyer and seller taker trades.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V2ApiKeyGetNftSalesGetParametersTaker",
                      "camelCase": {
                        "unsafeName": "v2ApiKeyGetNftSalesGetParametersTaker",
                        "safeName": "v2ApiKeyGetNftSalesGetParametersTaker"
                      },
                      "snakeCase": {
                        "unsafeName": "v_2_api_key_get_nft_sales_get_parameters_taker",
                        "safeName": "v_2_api_key_get_nft_sales_get_parameters_taker"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER",
                        "safeName": "V_2_API_KEY_GET_NFT_SALES_GET_PARAMETERS_TAKER"
                      },
                      "pascalCase": {
                        "unsafeName": "V2ApiKeyGetNftSalesGetParametersTaker",
                        "safeName": "V2ApiKeyGetNftSalesGetParametersTaker"
                      }
                    },
                    "typeId": "V2ApiKeyGetNftSalesGetParametersTaker",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "taker_example": "BUYER"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "limit",
                  "camelCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "snakeCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIMIT",
                    "safeName": "LIMIT"
                  },
                  "pascalCase": {
                    "unsafeName": "Limit",
                    "safeName": "Limit"
                  }
                },
                "wireValue": "limit"
              },
              "docs": "Integer - The maximum number of NFT sales to return. Maximum and default values are 1000.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "limit_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getNFTSales"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getNFTSales",
          "name": {
            "originalName": "getNFTSales",
            "camelCase": {
              "unsafeName": "getNftSales",
              "safeName": "getNftSales"
            },
            "snakeCase": {
              "unsafeName": "get_nft_sales",
              "safeName": "get_nft_sales"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_NFT_SALES",
              "safeName": "GET_NFT_SALES"
            },
            "pascalCase": {
              "unsafeName": "GetNftSales",
              "safeName": "GetNftSales"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getNFTSales_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetNftSalesResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetNftSalesResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_nft_sales_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_nft_sales_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_SALES_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_NFT_SALES_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetNftSalesResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetNftSalesResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getNFTSales_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Response (with pagination)": {
                      "nftSales": [
                        {
                          "marketplace": "seaport",
                          "contractAddress": "0x49cf6f5d44e70224e2e23fdcdd2c053f30ada28b",
                          "tokenId": "13749",
                          "quantity": "1",
                          "buyerAddress": "0x78f6c2458b53d0735208992c693bb2b2dafebb52",
                          "sellerAddress": "0x558a18f94cabdea4e47c5965384f457d8e870419",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "11100000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "300000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "600000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 130,
                          "bundleIndex": 0,
                          "transactionHash": "0xecfa1b29c9016bd2556fde637c6b48484eeb14f273af54c49317e3856ab7cb16"
                        },
                        {
                          "marketplace": "looksrare",
                          "contractAddress": "0x34d85c9cdeb23fa97cb08333b511ac86e1c4e258",
                          "tokenId": "75417",
                          "quantity": "1",
                          "buyerAddress": "0xb3aa9923489bc2bfec323bf05346acd4afbc92a0",
                          "sellerAddress": "0x206ccba024c236dced07c35b4e9eb0bade7ef166",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "2222700000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "47800000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "119500000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 197,
                          "bundleIndex": 0,
                          "transactionHash": "0x4c23163e4f855e143e573776bc6129bee370dff6ce760e71553fc93201b292e2"
                        }
                      ],
                      "pageKey": "MTUwMDAwNzgsODcsMA",
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      }
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets NFT sales that have happened through on-chain marketplaces",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Response (with pagination)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getNFTSales"
                  },
                  "environment": "https://{network}.g.alchemy.com/nft",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "nftSales": [
                        {
                          "marketplace": "seaport",
                          "contractAddress": "0x49cf6f5d44e70224e2e23fdcdd2c053f30ada28b",
                          "tokenId": "13749",
                          "quantity": "1",
                          "buyerAddress": "0x78f6c2458b53d0735208992c693bb2b2dafebb52",
                          "sellerAddress": "0x558a18f94cabdea4e47c5965384f457d8e870419",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "11100000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "300000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "600000000000000000",
                            "symbol": "ETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 130,
                          "bundleIndex": 0,
                          "transactionHash": "0xecfa1b29c9016bd2556fde637c6b48484eeb14f273af54c49317e3856ab7cb16"
                        },
                        {
                          "marketplace": "looksrare",
                          "contractAddress": "0x34d85c9cdeb23fa97cb08333b511ac86e1c4e258",
                          "tokenId": "75417",
                          "quantity": "1",
                          "buyerAddress": "0xb3aa9923489bc2bfec323bf05346acd4afbc92a0",
                          "sellerAddress": "0x206ccba024c236dced07c35b4e9eb0bade7ef166",
                          "taker": "BUYER",
                          "sellerFee": {
                            "amount": "2222700000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "protocolFee": {
                            "amount": "47800000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "royaltyFee": {
                            "amount": "119500000000000000",
                            "symbol": "WETH",
                            "decimals": 18
                          },
                          "blockNumber": 15000002,
                          "logIndex": 197,
                          "bundleIndex": 0,
                          "transactionHash": "0x4c23163e4f855e143e573776bc6129bee370dff6ce760e71553fc93201b292e2"
                        }
                      ],
                      "pageKey": "MTUwMDAwNzgsODcsMA",
                      "validAt": {
                        "blockNumber": 17091500,
                        "blockHash": "0x2a34a65c4e0cd7fdf187d6a497214ad2bee255d2d3501868a6b8c09b4d1261bd",
                        "blockTimestamp": "2023-04-21T01:25:59Z"
                      }
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        },
        {
          "displayName": "getContractsForOwner",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractsForOwner"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "owner",
                  "camelCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "snakeCase": {
                    "unsafeName": "owner",
                    "safeName": "owner"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "OWNER",
                    "safeName": "OWNER"
                  },
                  "pascalCase": {
                    "unsafeName": "Owner",
                    "safeName": "Owner"
                  }
                },
                "wireValue": "owner"
              },
              "docs": "String - Address for NFT owner (can be in ENS format for Eth Mainnet).",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "owner_example": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageKey",
                  "camelCase": {
                    "unsafeName": "pageKey",
                    "safeName": "pageKey"
                  },
                  "snakeCase": {
                    "unsafeName": "page_key",
                    "safeName": "page_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_KEY",
                    "safeName": "PAGE_KEY"
                  },
                  "pascalCase": {
                    "unsafeName": "PageKey",
                    "safeName": "PageKey"
                  }
                },
                "wireValue": "pageKey"
              },
              "docs": "String - key for pagination. If more results are available, a pageKey will be returned in the response. Pass back the pageKey as a param to fetch the next page of results.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageKey_example": "pageKey"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "pageSize",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "pageSize"
              },
              "docs": "Number of NFTs to be returned per page. Defaults to 100. Max is 100.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "default": 100,
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "pageSize_example": 100
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "withMetadata",
                  "camelCase": {
                    "unsafeName": "withMetadata",
                    "safeName": "withMetadata"
                  },
                  "snakeCase": {
                    "unsafeName": "with_metadata",
                    "safeName": "with_metadata"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WITH_METADATA",
                    "safeName": "WITH_METADATA"
                  },
                  "pascalCase": {
                    "unsafeName": "WithMetadata",
                    "safeName": "WithMetadata"
                  }
                },
                "wireValue": "withMetadata"
              },
              "docs": "Boolean - if set to `true`, returns NFT metadata. Setting this to false will reduce payload size and may result in a faster API call. Defaults to `true`.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "default": true,
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "withMetadata_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "includeFilters[]",
                  "camelCase": {
                    "unsafeName": "includeFilters",
                    "safeName": "includeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "include_filters",
                    "safeName": "include_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "INCLUDE_FILTERS",
                    "safeName": "INCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "IncludeFilters",
                    "safeName": "IncludeFilters"
                  }
                },
                "wireValue": "includeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. Only NFTs that match one or more of these filters will be included in the response. May not be used in conjunction with excludeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "v2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items",
                            "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_include_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_INCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                            "safeName": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V2ApiKeyGetContractsForOwnerGetParametersIncludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "includeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "excludeFilters[]",
                  "camelCase": {
                    "unsafeName": "excludeFilters",
                    "safeName": "excludeFilters"
                  },
                  "snakeCase": {
                    "unsafeName": "exclude_filters",
                    "safeName": "exclude_filters"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "EXCLUDE_FILTERS",
                    "safeName": "EXCLUDE_FILTERS"
                  },
                  "pascalCase": {
                    "unsafeName": "ExcludeFilters",
                    "safeName": "ExcludeFilters"
                  }
                },
                "wireValue": "excludeFilters[]"
              },
              "docs": "Array of filters (as ENUMS) that will be applied to the query. NFTs that match one or more of these filters will be excluded from the response. May not be used in conjunction with includeFilters[]. Filter Options:\n  - SPAM: NFTs that have been classified as spam. Spam classification has a wide range of criteria that includes but is not limited to emitting fake events and copying other well-known NFTs. Please note that this filter is currently supported only on Ethereum Mainnet and Matic Mainnet, and is **available exclusively on paid tiers**.\n  - AIRDROPS: NFTs that have were airdropped to the user. Airdrops are defined as NFTs that were minted to a user address in a transaction sent by a different address. NOTE: this filter is currently supported on Ethereum Mainnet, Ethereum Goerli, and Matic Mainnet only.\n  - To learn more about spam, you can refer to this: <span class=\"custom-style\"><a href=\"https://www.alchemy.com/overviews/spam-nfts\" target=\"_blank\">Spam NFTs and how to fix them</a></span>",
              "valueType": {
                "container": {
                  "optional": {
                    "container": {
                      "list": {
                        "fernFilepath": {
                          "allParts": [],
                          "packagePath": []
                        },
                        "name": {
                          "originalName": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                          "camelCase": {
                            "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "v2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
                          },
                          "snakeCase": {
                            "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items",
                            "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_exclude_filters_schema_items"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS",
                            "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_EXCLUDE_FILTERS_SCHEMA_ITEMS"
                          },
                          "pascalCase": {
                            "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                            "safeName": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems"
                          }
                        },
                        "typeId": "V2ApiKeyGetContractsForOwnerGetParametersExcludeFiltersSchemaItems",
                        "inline": false,
                        "type": "named"
                      },
                      "type": "list"
                    },
                    "type": "container"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "excludeFilters[]_example": [
                    "SPAM"
                  ]
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "orderBy",
                  "camelCase": {
                    "unsafeName": "orderBy",
                    "safeName": "orderBy"
                  },
                  "snakeCase": {
                    "unsafeName": "order_by",
                    "safeName": "order_by"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ORDER_BY",
                    "safeName": "ORDER_BY"
                  },
                  "pascalCase": {
                    "unsafeName": "OrderBy",
                    "safeName": "OrderBy"
                  }
                },
                "wireValue": "orderBy"
              },
              "docs": "Enum - ordering scheme to use for ordering NFTs in the response. If unspecified, NFTs will be ordered by contract address and token ID.\n  - transferTime: NFTs will be ordered by the time they were transferred into the wallet, with newest NFTs first. NOTE: this ordering is only supported on Ethereum Mainnet and Polygon Mainnet.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy",
                      "camelCase": {
                        "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersOrderBy",
                        "safeName": "v2ApiKeyGetContractsForOwnerGetParametersOrderBy"
                      },
                      "snakeCase": {
                        "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_order_by",
                        "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_order_by"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY",
                        "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_ORDER_BY"
                      },
                      "pascalCase": {
                        "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy",
                        "safeName": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy"
                      }
                    },
                    "typeId": "V2ApiKeyGetContractsForOwnerGetParametersOrderBy",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "orderBy_example": "transferTime"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "spamConfidenceLevel",
                  "camelCase": {
                    "unsafeName": "spamConfidenceLevel",
                    "safeName": "spamConfidenceLevel"
                  },
                  "snakeCase": {
                    "unsafeName": "spam_confidence_level",
                    "safeName": "spam_confidence_level"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SPAM_CONFIDENCE_LEVEL",
                    "safeName": "SPAM_CONFIDENCE_LEVEL"
                  },
                  "pascalCase": {
                    "unsafeName": "SpamConfidenceLevel",
                    "safeName": "SpamConfidenceLevel"
                  }
                },
                "wireValue": "spamConfidenceLevel"
              },
              "docs": "Enum - the confidence level at which to filter spam at.\n\nConfidence Levels:\n  - VERY_HIGH\n  - HIGH\n  - MEDIUM\n  - LOW\n\nThe confidence level set means that any spam that is at that confidence level or higher will be filtered out. For example, if the confidence level is HIGH, contracts that we have HIGH or VERY_HIGH confidence in being spam will be filtered out from the response. \nDefaults to VERY_HIGH for Ethereum Mainnet and MEDIUM for Matic Mainnet.\n\n**Please note that this filter is only available on paid tiers. Upgrade your account [here](https://dashboard.alchemyapi.io/settings/billing/).**",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                      "camelCase": {
                        "unsafeName": "v2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                        "safeName": "v2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
                      },
                      "snakeCase": {
                        "unsafeName": "v_2_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level",
                        "safeName": "v_2_api_key_get_contracts_for_owner_get_parameters_spam_confidence_level"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL",
                        "safeName": "V_2_API_KEY_GET_CONTRACTS_FOR_OWNER_GET_PARAMETERS_SPAM_CONFIDENCE_LEVEL"
                      },
                      "pascalCase": {
                        "unsafeName": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                        "safeName": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel"
                      }
                    },
                    "typeId": "V2ApiKeyGetContractsForOwnerGetParametersSpamConfidenceLevel",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "spamConfidenceLevel_example": "VERY_HIGH"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/getContractsForOwner"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.getContractsForOwner",
          "name": {
            "originalName": "getContractsForOwner",
            "camelCase": {
              "unsafeName": "getContractsForOwner",
              "safeName": "getContractsForOwner"
            },
            "snakeCase": {
              "unsafeName": "get_contracts_for_owner",
              "safeName": "get_contracts_for_owner"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CONTRACTS_FOR_OWNER",
              "safeName": "GET_CONTRACTS_FOR_OWNER"
            },
            "pascalCase": {
              "unsafeName": "GetContractsForOwner",
              "safeName": "GetContractsForOwner"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "NFT API V2 Methods (Older Version)_getContractsForOwner_Response_200",
                    "camelCase": {
                      "unsafeName": "nftApiV2MethodsOlderVersionGetContractsForOwnerResponse200",
                      "safeName": "nftApiV2MethodsOlderVersionGetContractsForOwnerResponse200"
                    },
                    "snakeCase": {
                      "unsafeName": "nft_api_v_2_methods_older_version_get_contracts_for_owner_response_200",
                      "safeName": "nft_api_v_2_methods_older_version_get_contracts_for_owner_response_200"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACTS_FOR_OWNER_RESPONSE_200",
                      "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION_GET_CONTRACTS_FOR_OWNER_RESPONSE_200"
                    },
                    "pascalCase": {
                      "unsafeName": "NftApiV2MethodsOlderVersionGetContractsForOwnerResponse200",
                      "safeName": "NftApiV2MethodsOlderVersionGetContractsForOwnerResponse200"
                    }
                  },
                  "typeId": "NFT API V2 Methods (Older Version)_getContractsForOwner_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Response (withMetadata = false)": {
                      "contracts": [
                        {
                          "address": "0x000386e3f7559d9b6a2f5c46b4ad1a9587d59dc3",
                          "totalBalance": 912,
                          "numDistinctTokensOwned": 80,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000001"
                        },
                        {
                          "address": "0x0015f391949f25c3211063104ad4afc99210f85c",
                          "totalBalance": 17,
                          "numDistinctTokensOwned": 6,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000002"
                        },
                        {
                          "address": "0x005b92d71a934dbe48e985b6469881cf4b0308fc",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000003"
                        }
                      ],
                      "pageKey": "20ef9df5-0d81-42e5-b741-140f595a407b",
                      "totalCount": "2120"
                    },
                    "Response (withMetadata = true)": {
                      "contracts": [
                        {
                          "address": "0x1C310c2fbB0D9755A6b918F990bC8D3504f2c684",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "name": "The Wonderful Husl Founder Cards",
                          "symbol": "The Wonderful Husl Founder Cards",
                          "tokenType": "ERC1155",
                          "contractDeployer": "0x0bdD0AEC835F92a465290cdd57b27FBd00376F53",
                          "deployedBlockNumber": 15664554,
                          "totalSupply": {},
                          "openSeaMetadata": {
                            "floorPrice": null,
                            "collectionName": "The Wonderful Husl Founder Cards",
                            "safelistRequestStatus": "not_requested",
                            "imageUrl": "https://i.seadn.io/gcs/files/754e38769c80c9d6188444dddb10ec80.png?w=500&auto=format",
                            "description": "[Husl](https://www.huslnft.xyz) is building the bridge between business and NFTs. Husl Founders are the driven, the passionate and the focused members of the community ready to change their future. Owning a Founders Card gets you exclusive perks, early access to business management, and discounts on managed services for your business as NFT. [Learn More](https://www.huslnft.xyz)",
                            "externalUrl": "https://www.huslnft.xyz",
                            "twitterUsername": null,
                            "discordUrl": null,
                            "lastIngestedAt": "2023-03-20T01:36:19.000Z"
                          },
                          "displayNft": {
                            "tokenId": "233",
                            "name": null
                          },
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "contentType": "video/mp4",
                            "size": 36190302,
                            "originalUrl": "https://ipfs.io/ipfs/QmX2mM8r33W7KUBQSWXFAKNC2t654EXmWiX9vkrfrEaEnS"
                          }
                        }
                      ],
                      "pageKey": "03949322-9b2c-4fdd-aab6-1369e29fa5b2",
                      "totalCount": "2120"
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets all NFT contracts held by an owner address.",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Response (withMetadata = false)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getContractsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contracts": [
                        {
                          "address": "0x000386e3f7559d9b6a2f5c46b4ad1a9587d59dc3",
                          "totalBalance": 912,
                          "numDistinctTokensOwned": 80,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000001"
                        },
                        {
                          "address": "0x0015f391949f25c3211063104ad4afc99210f85c",
                          "totalBalance": 17,
                          "numDistinctTokensOwned": 6,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000002"
                        },
                        {
                          "address": "0x005b92d71a934dbe48e985b6469881cf4b0308fc",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "tokenId": "0x0000000000000000000000000000000000000000000000000000000000000003"
                        }
                      ],
                      "pageKey": "20ef9df5-0d81-42e5-b741-140f595a407b",
                      "totalCount": "2120"
                    },
                    "type": "json"
                  }
                }
              },
              "Response (withMetadata = true)": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/getContractsForOwner"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "owner": "0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "contracts": [
                        {
                          "address": "0x1C310c2fbB0D9755A6b918F990bC8D3504f2c684",
                          "totalBalance": 1,
                          "numDistinctTokensOwned": 1,
                          "isSpam": true,
                          "name": "The Wonderful Husl Founder Cards",
                          "symbol": "The Wonderful Husl Founder Cards",
                          "tokenType": "ERC1155",
                          "contractDeployer": "0x0bdD0AEC835F92a465290cdd57b27FBd00376F53",
                          "deployedBlockNumber": 15664554,
                          "totalSupply": {},
                          "openSeaMetadata": {
                            "floorPrice": null,
                            "collectionName": "The Wonderful Husl Founder Cards",
                            "safelistRequestStatus": "not_requested",
                            "imageUrl": "https://i.seadn.io/gcs/files/754e38769c80c9d6188444dddb10ec80.png?w=500&auto=format",
                            "description": "[Husl](https://www.huslnft.xyz) is building the bridge between business and NFTs. Husl Founders are the driven, the passionate and the focused members of the community ready to change their future. Owning a Founders Card gets you exclusive perks, early access to business management, and discounts on managed services for your business as NFT. [Learn More](https://www.huslnft.xyz)",
                            "externalUrl": "https://www.huslnft.xyz",
                            "twitterUsername": null,
                            "discordUrl": null,
                            "lastIngestedAt": "2023-03-20T01:36:19.000Z"
                          },
                          "displayNft": {
                            "tokenId": "233",
                            "name": null
                          },
                          "image": {
                            "cachedUrl": "https://nft-cdn.alchemy.com/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "thumbnailUrl": "https://res.cloudinary.com/alchemyapi/image/upload/thumbnailv2/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "pngUrl": "https://res.cloudinary.com/alchemyapi/image/upload/convert-png/eth-mainnet/d08d0d0fac8edf36ea09eae34b332814",
                            "contentType": "video/mp4",
                            "size": 36190302,
                            "originalUrl": "https://ipfs.io/ipfs/QmX2mM8r33W7KUBQSWXFAKNC2t654EXmWiX9vkrfrEaEnS"
                          }
                        }
                      ],
                      "pageKey": "03949322-9b2c-4fdd-aab6-1369e29fa5b2",
                      "totalCount": "2120"
                    },
                    "type": "json"
                  }
                }
              }
            }
          }
        },
        {
          "displayName": "reportSpam",
          "method": "GET",
          "baseUrl": "eth-mainnet",
          "path": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/reportSpam"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "address",
                  "camelCase": {
                    "unsafeName": "address",
                    "safeName": "address"
                  },
                  "snakeCase": {
                    "unsafeName": "address",
                    "safeName": "address"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ADDRESS",
                    "safeName": "ADDRESS"
                  },
                  "pascalCase": {
                    "unsafeName": "Address",
                    "safeName": "Address"
                  }
                },
                "wireValue": "address"
              },
              "docs": "String - any valid blockchain address for NFT collections, contracts, mints, etc.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "0xe785E82358879F061BC3dcAC6f0444462D4b5330",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "address_example": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v2/",
            "parts": [
              {
                "pathParameter": "apiKey",
                "tail": "/reportSpam"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "ApiKey",
                  "safeName": "ApiKey"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "docs-demo",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "apiKey_example": "docs-demo"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_nftApiV2MethodsOlderVersion.reportSpam",
          "name": {
            "originalName": "reportSpam",
            "camelCase": {
              "unsafeName": "reportSpam",
              "safeName": "reportSpam"
            },
            "snakeCase": {
              "unsafeName": "report_spam",
              "safeName": "report_spam"
            },
            "screamingSnakeCase": {
              "unsafeName": "REPORT_SPAM",
              "safeName": "REPORT_SPAM"
            },
            "pascalCase": {
              "unsafeName": "ReportSpam",
              "safeName": "ReportSpam"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "nftApiV2MethodsOlderVersionReportSpamExample": "foo"
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Report a particular address to our APIs if you think it is spam",
          "v2Examples": {
            "autogeneratedExamples": {
              "reportSpamExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v2/docs-demo/reportSpam"
                  },
                  "environment": "eth-mainnet",
                  "pathParameters": {
                    "apiKey": "docs-demo"
                  },
                  "queryParameters": {
                    "address": "0xe785E82358879F061BC3dcAC6f0444462D4b5330"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": "foo",
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    }
  },
  "errors": {},
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "eth-mainnet",
    "environments": {
      "environments": [
        {
          "id": "eth-mainnet",
          "name": {
            "originalName": "eth-mainnet",
            "camelCase": {
              "unsafeName": "ethMainnet",
              "safeName": "ethMainnet"
            },
            "snakeCase": {
              "unsafeName": "eth_mainnet",
              "safeName": "eth_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_MAINNET",
              "safeName": "ETH_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "EthMainnet",
              "safeName": "EthMainnet"
            }
          },
          "url": "https://eth-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "eth-sepolia",
          "name": {
            "originalName": "eth-sepolia",
            "camelCase": {
              "unsafeName": "ethSepolia",
              "safeName": "ethSepolia"
            },
            "snakeCase": {
              "unsafeName": "eth_sepolia",
              "safeName": "eth_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_SEPOLIA",
              "safeName": "ETH_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "EthSepolia",
              "safeName": "EthSepolia"
            }
          },
          "url": "https://eth-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "eth-holesky",
          "name": {
            "originalName": "eth-holesky",
            "camelCase": {
              "unsafeName": "ethHolesky",
              "safeName": "ethHolesky"
            },
            "snakeCase": {
              "unsafeName": "eth_holesky",
              "safeName": "eth_holesky"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_HOLESKY",
              "safeName": "ETH_HOLESKY"
            },
            "pascalCase": {
              "unsafeName": "EthHolesky",
              "safeName": "EthHolesky"
            }
          },
          "url": "https://eth-holesky.g.alchemy.com/nft"
        },
        {
          "id": "avax-mainnet",
          "name": {
            "originalName": "avax-mainnet",
            "camelCase": {
              "unsafeName": "avaxMainnet",
              "safeName": "avaxMainnet"
            },
            "snakeCase": {
              "unsafeName": "avax_mainnet",
              "safeName": "avax_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "AVAX_MAINNET",
              "safeName": "AVAX_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "AvaxMainnet",
              "safeName": "AvaxMainnet"
            }
          },
          "url": "https://avax-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "avax-fuji",
          "name": {
            "originalName": "avax-fuji",
            "camelCase": {
              "unsafeName": "avaxFuji",
              "safeName": "avaxFuji"
            },
            "snakeCase": {
              "unsafeName": "avax_fuji",
              "safeName": "avax_fuji"
            },
            "screamingSnakeCase": {
              "unsafeName": "AVAX_FUJI",
              "safeName": "AVAX_FUJI"
            },
            "pascalCase": {
              "unsafeName": "AvaxFuji",
              "safeName": "AvaxFuji"
            }
          },
          "url": "https://avax-fuji.g.alchemy.com/nft"
        },
        {
          "id": "zksync-mainnet",
          "name": {
            "originalName": "zksync-mainnet",
            "camelCase": {
              "unsafeName": "zksyncMainnet",
              "safeName": "zksyncMainnet"
            },
            "snakeCase": {
              "unsafeName": "zksync_mainnet",
              "safeName": "zksync_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "ZKSYNC_MAINNET",
              "safeName": "ZKSYNC_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "ZksyncMainnet",
              "safeName": "ZksyncMainnet"
            }
          },
          "url": "https://zksync-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "opt-mainnet",
          "name": {
            "originalName": "opt-mainnet",
            "camelCase": {
              "unsafeName": "optMainnet",
              "safeName": "optMainnet"
            },
            "snakeCase": {
              "unsafeName": "opt_mainnet",
              "safeName": "opt_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "OPT_MAINNET",
              "safeName": "OPT_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "OptMainnet",
              "safeName": "OptMainnet"
            }
          },
          "url": "https://opt-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "polygon-mainnet",
          "name": {
            "originalName": "polygon-mainnet",
            "camelCase": {
              "unsafeName": "polygonMainnet",
              "safeName": "polygonMainnet"
            },
            "snakeCase": {
              "unsafeName": "polygon_mainnet",
              "safeName": "polygon_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "POLYGON_MAINNET",
              "safeName": "POLYGON_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "PolygonMainnet",
              "safeName": "PolygonMainnet"
            }
          },
          "url": "https://polygon-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "polygon-amoy",
          "name": {
            "originalName": "polygon-amoy",
            "camelCase": {
              "unsafeName": "polygonAmoy",
              "safeName": "polygonAmoy"
            },
            "snakeCase": {
              "unsafeName": "polygon_amoy",
              "safeName": "polygon_amoy"
            },
            "screamingSnakeCase": {
              "unsafeName": "POLYGON_AMOY",
              "safeName": "POLYGON_AMOY"
            },
            "pascalCase": {
              "unsafeName": "PolygonAmoy",
              "safeName": "PolygonAmoy"
            }
          },
          "url": "https://polygon-amoy.g.alchemy.com/nft"
        },
        {
          "id": "arb-mainnet",
          "name": {
            "originalName": "arb-mainnet",
            "camelCase": {
              "unsafeName": "arbMainnet",
              "safeName": "arbMainnet"
            },
            "snakeCase": {
              "unsafeName": "arb_mainnet",
              "safeName": "arb_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "ARB_MAINNET",
              "safeName": "ARB_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "ArbMainnet",
              "safeName": "ArbMainnet"
            }
          },
          "url": "https://arb-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "arb-sepolia",
          "name": {
            "originalName": "arb-sepolia",
            "camelCase": {
              "unsafeName": "arbSepolia",
              "safeName": "arbSepolia"
            },
            "snakeCase": {
              "unsafeName": "arb_sepolia",
              "safeName": "arb_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "ARB_SEPOLIA",
              "safeName": "ARB_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "ArbSepolia",
              "safeName": "ArbSepolia"
            }
          },
          "url": "https://arb-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "fantom-mainnet",
          "name": {
            "originalName": "fantom-mainnet",
            "camelCase": {
              "unsafeName": "fantomMainnet",
              "safeName": "fantomMainnet"
            },
            "snakeCase": {
              "unsafeName": "fantom_mainnet",
              "safeName": "fantom_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "FANTOM_MAINNET",
              "safeName": "FANTOM_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "FantomMainnet",
              "safeName": "FantomMainnet"
            }
          },
          "url": "https://fantom-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "fantom-testnet",
          "name": {
            "originalName": "fantom-testnet",
            "camelCase": {
              "unsafeName": "fantomTestnet",
              "safeName": "fantomTestnet"
            },
            "snakeCase": {
              "unsafeName": "fantom_testnet",
              "safeName": "fantom_testnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "FANTOM_TESTNET",
              "safeName": "FANTOM_TESTNET"
            },
            "pascalCase": {
              "unsafeName": "FantomTestnet",
              "safeName": "FantomTestnet"
            }
          },
          "url": "https://fantom-testnet.g.alchemy.com/nft"
        },
        {
          "id": "blast-mainnet",
          "name": {
            "originalName": "blast-mainnet",
            "camelCase": {
              "unsafeName": "blastMainnet",
              "safeName": "blastMainnet"
            },
            "snakeCase": {
              "unsafeName": "blast_mainnet",
              "safeName": "blast_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "BLAST_MAINNET",
              "safeName": "BLAST_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "BlastMainnet",
              "safeName": "BlastMainnet"
            }
          },
          "url": "https://blast-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "blast-sepolia",
          "name": {
            "originalName": "blast-sepolia",
            "camelCase": {
              "unsafeName": "blastSepolia",
              "safeName": "blastSepolia"
            },
            "snakeCase": {
              "unsafeName": "blast_sepolia",
              "safeName": "blast_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "BLAST_SEPOLIA",
              "safeName": "BLAST_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "BlastSepolia",
              "safeName": "BlastSepolia"
            }
          },
          "url": "https://blast-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "base-mainnet",
          "name": {
            "originalName": "base-mainnet",
            "camelCase": {
              "unsafeName": "baseMainnet",
              "safeName": "baseMainnet"
            },
            "snakeCase": {
              "unsafeName": "base_mainnet",
              "safeName": "base_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE_MAINNET",
              "safeName": "BASE_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "BaseMainnet",
              "safeName": "BaseMainnet"
            }
          },
          "url": "https://base-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "base-sepolia",
          "name": {
            "originalName": "base-sepolia",
            "camelCase": {
              "unsafeName": "baseSepolia",
              "safeName": "baseSepolia"
            },
            "snakeCase": {
              "unsafeName": "base_sepolia",
              "safeName": "base_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE_SEPOLIA",
              "safeName": "BASE_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "BaseSepolia",
              "safeName": "BaseSepolia"
            }
          },
          "url": "https://base-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "soneium-mainnet",
          "name": {
            "originalName": "soneium-mainnet",
            "camelCase": {
              "unsafeName": "soneiumMainnet",
              "safeName": "soneiumMainnet"
            },
            "snakeCase": {
              "unsafeName": "soneium_mainnet",
              "safeName": "soneium_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "SONEIUM_MAINNET",
              "safeName": "SONEIUM_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "SoneiumMainnet",
              "safeName": "SoneiumMainnet"
            }
          },
          "url": "https://soneium-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "soneium-minato",
          "name": {
            "originalName": "soneium-minato",
            "camelCase": {
              "unsafeName": "soneiumMinato",
              "safeName": "soneiumMinato"
            },
            "snakeCase": {
              "unsafeName": "soneium_minato",
              "safeName": "soneium_minato"
            },
            "screamingSnakeCase": {
              "unsafeName": "SONEIUM_MINATO",
              "safeName": "SONEIUM_MINATO"
            },
            "pascalCase": {
              "unsafeName": "SoneiumMinato",
              "safeName": "SoneiumMinato"
            }
          },
          "url": "https://soneium-minato.g.alchemy.com/nft"
        },
        {
          "id": "scroll-mainnet",
          "name": {
            "originalName": "scroll-mainnet",
            "camelCase": {
              "unsafeName": "scrollMainnet",
              "safeName": "scrollMainnet"
            },
            "snakeCase": {
              "unsafeName": "scroll_mainnet",
              "safeName": "scroll_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "SCROLL_MAINNET",
              "safeName": "SCROLL_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "ScrollMainnet",
              "safeName": "ScrollMainnet"
            }
          },
          "url": "https://scroll-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "scroll-sepolia",
          "name": {
            "originalName": "scroll-sepolia",
            "camelCase": {
              "unsafeName": "scrollSepolia",
              "safeName": "scrollSepolia"
            },
            "snakeCase": {
              "unsafeName": "scroll_sepolia",
              "safeName": "scroll_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "SCROLL_SEPOLIA",
              "safeName": "SCROLL_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "ScrollSepolia",
              "safeName": "ScrollSepolia"
            }
          },
          "url": "https://scroll-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "shape-mainnet",
          "name": {
            "originalName": "shape-mainnet",
            "camelCase": {
              "unsafeName": "shapeMainnet",
              "safeName": "shapeMainnet"
            },
            "snakeCase": {
              "unsafeName": "shape_mainnet",
              "safeName": "shape_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "SHAPE_MAINNET",
              "safeName": "SHAPE_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "ShapeMainnet",
              "safeName": "ShapeMainnet"
            }
          },
          "url": "https://shape-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "shape-sepolia",
          "name": {
            "originalName": "shape-sepolia",
            "camelCase": {
              "unsafeName": "shapeSepolia",
              "safeName": "shapeSepolia"
            },
            "snakeCase": {
              "unsafeName": "shape_sepolia",
              "safeName": "shape_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "SHAPE_SEPOLIA",
              "safeName": "SHAPE_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "ShapeSepolia",
              "safeName": "ShapeSepolia"
            }
          },
          "url": "https://shape-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "lens-sepolia",
          "name": {
            "originalName": "lens-sepolia",
            "camelCase": {
              "unsafeName": "lensSepolia",
              "safeName": "lensSepolia"
            },
            "snakeCase": {
              "unsafeName": "lens_sepolia",
              "safeName": "lens_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "LENS_SEPOLIA",
              "safeName": "LENS_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "LensSepolia",
              "safeName": "LensSepolia"
            }
          },
          "url": "https://lens-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "starknet-mainnet",
          "name": {
            "originalName": "starknet-mainnet",
            "camelCase": {
              "unsafeName": "starknetMainnet",
              "safeName": "starknetMainnet"
            },
            "snakeCase": {
              "unsafeName": "starknet_mainnet",
              "safeName": "starknet_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "STARKNET_MAINNET",
              "safeName": "STARKNET_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "StarknetMainnet",
              "safeName": "StarknetMainnet"
            }
          },
          "url": "https://starknet-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "starknet-sepolia",
          "name": {
            "originalName": "starknet-sepolia",
            "camelCase": {
              "unsafeName": "starknetSepolia",
              "safeName": "starknetSepolia"
            },
            "snakeCase": {
              "unsafeName": "starknet_sepolia",
              "safeName": "starknet_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "STARKNET_SEPOLIA",
              "safeName": "STARKNET_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "StarknetSepolia",
              "safeName": "StarknetSepolia"
            }
          },
          "url": "https://starknet-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "rootstock-mainnet",
          "name": {
            "originalName": "rootstock-mainnet",
            "camelCase": {
              "unsafeName": "rootstockMainnet",
              "safeName": "rootstockMainnet"
            },
            "snakeCase": {
              "unsafeName": "rootstock_mainnet",
              "safeName": "rootstock_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "ROOTSTOCK_MAINNET",
              "safeName": "ROOTSTOCK_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "RootstockMainnet",
              "safeName": "RootstockMainnet"
            }
          },
          "url": "https://rootstock-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "rootstock-testnet",
          "name": {
            "originalName": "rootstock-testnet",
            "camelCase": {
              "unsafeName": "rootstockTestnet",
              "safeName": "rootstockTestnet"
            },
            "snakeCase": {
              "unsafeName": "rootstock_testnet",
              "safeName": "rootstock_testnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "ROOTSTOCK_TESTNET",
              "safeName": "ROOTSTOCK_TESTNET"
            },
            "pascalCase": {
              "unsafeName": "RootstockTestnet",
              "safeName": "RootstockTestnet"
            }
          },
          "url": "https://rootstock-testnet.g.alchemy.com/nft"
        },
        {
          "id": "linea-mainnet",
          "name": {
            "originalName": "linea-mainnet",
            "camelCase": {
              "unsafeName": "lineaMainnet",
              "safeName": "lineaMainnet"
            },
            "snakeCase": {
              "unsafeName": "linea_mainnet",
              "safeName": "linea_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "LINEA_MAINNET",
              "safeName": "LINEA_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "LineaMainnet",
              "safeName": "LineaMainnet"
            }
          },
          "url": "https://linea-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "linea-sepolia",
          "name": {
            "originalName": "linea-sepolia",
            "camelCase": {
              "unsafeName": "lineaSepolia",
              "safeName": "lineaSepolia"
            },
            "snakeCase": {
              "unsafeName": "linea_sepolia",
              "safeName": "linea_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "LINEA_SEPOLIA",
              "safeName": "LINEA_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "LineaSepolia",
              "safeName": "LineaSepolia"
            }
          },
          "url": "https://linea-sepolia.g.alchemy.com/nft"
        },
        {
          "id": "settlus-septestnet",
          "name": {
            "originalName": "settlus-septestnet",
            "camelCase": {
              "unsafeName": "settlusSeptestnet",
              "safeName": "settlusSeptestnet"
            },
            "snakeCase": {
              "unsafeName": "settlus_septestnet",
              "safeName": "settlus_septestnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "SETTLUS_SEPTESTNET",
              "safeName": "SETTLUS_SEPTESTNET"
            },
            "pascalCase": {
              "unsafeName": "SettlusSeptestnet",
              "safeName": "SettlusSeptestnet"
            }
          },
          "url": "https://settlus-septestnet.g.alchemy.com/nft"
        },
        {
          "id": "abstract-mainnet",
          "name": {
            "originalName": "abstract-mainnet",
            "camelCase": {
              "unsafeName": "abstractMainnet",
              "safeName": "abstractMainnet"
            },
            "snakeCase": {
              "unsafeName": "abstract_mainnet",
              "safeName": "abstract_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "ABSTRACT_MAINNET",
              "safeName": "ABSTRACT_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "AbstractMainnet",
              "safeName": "AbstractMainnet"
            }
          },
          "url": "https://abstract-mainnet.g.alchemy.com/nft"
        },
        {
          "id": "abstract-testnet",
          "name": {
            "originalName": "abstract-testnet",
            "camelCase": {
              "unsafeName": "abstractTestnet",
              "safeName": "abstractTestnet"
            },
            "snakeCase": {
              "unsafeName": "abstract_testnet",
              "safeName": "abstract_testnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "ABSTRACT_TESTNET",
              "safeName": "ABSTRACT_TESTNET"
            },
            "pascalCase": {
              "unsafeName": "AbstractTestnet",
              "safeName": "AbstractTestnet"
            }
          },
          "url": "https://abstract-testnet.g.alchemy.com/nft"
        },
        {
          "id": "apechain-mainnet",
          "name": {
            "originalName": "apechain-mainnet",
            "camelCase": {
              "unsafeName": "apechainMainnet",
              "safeName": "apechainMainnet"
            },
            "snakeCase": {
              "unsafeName": "apechain_mainnet",
              "safeName": "apechain_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "APECHAIN_MAINNET",
              "safeName": "APECHAIN_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "ApechainMainnet",
              "safeName": "ApechainMainnet"
            }
          },
          "url": "https://apechain-mainnet.g.alchemy.com/nft"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "rawv3",
      "id",
      "idV3",
      "tokenUri",
      "metadata",
      "ownedContract",
      "ownedContractv3",
      "ownedCollectionv3",
      "ownedCollectionContract",
      "media",
      "ownedNFT",
      "ownedNFTv3",
      "contractMetadata",
      "contractMetadatav3",
      "collectionMetadatav3",
      "contractv3"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_nftOwnershipEndpoints",
      "subpackage_nftMetadataEndpoints",
      "subpackage_nftSpamEndpoints",
      "subpackage_nftSalesEndpoints",
      "subpackage_nftApiV2MethodsOlderVersion"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_nftOwnershipEndpoints": {
      "name": {
        "originalName": "nftOwnershipEndpoints",
        "camelCase": {
          "unsafeName": "nftOwnershipEndpoints",
          "safeName": "nftOwnershipEndpoints"
        },
        "snakeCase": {
          "unsafeName": "nft_ownership_endpoints",
          "safeName": "nft_ownership_endpoints"
        },
        "screamingSnakeCase": {
          "unsafeName": "NFT_OWNERSHIP_ENDPOINTS",
          "safeName": "NFT_OWNERSHIP_ENDPOINTS"
        },
        "pascalCase": {
          "unsafeName": "NftOwnershipEndpoints",
          "safeName": "NftOwnershipEndpoints"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "nftOwnershipEndpoints",
            "camelCase": {
              "unsafeName": "nftOwnershipEndpoints",
              "safeName": "nftOwnershipEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_ownership_endpoints",
              "safeName": "nft_ownership_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_OWNERSHIP_ENDPOINTS",
              "safeName": "NFT_OWNERSHIP_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftOwnershipEndpoints",
              "safeName": "NftOwnershipEndpoints"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "nftOwnershipEndpoints",
          "camelCase": {
            "unsafeName": "nftOwnershipEndpoints",
            "safeName": "nftOwnershipEndpoints"
          },
          "snakeCase": {
            "unsafeName": "nft_ownership_endpoints",
            "safeName": "nft_ownership_endpoints"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_OWNERSHIP_ENDPOINTS",
            "safeName": "NFT_OWNERSHIP_ENDPOINTS"
          },
          "pascalCase": {
            "unsafeName": "NftOwnershipEndpoints",
            "safeName": "NftOwnershipEndpoints"
          }
        }
      },
      "service": "service_nftOwnershipEndpoints",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_nftMetadataEndpoints": {
      "name": {
        "originalName": "nftMetadataEndpoints",
        "camelCase": {
          "unsafeName": "nftMetadataEndpoints",
          "safeName": "nftMetadataEndpoints"
        },
        "snakeCase": {
          "unsafeName": "nft_metadata_endpoints",
          "safeName": "nft_metadata_endpoints"
        },
        "screamingSnakeCase": {
          "unsafeName": "NFT_METADATA_ENDPOINTS",
          "safeName": "NFT_METADATA_ENDPOINTS"
        },
        "pascalCase": {
          "unsafeName": "NftMetadataEndpoints",
          "safeName": "NftMetadataEndpoints"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "nftMetadataEndpoints",
            "camelCase": {
              "unsafeName": "nftMetadataEndpoints",
              "safeName": "nftMetadataEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_metadata_endpoints",
              "safeName": "nft_metadata_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_METADATA_ENDPOINTS",
              "safeName": "NFT_METADATA_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftMetadataEndpoints",
              "safeName": "NftMetadataEndpoints"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "nftMetadataEndpoints",
          "camelCase": {
            "unsafeName": "nftMetadataEndpoints",
            "safeName": "nftMetadataEndpoints"
          },
          "snakeCase": {
            "unsafeName": "nft_metadata_endpoints",
            "safeName": "nft_metadata_endpoints"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_METADATA_ENDPOINTS",
            "safeName": "NFT_METADATA_ENDPOINTS"
          },
          "pascalCase": {
            "unsafeName": "NftMetadataEndpoints",
            "safeName": "NftMetadataEndpoints"
          }
        }
      },
      "service": "service_nftMetadataEndpoints",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_nftSpamEndpoints": {
      "name": {
        "originalName": "nftSpamEndpoints",
        "camelCase": {
          "unsafeName": "nftSpamEndpoints",
          "safeName": "nftSpamEndpoints"
        },
        "snakeCase": {
          "unsafeName": "nft_spam_endpoints",
          "safeName": "nft_spam_endpoints"
        },
        "screamingSnakeCase": {
          "unsafeName": "NFT_SPAM_ENDPOINTS",
          "safeName": "NFT_SPAM_ENDPOINTS"
        },
        "pascalCase": {
          "unsafeName": "NftSpamEndpoints",
          "safeName": "NftSpamEndpoints"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "nftSpamEndpoints",
            "camelCase": {
              "unsafeName": "nftSpamEndpoints",
              "safeName": "nftSpamEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_spam_endpoints",
              "safeName": "nft_spam_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_SPAM_ENDPOINTS",
              "safeName": "NFT_SPAM_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftSpamEndpoints",
              "safeName": "NftSpamEndpoints"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "nftSpamEndpoints",
          "camelCase": {
            "unsafeName": "nftSpamEndpoints",
            "safeName": "nftSpamEndpoints"
          },
          "snakeCase": {
            "unsafeName": "nft_spam_endpoints",
            "safeName": "nft_spam_endpoints"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_SPAM_ENDPOINTS",
            "safeName": "NFT_SPAM_ENDPOINTS"
          },
          "pascalCase": {
            "unsafeName": "NftSpamEndpoints",
            "safeName": "NftSpamEndpoints"
          }
        }
      },
      "service": "service_nftSpamEndpoints",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_nftSalesEndpoints": {
      "name": {
        "originalName": "nftSalesEndpoints",
        "camelCase": {
          "unsafeName": "nftSalesEndpoints",
          "safeName": "nftSalesEndpoints"
        },
        "snakeCase": {
          "unsafeName": "nft_sales_endpoints",
          "safeName": "nft_sales_endpoints"
        },
        "screamingSnakeCase": {
          "unsafeName": "NFT_SALES_ENDPOINTS",
          "safeName": "NFT_SALES_ENDPOINTS"
        },
        "pascalCase": {
          "unsafeName": "NftSalesEndpoints",
          "safeName": "NftSalesEndpoints"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "nftSalesEndpoints",
            "camelCase": {
              "unsafeName": "nftSalesEndpoints",
              "safeName": "nftSalesEndpoints"
            },
            "snakeCase": {
              "unsafeName": "nft_sales_endpoints",
              "safeName": "nft_sales_endpoints"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_SALES_ENDPOINTS",
              "safeName": "NFT_SALES_ENDPOINTS"
            },
            "pascalCase": {
              "unsafeName": "NftSalesEndpoints",
              "safeName": "NftSalesEndpoints"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "nftSalesEndpoints",
          "camelCase": {
            "unsafeName": "nftSalesEndpoints",
            "safeName": "nftSalesEndpoints"
          },
          "snakeCase": {
            "unsafeName": "nft_sales_endpoints",
            "safeName": "nft_sales_endpoints"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_SALES_ENDPOINTS",
            "safeName": "NFT_SALES_ENDPOINTS"
          },
          "pascalCase": {
            "unsafeName": "NftSalesEndpoints",
            "safeName": "NftSalesEndpoints"
          }
        }
      },
      "service": "service_nftSalesEndpoints",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_nftApiV2MethodsOlderVersion": {
      "name": {
        "originalName": "nftApiV2MethodsOlderVersion",
        "camelCase": {
          "unsafeName": "nftApiV2MethodsOlderVersion",
          "safeName": "nftApiV2MethodsOlderVersion"
        },
        "snakeCase": {
          "unsafeName": "nft_api_v_2_methods_older_version",
          "safeName": "nft_api_v_2_methods_older_version"
        },
        "screamingSnakeCase": {
          "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION",
          "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION"
        },
        "pascalCase": {
          "unsafeName": "NftApiV2MethodsOlderVersion",
          "safeName": "NftApiV2MethodsOlderVersion"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "nftApiV2MethodsOlderVersion",
            "camelCase": {
              "unsafeName": "nftApiV2MethodsOlderVersion",
              "safeName": "nftApiV2MethodsOlderVersion"
            },
            "snakeCase": {
              "unsafeName": "nft_api_v_2_methods_older_version",
              "safeName": "nft_api_v_2_methods_older_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION",
              "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION"
            },
            "pascalCase": {
              "unsafeName": "NftApiV2MethodsOlderVersion",
              "safeName": "NftApiV2MethodsOlderVersion"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "nftApiV2MethodsOlderVersion",
          "camelCase": {
            "unsafeName": "nftApiV2MethodsOlderVersion",
            "safeName": "nftApiV2MethodsOlderVersion"
          },
          "snakeCase": {
            "unsafeName": "nft_api_v_2_methods_older_version",
            "safeName": "nft_api_v_2_methods_older_version"
          },
          "screamingSnakeCase": {
            "unsafeName": "NFT_API_V_2_METHODS_OLDER_VERSION",
            "safeName": "NFT_API_V_2_METHODS_OLDER_VERSION"
          },
          "pascalCase": {
            "unsafeName": "NftApiV2MethodsOlderVersion",
            "safeName": "NftApiV2MethodsOlderVersion"
          }
        }
      },
      "service": "service_nftApiV2MethodsOlderVersion",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": {
    "originalName": "",
    "camelCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "snakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "screamingSnakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "pascalCase": {
      "unsafeName": "",
      "safeName": ""
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceId",
          "safeName": "errorInstanceId"
        },
        "snakeCase": {
          "unsafeName": "error_instance_id",
          "safeName": "error_instance_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "ERROR_INSTANCE_ID",
          "safeName": "ERROR_INSTANCE_ID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceId",
          "safeName": "ErrorInstanceId"
        }
      },
      "wireValue": "errorInstanceId"
    }
  }
}