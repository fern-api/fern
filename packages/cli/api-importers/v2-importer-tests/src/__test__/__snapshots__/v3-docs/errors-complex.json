{
  "auth": {
    "requirement": "ALL",
    "schemes": []
  },
  "selfHosted": false,
  "types": {
    "Error": {
      "name": {
        "typeId": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorError_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorStatus_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Error_example_autogenerated": {
            "error": "foo"
          }
        }
      }
    },
    "AnotherError": {
      "name": {
        "typeId": "AnotherError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AnotherError",
          "camelCase": {
            "unsafeName": "anotherError",
            "safeName": "anotherError"
          },
          "snakeCase": {
            "unsafeName": "another_error",
            "safeName": "another_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ANOTHER_ERROR",
            "safeName": "ANOTHER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AnotherError",
            "safeName": "AnotherError"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "customError",
                "camelCase": {
                  "unsafeName": "customError",
                  "safeName": "customError"
                },
                "snakeCase": {
                  "unsafeName": "custom_error",
                  "safeName": "custom_error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_ERROR",
                  "safeName": "CUSTOM_ERROR"
                },
                "pascalCase": {
                  "unsafeName": "CustomError",
                  "safeName": "CustomError"
                }
              },
              "wireValue": "customError"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Custom error message",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AnotherErrorCustomError_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AnotherError_example_autogenerated": {
            "customError": "foo"
          }
        }
      }
    }
  },
  "services": {
    "service_": {
      "name": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "id": "list",
          "method": "GET",
          "name": {
            "originalName": "list",
            "camelCase": {
              "unsafeName": "list",
              "safeName": "list"
            },
            "snakeCase": {
              "unsafeName": "list",
              "safeName": "list"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST",
              "safeName": "LIST"
            },
            "pascalCase": {
              "unsafeName": "List",
              "safeName": "List"
            }
          },
          "baseUrl": "Test API",
          "path": {
            "head": "/trees",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "list_Request",
              "camelCase": {
                "unsafeName": "listRequest",
                "safeName": "listRequest"
              },
              "snakeCase": {
                "unsafeName": "list_request",
                "safeName": "list_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "LIST_REQUEST",
                "safeName": "LIST_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "ListRequest",
                "safeName": "ListRequest"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "limit",
                    "camelCase": {
                      "unsafeName": "limit",
                      "safeName": "limit"
                    },
                    "snakeCase": {
                      "unsafeName": "limit",
                      "safeName": "limit"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LIMIT",
                      "safeName": "LIMIT"
                    },
                    "pascalCase": {
                      "unsafeName": "Limit",
                      "safeName": "Limit"
                    }
                  },
                  "wireValue": "limit"
                },
                "valueType": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 10,
                      "validation": {},
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "TreesGetRequestBodySchemaLimit_example_autogenerated": 10
                  }
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "offset",
                    "camelCase": {
                      "unsafeName": "offset",
                      "safeName": "offset"
                    },
                    "snakeCase": {
                      "unsafeName": "offset",
                      "safeName": "offset"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OFFSET",
                      "safeName": "OFFSET"
                    },
                    "pascalCase": {
                      "unsafeName": "Offset",
                      "safeName": "Offset"
                    }
                  },
                  "wireValue": "offset"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "default": 0,
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "TreesGetRequestBodySchemaOffset_example_autogenerated": 0
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "list_example": {
                  "limit": 10
                }
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "A response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "list_example": "Hello, world!"
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "ListRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "listRequestBadRequestError",
                    "safeName": "listRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_request_bad_request_error",
                    "safeName": "list_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "LIST_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListRequestBadRequestError",
                    "safeName": "ListRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListRequestBadRequestError"
              },
              "docs": "Bad Request"
            },
            {
              "error": {
                "name": {
                  "originalName": "ListRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "listRequestNotFoundError",
                    "safeName": "listRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "list_request_not_found_error",
                    "safeName": "list_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIST_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "LIST_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "ListRequestNotFoundError",
                    "safeName": "ListRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "ListRequestNotFoundError"
              },
              "docs": "Not Found"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "ef539470",
                "url": "/trees",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "limit": 1
                  },
                  "properties": [
                    {
                      "name": {
                        "name": {
                          "originalName": "limit",
                          "camelCase": {
                            "unsafeName": "limit",
                            "safeName": "limit"
                          },
                          "snakeCase": {
                            "unsafeName": "limit",
                            "safeName": "limit"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "LIMIT",
                            "safeName": "LIMIT"
                          },
                          "pascalCase": {
                            "unsafeName": "Limit",
                            "safeName": "Limit"
                          }
                        },
                        "wireValue": "limit"
                      },
                      "value": {
                        "jsonExample": 1,
                        "shape": {
                          "primitive": {
                            "integer": 1,
                            "type": "integer"
                          },
                          "type": "primitive"
                        }
                      }
                    },
                    {
                      "name": {
                        "name": {
                          "originalName": "offset",
                          "camelCase": {
                            "unsafeName": "offset",
                            "safeName": "offset"
                          },
                          "snakeCase": {
                            "unsafeName": "offset",
                            "safeName": "offset"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "OFFSET",
                            "safeName": "OFFSET"
                          },
                          "pascalCase": {
                            "unsafeName": "Offset",
                            "safeName": "Offset"
                          }
                        },
                        "wireValue": "offset"
                      },
                      "value": {
                        "shape": {
                          "container": {
                            "valueType": {
                              "primitive": {
                                "v1": "INTEGER",
                                "v2": {
                                  "default": 0,
                                  "validation": {},
                                  "type": "integer"
                                }
                              },
                              "type": "primitive"
                            },
                            "type": "optional"
                          },
                          "type": "container"
                        }
                      }
                    }
                  ],
                  "type": "inlinedRequestBody"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": "string",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "string"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/trees",
            "parts": []
          },
          "allPathParameters": [],
          "v2Examples": {
            "autogeneratedExamples": {
              "list_example": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/trees"
                  },
                  "environment": "Test API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "limit": 10
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": "Hello, world!",
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "source": {
            "type": "openapi"
          }
        },
        {
          "id": "postTrees",
          "method": "POST",
          "name": {
            "originalName": "postTrees",
            "camelCase": {
              "unsafeName": "postTrees",
              "safeName": "postTrees"
            },
            "snakeCase": {
              "unsafeName": "post_trees",
              "safeName": "post_trees"
            },
            "screamingSnakeCase": {
              "unsafeName": "POST_TREES",
              "safeName": "POST_TREES"
            },
            "pascalCase": {
              "unsafeName": "PostTrees",
              "safeName": "PostTrees"
            }
          },
          "baseUrl": "Test API",
          "path": {
            "head": "/trees",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "application/json",
            "name": {
              "originalName": "postTrees_Request",
              "camelCase": {
                "unsafeName": "postTreesRequest",
                "safeName": "postTreesRequest"
              },
              "snakeCase": {
                "unsafeName": "post_trees_request",
                "safeName": "post_trees_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "POST_TREES_REQUEST",
                "safeName": "POST_TREES_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "PostTreesRequest",
                "safeName": "PostTreesRequest"
              }
            },
            "extendedProperties": [],
            "extends": [],
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "name",
                    "camelCase": {
                      "unsafeName": "name",
                      "safeName": "name"
                    },
                    "snakeCase": {
                      "unsafeName": "name",
                      "safeName": "name"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NAME",
                      "safeName": "NAME"
                    },
                    "pascalCase": {
                      "unsafeName": "Name",
                      "safeName": "Name"
                    }
                  },
                  "wireValue": "name"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "TreesPostRequestBodySchemaName_example_autogenerated": "foo"
                  }
                }
              }
            ],
            "extraProperties": false,
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "postTrees_example": {
                  "name": "foo"
                }
              }
            },
            "type": "inlinedRequestBody"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "docs": "A response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "postTrees_example": "Hello, world!"
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "PostTreesRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "postTreesRequestBadRequestError",
                    "safeName": "postTreesRequestBadRequestError"
                  },
                  "snakeCase": {
                    "unsafeName": "post_trees_request_bad_request_error",
                    "safeName": "post_trees_request_bad_request_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "POST_TREES_REQUEST_BAD_REQUEST_ERROR",
                    "safeName": "POST_TREES_REQUEST_BAD_REQUEST_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PostTreesRequestBadRequestError",
                    "safeName": "PostTreesRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PostTreesRequestBadRequestError"
              },
              "docs": "Bad Request 1"
            },
            {
              "error": {
                "name": {
                  "originalName": "PostTreesRequestNotFoundError",
                  "camelCase": {
                    "unsafeName": "postTreesRequestNotFoundError",
                    "safeName": "postTreesRequestNotFoundError"
                  },
                  "snakeCase": {
                    "unsafeName": "post_trees_request_not_found_error",
                    "safeName": "post_trees_request_not_found_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "POST_TREES_REQUEST_NOT_FOUND_ERROR",
                    "safeName": "POST_TREES_REQUEST_NOT_FOUND_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PostTreesRequestNotFoundError",
                    "safeName": "PostTreesRequestNotFoundError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PostTreesRequestNotFoundError"
              },
              "docs": "Not Found"
            },
            {
              "error": {
                "name": {
                  "originalName": "PostTreesRequestInternalServerError",
                  "camelCase": {
                    "unsafeName": "postTreesRequestInternalServerError",
                    "safeName": "postTreesRequestInternalServerError"
                  },
                  "snakeCase": {
                    "unsafeName": "post_trees_request_internal_server_error",
                    "safeName": "post_trees_request_internal_server_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "POST_TREES_REQUEST_INTERNAL_SERVER_ERROR",
                    "safeName": "POST_TREES_REQUEST_INTERNAL_SERVER_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "PostTreesRequestInternalServerError",
                    "safeName": "PostTreesRequestInternalServerError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "PostTreesRequestInternalServerError"
              },
              "docs": "Internal Server Error"
            }
          ],
          "auth": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [
            {
              "example": {
                "id": "d6ef5346",
                "url": "/trees",
                "endpointHeaders": [],
                "endpointPathParameters": [],
                "queryParameters": [],
                "servicePathParameters": [],
                "serviceHeaders": [],
                "rootPathParameters": [],
                "request": {
                  "jsonExample": {
                    "name": "name"
                  },
                  "properties": [
                    {
                      "name": {
                        "name": {
                          "originalName": "name",
                          "camelCase": {
                            "unsafeName": "name",
                            "safeName": "name"
                          },
                          "snakeCase": {
                            "unsafeName": "name",
                            "safeName": "name"
                          },
                          "screamingSnakeCase": {
                            "unsafeName": "NAME",
                            "safeName": "NAME"
                          },
                          "pascalCase": {
                            "unsafeName": "Name",
                            "safeName": "Name"
                          }
                        },
                        "wireValue": "name"
                      },
                      "value": {
                        "jsonExample": "name",
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "name"
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      }
                    }
                  ],
                  "type": "inlinedRequestBody"
                },
                "response": {
                  "value": {
                    "value": {
                      "jsonExample": "string",
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "string"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "body"
                  },
                  "type": "ok"
                }
              }
            }
          ],
          "idempotent": false,
          "fullPath": {
            "head": "/trees",
            "parts": []
          },
          "allPathParameters": [],
          "v2Examples": {
            "autogeneratedExamples": {
              "postTrees_example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/trees"
                  },
                  "environment": "Test API",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "foo"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": "Hello, world!",
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "source": {
            "type": "openapi"
          }
        }
      ]
    }
  },
  "errors": {
    "ListRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "ListRequestBadRequestError",
          "camelCase": {
            "unsafeName": "listRequestBadRequestError",
            "safeName": "listRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "list_request_bad_request_error",
            "safeName": "list_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LIST_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRequestBadRequestError",
            "safeName": "ListRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "ListRequestBadRequestError",
          "camelCase": {
            "unsafeName": "listRequestBadRequestError",
            "safeName": "listRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "list_request_bad_request_error",
            "safeName": "list_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "LIST_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRequestBadRequestError",
            "safeName": "ListRequestBadRequestError"
          }
        },
        "wireValue": "ListRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request",
      "examples": []
    },
    "ListRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "ListRequestNotFoundError",
          "camelCase": {
            "unsafeName": "listRequestNotFoundError",
            "safeName": "listRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "list_request_not_found_error",
            "safeName": "list_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LIST_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRequestNotFoundError",
            "safeName": "ListRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "ListRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "ListRequestNotFoundError",
          "camelCase": {
            "unsafeName": "listRequestNotFoundError",
            "safeName": "listRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "list_request_not_found_error",
            "safeName": "list_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "LIST_REQUEST_NOT_FOUND_ERROR",
            "safeName": "LIST_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "ListRequestNotFoundError",
            "safeName": "ListRequestNotFoundError"
          }
        },
        "wireValue": "ListRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not Found",
      "examples": []
    },
    "PostTreesRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "PostTreesRequestBadRequestError",
          "camelCase": {
            "unsafeName": "postTreesRequestBadRequestError",
            "safeName": "postTreesRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "post_trees_request_bad_request_error",
            "safeName": "post_trees_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "POST_TREES_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "POST_TREES_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PostTreesRequestBadRequestError",
            "safeName": "PostTreesRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PostTreesRequestBadRequestError"
      },
      "displayName": "BadRequestError",
      "discriminantValue": {
        "name": {
          "originalName": "PostTreesRequestBadRequestError",
          "camelCase": {
            "unsafeName": "postTreesRequestBadRequestError",
            "safeName": "postTreesRequestBadRequestError"
          },
          "snakeCase": {
            "unsafeName": "post_trees_request_bad_request_error",
            "safeName": "post_trees_request_bad_request_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "POST_TREES_REQUEST_BAD_REQUEST_ERROR",
            "safeName": "POST_TREES_REQUEST_BAD_REQUEST_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PostTreesRequestBadRequestError",
            "safeName": "PostTreesRequestBadRequestError"
          }
        },
        "wireValue": "PostTreesRequestBadRequestError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AnotherError",
          "camelCase": {
            "unsafeName": "anotherError",
            "safeName": "anotherError"
          },
          "snakeCase": {
            "unsafeName": "another_error",
            "safeName": "another_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ANOTHER_ERROR",
            "safeName": "ANOTHER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "AnotherError",
            "safeName": "AnotherError"
          }
        },
        "typeId": "AnotherError",
        "inline": false,
        "type": "named"
      },
      "statusCode": 400,
      "docs": "Bad Request 1",
      "examples": []
    },
    "PostTreesRequestNotFoundError": {
      "name": {
        "name": {
          "originalName": "PostTreesRequestNotFoundError",
          "camelCase": {
            "unsafeName": "postTreesRequestNotFoundError",
            "safeName": "postTreesRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "post_trees_request_not_found_error",
            "safeName": "post_trees_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "POST_TREES_REQUEST_NOT_FOUND_ERROR",
            "safeName": "POST_TREES_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PostTreesRequestNotFoundError",
            "safeName": "PostTreesRequestNotFoundError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PostTreesRequestNotFoundError"
      },
      "displayName": "NotFoundError",
      "discriminantValue": {
        "name": {
          "originalName": "PostTreesRequestNotFoundError",
          "camelCase": {
            "unsafeName": "postTreesRequestNotFoundError",
            "safeName": "postTreesRequestNotFoundError"
          },
          "snakeCase": {
            "unsafeName": "post_trees_request_not_found_error",
            "safeName": "post_trees_request_not_found_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "POST_TREES_REQUEST_NOT_FOUND_ERROR",
            "safeName": "POST_TREES_REQUEST_NOT_FOUND_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PostTreesRequestNotFoundError",
            "safeName": "PostTreesRequestNotFoundError"
          }
        },
        "wireValue": "PostTreesRequestNotFoundError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 404,
      "docs": "Not Found",
      "examples": []
    },
    "PostTreesRequestInternalServerError": {
      "name": {
        "name": {
          "originalName": "PostTreesRequestInternalServerError",
          "camelCase": {
            "unsafeName": "postTreesRequestInternalServerError",
            "safeName": "postTreesRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "post_trees_request_internal_server_error",
            "safeName": "post_trees_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "POST_TREES_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "POST_TREES_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PostTreesRequestInternalServerError",
            "safeName": "PostTreesRequestInternalServerError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "PostTreesRequestInternalServerError"
      },
      "displayName": "InternalServerError",
      "discriminantValue": {
        "name": {
          "originalName": "PostTreesRequestInternalServerError",
          "camelCase": {
            "unsafeName": "postTreesRequestInternalServerError",
            "safeName": "postTreesRequestInternalServerError"
          },
          "snakeCase": {
            "unsafeName": "post_trees_request_internal_server_error",
            "safeName": "post_trees_request_internal_server_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "POST_TREES_REQUEST_INTERNAL_SERVER_ERROR",
            "safeName": "POST_TREES_REQUEST_INTERNAL_SERVER_ERROR"
          },
          "pascalCase": {
            "unsafeName": "PostTreesRequestInternalServerError",
            "safeName": "PostTreesRequestInternalServerError"
          }
        },
        "wireValue": "PostTreesRequestInternalServerError"
      },
      "type": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        },
        "typeId": "Error",
        "inline": false,
        "type": "named"
      },
      "statusCode": 500,
      "docs": "Internal Server Error",
      "examples": []
    }
  },
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "Test API",
    "environments": {
      "environments": [
        {
          "id": "Test API",
          "name": {
            "originalName": "Test API",
            "camelCase": {
              "unsafeName": "testApi",
              "safeName": "testApi"
            },
            "snakeCase": {
              "unsafeName": "test_api",
              "safeName": "test_api"
            },
            "screamingSnakeCase": {
              "unsafeName": "TEST_API",
              "safeName": "TEST_API"
            },
            "pascalCase": {
              "unsafeName": "TestApi",
              "safeName": "TestApi"
            }
          },
          "url": "https://api.test.com",
          "docs": "Test API"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "service": "service_",
    "types": [
      "Error",
      "AnotherError"
    ],
    "errors": [],
    "subpackages": [],
    "hasEndpointsInTree": false
  },
  "subpackages": {},
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": {
    "originalName": "",
    "camelCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "snakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "screamingSnakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "pascalCase": {
      "unsafeName": "",
      "safeName": ""
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceId",
          "safeName": "errorInstanceId"
        },
        "snakeCase": {
          "unsafeName": "error_instance_id",
          "safeName": "error_instance_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "ERROR_INSTANCE_ID",
          "safeName": "ERROR_INSTANCE_ID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceId",
          "safeName": "ErrorInstanceId"
        }
      },
      "wireValue": "errorInstanceId"
    }
  }
}