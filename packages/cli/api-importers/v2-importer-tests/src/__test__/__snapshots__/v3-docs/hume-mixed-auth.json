{
  "apiName": {
    "originalName": "",
    "camelCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "snakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "screamingSnakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "pascalCase": {
      "unsafeName": "",
      "safeName": ""
    }
  },
  "selfHosted": false,
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "name": {
          "name": {
            "originalName": "X-Hume-Api-Key",
            "camelCase": {
              "unsafeName": "xHumeApiKey",
              "safeName": "xHumeApiKey"
            },
            "snakeCase": {
              "unsafeName": "x_hume_api_key",
              "safeName": "x_hume_api_key"
            },
            "screamingSnakeCase": {
              "unsafeName": "X_HUME_API_KEY",
              "safeName": "X_HUME_API_KEY"
            },
            "pascalCase": {
              "unsafeName": "XHumeApiKey",
              "safeName": "XHumeApiKey"
            }
          },
          "wireValue": "X-Hume-Api-Key"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "header"
      }
    ]
  },
  "headers": [],
  "environments": {
    "defaultEnvironment": "https://api.hume.ai/v0/evi",
    "environments": {
      "baseUrls": [
        {
          "id": "Base",
          "name": {
            "originalName": "Base",
            "camelCase": {
              "unsafeName": "base",
              "safeName": "base"
            },
            "snakeCase": {
              "unsafeName": "base",
              "safeName": "base"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE",
              "safeName": "BASE"
            },
            "pascalCase": {
              "unsafeName": "Base",
              "safeName": "Base"
            }
          }
        },
        {
          "id": "prod",
          "name": {
            "originalName": "prod",
            "camelCase": {
              "unsafeName": "prod",
              "safeName": "prod"
            },
            "snakeCase": {
              "unsafeName": "prod",
              "safeName": "prod"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROD",
              "safeName": "PROD"
            },
            "pascalCase": {
              "unsafeName": "Prod",
              "safeName": "Prod"
            }
          }
        }
      ],
      "environments": [
        {
          "id": "https://api.hume.ai/v0/evi",
          "name": {
            "originalName": "https://api.hume.ai/v0/evi",
            "camelCase": {
              "unsafeName": "httpsApiHumeAiV0Evi",
              "safeName": "httpsApiHumeAiV0Evi"
            },
            "snakeCase": {
              "unsafeName": "https_api_hume_ai_v_0_evi",
              "safeName": "https_api_hume_ai_v_0_evi"
            },
            "screamingSnakeCase": {
              "unsafeName": "HTTPS_API_HUME_AI_V_0_EVI",
              "safeName": "HTTPS_API_HUME_AI_V_0_EVI"
            },
            "pascalCase": {
              "unsafeName": "HttpsApiHumeAiV0Evi",
              "safeName": "HttpsApiHumeAiV0Evi"
            }
          },
          "urls": {
            "Base": "https://api.hume.ai/v0/evi",
            "prod": "wss://api.hume.ai/v0/evi"
          }
        }
      ],
      "type": "multipleBaseUrls"
    }
  },
  "types": {
    "AssistantEnd": {
      "name": {
        "typeId": "AssistantEnd",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AssistantEnd",
          "camelCase": {
            "unsafeName": "assistantEnd",
            "safeName": "assistantEnd"
          },
          "snakeCase": {
            "unsafeName": "assistant_end",
            "safeName": "assistant_end"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSISTANT_END",
            "safeName": "ASSISTANT_END"
          },
          "pascalCase": {
            "unsafeName": "AssistantEnd",
            "safeName": "AssistantEnd"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantEndCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_end",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for an Assistant End message, this must be `assistant_end`.\n\nThis message indicates the conclusion of the assistant's response, signaling that the assistant has finished speaking for the current conversational turn.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantEndType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an assistant end message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantEnd_example_autogenerated": {
            "type": "foo"
          }
        }
      }
    },
    "AssistantInput": {
      "name": {
        "typeId": "AssistantInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AssistantInput",
          "camelCase": {
            "unsafeName": "assistantInput",
            "safeName": "assistantInput"
          },
          "snakeCase": {
            "unsafeName": "assistant_input",
            "safeName": "assistant_input"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSISTANT_INPUT",
            "safeName": "ASSISTANT_INPUT"
          },
          "pascalCase": {
            "unsafeName": "AssistantInput",
            "safeName": "AssistantInput"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Assistant text to synthesize into spoken audio and insert into the conversation.\n\nEVI uses this text to generate spoken audio using our proprietary expressive text-to-speech model. Our model adds appropriate emotional inflections and tones to the text based on the user's expressions and the context of the conversation. The synthesized audio is streamed back to the user as an [Assistant Message](/reference/empathic-voice-interface-evi/chat/chat#receive.AssistantMessage.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `assistant_input` for our server to correctly identify and process it as an Assistant Input message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantInputType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the input is spoken by EVI.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantInput_example_autogenerated": {
            "text": "foo",
            "type": "foo"
          }
        }
      }
    },
    "AssistantMessage": {
      "name": {
        "typeId": "AssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AssistantMessage",
          "camelCase": {
            "unsafeName": "assistantMessage",
            "safeName": "assistantMessage"
          },
          "snakeCase": {
            "unsafeName": "assistant_message",
            "safeName": "assistant_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "ASSISTANT_MESSAGE",
            "safeName": "ASSISTANT_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "AssistantMessage",
            "safeName": "AssistantMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from_text",
                "camelCase": {
                  "unsafeName": "fromText",
                  "safeName": "fromText"
                },
                "snakeCase": {
                  "unsafeName": "from_text",
                  "safeName": "from_text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM_TEXT",
                  "safeName": "FROM_TEXT"
                },
                "pascalCase": {
                  "unsafeName": "FromText",
                  "safeName": "FromText"
                }
              },
              "wireValue": "from_text"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message was inserted into the conversation as text from an [Assistant Input message](/reference/empathic-voice-interface-evi/chat/chat#send.AssistantInput.text).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageFromText_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ID of the assistant message. Allows the Assistant Message to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "message",
                "camelCase": {
                  "unsafeName": "message",
                  "safeName": "message"
                },
                "snakeCase": {
                  "unsafeName": "message",
                  "safeName": "message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE",
                  "safeName": "MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "Message",
                  "safeName": "Message"
                }
              },
              "wireValue": "message"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ChatMessage",
                "camelCase": {
                  "unsafeName": "chatMessage",
                  "safeName": "chatMessage"
                },
                "snakeCase": {
                  "unsafeName": "chat_message",
                  "safeName": "chat_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAT_MESSAGE",
                  "safeName": "CHAT_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ChatMessage",
                  "safeName": "ChatMessage"
                }
              },
              "typeId": "ChatMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "models",
                "camelCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "snakeCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MODELS",
                  "safeName": "MODELS"
                },
                "pascalCase": {
                  "unsafeName": "Models",
                  "safeName": "Models"
                }
              },
              "wireValue": "models"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Inference",
                "camelCase": {
                  "unsafeName": "inference",
                  "safeName": "inference"
                },
                "snakeCase": {
                  "unsafeName": "inference",
                  "safeName": "inference"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INFERENCE",
                  "safeName": "INFERENCE"
                },
                "pascalCase": {
                  "unsafeName": "Inference",
                  "safeName": "Inference"
                }
              },
              "typeId": "Inference",
              "inline": false,
              "type": "named"
            },
            "docs": "Inference model results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "assistant_message",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for an Assistant Message, this must be `assistant_message`.\n\nThis message contains both a transcript of the assistant's response and the expression measurement predictions of the assistant's audio output.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AssistantMessageType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an assistant message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AssistantMessage_example_autogenerated": {
            "from_text": true,
            "message": {
              "role": "assistant"
            },
            "models": {
              "prosody": {
                "scores": {
                  "Admiration": 42,
                  "Adoration": 42,
                  "Aesthetic Appreciation": 42,
                  "Amusement": 42,
                  "Anger": 42,
                  "Anxiety": 42,
                  "Awe": 42,
                  "Awkwardness": 42,
                  "Boredom": 42,
                  "Calmness": 42,
                  "Concentration": 42,
                  "Confusion": 42,
                  "Contemplation": 42,
                  "Contempt": 42,
                  "Contentment": 42,
                  "Craving": 42,
                  "Desire": 42,
                  "Determination": 42,
                  "Disappointment": 42,
                  "Disgust": 42,
                  "Distress": 42,
                  "Doubt": 42,
                  "Ecstasy": 42,
                  "Embarrassment": 42,
                  "Empathic Pain": 42,
                  "Entrancement": 42,
                  "Envy": 42,
                  "Excitement": 42,
                  "Fear": 42,
                  "Guilt": 42,
                  "Horror": 42,
                  "Interest": 42,
                  "Joy": 42,
                  "Love": 42,
                  "Nostalgia": 42,
                  "Pain": 42,
                  "Pride": 42,
                  "Realization": 42,
                  "Relief": 42,
                  "Romance": 42,
                  "Sadness": 42,
                  "Satisfaction": 42,
                  "Shame": 42,
                  "Surprise (negative)": 42,
                  "Surprise (positive)": 42,
                  "Sympathy": 42,
                  "Tiredness": 42,
                  "Triumph": 42
                }
              }
            },
            "type": "foo"
          }
        }
      }
    },
    "AudioInput": {
      "name": {
        "typeId": "AudioInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AudioInput",
          "camelCase": {
            "unsafeName": "audioInput",
            "safeName": "audioInput"
          },
          "snakeCase": {
            "unsafeName": "audio_input",
            "safeName": "audio_input"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUDIO_INPUT",
            "safeName": "AUDIO_INPUT"
          },
          "pascalCase": {
            "unsafeName": "AudioInput",
            "safeName": "AudioInput"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "base64"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Base64 encoded audio input to insert into the conversation.\n\nThe content of an Audio Input message is treated as the user's speech to EVI and must be streamed continuously. Pre-recorded audio files are not supported.\n\nFor optimal transcription quality, the audio data should be transmitted in small chunks.\n\nHume recommends streaming audio with a buffer window of 20 milliseconds (ms), or 100 milliseconds (ms) for web applications.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputData_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "audio_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `audio_input` for our server to correctly identify and process it as an Audio Input message.\n\nThis message is used for sending audio input data to EVI for processing and expression measurement. Audio data should be sent as a continuous stream, encoded in Base64.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioInputType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the input is audio.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioInput_example_autogenerated": {
            "data": "foo",
            "type": "foo"
          }
        }
      }
    },
    "AudioOutput": {
      "name": {
        "typeId": "AudioOutput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AudioOutput",
          "camelCase": {
            "unsafeName": "audioOutput",
            "safeName": "audioOutput"
          },
          "snakeCase": {
            "unsafeName": "audio_output",
            "safeName": "audio_output"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUDIO_OUTPUT",
            "safeName": "AUDIO_OUTPUT"
          },
          "pascalCase": {
            "unsafeName": "AudioOutput",
            "safeName": "AudioOutput"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "base64"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Base64 encoded audio output. This encoded audio is transmitted to the client, where it can be decoded and played back as part of the user interaction.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputData_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the audio output. Allows the Audio Output message to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "index",
                "camelCase": {
                  "unsafeName": "index",
                  "safeName": "index"
                },
                "snakeCase": {
                  "unsafeName": "index",
                  "safeName": "index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INDEX",
                  "safeName": "INDEX"
                },
                "pascalCase": {
                  "unsafeName": "Index",
                  "safeName": "Index"
                }
              },
              "wireValue": "index"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Index of the chunk of audio relative to the whole audio segment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputIndex_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_final_chunk",
                "camelCase": {
                  "unsafeName": "isFinalChunk",
                  "safeName": "isFinalChunk"
                },
                "snakeCase": {
                  "unsafeName": "is_final_chunk",
                  "safeName": "is_final_chunk"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_FINAL_CHUNK",
                  "safeName": "IS_FINAL_CHUNK"
                },
                "pascalCase": {
                  "unsafeName": "IsFinalChunk",
                  "safeName": "IsFinalChunk"
                }
              },
              "wireValue": "is_final_chunk"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "This AudioOutput contains the final chunk for this particular segment.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputIsFinalChunk_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "audio_output",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioOutputType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "The type of message sent through the socket; for an Audio Output message, this must be `audio_output`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioOutput_example_autogenerated": {
            "data": "foo",
            "id": "foo",
            "index": 42,
            "is_final_chunk": true,
            "type": "foo"
          }
        }
      }
    },
    "ChatMetadata": {
      "name": {
        "typeId": "ChatMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ChatMetadata",
          "camelCase": {
            "unsafeName": "chatMetadata",
            "safeName": "chatMetadata"
          },
          "snakeCase": {
            "unsafeName": "chat_metadata",
            "safeName": "chat_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_METADATA",
            "safeName": "CHAT_METADATA"
          },
          "pascalCase": {
            "unsafeName": "ChatMetadata",
            "safeName": "ChatMetadata"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "chat_group_id",
                "camelCase": {
                  "unsafeName": "chatGroupId",
                  "safeName": "chatGroupId"
                },
                "snakeCase": {
                  "unsafeName": "chat_group_id",
                  "safeName": "chat_group_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAT_GROUP_ID",
                  "safeName": "CHAT_GROUP_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChatGroupId",
                  "safeName": "ChatGroupId"
                }
              },
              "wireValue": "chat_group_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the Chat Group.\n\nUsed to resume a Chat when passed in the [resumed_chat_group_id](/reference/empathic-voice-interface-evi/chat/chat#request.query.resumed_chat_group_id) query parameter of a subsequent connection request. This allows EVI to continue the conversation from where it left off within the Chat Group.\n\nLearn more about [supporting chat resumability](/docs/empathic-voice-interface-evi/faq#does-evi-support-chat-resumability) from the EVI FAQ.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataChatGroupId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chat_id",
                "camelCase": {
                  "unsafeName": "chatId",
                  "safeName": "chatId"
                },
                "snakeCase": {
                  "unsafeName": "chat_id",
                  "safeName": "chat_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAT_ID",
                  "safeName": "CHAT_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChatId",
                  "safeName": "ChatId"
                }
              },
              "wireValue": "chat_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "ID of the Chat session. Allows the Chat session to be tracked and referenced.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataChatId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestId",
                  "safeName": "requestId"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                },
                "pascalCase": {
                  "unsafeName": "RequestId",
                  "safeName": "RequestId"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "ID of the initiating request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataRequestId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "chat_metadata",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Chat Metadata message, this must be `chat_metadata`.\n\nThe Chat Metadata message is the first message you receive after establishing a connection with EVI and contains important identifiers for the current Chat session.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMetadataType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a chat metadata message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMetadata_example_autogenerated": {
            "chat_group_id": "foo",
            "chat_id": "foo",
            "request_id": "foo",
            "type": "foo"
          }
        }
      }
    },
    "Error": {
      "name": {
        "typeId": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Error",
          "camelCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "snakeCase": {
            "unsafeName": "error",
            "safeName": "error"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR",
            "safeName": "ERROR"
          },
          "pascalCase": {
            "unsafeName": "Error",
            "safeName": "Error_"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "code",
                "camelCase": {
                  "unsafeName": "code",
                  "safeName": "code"
                },
                "snakeCase": {
                  "unsafeName": "code",
                  "safeName": "code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODE",
                  "safeName": "CODE"
                },
                "pascalCase": {
                  "unsafeName": "Code",
                  "safeName": "Code"
                }
              },
              "wireValue": "code"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error code. Identifies the type of error encountered.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorCode_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "message",
                "camelCase": {
                  "unsafeName": "message",
                  "safeName": "message"
                },
                "snakeCase": {
                  "unsafeName": "message",
                  "safeName": "message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE",
                  "safeName": "MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "Message",
                  "safeName": "Message"
                }
              },
              "wireValue": "message"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Detailed description of the error.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorMessage_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestId",
                  "safeName": "requestId"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                },
                "pascalCase": {
                  "unsafeName": "RequestId",
                  "safeName": "RequestId"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "ID of the initiating request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorRequestId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "slug",
                "camelCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "snakeCase": {
                  "unsafeName": "slug",
                  "safeName": "slug"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SLUG",
                  "safeName": "SLUG"
                },
                "pascalCase": {
                  "unsafeName": "Slug",
                  "safeName": "Slug"
                }
              },
              "wireValue": "slug"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Short, human-readable identifier and description for the error. See a complete list of error slugs on the [Errors page](/docs/resources/errors).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorSlug_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "error",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Web Socket Error message, this must be `error`.\n\nThis message indicates a disruption in the WebSocket connection, such as an unexpected disconnection, protocol error, or data transmission issue.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ErrorType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an error message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Error_example_autogenerated": {
            "code": "foo",
            "message": "foo",
            "slug": "foo",
            "type": "foo"
          }
        }
      }
    },
    "PauseAssistantMessage": {
      "name": {
        "typeId": "PauseAssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "PauseAssistantMessage",
          "camelCase": {
            "unsafeName": "pauseAssistantMessage",
            "safeName": "pauseAssistantMessage"
          },
          "snakeCase": {
            "unsafeName": "pause_assistant_message",
            "safeName": "pause_assistant_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "PAUSE_ASSISTANT_MESSAGE",
            "safeName": "PAUSE_ASSISTANT_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "PauseAssistantMessage",
            "safeName": "PauseAssistantMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PauseAssistantMessageCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "pause_assistant_message",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `pause_assistant_message` for our server to correctly identify and process it as a Pause Assistant message.\n\nOnce this message is sent, EVI will not respond until a [Resume Assistant message](/reference/empathic-voice-interface-evi/chat/chat#send.ResumeAssistantMessage.type) is sent. When paused, EVI won't respond, but transcriptions of your audio inputs will still be recorded.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PauseAssistantMessageType_example_autogenerated": "pause_assistant_message"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Pause responses from EVI. Chat history is still saved and sent after resuming. ",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PauseAssistantMessage_example_autogenerated": {}
        }
      }
    },
    "ResumeAssistantMessage": {
      "name": {
        "typeId": "ResumeAssistantMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ResumeAssistantMessage",
          "camelCase": {
            "unsafeName": "resumeAssistantMessage",
            "safeName": "resumeAssistantMessage"
          },
          "snakeCase": {
            "unsafeName": "resume_assistant_message",
            "safeName": "resume_assistant_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "RESUME_ASSISTANT_MESSAGE",
            "safeName": "RESUME_ASSISTANT_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "ResumeAssistantMessage",
            "safeName": "ResumeAssistantMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResumeAssistantMessageCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "resume_assistant_message",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `resume_assistant_message` for our server to correctly identify and process it as a Resume Assistant message.\n\nUpon resuming, if any audio input was sent during the pause, EVI will retain context from all messages sent but only respond to the last user message. (e.g., If you ask EVI two questions while paused and then send a `resume_assistant_message`, EVI will respond to the second question and have added the first question to its conversation context.)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ResumeAssistantMessageType_example_autogenerated": "resume_assistant_message"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Resume responses from EVI. Chat history sent while paused will now be sent. ",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResumeAssistantMessage_example_autogenerated": {}
        }
      }
    },
    "MessagesSessionSettingsMetadata": {
      "name": {
        "typeId": "MessagesSessionSettingsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MessagesSessionSettingsMetadata",
          "camelCase": {
            "unsafeName": "messagesSessionSettingsMetadata",
            "safeName": "messagesSessionSettingsMetadata"
          },
          "snakeCase": {
            "unsafeName": "messages_session_settings_metadata",
            "safeName": "messages_session_settings_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "MESSAGES_SESSION_SETTINGS_METADATA",
            "safeName": "MESSAGES_SESSION_SETTINGS_METADATA"
          },
          "pascalCase": {
            "unsafeName": "MessagesSessionSettingsMetadata",
            "safeName": "MessagesSessionSettingsMetadata"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MessagesSessionSettingsMetadata_example_autogenerated": {}
        }
      }
    },
    "SessionSettings": {
      "name": {
        "typeId": "SessionSettings",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SessionSettings",
          "camelCase": {
            "unsafeName": "sessionSettings",
            "safeName": "sessionSettings"
          },
          "snakeCase": {
            "unsafeName": "session_settings",
            "safeName": "session_settings"
          },
          "screamingSnakeCase": {
            "unsafeName": "SESSION_SETTINGS",
            "safeName": "SESSION_SETTINGS"
          },
          "pascalCase": {
            "unsafeName": "SessionSettings",
            "safeName": "SessionSettings"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                }
              },
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "AudioConfiguration",
                        "camelCase": {
                          "unsafeName": "audioConfiguration",
                          "safeName": "audioConfiguration"
                        },
                        "snakeCase": {
                          "unsafeName": "audio_configuration",
                          "safeName": "audio_configuration"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "AUDIO_CONFIGURATION",
                          "safeName": "AUDIO_CONFIGURATION"
                        },
                        "pascalCase": {
                          "unsafeName": "AudioConfiguration",
                          "safeName": "AudioConfiguration"
                        }
                      },
                      "typeId": "AudioConfiguration",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Configuration details for the audio input used during the session. Ensures the audio is being correctly set up for processing.\n\nThis optional field is only required when the audio input is encoded in PCM Linear 16 (16-bit, little-endian, signed PCM WAV data). For detailed instructions on how to configure session settings for PCM Linear 16 audio, please refer to the [Session Settings section](/docs/empathic-voice-interface-evi/configuration#session-settings) on the EVI Configuration page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsAudio_example_autogenerated": {
                  "channels": 42,
                  "encoding": "linear16",
                  "sample_rate": 42
                }
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "builtin_tools",
                "camelCase": {
                  "unsafeName": "builtinTools",
                  "safeName": "builtinTools"
                },
                "snakeCase": {
                  "unsafeName": "builtin_tools",
                  "safeName": "builtin_tools"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUILTIN_TOOLS",
                  "safeName": "BUILTIN_TOOLS"
                },
                "pascalCase": {
                  "unsafeName": "BuiltinTools",
                  "safeName": "BuiltinTools"
                }
              },
              "wireValue": "builtin_tools"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "BuiltinToolConfig",
                            "camelCase": {
                              "unsafeName": "builtinToolConfig",
                              "safeName": "builtinToolConfig"
                            },
                            "snakeCase": {
                              "unsafeName": "builtin_tool_config",
                              "safeName": "builtin_tool_config"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "BUILTIN_TOOL_CONFIG",
                              "safeName": "BUILTIN_TOOL_CONFIG"
                            },
                            "pascalCase": {
                              "unsafeName": "BuiltinToolConfig",
                              "safeName": "BuiltinToolConfig"
                            }
                          },
                          "typeId": "BuiltinToolConfig",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of built-in tools to enable for the session.\n\nTools are resources used by EVI to perform various tasks, such as searching the web or calling external APIs. Built-in tools, like web search, are natively integrated, while user-defined tools are created and invoked by the user. To learn more, see our [Tool Use Guide](/docs/empathic-voice-interface-evi/tool-use).\n\nCurrently, the only built-in tool Hume provides is **Web Search**. When enabled, Web Search equips EVI with the ability to search the web for up-to-date information.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsBuiltinTools_example_autogenerated": [
                  {
                    "name": "web_search"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "context",
                "camelCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "snakeCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEXT",
                  "safeName": "CONTEXT"
                },
                "pascalCase": {
                  "unsafeName": "Context",
                  "safeName": "Context"
                }
              },
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "Context",
                        "camelCase": {
                          "unsafeName": "context",
                          "safeName": "context"
                        },
                        "snakeCase": {
                          "unsafeName": "context",
                          "safeName": "context"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "CONTEXT",
                          "safeName": "CONTEXT"
                        },
                        "pascalCase": {
                          "unsafeName": "Context",
                          "safeName": "Context"
                        }
                      },
                      "typeId": "Context",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Allows developers to inject additional context into the conversation, which is appended to the end of user messages for the session.\n\nWhen included in a Session Settings message, the provided context can be used to remind the LLM of its role in every user message, prevent it from forgetting important details, or add new relevant information to the conversation.\n\nSet to `null` to disable context injection.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsContext_example_autogenerated": {
                  "text": "foo"
                }
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Unique identifier for the session. Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.\n\nIf included, the response sent from Hume to your backend will include this ID. This allows you to correlate frontend users with their incoming messages.\n\nIt is recommended to pass a `custom_session_id` if you are using a Custom Language Model. Please see our guide to [using a custom language model](/docs/empathic-voice-interface-evi/custom-language-model) with EVI to learn more.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "event_limit",
                "camelCase": {
                  "unsafeName": "eventLimit",
                  "safeName": "eventLimit"
                },
                "snakeCase": {
                  "unsafeName": "event_limit",
                  "safeName": "event_limit"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EVENT_LIMIT",
                  "safeName": "EVENT_LIMIT"
                },
                "pascalCase": {
                  "unsafeName": "EventLimit",
                  "safeName": "EventLimit"
                }
              },
              "wireValue": "event_limit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "validation": {},
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum number of chat events to return from chat history. By default, the system returns up to 300 events (100 events per page × 3 pages). Set this parameter to a smaller value to limit the number of events returned.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsEventLimit_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_model_api_key",
                "camelCase": {
                  "unsafeName": "languageModelApiKey",
                  "safeName": "languageModelApiKey"
                },
                "snakeCase": {
                  "unsafeName": "language_model_api_key",
                  "safeName": "language_model_api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_MODEL_API_KEY",
                  "safeName": "LANGUAGE_MODEL_API_KEY"
                },
                "pascalCase": {
                  "unsafeName": "LanguageModelApiKey",
                  "safeName": "LanguageModelApiKey"
                }
              },
              "wireValue": "language_model_api_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Third party API key for the supplemental language model.\n\nWhen provided, EVI will use this key instead of Hume's API key for the supplemental LLM. This allows you to bypass rate limits and utilize your own API key as needed.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsLanguageModelApiKey_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                }
              },
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "SessionSettingsMetadata",
                        "camelCase": {
                          "unsafeName": "sessionSettingsMetadata",
                          "safeName": "sessionSettingsMetadata"
                        },
                        "snakeCase": {
                          "unsafeName": "session_settings_metadata",
                          "safeName": "session_settings_metadata"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "SESSION_SETTINGS_METADATA",
                          "safeName": "SESSION_SETTINGS_METADATA"
                        },
                        "pascalCase": {
                          "unsafeName": "SessionSettingsMetadata",
                          "safeName": "SessionSettingsMetadata"
                        }
                      },
                      "typeId": "SessionSettingsMetadata",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsMetadata_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "system_prompt",
                "camelCase": {
                  "unsafeName": "systemPrompt",
                  "safeName": "systemPrompt"
                },
                "snakeCase": {
                  "unsafeName": "system_prompt",
                  "safeName": "system_prompt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYSTEM_PROMPT",
                  "safeName": "SYSTEM_PROMPT"
                },
                "pascalCase": {
                  "unsafeName": "SystemPrompt",
                  "safeName": "SystemPrompt"
                }
              },
              "wireValue": "system_prompt"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Instructions used to shape EVI's behavior, responses, and style for the session.\n\nWhen included in a Session Settings message, the provided Prompt overrides the existing one specified in the EVI configuration. If no Prompt was defined in the configuration, this Prompt will be the one used for the session.\n\nYou can use the Prompt to define a specific goal or role for EVI, specifying how it should act or what it should focus on during the conversation. For example, EVI can be instructed to act as a customer support representative, a fitness coach, or a travel advisor, each with its own set of behaviors and response styles.\n\nFor help writing a system prompt, see our [Prompting Guide](/docs/empathic-voice-interface-evi/prompting).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsSystemPrompt_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tools",
                "camelCase": {
                  "unsafeName": "tools",
                  "safeName": "tools"
                },
                "snakeCase": {
                  "unsafeName": "tools",
                  "safeName": "tools"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOLS",
                  "safeName": "TOOLS"
                },
                "pascalCase": {
                  "unsafeName": "Tools",
                  "safeName": "Tools"
                }
              },
              "wireValue": "tools"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "Tool",
                            "camelCase": {
                              "unsafeName": "tool",
                              "safeName": "tool"
                            },
                            "snakeCase": {
                              "unsafeName": "tool",
                              "safeName": "tool"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "TOOL",
                              "safeName": "TOOL"
                            },
                            "pascalCase": {
                              "unsafeName": "Tool",
                              "safeName": "Tool"
                            }
                          },
                          "typeId": "Tool",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of user-defined tools to enable for the session.\n\nTools are resources used by EVI to perform various tasks, such as searching the web or calling external APIs. Built-in tools, like web search, are natively integrated, while user-defined tools are created and invoked by the user. To learn more, see our [Tool Use Guide](/docs/empathic-voice-interface-evi/tool-use).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsTools_example_autogenerated": [
                  {
                    "name": "foo",
                    "parameters": "foo",
                    "type": "builtin"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "session_settings",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `session_settings` for our server to correctly identify and process it as a Session Settings message.\n\nSession settings are temporary and apply only to the current Chat session. These settings can be adjusted dynamically based on the requirements of each session to ensure optimal performance and user experience.\n\nFor more information, please refer to the [Session Settings section](/docs/empathic-voice-interface-evi/configuration#session-settings) on the EVI Configuration page.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsType_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "variables",
                "camelCase": {
                  "unsafeName": "variables",
                  "safeName": "variables"
                },
                "snakeCase": {
                  "unsafeName": "variables",
                  "safeName": "variables"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VARIABLES",
                  "safeName": "VARIABLES"
                },
                "pascalCase": {
                  "unsafeName": "Variables",
                  "safeName": "Variables"
                }
              },
              "wireValue": "variables"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Dynamic values that can be used to populate EVI prompts.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "SessionSettingsVariables_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Settings for this chat session.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionSettings_example_autogenerated": {
            "type": "foo"
          }
        }
      }
    },
    "ToolCallMessage": {
      "name": {
        "typeId": "ToolCallMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ToolCallMessage",
          "camelCase": {
            "unsafeName": "toolCallMessage",
            "safeName": "toolCallMessage"
          },
          "snakeCase": {
            "unsafeName": "tool_call_message",
            "safeName": "tool_call_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOL_CALL_MESSAGE",
            "safeName": "TOOL_CALL_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "ToolCallMessage",
            "safeName": "ToolCallMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the tool called.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parameters",
                "camelCase": {
                  "unsafeName": "parameters",
                  "safeName": "parameters"
                },
                "snakeCase": {
                  "unsafeName": "parameters",
                  "safeName": "parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARAMETERS",
                  "safeName": "PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "Parameters",
                  "safeName": "Parameters"
                }
              },
              "wireValue": "parameters"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Parameters of the tool call. Is a stringified JSON schema.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageParameters_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "response_required",
                "camelCase": {
                  "unsafeName": "responseRequired",
                  "safeName": "responseRequired"
                },
                "snakeCase": {
                  "unsafeName": "response_required",
                  "safeName": "response_required"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE_REQUIRED",
                  "safeName": "RESPONSE_REQUIRED"
                },
                "pascalCase": {
                  "unsafeName": "ResponseRequired",
                  "safeName": "ResponseRequired"
                }
              },
              "wireValue": "response_required"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates whether a response to the tool call is required from the developer, either in the form of a [Tool Response message](/reference/empathic-voice-interface-evi/chat/chat#send.ToolResponseMessage.type) or a [Tool Error message](/reference/empathic-voice-interface-evi/chat/chat#send.ToolErrorMessage.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageResponseRequired_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_call_id",
                "camelCase": {
                  "unsafeName": "toolCallId",
                  "safeName": "toolCallId"
                },
                "snakeCase": {
                  "unsafeName": "tool_call_id",
                  "safeName": "tool_call_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_CALL_ID",
                  "safeName": "TOOL_CALL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolCallId",
                  "safeName": "ToolCallId"
                }
              },
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the correct response is linked to the appropriate request.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageToolCallId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_type",
                "camelCase": {
                  "unsafeName": "toolType",
                  "safeName": "toolType"
                },
                "snakeCase": {
                  "unsafeName": "tool_type",
                  "safeName": "tool_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_TYPE",
                  "safeName": "TOOL_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ToolType",
                  "safeName": "ToolType"
                }
              },
              "wireValue": "tool_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolType",
                "camelCase": {
                  "unsafeName": "toolType",
                  "safeName": "toolType"
                },
                "snakeCase": {
                  "unsafeName": "tool_type",
                  "safeName": "tool_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_TYPE",
                  "safeName": "TOOL_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ToolType",
                  "safeName": "ToolType"
                }
              },
              "typeId": "ToolType",
              "inline": false,
              "type": "named"
            },
            "docs": "Type of tool called. Either `builtin` for natively implemented tools, like web search, or `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_call",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Call message, this must be `tool_call`.\n\nThis message indicates that the supplemental LLM has detected a need to invoke the specified tool.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolCallMessageType_example_autogenerated": "tool_call"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a tool call.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolCallMessage_example_autogenerated": {
            "name": "foo",
            "parameters": "foo",
            "response_required": true,
            "tool_call_id": "foo",
            "tool_type": "builtin"
          }
        }
      }
    },
    "ToolErrorMessage": {
      "name": {
        "typeId": "ToolErrorMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ToolErrorMessage",
          "camelCase": {
            "unsafeName": "toolErrorMessage",
            "safeName": "toolErrorMessage"
          },
          "snakeCase": {
            "unsafeName": "tool_error_message",
            "safeName": "tool_error_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOL_ERROR_MESSAGE",
            "safeName": "TOOL_ERROR_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "ToolErrorMessage",
            "safeName": "ToolErrorMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "code",
                "camelCase": {
                  "unsafeName": "code",
                  "safeName": "code"
                },
                "snakeCase": {
                  "unsafeName": "code",
                  "safeName": "code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODE",
                  "safeName": "CODE"
                },
                "pascalCase": {
                  "unsafeName": "Code",
                  "safeName": "Code"
                }
              },
              "wireValue": "code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Error code. Identifies the type of error encountered.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageCode_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content",
                "camelCase": {
                  "unsafeName": "content",
                  "safeName": "content"
                },
                "snakeCase": {
                  "unsafeName": "content",
                  "safeName": "content"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT",
                  "safeName": "CONTENT"
                },
                "pascalCase": {
                  "unsafeName": "Content",
                  "safeName": "Content"
                }
              },
              "wireValue": "content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM in place of the tool call result. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation if the tool errors.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageContent_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Error message from the tool call, not exposed to the LLM or user.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageError_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "level",
                "camelCase": {
                  "unsafeName": "level",
                  "safeName": "level"
                },
                "snakeCase": {
                  "unsafeName": "level",
                  "safeName": "level"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEVEL",
                  "safeName": "LEVEL"
                },
                "pascalCase": {
                  "unsafeName": "Level",
                  "safeName": "Level"
                }
              },
              "wireValue": "level"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ErrorLevel",
                        "camelCase": {
                          "unsafeName": "errorLevel",
                          "safeName": "errorLevel"
                        },
                        "snakeCase": {
                          "unsafeName": "error_level",
                          "safeName": "error_level"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ERROR_LEVEL",
                          "safeName": "ERROR_LEVEL"
                        },
                        "pascalCase": {
                          "unsafeName": "ErrorLevel",
                          "safeName": "ErrorLevel"
                        }
                      },
                      "typeId": "ErrorLevel",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates the severity of an error; for a Tool Error message, this must be `warn` to signal an unexpected event.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageLevel_example_autogenerated": "warn"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_call_id",
                "camelCase": {
                  "unsafeName": "toolCallId",
                  "safeName": "toolCallId"
                },
                "snakeCase": {
                  "unsafeName": "tool_call_id",
                  "safeName": "tool_call_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_CALL_ID",
                  "safeName": "TOOL_CALL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolCallId",
                  "safeName": "ToolCallId"
                }
              },
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the Tool Error message is linked to the appropriate tool call request. The specified `tool_call_id` must match the one received in the [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.type).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageToolCallId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_type",
                "camelCase": {
                  "unsafeName": "toolType",
                  "safeName": "toolType"
                },
                "snakeCase": {
                  "unsafeName": "tool_type",
                  "safeName": "tool_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_TYPE",
                  "safeName": "TOOL_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ToolType",
                  "safeName": "ToolType"
                }
              },
              "wireValue": "tool_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ToolType",
                        "camelCase": {
                          "unsafeName": "toolType",
                          "safeName": "toolType"
                        },
                        "snakeCase": {
                          "unsafeName": "tool_type",
                          "safeName": "tool_type"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "TOOL_TYPE",
                          "safeName": "TOOL_TYPE"
                        },
                        "pascalCase": {
                          "unsafeName": "ToolType",
                          "safeName": "ToolType"
                        }
                      },
                      "typeId": "ToolType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Type of tool called. Either `builtin` for natively implemented tools, like web search, or `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageToolType_example_autogenerated": "builtin"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Error message, this must be `tool_error`.\n\nUpon receiving a [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.type) and failing to invoke the function, this message is sent to notify EVI of the tool's failure.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolErrorMessageType_example_autogenerated": "tool_error"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a function call error.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolErrorMessage_example_autogenerated": {
            "error": "foo",
            "tool_call_id": "foo"
          }
        }
      }
    },
    "ToolResponseMessage": {
      "name": {
        "typeId": "ToolResponseMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ToolResponseMessage",
          "camelCase": {
            "unsafeName": "toolResponseMessage",
            "safeName": "toolResponseMessage"
          },
          "snakeCase": {
            "unsafeName": "tool_response_message",
            "safeName": "tool_response_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOL_RESPONSE_MESSAGE",
            "safeName": "TOOL_RESPONSE_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "ToolResponseMessage",
            "safeName": "ToolResponseMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "content",
                "camelCase": {
                  "unsafeName": "content",
                  "safeName": "content"
                },
                "snakeCase": {
                  "unsafeName": "content",
                  "safeName": "content"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT",
                  "safeName": "CONTENT"
                },
                "pascalCase": {
                  "unsafeName": "Content",
                  "safeName": "Content"
                }
              },
              "wireValue": "content"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Return value of the tool call. Contains the output generated by the tool to pass back to EVI.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageContent_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_call_id",
                "camelCase": {
                  "unsafeName": "toolCallId",
                  "safeName": "toolCallId"
                },
                "snakeCase": {
                  "unsafeName": "tool_call_id",
                  "safeName": "tool_call_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_CALL_ID",
                  "safeName": "TOOL_CALL_ID"
                },
                "pascalCase": {
                  "unsafeName": "ToolCallId",
                  "safeName": "ToolCallId"
                }
              },
              "wireValue": "tool_call_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The unique identifier for a specific tool call instance.\n\nThis ID is used to track the request and response of a particular tool invocation, ensuring that the correct response is linked to the appropriate request. The specified `tool_call_id` must match the one received in the [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.tool_call_id).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolCallId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_name",
                "camelCase": {
                  "unsafeName": "toolName",
                  "safeName": "toolName"
                },
                "snakeCase": {
                  "unsafeName": "tool_name",
                  "safeName": "tool_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_NAME",
                  "safeName": "TOOL_NAME"
                },
                "pascalCase": {
                  "unsafeName": "ToolName",
                  "safeName": "ToolName"
                }
              },
              "wireValue": "tool_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_type",
                "camelCase": {
                  "unsafeName": "toolType",
                  "safeName": "toolType"
                },
                "snakeCase": {
                  "unsafeName": "tool_type",
                  "safeName": "tool_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_TYPE",
                  "safeName": "TOOL_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ToolType",
                  "safeName": "ToolType"
                }
              },
              "wireValue": "tool_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ToolType",
                        "camelCase": {
                          "unsafeName": "toolType",
                          "safeName": "toolType"
                        },
                        "snakeCase": {
                          "unsafeName": "tool_type",
                          "safeName": "tool_type"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "TOOL_TYPE",
                          "safeName": "TOOL_TYPE"
                        },
                        "pascalCase": {
                          "unsafeName": "ToolType",
                          "safeName": "ToolType"
                        }
                      },
                      "typeId": "ToolType",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageToolType_example_autogenerated": "builtin"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "tool_response",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a Tool Response message, this must be `tool_response`.\n\nUpon receiving a [Tool Call message](/reference/empathic-voice-interface-evi/chat/chat#receive.ToolCallMessage.type) and successfully invoking the function, this message is sent to convey the result of the function call back to EVI.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolResponseMessageType_example_autogenerated": "tool_response"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a function call response.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolResponseMessage_example_autogenerated": {
            "content": "foo",
            "tool_call_id": "foo"
          }
        }
      }
    },
    "UserInput": {
      "name": {
        "typeId": "UserInput",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserInput",
          "camelCase": {
            "unsafeName": "userInput",
            "safeName": "userInput"
          },
          "snakeCase": {
            "unsafeName": "user_input",
            "safeName": "user_input"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_INPUT",
            "safeName": "USER_INPUT"
          },
          "pascalCase": {
            "unsafeName": "UserInput",
            "safeName": "UserInput"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "User text to insert into the conversation. Text sent through a User Input message is treated as the user's speech to EVI. EVI processes this input and provides a corresponding response.\n\nExpression measurement results are not available for User Input messages, as the prosody model relies on audio input and cannot process text alone.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_input",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; must be `user_input` for our server to correctly identify and process it as a User Input message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInputType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "User text to insert into the conversation. Text sent through a User Input message is treated as the user's speech to EVI. EVI processes this input and provides a corresponding response.\n\nExpression measurement results are not available for User Input messages, as the prosody model relies on audio input and cannot process text alone.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInput_example_autogenerated": {
            "text": "foo",
            "type": "foo"
          }
        }
      }
    },
    "UserInterruption": {
      "name": {
        "typeId": "UserInterruption",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserInterruption",
          "camelCase": {
            "unsafeName": "userInterruption",
            "safeName": "userInterruption"
          },
          "snakeCase": {
            "unsafeName": "user_interruption",
            "safeName": "user_interruption"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_INTERRUPTION",
            "safeName": "USER_INTERRUPTION"
          },
          "pascalCase": {
            "unsafeName": "UserInterruption",
            "safeName": "UserInterruption"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "time",
                "camelCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "snakeCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME",
                  "safeName": "TIME"
                },
                "pascalCase": {
                  "unsafeName": "Time",
                  "safeName": "Time"
                }
              },
              "wireValue": "time"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Unix timestamp of the detected user interruption.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionTime_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_interruption",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "docs": "The type of message sent through the socket; for a User Interruption message, this must be `user_interruption`.\n\nThis message indicates the user has interrupted the assistant's response. EVI detects the interruption in real-time and sends this message to signal the interruption event. This message allows the system to stop the current audio playback, clear the audio queue, and prepare to handle new user input.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserInterruptionType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is an interruption.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserInterruption_example_autogenerated": {
            "time": 42,
            "type": "foo"
          }
        }
      }
    },
    "UserMessage": {
      "name": {
        "typeId": "UserMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "UserMessage",
          "camelCase": {
            "unsafeName": "userMessage",
            "safeName": "userMessage"
          },
          "snakeCase": {
            "unsafeName": "user_message",
            "safeName": "user_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "USER_MESSAGE",
            "safeName": "USER_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "UserMessage",
            "safeName": "UserMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "custom_session_id",
                "camelCase": {
                  "unsafeName": "customSessionId",
                  "safeName": "customSessionId"
                },
                "snakeCase": {
                  "unsafeName": "custom_session_id",
                  "safeName": "custom_session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SESSION_ID",
                  "safeName": "CUSTOM_SESSION_ID"
                },
                "pascalCase": {
                  "unsafeName": "CustomSessionId",
                  "safeName": "CustomSessionId"
                }
              },
              "wireValue": "custom_session_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Used to manage conversational state, correlate frontend and backend data, and persist conversations across EVI sessions.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageCustomSessionId_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from_text",
                "camelCase": {
                  "unsafeName": "fromText",
                  "safeName": "fromText"
                },
                "snakeCase": {
                  "unsafeName": "from_text",
                  "safeName": "from_text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM_TEXT",
                  "safeName": "FROM_TEXT"
                },
                "pascalCase": {
                  "unsafeName": "FromText",
                  "safeName": "FromText"
                }
              },
              "wireValue": "from_text"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message was inserted into the conversation as text from a [User Input](/reference/empathic-voice-interface-evi/chat/chat#send.UserInput.text) message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageFromText_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "interim",
                "camelCase": {
                  "unsafeName": "interim",
                  "safeName": "interim"
                },
                "snakeCase": {
                  "unsafeName": "interim",
                  "safeName": "interim"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INTERIM",
                  "safeName": "INTERIM"
                },
                "pascalCase": {
                  "unsafeName": "Interim",
                  "safeName": "Interim"
                }
              },
              "wireValue": "interim"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Indicates if this message contains an immediate and unfinalized transcript of the user's audio input. If it does, words may be repeated across successive UserMessage messages as our transcription model becomes more confident about what was said with additional context. Interim messages are useful to detect if the user is interrupting during audio playback on the client. Even without a finalized transcription, along with `UserInterrupt` messages, interim `UserMessages` are useful for detecting if the user is interrupting during audio playback on the client, signaling to stop playback in your application.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageInterim_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "message",
                "camelCase": {
                  "unsafeName": "message",
                  "safeName": "message"
                },
                "snakeCase": {
                  "unsafeName": "message",
                  "safeName": "message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE",
                  "safeName": "MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "Message",
                  "safeName": "Message"
                }
              },
              "wireValue": "message"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ChatMessage",
                "camelCase": {
                  "unsafeName": "chatMessage",
                  "safeName": "chatMessage"
                },
                "snakeCase": {
                  "unsafeName": "chat_message",
                  "safeName": "chat_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAT_MESSAGE",
                  "safeName": "CHAT_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ChatMessage",
                  "safeName": "ChatMessage"
                }
              },
              "typeId": "ChatMessage",
              "inline": false,
              "type": "named"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "models",
                "camelCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "snakeCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MODELS",
                  "safeName": "MODELS"
                },
                "pascalCase": {
                  "unsafeName": "Models",
                  "safeName": "Models"
                }
              },
              "wireValue": "models"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Inference",
                "camelCase": {
                  "unsafeName": "inference",
                  "safeName": "inference"
                },
                "snakeCase": {
                  "unsafeName": "inference",
                  "safeName": "inference"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INFERENCE",
                  "safeName": "INFERENCE"
                },
                "pascalCase": {
                  "unsafeName": "Inference",
                  "safeName": "Inference"
                }
              },
              "typeId": "Inference",
              "inline": false,
              "type": "named"
            },
            "docs": "Inference model results.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "time",
                "camelCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "snakeCase": {
                  "unsafeName": "time",
                  "safeName": "time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIME",
                  "safeName": "TIME"
                },
                "pascalCase": {
                  "unsafeName": "Time",
                  "safeName": "Time"
                }
              },
              "wireValue": "time"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "MillisecondInterval",
                "camelCase": {
                  "unsafeName": "millisecondInterval",
                  "safeName": "millisecondInterval"
                },
                "snakeCase": {
                  "unsafeName": "millisecond_interval",
                  "safeName": "millisecond_interval"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MILLISECOND_INTERVAL",
                  "safeName": "MILLISECOND_INTERVAL"
                },
                "pascalCase": {
                  "unsafeName": "MillisecondInterval",
                  "safeName": "MillisecondInterval"
                }
              },
              "typeId": "MillisecondInterval",
              "inline": false,
              "type": "named"
            },
            "docs": "Start and End time of user message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "user_message",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "UserMessageType_example_autogenerated": "foo"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "When provided, the output is a user message.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UserMessage_example_autogenerated": {
            "from_text": true,
            "interim": true,
            "message": {
              "role": "assistant"
            },
            "models": {
              "prosody": {
                "scores": {
                  "Admiration": 42,
                  "Adoration": 42,
                  "Aesthetic Appreciation": 42,
                  "Amusement": 42,
                  "Anger": 42,
                  "Anxiety": 42,
                  "Awe": 42,
                  "Awkwardness": 42,
                  "Boredom": 42,
                  "Calmness": 42,
                  "Concentration": 42,
                  "Confusion": 42,
                  "Contemplation": 42,
                  "Contempt": 42,
                  "Contentment": 42,
                  "Craving": 42,
                  "Desire": 42,
                  "Determination": 42,
                  "Disappointment": 42,
                  "Disgust": 42,
                  "Distress": 42,
                  "Doubt": 42,
                  "Ecstasy": 42,
                  "Embarrassment": 42,
                  "Empathic Pain": 42,
                  "Entrancement": 42,
                  "Envy": 42,
                  "Excitement": 42,
                  "Fear": 42,
                  "Guilt": 42,
                  "Horror": 42,
                  "Interest": 42,
                  "Joy": 42,
                  "Love": 42,
                  "Nostalgia": 42,
                  "Pain": 42,
                  "Pride": 42,
                  "Realization": 42,
                  "Relief": 42,
                  "Romance": 42,
                  "Sadness": 42,
                  "Satisfaction": 42,
                  "Shame": 42,
                  "Surprise (negative)": 42,
                  "Surprise (positive)": 42,
                  "Sympathy": 42,
                  "Tiredness": 42,
                  "Triumph": 42
                }
              }
            },
            "time": {
              "begin": 42,
              "end": 42
            },
            "type": "foo"
          }
        }
      }
    },
    "AudioConfiguration": {
      "name": {
        "typeId": "AudioConfiguration",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "AudioConfiguration",
          "camelCase": {
            "unsafeName": "audioConfiguration",
            "safeName": "audioConfiguration"
          },
          "snakeCase": {
            "unsafeName": "audio_configuration",
            "safeName": "audio_configuration"
          },
          "screamingSnakeCase": {
            "unsafeName": "AUDIO_CONFIGURATION",
            "safeName": "AUDIO_CONFIGURATION"
          },
          "pascalCase": {
            "unsafeName": "AudioConfiguration",
            "safeName": "AudioConfiguration"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "channels",
                "camelCase": {
                  "unsafeName": "channels",
                  "safeName": "channels"
                },
                "snakeCase": {
                  "unsafeName": "channels",
                  "safeName": "channels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHANNELS",
                  "safeName": "CHANNELS"
                },
                "pascalCase": {
                  "unsafeName": "Channels",
                  "safeName": "Channels"
                }
              },
              "wireValue": "channels"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Number of audio channels.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioConfigurationChannels_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "encoding",
                "camelCase": {
                  "unsafeName": "encoding",
                  "safeName": "encoding"
                },
                "snakeCase": {
                  "unsafeName": "encoding",
                  "safeName": "encoding"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENCODING",
                  "safeName": "ENCODING"
                },
                "pascalCase": {
                  "unsafeName": "Encoding",
                  "safeName": "Encoding"
                }
              },
              "wireValue": "encoding"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Encoding",
                "camelCase": {
                  "unsafeName": "encoding",
                  "safeName": "encoding"
                },
                "snakeCase": {
                  "unsafeName": "encoding",
                  "safeName": "encoding"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENCODING",
                  "safeName": "ENCODING"
                },
                "pascalCase": {
                  "unsafeName": "Encoding",
                  "safeName": "Encoding"
                }
              },
              "typeId": "Encoding",
              "inline": false,
              "type": "named"
            },
            "docs": "Encoding format of the audio input, such as `linear16`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sample_rate",
                "camelCase": {
                  "unsafeName": "sampleRate",
                  "safeName": "sampleRate"
                },
                "snakeCase": {
                  "unsafeName": "sample_rate",
                  "safeName": "sample_rate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAMPLE_RATE",
                  "safeName": "SAMPLE_RATE"
                },
                "pascalCase": {
                  "unsafeName": "SampleRate",
                  "safeName": "SampleRate"
                }
              },
              "wireValue": "sample_rate"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Audio sample rate. Number of samples per second in the audio input, measured in Hertz.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AudioConfigurationSampleRate_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AudioConfiguration_example_autogenerated": {
            "channels": 42,
            "encoding": "linear16",
            "sample_rate": 42
          }
        }
      }
    },
    "BuiltInTool": {
      "name": {
        "typeId": "BuiltInTool",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "BuiltInTool",
          "camelCase": {
            "unsafeName": "builtInTool",
            "safeName": "builtInTool"
          },
          "snakeCase": {
            "unsafeName": "built_in_tool",
            "safeName": "built_in_tool"
          },
          "screamingSnakeCase": {
            "unsafeName": "BUILT_IN_TOOL",
            "safeName": "BUILT_IN_TOOL"
          },
          "pascalCase": {
            "unsafeName": "BuiltInTool",
            "safeName": "BuiltInTool"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "web_search",
                "camelCase": {
                  "unsafeName": "webSearch",
                  "safeName": "webSearch"
                },
                "snakeCase": {
                  "unsafeName": "web_search",
                  "safeName": "web_search"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEB_SEARCH",
                  "safeName": "WEB_SEARCH"
                },
                "pascalCase": {
                  "unsafeName": "WebSearch",
                  "safeName": "WebSearch"
                }
              },
              "wireValue": "web_search"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hang_up",
                "camelCase": {
                  "unsafeName": "hangUp",
                  "safeName": "hangUp"
                },
                "snakeCase": {
                  "unsafeName": "hang_up",
                  "safeName": "hang_up"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HANG_UP",
                  "safeName": "HANG_UP"
                },
                "pascalCase": {
                  "unsafeName": "HangUp",
                  "safeName": "HangUp"
                }
              },
              "wireValue": "hang_up"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BuiltInTool_example_autogenerated": "web_search"
        }
      }
    },
    "BuiltinToolConfig": {
      "name": {
        "typeId": "BuiltinToolConfig",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "BuiltinToolConfig",
          "camelCase": {
            "unsafeName": "builtinToolConfig",
            "safeName": "builtinToolConfig"
          },
          "snakeCase": {
            "unsafeName": "builtin_tool_config",
            "safeName": "builtin_tool_config"
          },
          "screamingSnakeCase": {
            "unsafeName": "BUILTIN_TOOL_CONFIG",
            "safeName": "BUILTIN_TOOL_CONFIG"
          },
          "pascalCase": {
            "unsafeName": "BuiltinToolConfig",
            "safeName": "BuiltinToolConfig"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "fallback_content",
                "camelCase": {
                  "unsafeName": "fallbackContent",
                  "safeName": "fallbackContent"
                },
                "snakeCase": {
                  "unsafeName": "fallback_content",
                  "safeName": "fallback_content"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FALLBACK_CONTENT",
                  "safeName": "FALLBACK_CONTENT"
                },
                "pascalCase": {
                  "unsafeName": "FallbackContent",
                  "safeName": "FallbackContent"
                }
              },
              "wireValue": "fallback_content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM if the tool call fails. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BuiltinToolConfigFallbackContent_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "BuiltInTool",
                "camelCase": {
                  "unsafeName": "builtInTool",
                  "safeName": "builtInTool"
                },
                "snakeCase": {
                  "unsafeName": "built_in_tool",
                  "safeName": "built_in_tool"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUILT_IN_TOOL",
                  "safeName": "BUILT_IN_TOOL"
                },
                "pascalCase": {
                  "unsafeName": "BuiltInTool",
                  "safeName": "BuiltInTool"
                }
              },
              "typeId": "BuiltInTool",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BuiltinToolConfig_example_autogenerated": {
            "name": "web_search"
          }
        }
      }
    },
    "ChatMessageToolResult": {
      "name": {
        "typeId": "ChatMessageToolResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ChatMessageToolResult",
          "camelCase": {
            "unsafeName": "chatMessageToolResult",
            "safeName": "chatMessageToolResult"
          },
          "snakeCase": {
            "unsafeName": "chat_message_tool_result",
            "safeName": "chat_message_tool_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_MESSAGE_TOOL_RESULT",
            "safeName": "CHAT_MESSAGE_TOOL_RESULT"
          },
          "pascalCase": {
            "unsafeName": "ChatMessageToolResult",
            "safeName": "ChatMessageToolResult"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolResponseMessage",
                "camelCase": {
                  "unsafeName": "toolResponseMessage",
                  "safeName": "toolResponseMessage"
                },
                "snakeCase": {
                  "unsafeName": "tool_response_message",
                  "safeName": "tool_response_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_RESPONSE_MESSAGE",
                  "safeName": "TOOL_RESPONSE_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToolResponseMessage",
                  "safeName": "ToolResponseMessage"
                }
              },
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolErrorMessage",
                "camelCase": {
                  "unsafeName": "toolErrorMessage",
                  "safeName": "toolErrorMessage"
                },
                "snakeCase": {
                  "unsafeName": "tool_error_message",
                  "safeName": "tool_error_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ERROR_MESSAGE",
                  "safeName": "TOOL_ERROR_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToolErrorMessage",
                  "safeName": "ToolErrorMessage"
                }
              },
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Function call response from client.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMessageToolResult_example_autogenerated": {
            "content": "foo",
            "tool_call_id": "foo"
          }
        }
      }
    },
    "ChatMessage": {
      "name": {
        "typeId": "ChatMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ChatMessage",
          "camelCase": {
            "unsafeName": "chatMessage",
            "safeName": "chatMessage"
          },
          "snakeCase": {
            "unsafeName": "chat_message",
            "safeName": "chat_message"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_MESSAGE",
            "safeName": "CHAT_MESSAGE"
          },
          "pascalCase": {
            "unsafeName": "ChatMessage",
            "safeName": "ChatMessage"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "content",
                "camelCase": {
                  "unsafeName": "content",
                  "safeName": "content"
                },
                "snakeCase": {
                  "unsafeName": "content",
                  "safeName": "content"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT",
                  "safeName": "CONTENT"
                },
                "pascalCase": {
                  "unsafeName": "Content",
                  "safeName": "Content"
                }
              },
              "wireValue": "content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Transcript of the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageContent_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "wireValue": "role"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Role",
                "camelCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "snakeCase": {
                  "unsafeName": "role",
                  "safeName": "role"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROLE",
                  "safeName": "ROLE"
                },
                "pascalCase": {
                  "unsafeName": "Role",
                  "safeName": "Role"
                }
              },
              "typeId": "Role",
              "inline": false,
              "type": "named"
            },
            "docs": "Role of who is providing the message.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_call",
                "camelCase": {
                  "unsafeName": "toolCall",
                  "safeName": "toolCall"
                },
                "snakeCase": {
                  "unsafeName": "tool_call",
                  "safeName": "tool_call"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_CALL",
                  "safeName": "TOOL_CALL"
                },
                "pascalCase": {
                  "unsafeName": "ToolCall",
                  "safeName": "ToolCall"
                }
              },
              "wireValue": "tool_call"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ToolCallMessage",
                        "camelCase": {
                          "unsafeName": "toolCallMessage",
                          "safeName": "toolCallMessage"
                        },
                        "snakeCase": {
                          "unsafeName": "tool_call_message",
                          "safeName": "tool_call_message"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "TOOL_CALL_MESSAGE",
                          "safeName": "TOOL_CALL_MESSAGE"
                        },
                        "pascalCase": {
                          "unsafeName": "ToolCallMessage",
                          "safeName": "ToolCallMessage"
                        }
                      },
                      "typeId": "ToolCallMessage",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function call name and arguments.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageToolCall_example_autogenerated": {
                  "name": "foo",
                  "parameters": "foo",
                  "response_required": true,
                  "tool_call_id": "foo",
                  "tool_type": "builtin"
                }
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool_result",
                "camelCase": {
                  "unsafeName": "toolResult",
                  "safeName": "toolResult"
                },
                "snakeCase": {
                  "unsafeName": "tool_result",
                  "safeName": "tool_result"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_RESULT",
                  "safeName": "TOOL_RESULT"
                },
                "pascalCase": {
                  "unsafeName": "ToolResult",
                  "safeName": "ToolResult"
                }
              },
              "wireValue": "tool_result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "ChatMessageToolResult",
                        "camelCase": {
                          "unsafeName": "chatMessageToolResult",
                          "safeName": "chatMessageToolResult"
                        },
                        "snakeCase": {
                          "unsafeName": "chat_message_tool_result",
                          "safeName": "chat_message_tool_result"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "CHAT_MESSAGE_TOOL_RESULT",
                          "safeName": "CHAT_MESSAGE_TOOL_RESULT"
                        },
                        "pascalCase": {
                          "unsafeName": "ChatMessageToolResult",
                          "safeName": "ChatMessageToolResult"
                        }
                      },
                      "typeId": "ChatMessageToolResult",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Function call response from client.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ChatMessageToolResult_example_autogenerated": {
                  "content": "foo",
                  "tool_call_id": "foo"
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatMessage_example_autogenerated": {
            "role": "assistant"
          }
        }
      }
    },
    "Context": {
      "name": {
        "typeId": "Context",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Context",
          "camelCase": {
            "unsafeName": "context",
            "safeName": "context"
          },
          "snakeCase": {
            "unsafeName": "context",
            "safeName": "context"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTEXT",
            "safeName": "CONTEXT"
          },
          "pascalCase": {
            "unsafeName": "Context",
            "safeName": "Context"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                }
              },
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The context to be injected into the conversation. Helps inform the LLM's response by providing relevant information about the ongoing conversation.\n\nThis text will be appended to the end of user messages based on the chosen persistence level. For example, if you want to remind EVI of its role as a helpful weather assistant, the context you insert will be appended to the end of user messages as `{Context: You are a helpful weather assistant}`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ContextText_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ContextType",
                    "camelCase": {
                      "unsafeName": "contextType",
                      "safeName": "contextType"
                    },
                    "snakeCase": {
                      "unsafeName": "context_type",
                      "safeName": "context_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTEXT_TYPE",
                      "safeName": "CONTEXT_TYPE"
                    },
                    "pascalCase": {
                      "unsafeName": "ContextType",
                      "safeName": "ContextType"
                    }
                  },
                  "typeId": "ContextType",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The persistence level of the injected context. Specifies how long the injected context will remain active in the session.\n\nThere are three possible context types:\n\n- **Persistent**: The context is appended to all user messages for the duration of the session.\n\n- **Temporary**: The context is appended only to the next user message.\n\n - **Editable**: The original context is updated to reflect the new context.\n\n If the type is not specified, it will default to `temporary`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Context_example_autogenerated": {
            "text": "foo"
          }
        }
      }
    },
    "ContextType": {
      "name": {
        "typeId": "ContextType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ContextType",
          "camelCase": {
            "unsafeName": "contextType",
            "safeName": "contextType"
          },
          "snakeCase": {
            "unsafeName": "context_type",
            "safeName": "context_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONTEXT_TYPE",
            "safeName": "CONTEXT_TYPE"
          },
          "pascalCase": {
            "unsafeName": "ContextType",
            "safeName": "ContextType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "editable",
                "camelCase": {
                  "unsafeName": "editable",
                  "safeName": "editable"
                },
                "snakeCase": {
                  "unsafeName": "editable",
                  "safeName": "editable"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EDITABLE",
                  "safeName": "EDITABLE"
                },
                "pascalCase": {
                  "unsafeName": "Editable",
                  "safeName": "Editable"
                }
              },
              "wireValue": "editable"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "persistent",
                "camelCase": {
                  "unsafeName": "persistent",
                  "safeName": "persistent"
                },
                "snakeCase": {
                  "unsafeName": "persistent",
                  "safeName": "persistent"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PERSISTENT",
                  "safeName": "PERSISTENT"
                },
                "pascalCase": {
                  "unsafeName": "Persistent",
                  "safeName": "Persistent"
                }
              },
              "wireValue": "persistent"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "temporary",
                "camelCase": {
                  "unsafeName": "temporary",
                  "safeName": "temporary"
                },
                "snakeCase": {
                  "unsafeName": "temporary",
                  "safeName": "temporary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEMPORARY",
                  "safeName": "TEMPORARY"
                },
                "pascalCase": {
                  "unsafeName": "Temporary",
                  "safeName": "Temporary"
                }
              },
              "wireValue": "temporary"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ContextType_example_autogenerated": "editable"
        }
      }
    },
    "EmotionScores": {
      "name": {
        "typeId": "EmotionScores",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EmotionScores",
          "camelCase": {
            "unsafeName": "emotionScores",
            "safeName": "emotionScores"
          },
          "snakeCase": {
            "unsafeName": "emotion_scores",
            "safeName": "emotion_scores"
          },
          "screamingSnakeCase": {
            "unsafeName": "EMOTION_SCORES",
            "safeName": "EMOTION_SCORES"
          },
          "pascalCase": {
            "unsafeName": "EmotionScores",
            "safeName": "EmotionScores"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "Admiration",
                "camelCase": {
                  "unsafeName": "admiration",
                  "safeName": "admiration"
                },
                "snakeCase": {
                  "unsafeName": "admiration",
                  "safeName": "admiration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADMIRATION",
                  "safeName": "ADMIRATION"
                },
                "pascalCase": {
                  "unsafeName": "Admiration",
                  "safeName": "Admiration"
                }
              },
              "wireValue": "Admiration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAdmiration_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Adoration",
                "camelCase": {
                  "unsafeName": "adoration",
                  "safeName": "adoration"
                },
                "snakeCase": {
                  "unsafeName": "adoration",
                  "safeName": "adoration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADORATION",
                  "safeName": "ADORATION"
                },
                "pascalCase": {
                  "unsafeName": "Adoration",
                  "safeName": "Adoration"
                }
              },
              "wireValue": "Adoration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAdoration_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Aesthetic Appreciation",
                "camelCase": {
                  "unsafeName": "aestheticAppreciation",
                  "safeName": "aestheticAppreciation"
                },
                "snakeCase": {
                  "unsafeName": "aesthetic_appreciation",
                  "safeName": "aesthetic_appreciation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AESTHETIC_APPRECIATION",
                  "safeName": "AESTHETIC_APPRECIATION"
                },
                "pascalCase": {
                  "unsafeName": "AestheticAppreciation",
                  "safeName": "AestheticAppreciation"
                }
              },
              "wireValue": "Aesthetic Appreciation"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAestheticAppreciation_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Amusement",
                "camelCase": {
                  "unsafeName": "amusement",
                  "safeName": "amusement"
                },
                "snakeCase": {
                  "unsafeName": "amusement",
                  "safeName": "amusement"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMUSEMENT",
                  "safeName": "AMUSEMENT"
                },
                "pascalCase": {
                  "unsafeName": "Amusement",
                  "safeName": "Amusement"
                }
              },
              "wireValue": "Amusement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAmusement_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Anger",
                "camelCase": {
                  "unsafeName": "anger",
                  "safeName": "anger"
                },
                "snakeCase": {
                  "unsafeName": "anger",
                  "safeName": "anger"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANGER",
                  "safeName": "ANGER"
                },
                "pascalCase": {
                  "unsafeName": "Anger",
                  "safeName": "Anger"
                }
              },
              "wireValue": "Anger"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAnger_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Anxiety",
                "camelCase": {
                  "unsafeName": "anxiety",
                  "safeName": "anxiety"
                },
                "snakeCase": {
                  "unsafeName": "anxiety",
                  "safeName": "anxiety"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANXIETY",
                  "safeName": "ANXIETY"
                },
                "pascalCase": {
                  "unsafeName": "Anxiety",
                  "safeName": "Anxiety"
                }
              },
              "wireValue": "Anxiety"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAnxiety_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Awe",
                "camelCase": {
                  "unsafeName": "awe",
                  "safeName": "awe"
                },
                "snakeCase": {
                  "unsafeName": "awe",
                  "safeName": "awe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AWE",
                  "safeName": "AWE"
                },
                "pascalCase": {
                  "unsafeName": "Awe",
                  "safeName": "Awe"
                }
              },
              "wireValue": "Awe"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAwe_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Awkwardness",
                "camelCase": {
                  "unsafeName": "awkwardness",
                  "safeName": "awkwardness"
                },
                "snakeCase": {
                  "unsafeName": "awkwardness",
                  "safeName": "awkwardness"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AWKWARDNESS",
                  "safeName": "AWKWARDNESS"
                },
                "pascalCase": {
                  "unsafeName": "Awkwardness",
                  "safeName": "Awkwardness"
                }
              },
              "wireValue": "Awkwardness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresAwkwardness_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Boredom",
                "camelCase": {
                  "unsafeName": "boredom",
                  "safeName": "boredom"
                },
                "snakeCase": {
                  "unsafeName": "boredom",
                  "safeName": "boredom"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BOREDOM",
                  "safeName": "BOREDOM"
                },
                "pascalCase": {
                  "unsafeName": "Boredom",
                  "safeName": "Boredom"
                }
              },
              "wireValue": "Boredom"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresBoredom_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Calmness",
                "camelCase": {
                  "unsafeName": "calmness",
                  "safeName": "calmness"
                },
                "snakeCase": {
                  "unsafeName": "calmness",
                  "safeName": "calmness"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CALMNESS",
                  "safeName": "CALMNESS"
                },
                "pascalCase": {
                  "unsafeName": "Calmness",
                  "safeName": "Calmness"
                }
              },
              "wireValue": "Calmness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresCalmness_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Concentration",
                "camelCase": {
                  "unsafeName": "concentration",
                  "safeName": "concentration"
                },
                "snakeCase": {
                  "unsafeName": "concentration",
                  "safeName": "concentration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONCENTRATION",
                  "safeName": "CONCENTRATION"
                },
                "pascalCase": {
                  "unsafeName": "Concentration",
                  "safeName": "Concentration"
                }
              },
              "wireValue": "Concentration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresConcentration_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Confusion",
                "camelCase": {
                  "unsafeName": "confusion",
                  "safeName": "confusion"
                },
                "snakeCase": {
                  "unsafeName": "confusion",
                  "safeName": "confusion"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFUSION",
                  "safeName": "CONFUSION"
                },
                "pascalCase": {
                  "unsafeName": "Confusion",
                  "safeName": "Confusion"
                }
              },
              "wireValue": "Confusion"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresConfusion_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Contemplation",
                "camelCase": {
                  "unsafeName": "contemplation",
                  "safeName": "contemplation"
                },
                "snakeCase": {
                  "unsafeName": "contemplation",
                  "safeName": "contemplation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEMPLATION",
                  "safeName": "CONTEMPLATION"
                },
                "pascalCase": {
                  "unsafeName": "Contemplation",
                  "safeName": "Contemplation"
                }
              },
              "wireValue": "Contemplation"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContemplation_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Contempt",
                "camelCase": {
                  "unsafeName": "contempt",
                  "safeName": "contempt"
                },
                "snakeCase": {
                  "unsafeName": "contempt",
                  "safeName": "contempt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEMPT",
                  "safeName": "CONTEMPT"
                },
                "pascalCase": {
                  "unsafeName": "Contempt",
                  "safeName": "Contempt"
                }
              },
              "wireValue": "Contempt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContempt_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Contentment",
                "camelCase": {
                  "unsafeName": "contentment",
                  "safeName": "contentment"
                },
                "snakeCase": {
                  "unsafeName": "contentment",
                  "safeName": "contentment"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENTMENT",
                  "safeName": "CONTENTMENT"
                },
                "pascalCase": {
                  "unsafeName": "Contentment",
                  "safeName": "Contentment"
                }
              },
              "wireValue": "Contentment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresContentment_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Craving",
                "camelCase": {
                  "unsafeName": "craving",
                  "safeName": "craving"
                },
                "snakeCase": {
                  "unsafeName": "craving",
                  "safeName": "craving"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CRAVING",
                  "safeName": "CRAVING"
                },
                "pascalCase": {
                  "unsafeName": "Craving",
                  "safeName": "Craving"
                }
              },
              "wireValue": "Craving"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresCraving_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Desire",
                "camelCase": {
                  "unsafeName": "desire",
                  "safeName": "desire"
                },
                "snakeCase": {
                  "unsafeName": "desire",
                  "safeName": "desire"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESIRE",
                  "safeName": "DESIRE"
                },
                "pascalCase": {
                  "unsafeName": "Desire",
                  "safeName": "Desire"
                }
              },
              "wireValue": "Desire"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDesire_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Determination",
                "camelCase": {
                  "unsafeName": "determination",
                  "safeName": "determination"
                },
                "snakeCase": {
                  "unsafeName": "determination",
                  "safeName": "determination"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DETERMINATION",
                  "safeName": "DETERMINATION"
                },
                "pascalCase": {
                  "unsafeName": "Determination",
                  "safeName": "Determination"
                }
              },
              "wireValue": "Determination"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDetermination_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Disappointment",
                "camelCase": {
                  "unsafeName": "disappointment",
                  "safeName": "disappointment"
                },
                "snakeCase": {
                  "unsafeName": "disappointment",
                  "safeName": "disappointment"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISAPPOINTMENT",
                  "safeName": "DISAPPOINTMENT"
                },
                "pascalCase": {
                  "unsafeName": "Disappointment",
                  "safeName": "Disappointment"
                }
              },
              "wireValue": "Disappointment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDisappointment_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Disgust",
                "camelCase": {
                  "unsafeName": "disgust",
                  "safeName": "disgust"
                },
                "snakeCase": {
                  "unsafeName": "disgust",
                  "safeName": "disgust"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISGUST",
                  "safeName": "DISGUST"
                },
                "pascalCase": {
                  "unsafeName": "Disgust",
                  "safeName": "Disgust"
                }
              },
              "wireValue": "Disgust"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDisgust_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Distress",
                "camelCase": {
                  "unsafeName": "distress",
                  "safeName": "distress"
                },
                "snakeCase": {
                  "unsafeName": "distress",
                  "safeName": "distress"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISTRESS",
                  "safeName": "DISTRESS"
                },
                "pascalCase": {
                  "unsafeName": "Distress",
                  "safeName": "Distress"
                }
              },
              "wireValue": "Distress"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDistress_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Doubt",
                "camelCase": {
                  "unsafeName": "doubt",
                  "safeName": "doubt"
                },
                "snakeCase": {
                  "unsafeName": "doubt",
                  "safeName": "doubt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DOUBT",
                  "safeName": "DOUBT"
                },
                "pascalCase": {
                  "unsafeName": "Doubt",
                  "safeName": "Doubt"
                }
              },
              "wireValue": "Doubt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresDoubt_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Ecstasy",
                "camelCase": {
                  "unsafeName": "ecstasy",
                  "safeName": "ecstasy"
                },
                "snakeCase": {
                  "unsafeName": "ecstasy",
                  "safeName": "ecstasy"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ECSTASY",
                  "safeName": "ECSTASY"
                },
                "pascalCase": {
                  "unsafeName": "Ecstasy",
                  "safeName": "Ecstasy"
                }
              },
              "wireValue": "Ecstasy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEcstasy_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Embarrassment",
                "camelCase": {
                  "unsafeName": "embarrassment",
                  "safeName": "embarrassment"
                },
                "snakeCase": {
                  "unsafeName": "embarrassment",
                  "safeName": "embarrassment"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMBARRASSMENT",
                  "safeName": "EMBARRASSMENT"
                },
                "pascalCase": {
                  "unsafeName": "Embarrassment",
                  "safeName": "Embarrassment"
                }
              },
              "wireValue": "Embarrassment"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEmbarrassment_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Empathic Pain",
                "camelCase": {
                  "unsafeName": "empathicPain",
                  "safeName": "empathicPain"
                },
                "snakeCase": {
                  "unsafeName": "empathic_pain",
                  "safeName": "empathic_pain"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMPATHIC_PAIN",
                  "safeName": "EMPATHIC_PAIN"
                },
                "pascalCase": {
                  "unsafeName": "EmpathicPain",
                  "safeName": "EmpathicPain"
                }
              },
              "wireValue": "Empathic Pain"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEmpathicPain_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Entrancement",
                "camelCase": {
                  "unsafeName": "entrancement",
                  "safeName": "entrancement"
                },
                "snakeCase": {
                  "unsafeName": "entrancement",
                  "safeName": "entrancement"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTRANCEMENT",
                  "safeName": "ENTRANCEMENT"
                },
                "pascalCase": {
                  "unsafeName": "Entrancement",
                  "safeName": "Entrancement"
                }
              },
              "wireValue": "Entrancement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEntrancement_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Envy",
                "camelCase": {
                  "unsafeName": "envy",
                  "safeName": "envy"
                },
                "snakeCase": {
                  "unsafeName": "envy",
                  "safeName": "envy"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENVY",
                  "safeName": "ENVY"
                },
                "pascalCase": {
                  "unsafeName": "Envy",
                  "safeName": "Envy"
                }
              },
              "wireValue": "Envy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresEnvy_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Excitement",
                "camelCase": {
                  "unsafeName": "excitement",
                  "safeName": "excitement"
                },
                "snakeCase": {
                  "unsafeName": "excitement",
                  "safeName": "excitement"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXCITEMENT",
                  "safeName": "EXCITEMENT"
                },
                "pascalCase": {
                  "unsafeName": "Excitement",
                  "safeName": "Excitement"
                }
              },
              "wireValue": "Excitement"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresExcitement_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Fear",
                "camelCase": {
                  "unsafeName": "fear",
                  "safeName": "fear"
                },
                "snakeCase": {
                  "unsafeName": "fear",
                  "safeName": "fear"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FEAR",
                  "safeName": "FEAR"
                },
                "pascalCase": {
                  "unsafeName": "Fear",
                  "safeName": "Fear"
                }
              },
              "wireValue": "Fear"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresFear_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Guilt",
                "camelCase": {
                  "unsafeName": "guilt",
                  "safeName": "guilt"
                },
                "snakeCase": {
                  "unsafeName": "guilt",
                  "safeName": "guilt"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GUILT",
                  "safeName": "GUILT"
                },
                "pascalCase": {
                  "unsafeName": "Guilt",
                  "safeName": "Guilt"
                }
              },
              "wireValue": "Guilt"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresGuilt_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Horror",
                "camelCase": {
                  "unsafeName": "horror",
                  "safeName": "horror"
                },
                "snakeCase": {
                  "unsafeName": "horror",
                  "safeName": "horror"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HORROR",
                  "safeName": "HORROR"
                },
                "pascalCase": {
                  "unsafeName": "Horror",
                  "safeName": "Horror"
                }
              },
              "wireValue": "Horror"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresHorror_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Interest",
                "camelCase": {
                  "unsafeName": "interest",
                  "safeName": "interest"
                },
                "snakeCase": {
                  "unsafeName": "interest",
                  "safeName": "interest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INTEREST",
                  "safeName": "INTEREST"
                },
                "pascalCase": {
                  "unsafeName": "Interest",
                  "safeName": "Interest"
                }
              },
              "wireValue": "Interest"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresInterest_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Joy",
                "camelCase": {
                  "unsafeName": "joy",
                  "safeName": "joy"
                },
                "snakeCase": {
                  "unsafeName": "joy",
                  "safeName": "joy"
                },
                "screamingSnakeCase": {
                  "unsafeName": "JOY",
                  "safeName": "JOY"
                },
                "pascalCase": {
                  "unsafeName": "Joy",
                  "safeName": "Joy"
                }
              },
              "wireValue": "Joy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresJoy_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Love",
                "camelCase": {
                  "unsafeName": "love",
                  "safeName": "love"
                },
                "snakeCase": {
                  "unsafeName": "love",
                  "safeName": "love"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOVE",
                  "safeName": "LOVE"
                },
                "pascalCase": {
                  "unsafeName": "Love",
                  "safeName": "Love"
                }
              },
              "wireValue": "Love"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresLove_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Nostalgia",
                "camelCase": {
                  "unsafeName": "nostalgia",
                  "safeName": "nostalgia"
                },
                "snakeCase": {
                  "unsafeName": "nostalgia",
                  "safeName": "nostalgia"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NOSTALGIA",
                  "safeName": "NOSTALGIA"
                },
                "pascalCase": {
                  "unsafeName": "Nostalgia",
                  "safeName": "Nostalgia"
                }
              },
              "wireValue": "Nostalgia"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresNostalgia_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Pain",
                "camelCase": {
                  "unsafeName": "pain",
                  "safeName": "pain"
                },
                "snakeCase": {
                  "unsafeName": "pain",
                  "safeName": "pain"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAIN",
                  "safeName": "PAIN"
                },
                "pascalCase": {
                  "unsafeName": "Pain",
                  "safeName": "Pain"
                }
              },
              "wireValue": "Pain"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresPain_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Pride",
                "camelCase": {
                  "unsafeName": "pride",
                  "safeName": "pride"
                },
                "snakeCase": {
                  "unsafeName": "pride",
                  "safeName": "pride"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PRIDE",
                  "safeName": "PRIDE"
                },
                "pascalCase": {
                  "unsafeName": "Pride",
                  "safeName": "Pride"
                }
              },
              "wireValue": "Pride"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresPride_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Realization",
                "camelCase": {
                  "unsafeName": "realization",
                  "safeName": "realization"
                },
                "snakeCase": {
                  "unsafeName": "realization",
                  "safeName": "realization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REALIZATION",
                  "safeName": "REALIZATION"
                },
                "pascalCase": {
                  "unsafeName": "Realization",
                  "safeName": "Realization"
                }
              },
              "wireValue": "Realization"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRealization_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Relief",
                "camelCase": {
                  "unsafeName": "relief",
                  "safeName": "relief"
                },
                "snakeCase": {
                  "unsafeName": "relief",
                  "safeName": "relief"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RELIEF",
                  "safeName": "RELIEF"
                },
                "pascalCase": {
                  "unsafeName": "Relief",
                  "safeName": "Relief"
                }
              },
              "wireValue": "Relief"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRelief_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Romance",
                "camelCase": {
                  "unsafeName": "romance",
                  "safeName": "romance"
                },
                "snakeCase": {
                  "unsafeName": "romance",
                  "safeName": "romance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROMANCE",
                  "safeName": "ROMANCE"
                },
                "pascalCase": {
                  "unsafeName": "Romance",
                  "safeName": "Romance"
                }
              },
              "wireValue": "Romance"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresRomance_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Sadness",
                "camelCase": {
                  "unsafeName": "sadness",
                  "safeName": "sadness"
                },
                "snakeCase": {
                  "unsafeName": "sadness",
                  "safeName": "sadness"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SADNESS",
                  "safeName": "SADNESS"
                },
                "pascalCase": {
                  "unsafeName": "Sadness",
                  "safeName": "Sadness"
                }
              },
              "wireValue": "Sadness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSadness_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Satisfaction",
                "camelCase": {
                  "unsafeName": "satisfaction",
                  "safeName": "satisfaction"
                },
                "snakeCase": {
                  "unsafeName": "satisfaction",
                  "safeName": "satisfaction"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SATISFACTION",
                  "safeName": "SATISFACTION"
                },
                "pascalCase": {
                  "unsafeName": "Satisfaction",
                  "safeName": "Satisfaction"
                }
              },
              "wireValue": "Satisfaction"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSatisfaction_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Shame",
                "camelCase": {
                  "unsafeName": "shame",
                  "safeName": "shame"
                },
                "snakeCase": {
                  "unsafeName": "shame",
                  "safeName": "shame"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SHAME",
                  "safeName": "SHAME"
                },
                "pascalCase": {
                  "unsafeName": "Shame",
                  "safeName": "Shame"
                }
              },
              "wireValue": "Shame"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresShame_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Surprise (negative)",
                "camelCase": {
                  "unsafeName": "surpriseNegative",
                  "safeName": "surpriseNegative"
                },
                "snakeCase": {
                  "unsafeName": "surprise_negative",
                  "safeName": "surprise_negative"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SURPRISE_NEGATIVE",
                  "safeName": "SURPRISE_NEGATIVE"
                },
                "pascalCase": {
                  "unsafeName": "SurpriseNegative",
                  "safeName": "SurpriseNegative"
                }
              },
              "wireValue": "Surprise (negative)"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSurpriseNegative_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Surprise (positive)",
                "camelCase": {
                  "unsafeName": "surprisePositive",
                  "safeName": "surprisePositive"
                },
                "snakeCase": {
                  "unsafeName": "surprise_positive",
                  "safeName": "surprise_positive"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SURPRISE_POSITIVE",
                  "safeName": "SURPRISE_POSITIVE"
                },
                "pascalCase": {
                  "unsafeName": "SurprisePositive",
                  "safeName": "SurprisePositive"
                }
              },
              "wireValue": "Surprise (positive)"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSurprisePositive_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Sympathy",
                "camelCase": {
                  "unsafeName": "sympathy",
                  "safeName": "sympathy"
                },
                "snakeCase": {
                  "unsafeName": "sympathy",
                  "safeName": "sympathy"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYMPATHY",
                  "safeName": "SYMPATHY"
                },
                "pascalCase": {
                  "unsafeName": "Sympathy",
                  "safeName": "Sympathy"
                }
              },
              "wireValue": "Sympathy"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresSympathy_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Tiredness",
                "camelCase": {
                  "unsafeName": "tiredness",
                  "safeName": "tiredness"
                },
                "snakeCase": {
                  "unsafeName": "tiredness",
                  "safeName": "tiredness"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIREDNESS",
                  "safeName": "TIREDNESS"
                },
                "pascalCase": {
                  "unsafeName": "Tiredness",
                  "safeName": "Tiredness"
                }
              },
              "wireValue": "Tiredness"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresTiredness_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "Triumph",
                "camelCase": {
                  "unsafeName": "triumph",
                  "safeName": "triumph"
                },
                "snakeCase": {
                  "unsafeName": "triumph",
                  "safeName": "triumph"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRIUMPH",
                  "safeName": "TRIUMPH"
                },
                "pascalCase": {
                  "unsafeName": "Triumph",
                  "safeName": "Triumph"
                }
              },
              "wireValue": "Triumph"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {},
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmotionScoresTriumph_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmotionScores_example_autogenerated": {
            "Admiration": 42,
            "Adoration": 42,
            "Aesthetic Appreciation": 42,
            "Amusement": 42,
            "Anger": 42,
            "Anxiety": 42,
            "Awe": 42,
            "Awkwardness": 42,
            "Boredom": 42,
            "Calmness": 42,
            "Concentration": 42,
            "Confusion": 42,
            "Contemplation": 42,
            "Contempt": 42,
            "Contentment": 42,
            "Craving": 42,
            "Desire": 42,
            "Determination": 42,
            "Disappointment": 42,
            "Disgust": 42,
            "Distress": 42,
            "Doubt": 42,
            "Ecstasy": 42,
            "Embarrassment": 42,
            "Empathic Pain": 42,
            "Entrancement": 42,
            "Envy": 42,
            "Excitement": 42,
            "Fear": 42,
            "Guilt": 42,
            "Horror": 42,
            "Interest": 42,
            "Joy": 42,
            "Love": 42,
            "Nostalgia": 42,
            "Pain": 42,
            "Pride": 42,
            "Realization": 42,
            "Relief": 42,
            "Romance": 42,
            "Sadness": 42,
            "Satisfaction": 42,
            "Shame": 42,
            "Surprise (negative)": 42,
            "Surprise (positive)": 42,
            "Sympathy": 42,
            "Tiredness": 42,
            "Triumph": 42
          }
        }
      }
    },
    "Encoding": {
      "name": {
        "typeId": "Encoding",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Encoding",
          "camelCase": {
            "unsafeName": "encoding",
            "safeName": "encoding"
          },
          "snakeCase": {
            "unsafeName": "encoding",
            "safeName": "encoding"
          },
          "screamingSnakeCase": {
            "unsafeName": "ENCODING",
            "safeName": "ENCODING"
          },
          "pascalCase": {
            "unsafeName": "Encoding",
            "safeName": "Encoding"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "linear16",
                "camelCase": {
                  "unsafeName": "linear16",
                  "safeName": "linear16"
                },
                "snakeCase": {
                  "unsafeName": "linear_16",
                  "safeName": "linear_16"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LINEAR_16",
                  "safeName": "LINEAR_16"
                },
                "pascalCase": {
                  "unsafeName": "Linear16",
                  "safeName": "Linear16"
                }
              },
              "wireValue": "linear16"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Encoding_example_autogenerated": "linear16"
        }
      }
    },
    "ErrorLevel": {
      "name": {
        "typeId": "ErrorLevel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ErrorLevel",
          "camelCase": {
            "unsafeName": "errorLevel",
            "safeName": "errorLevel"
          },
          "snakeCase": {
            "unsafeName": "error_level",
            "safeName": "error_level"
          },
          "screamingSnakeCase": {
            "unsafeName": "ERROR_LEVEL",
            "safeName": "ERROR_LEVEL"
          },
          "pascalCase": {
            "unsafeName": "ErrorLevel",
            "safeName": "ErrorLevel"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "warn",
                "camelCase": {
                  "unsafeName": "warn",
                  "safeName": "warn"
                },
                "snakeCase": {
                  "unsafeName": "warn",
                  "safeName": "warn"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WARN",
                  "safeName": "WARN"
                },
                "pascalCase": {
                  "unsafeName": "Warn",
                  "safeName": "Warn"
                }
              },
              "wireValue": "warn"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ErrorLevel_example_autogenerated": "warn"
        }
      }
    },
    "Inference": {
      "name": {
        "typeId": "Inference",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Inference",
          "camelCase": {
            "unsafeName": "inference",
            "safeName": "inference"
          },
          "snakeCase": {
            "unsafeName": "inference",
            "safeName": "inference"
          },
          "screamingSnakeCase": {
            "unsafeName": "INFERENCE",
            "safeName": "INFERENCE"
          },
          "pascalCase": {
            "unsafeName": "Inference",
            "safeName": "Inference"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "prosody",
                "camelCase": {
                  "unsafeName": "prosody",
                  "safeName": "prosody"
                },
                "snakeCase": {
                  "unsafeName": "prosody",
                  "safeName": "prosody"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROSODY",
                  "safeName": "PROSODY"
                },
                "pascalCase": {
                  "unsafeName": "Prosody",
                  "safeName": "Prosody"
                }
              },
              "wireValue": "prosody"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "ProsodyInference",
                    "camelCase": {
                      "unsafeName": "prosodyInference",
                      "safeName": "prosodyInference"
                    },
                    "snakeCase": {
                      "unsafeName": "prosody_inference",
                      "safeName": "prosody_inference"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROSODY_INFERENCE",
                      "safeName": "PROSODY_INFERENCE"
                    },
                    "pascalCase": {
                      "unsafeName": "ProsodyInference",
                      "safeName": "ProsodyInference"
                    }
                  },
                  "typeId": "ProsodyInference",
                  "inline": false,
                  "type": "named"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "Prosody model inference results.\n\nEVI uses the prosody model to measure 48 emotions related to speech and vocal characteristics within a given expression.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "InferenceProsody_example_autogenerated": {
                  "scores": {
                    "Admiration": 42,
                    "Adoration": 42,
                    "Aesthetic Appreciation": 42,
                    "Amusement": 42,
                    "Anger": 42,
                    "Anxiety": 42,
                    "Awe": 42,
                    "Awkwardness": 42,
                    "Boredom": 42,
                    "Calmness": 42,
                    "Concentration": 42,
                    "Confusion": 42,
                    "Contemplation": 42,
                    "Contempt": 42,
                    "Contentment": 42,
                    "Craving": 42,
                    "Desire": 42,
                    "Determination": 42,
                    "Disappointment": 42,
                    "Disgust": 42,
                    "Distress": 42,
                    "Doubt": 42,
                    "Ecstasy": 42,
                    "Embarrassment": 42,
                    "Empathic Pain": 42,
                    "Entrancement": 42,
                    "Envy": 42,
                    "Excitement": 42,
                    "Fear": 42,
                    "Guilt": 42,
                    "Horror": 42,
                    "Interest": 42,
                    "Joy": 42,
                    "Love": 42,
                    "Nostalgia": 42,
                    "Pain": 42,
                    "Pride": 42,
                    "Realization": 42,
                    "Relief": 42,
                    "Romance": 42,
                    "Sadness": 42,
                    "Satisfaction": 42,
                    "Shame": 42,
                    "Surprise (negative)": 42,
                    "Surprise (positive)": 42,
                    "Sympathy": 42,
                    "Tiredness": 42,
                    "Triumph": 42
                  }
                }
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Inference_example_autogenerated": {
            "prosody": {
              "scores": {
                "Admiration": 42,
                "Adoration": 42,
                "Aesthetic Appreciation": 42,
                "Amusement": 42,
                "Anger": 42,
                "Anxiety": 42,
                "Awe": 42,
                "Awkwardness": 42,
                "Boredom": 42,
                "Calmness": 42,
                "Concentration": 42,
                "Confusion": 42,
                "Contemplation": 42,
                "Contempt": 42,
                "Contentment": 42,
                "Craving": 42,
                "Desire": 42,
                "Determination": 42,
                "Disappointment": 42,
                "Disgust": 42,
                "Distress": 42,
                "Doubt": 42,
                "Ecstasy": 42,
                "Embarrassment": 42,
                "Empathic Pain": 42,
                "Entrancement": 42,
                "Envy": 42,
                "Excitement": 42,
                "Fear": 42,
                "Guilt": 42,
                "Horror": 42,
                "Interest": 42,
                "Joy": 42,
                "Love": 42,
                "Nostalgia": 42,
                "Pain": 42,
                "Pride": 42,
                "Realization": 42,
                "Relief": 42,
                "Romance": 42,
                "Sadness": 42,
                "Satisfaction": 42,
                "Shame": 42,
                "Surprise (negative)": 42,
                "Surprise (positive)": 42,
                "Sympathy": 42,
                "Tiredness": 42,
                "Triumph": 42
              }
            }
          }
        }
      }
    },
    "MillisecondInterval": {
      "name": {
        "typeId": "MillisecondInterval",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "MillisecondInterval",
          "camelCase": {
            "unsafeName": "millisecondInterval",
            "safeName": "millisecondInterval"
          },
          "snakeCase": {
            "unsafeName": "millisecond_interval",
            "safeName": "millisecond_interval"
          },
          "screamingSnakeCase": {
            "unsafeName": "MILLISECOND_INTERVAL",
            "safeName": "MILLISECOND_INTERVAL"
          },
          "pascalCase": {
            "unsafeName": "MillisecondInterval",
            "safeName": "MillisecondInterval"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "begin",
                "camelCase": {
                  "unsafeName": "begin",
                  "safeName": "begin"
                },
                "snakeCase": {
                  "unsafeName": "begin",
                  "safeName": "begin"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BEGIN",
                  "safeName": "BEGIN"
                },
                "pascalCase": {
                  "unsafeName": "Begin",
                  "safeName": "Begin"
                }
              },
              "wireValue": "begin"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "Start time of the interval in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MillisecondIntervalBegin_example_autogenerated": 42
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                }
              },
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "docs": "End time of the interval in milliseconds.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MillisecondIntervalEnd_example_autogenerated": 42
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MillisecondInterval_example_autogenerated": {
            "begin": 42,
            "end": 42
          }
        }
      }
    },
    "ProsodyInference": {
      "name": {
        "typeId": "ProsodyInference",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ProsodyInference",
          "camelCase": {
            "unsafeName": "prosodyInference",
            "safeName": "prosodyInference"
          },
          "snakeCase": {
            "unsafeName": "prosody_inference",
            "safeName": "prosody_inference"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROSODY_INFERENCE",
            "safeName": "PROSODY_INFERENCE"
          },
          "pascalCase": {
            "unsafeName": "ProsodyInference",
            "safeName": "ProsodyInference"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "scores",
                "camelCase": {
                  "unsafeName": "scores",
                  "safeName": "scores"
                },
                "snakeCase": {
                  "unsafeName": "scores",
                  "safeName": "scores"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SCORES",
                  "safeName": "SCORES"
                },
                "pascalCase": {
                  "unsafeName": "Scores",
                  "safeName": "Scores"
                }
              },
              "wireValue": "scores"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EmotionScores",
                "camelCase": {
                  "unsafeName": "emotionScores",
                  "safeName": "emotionScores"
                },
                "snakeCase": {
                  "unsafeName": "emotion_scores",
                  "safeName": "emotion_scores"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EMOTION_SCORES",
                  "safeName": "EMOTION_SCORES"
                },
                "pascalCase": {
                  "unsafeName": "EmotionScores",
                  "safeName": "EmotionScores"
                }
              },
              "typeId": "EmotionScores",
              "inline": false,
              "type": "named"
            },
            "docs": "The confidence scores for 48 emotions within the detected expression of an audio sample.\n\nScores typically range from 0 to 1, with higher values indicating a stronger confidence level in the measured attribute.\n\nSee our guide on [interpreting expression measurement results](/docs/expression-measurement/faq#how-do-i-interpret-my-results) to learn more.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ProsodyInference_example_autogenerated": {
            "scores": {
              "Admiration": 42,
              "Adoration": 42,
              "Aesthetic Appreciation": 42,
              "Amusement": 42,
              "Anger": 42,
              "Anxiety": 42,
              "Awe": 42,
              "Awkwardness": 42,
              "Boredom": 42,
              "Calmness": 42,
              "Concentration": 42,
              "Confusion": 42,
              "Contemplation": 42,
              "Contempt": 42,
              "Contentment": 42,
              "Craving": 42,
              "Desire": 42,
              "Determination": 42,
              "Disappointment": 42,
              "Disgust": 42,
              "Distress": 42,
              "Doubt": 42,
              "Ecstasy": 42,
              "Embarrassment": 42,
              "Empathic Pain": 42,
              "Entrancement": 42,
              "Envy": 42,
              "Excitement": 42,
              "Fear": 42,
              "Guilt": 42,
              "Horror": 42,
              "Interest": 42,
              "Joy": 42,
              "Love": 42,
              "Nostalgia": 42,
              "Pain": 42,
              "Pride": 42,
              "Realization": 42,
              "Relief": 42,
              "Romance": 42,
              "Sadness": 42,
              "Satisfaction": 42,
              "Shame": 42,
              "Surprise (negative)": 42,
              "Surprise (positive)": 42,
              "Sympathy": 42,
              "Tiredness": 42,
              "Triumph": 42
            }
          }
        }
      }
    },
    "Role": {
      "name": {
        "typeId": "Role",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Role",
          "camelCase": {
            "unsafeName": "role",
            "safeName": "role"
          },
          "snakeCase": {
            "unsafeName": "role",
            "safeName": "role"
          },
          "screamingSnakeCase": {
            "unsafeName": "ROLE",
            "safeName": "ROLE"
          },
          "pascalCase": {
            "unsafeName": "Role",
            "safeName": "Role"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "assistant",
                "camelCase": {
                  "unsafeName": "assistant",
                  "safeName": "assistant"
                },
                "snakeCase": {
                  "unsafeName": "assistant",
                  "safeName": "assistant"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSISTANT",
                  "safeName": "ASSISTANT"
                },
                "pascalCase": {
                  "unsafeName": "Assistant",
                  "safeName": "Assistant"
                }
              },
              "wireValue": "assistant"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "system",
                "camelCase": {
                  "unsafeName": "system",
                  "safeName": "system"
                },
                "snakeCase": {
                  "unsafeName": "system",
                  "safeName": "system"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SYSTEM",
                  "safeName": "SYSTEM"
                },
                "pascalCase": {
                  "unsafeName": "System",
                  "safeName": "System"
                }
              },
              "wireValue": "system"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user",
                "camelCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "snakeCase": {
                  "unsafeName": "user",
                  "safeName": "user"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER",
                  "safeName": "USER"
                },
                "pascalCase": {
                  "unsafeName": "User",
                  "safeName": "User"
                }
              },
              "wireValue": "user"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "all",
                "camelCase": {
                  "unsafeName": "all",
                  "safeName": "all"
                },
                "snakeCase": {
                  "unsafeName": "all",
                  "safeName": "all"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ALL",
                  "safeName": "ALL"
                },
                "pascalCase": {
                  "unsafeName": "All",
                  "safeName": "All"
                }
              },
              "wireValue": "all"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tool",
                "camelCase": {
                  "unsafeName": "tool",
                  "safeName": "tool"
                },
                "snakeCase": {
                  "unsafeName": "tool",
                  "safeName": "tool"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL",
                  "safeName": "TOOL"
                },
                "pascalCase": {
                  "unsafeName": "Tool",
                  "safeName": "Tool"
                }
              },
              "wireValue": "tool"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "context",
                "camelCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "snakeCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEXT",
                  "safeName": "CONTEXT"
                },
                "pascalCase": {
                  "unsafeName": "Context",
                  "safeName": "Context"
                }
              },
              "wireValue": "context"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Role_example_autogenerated": "assistant"
        }
      }
    },
    "SessionSettingsMetadata": {
      "name": {
        "typeId": "SessionSettingsMetadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "SessionSettingsMetadata",
          "camelCase": {
            "unsafeName": "sessionSettingsMetadata",
            "safeName": "sessionSettingsMetadata"
          },
          "snakeCase": {
            "unsafeName": "session_settings_metadata",
            "safeName": "session_settings_metadata"
          },
          "screamingSnakeCase": {
            "unsafeName": "SESSION_SETTINGS_METADATA",
            "safeName": "SESSION_SETTINGS_METADATA"
          },
          "pascalCase": {
            "unsafeName": "SessionSettingsMetadata",
            "safeName": "SessionSettingsMetadata"
          }
        }
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SessionSettingsMetadata_example_autogenerated": {}
        }
      }
    },
    "Tool": {
      "name": {
        "typeId": "Tool",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Tool",
          "camelCase": {
            "unsafeName": "tool",
            "safeName": "tool"
          },
          "snakeCase": {
            "unsafeName": "tool",
            "safeName": "tool"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOL",
            "safeName": "TOOL"
          },
          "pascalCase": {
            "unsafeName": "Tool",
            "safeName": "Tool"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "description",
                "camelCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "snakeCase": {
                  "unsafeName": "description",
                  "safeName": "description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DESCRIPTION",
                  "safeName": "DESCRIPTION"
                },
                "pascalCase": {
                  "unsafeName": "Description",
                  "safeName": "Description"
                }
              },
              "wireValue": "description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An optional description of what the tool does, used by the supplemental LLM to choose when and how to call the function.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolDescription_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "fallback_content",
                "camelCase": {
                  "unsafeName": "fallbackContent",
                  "safeName": "fallbackContent"
                },
                "snakeCase": {
                  "unsafeName": "fallback_content",
                  "safeName": "fallback_content"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FALLBACK_CONTENT",
                  "safeName": "FALLBACK_CONTENT"
                },
                "pascalCase": {
                  "unsafeName": "FallbackContent",
                  "safeName": "FallbackContent"
                }
              },
              "wireValue": "fallback_content"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional text passed to the supplemental LLM if the tool call fails. The LLM then uses this text to generate a response back to the user, ensuring continuity in the conversation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolFallbackContent_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                }
              },
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Name of the user-defined tool to be enabled.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolName_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parameters",
                "camelCase": {
                  "unsafeName": "parameters",
                  "safeName": "parameters"
                },
                "snakeCase": {
                  "unsafeName": "parameters",
                  "safeName": "parameters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARAMETERS",
                  "safeName": "PARAMETERS"
                },
                "pascalCase": {
                  "unsafeName": "Parameters",
                  "safeName": "Parameters"
                }
              },
              "wireValue": "parameters"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Parameters of the tool. Is a stringified JSON schema.\n\nThese parameters define the inputs needed for the tool's execution, including the expected data type and description for each input field. Structured as a JSON schema, this format ensures the tool receives data in the expected format.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ToolParameters_example_autogenerated": "foo"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolType",
                "camelCase": {
                  "unsafeName": "toolType",
                  "safeName": "toolType"
                },
                "snakeCase": {
                  "unsafeName": "tool_type",
                  "safeName": "tool_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_TYPE",
                  "safeName": "TOOL_TYPE"
                },
                "pascalCase": {
                  "unsafeName": "ToolType",
                  "safeName": "ToolType"
                }
              },
              "typeId": "ToolType",
              "inline": false,
              "type": "named"
            },
            "docs": "Type of tool. Set to `function` for user-defined tools.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tool_example_autogenerated": {
            "name": "foo",
            "parameters": "foo",
            "type": "builtin"
          }
        }
      }
    },
    "ToolType": {
      "name": {
        "typeId": "ToolType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ToolType",
          "camelCase": {
            "unsafeName": "toolType",
            "safeName": "toolType"
          },
          "snakeCase": {
            "unsafeName": "tool_type",
            "safeName": "tool_type"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOL_TYPE",
            "safeName": "TOOL_TYPE"
          },
          "pascalCase": {
            "unsafeName": "ToolType",
            "safeName": "ToolType"
          }
        }
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "builtin",
                "camelCase": {
                  "unsafeName": "builtin",
                  "safeName": "builtin"
                },
                "snakeCase": {
                  "unsafeName": "builtin",
                  "safeName": "builtin"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BUILTIN",
                  "safeName": "BUILTIN"
                },
                "pascalCase": {
                  "unsafeName": "Builtin",
                  "safeName": "Builtin"
                }
              },
              "wireValue": "builtin"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "function",
                "camelCase": {
                  "unsafeName": "function",
                  "safeName": "function_"
                },
                "snakeCase": {
                  "unsafeName": "function",
                  "safeName": "function_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FUNCTION",
                  "safeName": "FUNCTION"
                },
                "pascalCase": {
                  "unsafeName": "Function",
                  "safeName": "Function"
                }
              },
              "wireValue": "function"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ToolType_example_autogenerated": "builtin"
        }
      }
    },
    "ChatSubscribe": {
      "name": {
        "typeId": "ChatSubscribe",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ChatSubscribe",
          "camelCase": {
            "unsafeName": "chatSubscribe",
            "safeName": "chatSubscribe"
          },
          "snakeCase": {
            "unsafeName": "chat_subscribe",
            "safeName": "chat_subscribe"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_SUBSCRIBE",
            "safeName": "CHAT_SUBSCRIBE"
          },
          "pascalCase": {
            "unsafeName": "ChatSubscribe",
            "safeName": "ChatSubscribe"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AssistantEnd",
                "camelCase": {
                  "unsafeName": "assistantEnd",
                  "safeName": "assistantEnd"
                },
                "snakeCase": {
                  "unsafeName": "assistant_end",
                  "safeName": "assistant_end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSISTANT_END",
                  "safeName": "ASSISTANT_END"
                },
                "pascalCase": {
                  "unsafeName": "AssistantEnd",
                  "safeName": "AssistantEnd"
                }
              },
              "typeId": "AssistantEnd",
              "displayName": "AssistantEnd",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AssistantMessage",
                "camelCase": {
                  "unsafeName": "assistantMessage",
                  "safeName": "assistantMessage"
                },
                "snakeCase": {
                  "unsafeName": "assistant_message",
                  "safeName": "assistant_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSISTANT_MESSAGE",
                  "safeName": "ASSISTANT_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "AssistantMessage",
                  "safeName": "AssistantMessage"
                }
              },
              "typeId": "AssistantMessage",
              "displayName": "AssistantMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AudioOutput",
                "camelCase": {
                  "unsafeName": "audioOutput",
                  "safeName": "audioOutput"
                },
                "snakeCase": {
                  "unsafeName": "audio_output",
                  "safeName": "audio_output"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_OUTPUT",
                  "safeName": "AUDIO_OUTPUT"
                },
                "pascalCase": {
                  "unsafeName": "AudioOutput",
                  "safeName": "AudioOutput"
                }
              },
              "typeId": "AudioOutput",
              "displayName": "AudioOutput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ChatMetadata",
                "camelCase": {
                  "unsafeName": "chatMetadata",
                  "safeName": "chatMetadata"
                },
                "snakeCase": {
                  "unsafeName": "chat_metadata",
                  "safeName": "chat_metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAT_METADATA",
                  "safeName": "CHAT_METADATA"
                },
                "pascalCase": {
                  "unsafeName": "ChatMetadata",
                  "safeName": "ChatMetadata"
                }
              },
              "typeId": "ChatMetadata",
              "displayName": "ChatMetadata",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "Error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error_"
                }
              },
              "typeId": "Error",
              "displayName": "Error",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserInterruption",
                "camelCase": {
                  "unsafeName": "userInterruption",
                  "safeName": "userInterruption"
                },
                "snakeCase": {
                  "unsafeName": "user_interruption",
                  "safeName": "user_interruption"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_INTERRUPTION",
                  "safeName": "USER_INTERRUPTION"
                },
                "pascalCase": {
                  "unsafeName": "UserInterruption",
                  "safeName": "UserInterruption"
                }
              },
              "typeId": "UserInterruption",
              "displayName": "UserInterruption",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserMessage",
                "camelCase": {
                  "unsafeName": "userMessage",
                  "safeName": "userMessage"
                },
                "snakeCase": {
                  "unsafeName": "user_message",
                  "safeName": "user_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_MESSAGE",
                  "safeName": "USER_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "UserMessage",
                  "safeName": "UserMessage"
                }
              },
              "typeId": "UserMessage",
              "displayName": "UserMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolCallMessage",
                "camelCase": {
                  "unsafeName": "toolCallMessage",
                  "safeName": "toolCallMessage"
                },
                "snakeCase": {
                  "unsafeName": "tool_call_message",
                  "safeName": "tool_call_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_CALL_MESSAGE",
                  "safeName": "TOOL_CALL_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToolCallMessage",
                  "safeName": "ToolCallMessage"
                }
              },
              "typeId": "ToolCallMessage",
              "displayName": "ToolCallMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolResponseMessage",
                "camelCase": {
                  "unsafeName": "toolResponseMessage",
                  "safeName": "toolResponseMessage"
                },
                "snakeCase": {
                  "unsafeName": "tool_response_message",
                  "safeName": "tool_response_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_RESPONSE_MESSAGE",
                  "safeName": "TOOL_RESPONSE_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToolResponseMessage",
                  "safeName": "ToolResponseMessage"
                }
              },
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolErrorMessage",
                "camelCase": {
                  "unsafeName": "toolErrorMessage",
                  "safeName": "toolErrorMessage"
                },
                "snakeCase": {
                  "unsafeName": "tool_error_message",
                  "safeName": "tool_error_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ERROR_MESSAGE",
                  "safeName": "TOOL_ERROR_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToolErrorMessage",
                  "safeName": "ToolErrorMessage"
                }
              },
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatSubscribe_example_autogenerated": null
        }
      }
    },
    "ChatPublish": {
      "name": {
        "typeId": "ChatPublish",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "ChatPublish",
          "camelCase": {
            "unsafeName": "chatPublish",
            "safeName": "chatPublish"
          },
          "snakeCase": {
            "unsafeName": "chat_publish",
            "safeName": "chat_publish"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_PUBLISH",
            "safeName": "CHAT_PUBLISH"
          },
          "pascalCase": {
            "unsafeName": "ChatPublish",
            "safeName": "ChatPublish"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AudioInput",
                "camelCase": {
                  "unsafeName": "audioInput",
                  "safeName": "audioInput"
                },
                "snakeCase": {
                  "unsafeName": "audio_input",
                  "safeName": "audio_input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_INPUT",
                  "safeName": "AUDIO_INPUT"
                },
                "pascalCase": {
                  "unsafeName": "AudioInput",
                  "safeName": "AudioInput"
                }
              },
              "typeId": "AudioInput",
              "displayName": "AudioInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "SessionSettings",
                "camelCase": {
                  "unsafeName": "sessionSettings",
                  "safeName": "sessionSettings"
                },
                "snakeCase": {
                  "unsafeName": "session_settings",
                  "safeName": "session_settings"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_SETTINGS",
                  "safeName": "SESSION_SETTINGS"
                },
                "pascalCase": {
                  "unsafeName": "SessionSettings",
                  "safeName": "SessionSettings"
                }
              },
              "typeId": "SessionSettings",
              "displayName": "SessionSettings",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "UserInput",
                "camelCase": {
                  "unsafeName": "userInput",
                  "safeName": "userInput"
                },
                "snakeCase": {
                  "unsafeName": "user_input",
                  "safeName": "user_input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_INPUT",
                  "safeName": "USER_INPUT"
                },
                "pascalCase": {
                  "unsafeName": "UserInput",
                  "safeName": "UserInput"
                }
              },
              "typeId": "UserInput",
              "displayName": "UserInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "AssistantInput",
                "camelCase": {
                  "unsafeName": "assistantInput",
                  "safeName": "assistantInput"
                },
                "snakeCase": {
                  "unsafeName": "assistant_input",
                  "safeName": "assistant_input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ASSISTANT_INPUT",
                  "safeName": "ASSISTANT_INPUT"
                },
                "pascalCase": {
                  "unsafeName": "AssistantInput",
                  "safeName": "AssistantInput"
                }
              },
              "typeId": "AssistantInput",
              "displayName": "AssistantInput",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolResponseMessage",
                "camelCase": {
                  "unsafeName": "toolResponseMessage",
                  "safeName": "toolResponseMessage"
                },
                "snakeCase": {
                  "unsafeName": "tool_response_message",
                  "safeName": "tool_response_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_RESPONSE_MESSAGE",
                  "safeName": "TOOL_RESPONSE_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToolResponseMessage",
                  "safeName": "ToolResponseMessage"
                }
              },
              "typeId": "ToolResponseMessage",
              "displayName": "ToolResponseMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ToolErrorMessage",
                "camelCase": {
                  "unsafeName": "toolErrorMessage",
                  "safeName": "toolErrorMessage"
                },
                "snakeCase": {
                  "unsafeName": "tool_error_message",
                  "safeName": "tool_error_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOOL_ERROR_MESSAGE",
                  "safeName": "TOOL_ERROR_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ToolErrorMessage",
                  "safeName": "ToolErrorMessage"
                }
              },
              "typeId": "ToolErrorMessage",
              "displayName": "ToolErrorMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "PauseAssistantMessage",
                "camelCase": {
                  "unsafeName": "pauseAssistantMessage",
                  "safeName": "pauseAssistantMessage"
                },
                "snakeCase": {
                  "unsafeName": "pause_assistant_message",
                  "safeName": "pause_assistant_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAUSE_ASSISTANT_MESSAGE",
                  "safeName": "PAUSE_ASSISTANT_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "PauseAssistantMessage",
                  "safeName": "PauseAssistantMessage"
                }
              },
              "typeId": "PauseAssistantMessage",
              "displayName": "PauseAssistantMessage",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ResumeAssistantMessage",
                "camelCase": {
                  "unsafeName": "resumeAssistantMessage",
                  "safeName": "resumeAssistantMessage"
                },
                "snakeCase": {
                  "unsafeName": "resume_assistant_message",
                  "safeName": "resume_assistant_message"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESUME_ASSISTANT_MESSAGE",
                  "safeName": "RESUME_ASSISTANT_MESSAGE"
                },
                "pascalCase": {
                  "unsafeName": "ResumeAssistantMessage",
                  "safeName": "ResumeAssistantMessage"
                }
              },
              "typeId": "ResumeAssistantMessage",
              "displayName": "ResumeAssistantMessage",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ChatPublish_example_autogenerated": null
        }
      }
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceId",
          "safeName": "errorInstanceId"
        },
        "snakeCase": {
          "unsafeName": "error_instance_id",
          "safeName": "error_instance_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "ERROR_INSTANCE_ID",
          "safeName": "ERROR_INSTANCE_ID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceId",
          "safeName": "ErrorInstanceId"
        }
      },
      "wireValue": "errorInstanceId"
    }
  },
  "errors": {
    "Tts_v0_evi_tts_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Tts_v0_evi_tts_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "ttsV0EviTtsPostRequestUnprocessableEntityError",
            "safeName": "ttsV0EviTtsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "tts_v_0_evi_tts_post_request_unprocessable_entity_error",
            "safeName": "tts_v_0_evi_tts_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "TTS_V_0_EVI_TTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "TTS_V_0_EVI_TTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "TtsV0EviTtsPostRequestUnprocessableEntityError",
            "safeName": "TtsV0EviTtsPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Tts_v0_evi_tts_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Tts_v0_evi_tts_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "ttsV0EviTtsPostRequestUnprocessableEntityError",
            "safeName": "ttsV0EviTtsPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "tts_v_0_evi_tts_post_request_unprocessable_entity_error",
            "safeName": "tts_v_0_evi_tts_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "TTS_V_0_EVI_TTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "TTS_V_0_EVI_TTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "TtsV0EviTtsPostRequestUnprocessableEntityError",
            "safeName": "TtsV0EviTtsPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Tts_v0_evi_tts_postRequestUnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Twilio_webhook_v0_evi_twilio_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Twilio_webhook_v0_evi_twilio_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "twilioWebhookV0EviTwilioPostRequestUnprocessableEntityError",
            "safeName": "twilioWebhookV0EviTwilioPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "twilio_webhook_v_0_evi_twilio_post_request_unprocessable_entity_error",
            "safeName": "twilio_webhook_v_0_evi_twilio_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "TwilioWebhookV0EviTwilioPostRequestUnprocessableEntityError",
            "safeName": "TwilioWebhookV0EviTwilioPostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Twilio_webhook_v0_evi_twilio_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Twilio_webhook_v0_evi_twilio_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "twilioWebhookV0EviTwilioPostRequestUnprocessableEntityError",
            "safeName": "twilioWebhookV0EviTwilioPostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "twilio_webhook_v_0_evi_twilio_post_request_unprocessable_entity_error",
            "safeName": "twilio_webhook_v_0_evi_twilio_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "TwilioWebhookV0EviTwilioPostRequestUnprocessableEntityError",
            "safeName": "TwilioWebhookV0EviTwilioPostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Twilio_webhook_v0_evi_twilio_postRequestUnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Voice_v0_evi_voice_postRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Voice_v0_evi_voice_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "voiceV0EviVoicePostRequestUnprocessableEntityError",
            "safeName": "voiceV0EviVoicePostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "voice_v_0_evi_voice_post_request_unprocessable_entity_error",
            "safeName": "voice_v_0_evi_voice_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "VOICE_V_0_EVI_VOICE_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "VOICE_V_0_EVI_VOICE_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "VoiceV0EviVoicePostRequestUnprocessableEntityError",
            "safeName": "VoiceV0EviVoicePostRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Voice_v0_evi_voice_postRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Voice_v0_evi_voice_postRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "voiceV0EviVoicePostRequestUnprocessableEntityError",
            "safeName": "voiceV0EviVoicePostRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "voice_v_0_evi_voice_post_request_unprocessable_entity_error",
            "safeName": "voice_v_0_evi_voice_post_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "VOICE_V_0_EVI_VOICE_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "VOICE_V_0_EVI_VOICE_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "VoiceV0EviVoicePostRequestUnprocessableEntityError",
            "safeName": "VoiceV0EviVoicePostRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Voice_v0_evi_voice_postRequestUnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    },
    "Voice_names_v0_evi_voice_names_getRequestUnprocessableEntityError": {
      "name": {
        "name": {
          "originalName": "Voice_names_v0_evi_voice_names_getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "voiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError",
            "safeName": "voiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "voice_names_v_0_evi_voice_names_get_request_unprocessable_entity_error",
            "safeName": "voice_names_v_0_evi_voice_names_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "VoiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError",
            "safeName": "VoiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "Voice_names_v0_evi_voice_names_getRequestUnprocessableEntityError"
      },
      "displayName": "UnprocessableEntityError",
      "discriminantValue": {
        "name": {
          "originalName": "Voice_names_v0_evi_voice_names_getRequestUnprocessableEntityError",
          "camelCase": {
            "unsafeName": "voiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError",
            "safeName": "voiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError"
          },
          "snakeCase": {
            "unsafeName": "voice_names_v_0_evi_voice_names_get_request_unprocessable_entity_error",
            "safeName": "voice_names_v_0_evi_voice_names_get_request_unprocessable_entity_error"
          },
          "screamingSnakeCase": {
            "unsafeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
            "safeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
          },
          "pascalCase": {
            "unsafeName": "VoiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError",
            "safeName": "VoiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError"
          }
        },
        "wireValue": "Voice_names_v0_evi_voice_names_getRequestUnprocessableEntityError"
      },
      "type": {
        "type": "unknown"
      },
      "statusCode": 422,
      "docs": "Validation Error",
      "examples": []
    }
  },
  "services": {
    "service_": {
      "name": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "Language Models",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/language_models",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/language_models",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_.language_models_v0_evi_language_models_get",
          "name": {
            "originalName": "language_models_v0_evi_language_models_get",
            "camelCase": {
              "unsafeName": "languageModelsV0EviLanguageModelsGet",
              "safeName": "languageModelsV0EviLanguageModelsGet"
            },
            "snakeCase": {
              "unsafeName": "language_models_v_0_evi_language_models_get",
              "safeName": "language_models_v_0_evi_language_models_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "LANGUAGE_MODELS_V_0_EVI_LANGUAGE_MODELS_GET",
              "safeName": "LANGUAGE_MODELS_V_0_EVI_LANGUAGE_MODELS_GET"
            },
            "pascalCase": {
              "unsafeName": "LanguageModelsV0EviLanguageModelsGet",
              "safeName": "LanguageModelsV0EviLanguageModelsGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "A list of available language models with details about their providers and built-in tools.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Fetch a list of available language models from various providers along with their built-in tools.",
          "v2Examples": {
            "autogeneratedExamples": {
              "languageModelsV0EviLanguageModelsGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/language_models"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Tts",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "access_token",
                  "camelCase": {
                    "unsafeName": "accessToken",
                    "safeName": "accessToken"
                  },
                  "snakeCase": {
                    "unsafeName": "access_token",
                    "safeName": "access_token"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ACCESS_TOKEN",
                    "safeName": "ACCESS_TOKEN"
                  },
                  "pascalCase": {
                    "unsafeName": "AccessToken",
                    "safeName": "AccessToken"
                  }
                },
                "wireValue": "access_token"
              },
              "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "access_token_example": ""
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": {
                  "originalName": "Accept",
                  "camelCase": {
                    "unsafeName": "accept",
                    "safeName": "accept"
                  },
                  "snakeCase": {
                    "unsafeName": "accept",
                    "safeName": "accept"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ACCEPT",
                    "safeName": "ACCEPT"
                  },
                  "pascalCase": {
                    "unsafeName": "Accept",
                    "safeName": "Accept"
                  }
                },
                "wireValue": "Accept"
              },
              "docs": "Indicates what content type the server sent response (containing both the generated speech and the associated metadata) should have. Select `\"application/json\"` to receive a JSON response containing the audio as a Base64-encoded string. Select `\"audio/*\"` to receive a binary streaming response containing just the audio data in the requested format. Select `\"multipart/form-data\"` to receive a response containing separate form fields for both the binary audio data (in the requested format) and the JSON metadata.\n\nNote that only an \"audio/*\" response is streamed; the other response types are sent to the client all at once.",
              "valueType": {
                "container": {
                  "optional": {
                    "type": "unknown"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "Accept_example": null
                }
              }
            }
          ],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Tts_v0_evi_tts_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "ttsV0EviTtsPostRequestUnprocessableEntityError",
                    "safeName": "ttsV0EviTtsPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "tts_v_0_evi_tts_post_request_unprocessable_entity_error",
                    "safeName": "tts_v_0_evi_tts_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TTS_V_0_EVI_TTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "TTS_V_0_EVI_TTS_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "TtsV0EviTtsPostRequestUnprocessableEntityError",
                    "safeName": "TtsV0EviTtsPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Tts_v0_evi_tts_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_.tts_v0_evi_tts_post",
          "name": {
            "originalName": "tts_v0_evi_tts_post",
            "camelCase": {
              "unsafeName": "ttsV0EviTtsPost",
              "safeName": "ttsV0EviTtsPost"
            },
            "snakeCase": {
              "unsafeName": "tts_v_0_evi_tts_post",
              "safeName": "tts_v_0_evi_tts_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "TTS_V_0_EVI_TTS_POST",
              "safeName": "TTS_V_0_EVI_TTS_POST"
            },
            "pascalCase": {
              "unsafeName": "TtsV0EviTtsPost",
              "safeName": "TtsV0EviTtsPost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "ttsV0EviTtsPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/tts"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Twilio Webhook",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/twilio",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "config_id",
                  "camelCase": {
                    "unsafeName": "configId",
                    "safeName": "configId"
                  },
                  "snakeCase": {
                    "unsafeName": "config_id",
                    "safeName": "config_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONFIG_ID",
                    "safeName": "CONFIG_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ConfigId",
                    "safeName": "ConfigId"
                  }
                },
                "wireValue": "config_id"
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "config_id_example": "config_id"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "access_token",
                  "camelCase": {
                    "unsafeName": "accessToken",
                    "safeName": "accessToken"
                  },
                  "snakeCase": {
                    "unsafeName": "access_token",
                    "safeName": "access_token"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ACCESS_TOKEN",
                    "safeName": "ACCESS_TOKEN"
                  },
                  "pascalCase": {
                    "unsafeName": "AccessToken",
                    "safeName": "AccessToken"
                  }
                },
                "wireValue": "access_token"
              },
              "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "access_token_example": ""
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Twilio_webhook_v0_evi_twilio_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "twilioWebhookV0EviTwilioPostRequestUnprocessableEntityError",
                    "safeName": "twilioWebhookV0EviTwilioPostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "twilio_webhook_v_0_evi_twilio_post_request_unprocessable_entity_error",
                    "safeName": "twilio_webhook_v_0_evi_twilio_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "TwilioWebhookV0EviTwilioPostRequestUnprocessableEntityError",
                    "safeName": "TwilioWebhookV0EviTwilioPostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Twilio_webhook_v0_evi_twilio_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/twilio",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_.twilio_webhook_v0_evi_twilio_post",
          "name": {
            "originalName": "twilio_webhook_v0_evi_twilio_post",
            "camelCase": {
              "unsafeName": "twilioWebhookV0EviTwilioPost",
              "safeName": "twilioWebhookV0EviTwilioPost"
            },
            "snakeCase": {
              "unsafeName": "twilio_webhook_v_0_evi_twilio_post",
              "safeName": "twilio_webhook_v_0_evi_twilio_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST",
              "safeName": "TWILIO_WEBHOOK_V_0_EVI_TWILIO_POST"
            },
            "pascalCase": {
              "unsafeName": "TwilioWebhookV0EviTwilioPost",
              "safeName": "TwilioWebhookV0EviTwilioPost"
            }
          },
          "requestBody": {
            "contentType": "application/x-www-form-urlencoded",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "This is the webhook that will be called along with the twilio phone caller-callee information whenever\na call is made to a twilio phone number.\nHere we also authenticate the hume api_key of the user. Then, if authenticated, it sends an XML response\nback to twilio instructing it to create a websocket stream between the twilio incoming phone call and evi's\n_twilio websocket endpoint, which will then handle the call session.",
          "v2Examples": {
            "autogeneratedExamples": {
              "twilioWebhookV0EviTwilioPostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/twilio"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {
                    "config_id": "config_id"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Voice",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/voice",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "access_token",
                  "camelCase": {
                    "unsafeName": "accessToken",
                    "safeName": "accessToken"
                  },
                  "snakeCase": {
                    "unsafeName": "access_token",
                    "safeName": "access_token"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ACCESS_TOKEN",
                    "safeName": "ACCESS_TOKEN"
                  },
                  "pascalCase": {
                    "unsafeName": "AccessToken",
                    "safeName": "AccessToken"
                  }
                },
                "wireValue": "access_token"
              },
              "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "default": "",
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "access_token_example": ""
                }
              }
            }
          ],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Voice_v0_evi_voice_postRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "voiceV0EviVoicePostRequestUnprocessableEntityError",
                    "safeName": "voiceV0EviVoicePostRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "voice_v_0_evi_voice_post_request_unprocessable_entity_error",
                    "safeName": "voice_v_0_evi_voice_post_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "VOICE_V_0_EVI_VOICE_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "VOICE_V_0_EVI_VOICE_POST_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "VoiceV0EviVoicePostRequestUnprocessableEntityError",
                    "safeName": "VoiceV0EviVoicePostRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Voice_v0_evi_voice_postRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/voice",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_.voice_v0_evi_voice_post",
          "name": {
            "originalName": "voice_v0_evi_voice_post",
            "camelCase": {
              "unsafeName": "voiceV0EviVoicePost",
              "safeName": "voiceV0EviVoicePost"
            },
            "snakeCase": {
              "unsafeName": "voice_v_0_evi_voice_post",
              "safeName": "voice_v_0_evi_voice_post"
            },
            "screamingSnakeCase": {
              "unsafeName": "VOICE_V_0_EVI_VOICE_POST",
              "safeName": "VOICE_V_0_EVI_VOICE_POST"
            },
            "pascalCase": {
              "unsafeName": "VoiceV0EviVoicePost",
              "safeName": "VoiceV0EviVoicePost"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Successful Response",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "voiceV0EviVoicePostExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/voice"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Voice Names",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/voice-names",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "Voice_names_v0_evi_voice_names_getRequestUnprocessableEntityError",
                  "camelCase": {
                    "unsafeName": "voiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError",
                    "safeName": "voiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError"
                  },
                  "snakeCase": {
                    "unsafeName": "voice_names_v_0_evi_voice_names_get_request_unprocessable_entity_error",
                    "safeName": "voice_names_v_0_evi_voice_names_get_request_unprocessable_entity_error"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR",
                    "safeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET_REQUEST_UNPROCESSABLE_ENTITY_ERROR"
                  },
                  "pascalCase": {
                    "unsafeName": "VoiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError",
                    "safeName": "VoiceNamesV0EviVoiceNamesGetRequestUnprocessableEntityError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "Voice_names_v0_evi_voice_names_getRequestUnprocessableEntityError"
              },
              "docs": "Validation Error"
            }
          ],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/voice-names",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_.voice_names_v0_evi_voice_names_get",
          "name": {
            "originalName": "voice_names_v0_evi_voice_names_get",
            "camelCase": {
              "unsafeName": "voiceNamesV0EviVoiceNamesGet",
              "safeName": "voiceNamesV0EviVoiceNamesGet"
            },
            "snakeCase": {
              "unsafeName": "voice_names_v_0_evi_voice_names_get",
              "safeName": "voice_names_v_0_evi_voice_names_get"
            },
            "screamingSnakeCase": {
              "unsafeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET",
              "safeName": "VOICE_NAMES_V_0_EVI_VOICE_NAMES_GET"
            },
            "pascalCase": {
              "unsafeName": "VoiceNamesV0EviVoiceNamesGet",
              "safeName": "VoiceNamesV0EviVoiceNamesGet"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "A list of available voice names and sample audio file URLs.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Fetch a list of available voice names and sample audio file URLs.",
          "v2Examples": {
            "autogeneratedExamples": {
              "voiceNamesV0EviVoiceNamesGetExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/voice-names"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_tools": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Tools",
              "camelCase": {
                "unsafeName": "tools",
                "safeName": "tools"
              },
              "snakeCase": {
                "unsafeName": "tools",
                "safeName": "tools"
              },
              "screamingSnakeCase": {
                "unsafeName": "TOOLS",
                "safeName": "TOOLS"
              },
              "pascalCase": {
                "unsafeName": "Tools",
                "safeName": "Tools"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Tools",
            "camelCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "snakeCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "screamingSnakeCase": {
              "unsafeName": "TOOLS",
              "safeName": "TOOLS"
            },
            "pascalCase": {
              "unsafeName": "Tools",
              "safeName": "Tools"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List tools",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "restrict_to_most_recent",
                  "camelCase": {
                    "unsafeName": "restrictToMostRecent",
                    "safeName": "restrictToMostRecent"
                  },
                  "snakeCase": {
                    "unsafeName": "restrict_to_most_recent",
                    "safeName": "restrict_to_most_recent"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESTRICT_TO_MOST_RECENT",
                    "safeName": "RESTRICT_TO_MOST_RECENT"
                  },
                  "pascalCase": {
                    "unsafeName": "RestrictToMostRecent",
                    "safeName": "RestrictToMostRecent"
                  }
                },
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name",
                  "camelCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "snakeCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME",
                    "safeName": "NAME"
                  },
                  "pascalCase": {
                    "unsafeName": "Name",
                    "safeName": "Name"
                  }
                },
                "wireValue": "name"
              },
              "docs": "Filter to only include tools with name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name_requires_exact_match",
                  "camelCase": {
                    "unsafeName": "nameRequiresExactMatch",
                    "safeName": "nameRequiresExactMatch"
                  },
                  "snakeCase": {
                    "unsafeName": "name_requires_exact_match",
                    "safeName": "name_requires_exact_match"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME_REQUIRES_EXACT_MATCH",
                    "safeName": "NAME_REQUIRES_EXACT_MATCH"
                  },
                  "pascalCase": {
                    "unsafeName": "NameRequiresExactMatch",
                    "safeName": "NameRequiresExactMatch"
                  }
                },
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.getReturnToolsForUser",
          "name": {
            "originalName": "getReturnToolsForUser",
            "camelCase": {
              "unsafeName": "getReturnToolsForUser",
              "safeName": "getReturnToolsForUser"
            },
            "snakeCase": {
              "unsafeName": "get_return_tools_for_user",
              "safeName": "get_return_tools_for_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_TOOLS_FOR_USER",
              "safeName": "GET_RETURN_TOOLS_FOR_USER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnToolsForUser",
              "safeName": "GetReturnToolsForUser"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnToolsForUserExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/tools"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create tool",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.createNewTool",
          "name": {
            "originalName": "createNewTool",
            "camelCase": {
              "unsafeName": "createNewTool",
              "safeName": "createNewTool"
            },
            "snakeCase": {
              "unsafeName": "create_new_tool",
              "safeName": "create_new_tool"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_NEW_TOOL",
              "safeName": "CREATE_NEW_TOOL"
            },
            "pascalCase": {
              "unsafeName": "CreateNewTool",
              "safeName": "CreateNewTool"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsCreateNewToolExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/tools"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List tool versions",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "restrict_to_most_recent",
                  "camelCase": {
                    "unsafeName": "restrictToMostRecent",
                    "safeName": "restrictToMostRecent"
                  },
                  "snakeCase": {
                    "unsafeName": "restrict_to_most_recent",
                    "safeName": "restrict_to_most_recent"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESTRICT_TO_MOST_RECENT",
                    "safeName": "RESTRICT_TO_MOST_RECENT"
                  },
                  "pascalCase": {
                    "unsafeName": "RestrictToMostRecent",
                    "safeName": "RestrictToMostRecent"
                  }
                },
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.getReturnToolByToolId",
          "name": {
            "originalName": "getReturnToolByToolId",
            "camelCase": {
              "unsafeName": "getReturnToolByToolId",
              "safeName": "getReturnToolByToolId"
            },
            "snakeCase": {
              "unsafeName": "get_return_tool_by_tool_id",
              "safeName": "get_return_tool_by_tool_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_TOOL_BY_TOOL_ID",
              "safeName": "GET_RETURN_TOOL_BY_TOOL_ID"
            },
            "pascalCase": {
              "unsafeName": "GetReturnToolByToolId",
              "safeName": "GetReturnToolByToolId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnToolByToolIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create tool version",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.addNewToolVersion",
          "name": {
            "originalName": "addNewToolVersion",
            "camelCase": {
              "unsafeName": "addNewToolVersion",
              "safeName": "addNewToolVersion"
            },
            "snakeCase": {
              "unsafeName": "add_new_tool_version",
              "safeName": "add_new_tool_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "ADD_NEW_TOOL_VERSION",
              "safeName": "ADD_NEW_TOOL_VERSION"
            },
            "pascalCase": {
              "unsafeName": "AddNewToolVersion",
              "safeName": "AddNewToolVersion"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsAddNewToolVersionExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete tool",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.deleteToolVersion",
          "name": {
            "originalName": "deleteToolVersion",
            "camelCase": {
              "unsafeName": "deleteToolVersion",
              "safeName": "deleteToolVersion"
            },
            "snakeCase": {
              "unsafeName": "delete_tool_version",
              "safeName": "delete_tool_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_TOOL_VERSION",
              "safeName": "DELETE_TOOL_VERSION"
            },
            "pascalCase": {
              "unsafeName": "DeleteToolVersion",
              "safeName": "DeleteToolVersion"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteToolVersionExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update tool name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.updateToolName",
          "name": {
            "originalName": "updateToolName",
            "camelCase": {
              "unsafeName": "updateToolName",
              "safeName": "updateToolName"
            },
            "snakeCase": {
              "unsafeName": "update_tool_name",
              "safeName": "update_tool_name"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_TOOL_NAME",
              "safeName": "UPDATE_TOOL_NAME"
            },
            "pascalCase": {
              "unsafeName": "UpdateToolName",
              "safeName": "UpdateToolName"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsUpdateToolNameExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/tools/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get tool version",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.getReturnToolByVersionNumber",
          "name": {
            "originalName": "getReturnToolByVersionNumber",
            "camelCase": {
              "unsafeName": "getReturnToolByVersionNumber",
              "safeName": "getReturnToolByVersionNumber"
            },
            "snakeCase": {
              "unsafeName": "get_return_tool_by_version_number",
              "safeName": "get_return_tool_by_version_number"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_TOOL_BY_VERSION_NUMBER",
              "safeName": "GET_RETURN_TOOL_BY_VERSION_NUMBER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnToolByVersionNumber",
              "safeName": "GetReturnToolByVersionNumber"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnToolByVersionNumberExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/tools/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete tool version",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.deleteToolVersion_1",
          "name": {
            "originalName": "deleteToolVersion_1",
            "camelCase": {
              "unsafeName": "deleteToolVersion1",
              "safeName": "deleteToolVersion1"
            },
            "snakeCase": {
              "unsafeName": "delete_tool_version_1",
              "safeName": "delete_tool_version_1"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_TOOL_VERSION_1",
              "safeName": "DELETE_TOOL_VERSION_1"
            },
            "pascalCase": {
              "unsafeName": "DeleteToolVersion1",
              "safeName": "DeleteToolVersion1"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteToolVersion1Example": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/tools/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update tool description",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/tools/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a tool. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a tool. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_tools.updateToolVersionDescription",
          "name": {
            "originalName": "updateToolVersionDescription",
            "camelCase": {
              "unsafeName": "updateToolVersionDescription",
              "safeName": "updateToolVersionDescription"
            },
            "snakeCase": {
              "unsafeName": "update_tool_version_description",
              "safeName": "update_tool_version_description"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_TOOL_VERSION_DESCRIPTION",
              "safeName": "UPDATE_TOOL_VERSION_DESCRIPTION"
            },
            "pascalCase": {
              "unsafeName": "UpdateToolVersionDescription",
              "safeName": "UpdateToolVersionDescription"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "toolsUpdateToolVersionDescriptionExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/tools/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_prompts": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Prompts",
              "camelCase": {
                "unsafeName": "prompts",
                "safeName": "prompts"
              },
              "snakeCase": {
                "unsafeName": "prompts",
                "safeName": "prompts"
              },
              "screamingSnakeCase": {
                "unsafeName": "PROMPTS",
                "safeName": "PROMPTS"
              },
              "pascalCase": {
                "unsafeName": "Prompts",
                "safeName": "Prompts"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Prompts",
            "camelCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "snakeCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROMPTS",
              "safeName": "PROMPTS"
            },
            "pascalCase": {
              "unsafeName": "Prompts",
              "safeName": "Prompts"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List prompts",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "restrict_to_most_recent",
                  "camelCase": {
                    "unsafeName": "restrictToMostRecent",
                    "safeName": "restrictToMostRecent"
                  },
                  "snakeCase": {
                    "unsafeName": "restrict_to_most_recent",
                    "safeName": "restrict_to_most_recent"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESTRICT_TO_MOST_RECENT",
                    "safeName": "RESTRICT_TO_MOST_RECENT"
                  },
                  "pascalCase": {
                    "unsafeName": "RestrictToMostRecent",
                    "safeName": "RestrictToMostRecent"
                  }
                },
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "Only include the most recent version of each prompt in the list.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name",
                  "camelCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "snakeCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME",
                    "safeName": "NAME"
                  },
                  "pascalCase": {
                    "unsafeName": "Name",
                    "safeName": "Name"
                  }
                },
                "wireValue": "name"
              },
              "docs": "Filter to only include prompts with name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name_requires_exact_match",
                  "camelCase": {
                    "unsafeName": "nameRequiresExactMatch",
                    "safeName": "nameRequiresExactMatch"
                  },
                  "snakeCase": {
                    "unsafeName": "name_requires_exact_match",
                    "safeName": "name_requires_exact_match"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME_REQUIRES_EXACT_MATCH",
                    "safeName": "NAME_REQUIRES_EXACT_MATCH"
                  },
                  "pascalCase": {
                    "unsafeName": "NameRequiresExactMatch",
                    "safeName": "NameRequiresExactMatch"
                  }
                },
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.getReturnPromptsForUser",
          "name": {
            "originalName": "getReturnPromptsForUser",
            "camelCase": {
              "unsafeName": "getReturnPromptsForUser",
              "safeName": "getReturnPromptsForUser"
            },
            "snakeCase": {
              "unsafeName": "get_return_prompts_for_user",
              "safeName": "get_return_prompts_for_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_PROMPTS_FOR_USER",
              "safeName": "GET_RETURN_PROMPTS_FOR_USER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnPromptsForUser",
              "safeName": "GetReturnPromptsForUser"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnPromptsForUserExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/prompts"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create prompt",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.createNewPrompt",
          "name": {
            "originalName": "createNewPrompt",
            "camelCase": {
              "unsafeName": "createNewPrompt",
              "safeName": "createNewPrompt"
            },
            "snakeCase": {
              "unsafeName": "create_new_prompt",
              "safeName": "create_new_prompt"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_NEW_PROMPT",
              "safeName": "CREATE_NEW_PROMPT"
            },
            "pascalCase": {
              "unsafeName": "CreateNewPrompt",
              "safeName": "CreateNewPrompt"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsCreateNewPromptExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/prompts"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List prompt versions",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "restrict_to_most_recent",
                  "camelCase": {
                    "unsafeName": "restrictToMostRecent",
                    "safeName": "restrictToMostRecent"
                  },
                  "snakeCase": {
                    "unsafeName": "restrict_to_most_recent",
                    "safeName": "restrict_to_most_recent"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESTRICT_TO_MOST_RECENT",
                    "safeName": "RESTRICT_TO_MOST_RECENT"
                  },
                  "pascalCase": {
                    "unsafeName": "RestrictToMostRecent",
                    "safeName": "RestrictToMostRecent"
                  }
                },
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "Only include the most recent version of each prompt in the list.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.getReturnPromptByPromptId",
          "name": {
            "originalName": "getReturnPromptByPromptId",
            "camelCase": {
              "unsafeName": "getReturnPromptByPromptId",
              "safeName": "getReturnPromptByPromptId"
            },
            "snakeCase": {
              "unsafeName": "get_return_prompt_by_prompt_id",
              "safeName": "get_return_prompt_by_prompt_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_PROMPT_BY_PROMPT_ID",
              "safeName": "GET_RETURN_PROMPT_BY_PROMPT_ID"
            },
            "pascalCase": {
              "unsafeName": "GetReturnPromptByPromptId",
              "safeName": "GetReturnPromptByPromptId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnPromptByPromptIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create prompt version",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.addNewPromptVersion",
          "name": {
            "originalName": "addNewPromptVersion",
            "camelCase": {
              "unsafeName": "addNewPromptVersion",
              "safeName": "addNewPromptVersion"
            },
            "snakeCase": {
              "unsafeName": "add_new_prompt_version",
              "safeName": "add_new_prompt_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "ADD_NEW_PROMPT_VERSION",
              "safeName": "ADD_NEW_PROMPT_VERSION"
            },
            "pascalCase": {
              "unsafeName": "AddNewPromptVersion",
              "safeName": "AddNewPromptVersion"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsAddNewPromptVersionExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete prompt",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.deletePromptVersion",
          "name": {
            "originalName": "deletePromptVersion",
            "camelCase": {
              "unsafeName": "deletePromptVersion",
              "safeName": "deletePromptVersion"
            },
            "snakeCase": {
              "unsafeName": "delete_prompt_version",
              "safeName": "delete_prompt_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_PROMPT_VERSION",
              "safeName": "DELETE_PROMPT_VERSION"
            },
            "pascalCase": {
              "unsafeName": "DeletePromptVersion",
              "safeName": "DeletePromptVersion"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "deletePromptVersionExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update prompt name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.updatePromptName",
          "name": {
            "originalName": "updatePromptName",
            "camelCase": {
              "unsafeName": "updatePromptName",
              "safeName": "updatePromptName"
            },
            "snakeCase": {
              "unsafeName": "update_prompt_name",
              "safeName": "update_prompt_name"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_PROMPT_NAME",
              "safeName": "UPDATE_PROMPT_NAME"
            },
            "pascalCase": {
              "unsafeName": "UpdatePromptName",
              "safeName": "UpdatePromptName"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsUpdatePromptNameExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/prompts/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get prompt version",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.getReturnPromptByVersionNumber",
          "name": {
            "originalName": "getReturnPromptByVersionNumber",
            "camelCase": {
              "unsafeName": "getReturnPromptByVersionNumber",
              "safeName": "getReturnPromptByVersionNumber"
            },
            "snakeCase": {
              "unsafeName": "get_return_prompt_by_version_number",
              "safeName": "get_return_prompt_by_version_number"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_PROMPT_BY_VERSION_NUMBER",
              "safeName": "GET_RETURN_PROMPT_BY_VERSION_NUMBER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnPromptByVersionNumber",
              "safeName": "GetReturnPromptByVersionNumber"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnPromptByVersionNumberExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/prompts/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete prompt version",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.deletePromptVersion_1",
          "name": {
            "originalName": "deletePromptVersion_1",
            "camelCase": {
              "unsafeName": "deletePromptVersion1",
              "safeName": "deletePromptVersion1"
            },
            "snakeCase": {
              "unsafeName": "delete_prompt_version_1",
              "safeName": "delete_prompt_version_1"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_PROMPT_VERSION_1",
              "safeName": "DELETE_PROMPT_VERSION_1"
            },
            "pascalCase": {
              "unsafeName": "DeletePromptVersion1",
              "safeName": "DeletePromptVersion1"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "deletePromptVersion1Example": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/prompts/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update prompt description",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/prompts/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a prompt. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a prompt. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_prompts.updatePromptVersionDescription",
          "name": {
            "originalName": "updatePromptVersionDescription",
            "camelCase": {
              "unsafeName": "updatePromptVersionDescription",
              "safeName": "updatePromptVersionDescription"
            },
            "snakeCase": {
              "unsafeName": "update_prompt_version_description",
              "safeName": "update_prompt_version_description"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_PROMPT_VERSION_DESCRIPTION",
              "safeName": "UPDATE_PROMPT_VERSION_DESCRIPTION"
            },
            "pascalCase": {
              "unsafeName": "UpdatePromptVersionDescription",
              "safeName": "UpdatePromptVersionDescription"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "promptsUpdatePromptVersionDescriptionExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/prompts/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_customVoices": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Custom Voices",
              "camelCase": {
                "unsafeName": "customVoices",
                "safeName": "customVoices"
              },
              "snakeCase": {
                "unsafeName": "custom_voices",
                "safeName": "custom_voices"
              },
              "screamingSnakeCase": {
                "unsafeName": "CUSTOM_VOICES",
                "safeName": "CUSTOM_VOICES"
              },
              "pascalCase": {
                "unsafeName": "CustomVoices",
                "safeName": "CustomVoices"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Custom Voices",
            "camelCase": {
              "unsafeName": "customVoices",
              "safeName": "customVoices"
            },
            "snakeCase": {
              "unsafeName": "custom_voices",
              "safeName": "custom_voices"
            },
            "screamingSnakeCase": {
              "unsafeName": "CUSTOM_VOICES",
              "safeName": "CUSTOM_VOICES"
            },
            "pascalCase": {
              "unsafeName": "CustomVoices",
              "safeName": "CustomVoices"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List custom voices",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name",
                  "camelCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "snakeCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME",
                    "safeName": "NAME"
                  },
                  "pascalCase": {
                    "unsafeName": "Name",
                    "safeName": "Name"
                  }
                },
                "wireValue": "name"
              },
              "docs": "Filter to only include custom voices with name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name_requires_exact_match",
                  "camelCase": {
                    "unsafeName": "nameRequiresExactMatch",
                    "safeName": "nameRequiresExactMatch"
                  },
                  "snakeCase": {
                    "unsafeName": "name_requires_exact_match",
                    "safeName": "name_requires_exact_match"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME_REQUIRES_EXACT_MATCH",
                    "safeName": "NAME_REQUIRES_EXACT_MATCH"
                  },
                  "pascalCase": {
                    "unsafeName": "NameRequiresExactMatch",
                    "safeName": "NameRequiresExactMatch"
                  }
                },
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact, case-insensitive match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_customVoices.getReturnCustomVoicesForUser",
          "name": {
            "originalName": "getReturnCustomVoicesForUser",
            "camelCase": {
              "unsafeName": "getReturnCustomVoicesForUser",
              "safeName": "getReturnCustomVoicesForUser"
            },
            "snakeCase": {
              "unsafeName": "get_return_custom_voices_for_user",
              "safeName": "get_return_custom_voices_for_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_CUSTOM_VOICES_FOR_USER",
              "safeName": "GET_RETURN_CUSTOM_VOICES_FOR_USER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnCustomVoicesForUser",
              "safeName": "GetReturnCustomVoicesForUser"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnCustomVoicesForUserExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/custom_voices"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create custom voice",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_customVoices.createNewCustomVoice",
          "name": {
            "originalName": "createNewCustomVoice",
            "camelCase": {
              "unsafeName": "createNewCustomVoice",
              "safeName": "createNewCustomVoice"
            },
            "snakeCase": {
              "unsafeName": "create_new_custom_voice",
              "safeName": "create_new_custom_voice"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_NEW_CUSTOM_VOICE",
              "safeName": "CREATE_NEW_CUSTOM_VOICE"
            },
            "pascalCase": {
              "unsafeName": "CreateNewCustomVoice",
              "safeName": "CreateNewCustomVoice"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "customVoicesCreateNewCustomVoiceExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/custom_voices"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get specific custom voice by ID",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_customVoices.getReturnCustomVoiceByCustomVoiceId",
          "name": {
            "originalName": "getReturnCustomVoiceByCustomVoiceId",
            "camelCase": {
              "unsafeName": "getReturnCustomVoiceByCustomVoiceId",
              "safeName": "getReturnCustomVoiceByCustomVoiceId"
            },
            "snakeCase": {
              "unsafeName": "get_return_custom_voice_by_custom_voice_id",
              "safeName": "get_return_custom_voice_by_custom_voice_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_CUSTOM_VOICE_BY_CUSTOM_VOICE_ID",
              "safeName": "GET_RETURN_CUSTOM_VOICE_BY_CUSTOM_VOICE_ID"
            },
            "pascalCase": {
              "unsafeName": "GetReturnCustomVoiceByCustomVoiceId",
              "safeName": "GetReturnCustomVoiceByCustomVoiceId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnCustomVoiceByCustomVoiceIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create new version of existing custom voice",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_customVoices.addNewCustomVoiceVersion",
          "name": {
            "originalName": "addNewCustomVoiceVersion",
            "camelCase": {
              "unsafeName": "addNewCustomVoiceVersion",
              "safeName": "addNewCustomVoiceVersion"
            },
            "snakeCase": {
              "unsafeName": "add_new_custom_voice_version",
              "safeName": "add_new_custom_voice_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "ADD_NEW_CUSTOM_VOICE_VERSION",
              "safeName": "ADD_NEW_CUSTOM_VOICE_VERSION"
            },
            "pascalCase": {
              "unsafeName": "AddNewCustomVoiceVersion",
              "safeName": "AddNewCustomVoiceVersion"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "customVoicesAddNewCustomVoiceVersionExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete a custom voice",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_customVoices.deleteCustomVoice",
          "name": {
            "originalName": "deleteCustomVoice",
            "camelCase": {
              "unsafeName": "deleteCustomVoice",
              "safeName": "deleteCustomVoice"
            },
            "snakeCase": {
              "unsafeName": "delete_custom_voice",
              "safeName": "delete_custom_voice"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_CUSTOM_VOICE",
              "safeName": "DELETE_CUSTOM_VOICE"
            },
            "pascalCase": {
              "unsafeName": "DeleteCustomVoice",
              "safeName": "DeleteCustomVoice"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteCustomVoiceExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update custom voice name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/custom_voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a Custom Voice. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_customVoices.updateCustomVoiceName",
          "name": {
            "originalName": "updateCustomVoiceName",
            "camelCase": {
              "unsafeName": "updateCustomVoiceName",
              "safeName": "updateCustomVoiceName"
            },
            "snakeCase": {
              "unsafeName": "update_custom_voice_name",
              "safeName": "update_custom_voice_name"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_CUSTOM_VOICE_NAME",
              "safeName": "UPDATE_CUSTOM_VOICE_NAME"
            },
            "pascalCase": {
              "unsafeName": "UpdateCustomVoiceName",
              "safeName": "UpdateCustomVoiceName"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "customVoicesUpdateCustomVoiceNameExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/custom_voices/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_configs": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Configs",
              "camelCase": {
                "unsafeName": "configs",
                "safeName": "configs"
              },
              "snakeCase": {
                "unsafeName": "configs",
                "safeName": "configs"
              },
              "screamingSnakeCase": {
                "unsafeName": "CONFIGS",
                "safeName": "CONFIGS"
              },
              "pascalCase": {
                "unsafeName": "Configs",
                "safeName": "Configs"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Configs",
            "camelCase": {
              "unsafeName": "configs",
              "safeName": "configs"
            },
            "snakeCase": {
              "unsafeName": "configs",
              "safeName": "configs"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONFIGS",
              "safeName": "CONFIGS"
            },
            "pascalCase": {
              "unsafeName": "Configs",
              "safeName": "Configs"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List configs",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "restrict_to_most_recent",
                  "camelCase": {
                    "unsafeName": "restrictToMostRecent",
                    "safeName": "restrictToMostRecent"
                  },
                  "snakeCase": {
                    "unsafeName": "restrict_to_most_recent",
                    "safeName": "restrict_to_most_recent"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESTRICT_TO_MOST_RECENT",
                    "safeName": "RESTRICT_TO_MOST_RECENT"
                  },
                  "pascalCase": {
                    "unsafeName": "RestrictToMostRecent",
                    "safeName": "RestrictToMostRecent"
                  }
                },
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name",
                  "camelCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "snakeCase": {
                    "unsafeName": "name",
                    "safeName": "name"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME",
                    "safeName": "NAME"
                  },
                  "pascalCase": {
                    "unsafeName": "Name",
                    "safeName": "Name"
                  }
                },
                "wireValue": "name"
              },
              "docs": "Filter to only include configs with this name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_example": "name"
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "name_requires_exact_match",
                  "camelCase": {
                    "unsafeName": "nameRequiresExactMatch",
                    "safeName": "nameRequiresExactMatch"
                  },
                  "snakeCase": {
                    "unsafeName": "name_requires_exact_match",
                    "safeName": "name_requires_exact_match"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "NAME_REQUIRES_EXACT_MATCH",
                    "safeName": "NAME_REQUIRES_EXACT_MATCH"
                  },
                  "pascalCase": {
                    "unsafeName": "NameRequiresExactMatch",
                    "safeName": "NameRequiresExactMatch"
                  }
                },
                "wireValue": "name_requires_exact_match"
              },
              "docs": "If true, the name filter requires an exact match. If false, the results will include all matches where name is a case-insensitive substring of the full name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "name_requires_exact_match_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.getReturnConfigsForUser",
          "name": {
            "originalName": "getReturnConfigsForUser",
            "camelCase": {
              "unsafeName": "getReturnConfigsForUser",
              "safeName": "getReturnConfigsForUser"
            },
            "snakeCase": {
              "unsafeName": "get_return_configs_for_user",
              "safeName": "get_return_configs_for_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_CONFIGS_FOR_USER",
              "safeName": "GET_RETURN_CONFIGS_FOR_USER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnConfigsForUser",
              "safeName": "GetReturnConfigsForUser"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnConfigsForUserExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/configs"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create config",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.createNewConfig",
          "name": {
            "originalName": "createNewConfig",
            "camelCase": {
              "unsafeName": "createNewConfig",
              "safeName": "createNewConfig"
            },
            "snakeCase": {
              "unsafeName": "create_new_config",
              "safeName": "create_new_config"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_NEW_CONFIG",
              "safeName": "CREATE_NEW_CONFIG"
            },
            "pascalCase": {
              "unsafeName": "CreateNewConfig",
              "safeName": "CreateNewConfig"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsCreateNewConfigExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/configs"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List config versions",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "restrict_to_most_recent",
                  "camelCase": {
                    "unsafeName": "restrictToMostRecent",
                    "safeName": "restrictToMostRecent"
                  },
                  "snakeCase": {
                    "unsafeName": "restrict_to_most_recent",
                    "safeName": "restrict_to_most_recent"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "RESTRICT_TO_MOST_RECENT",
                    "safeName": "RESTRICT_TO_MOST_RECENT"
                  },
                  "pascalCase": {
                    "unsafeName": "RestrictToMostRecent",
                    "safeName": "RestrictToMostRecent"
                  }
                },
                "wireValue": "restrict_to_most_recent"
              },
              "docs": "By default, `restrict_to_most_recent` is set to true, returning only the latest version of each tool. To include all versions of each tool in the list, set `restrict_to_most_recent` to false.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "restrict_to_most_recent_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.getReturnConfigByVersionId",
          "name": {
            "originalName": "getReturnConfigByVersionId",
            "camelCase": {
              "unsafeName": "getReturnConfigByVersionId",
              "safeName": "getReturnConfigByVersionId"
            },
            "snakeCase": {
              "unsafeName": "get_return_config_by_version_id",
              "safeName": "get_return_config_by_version_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_CONFIG_BY_VERSION_ID",
              "safeName": "GET_RETURN_CONFIG_BY_VERSION_ID"
            },
            "pascalCase": {
              "unsafeName": "GetReturnConfigByVersionId",
              "safeName": "GetReturnConfigByVersionId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnConfigByVersionIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Create config version",
          "method": "POST",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.addNewConfigVersion",
          "name": {
            "originalName": "addNewConfigVersion",
            "camelCase": {
              "unsafeName": "addNewConfigVersion",
              "safeName": "addNewConfigVersion"
            },
            "snakeCase": {
              "unsafeName": "add_new_config_version",
              "safeName": "add_new_config_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "ADD_NEW_CONFIG_VERSION",
              "safeName": "ADD_NEW_CONFIG_VERSION"
            },
            "pascalCase": {
              "unsafeName": "AddNewConfigVersion",
              "safeName": "AddNewConfigVersion"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Created",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsAddNewConfigVersionExample": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete config",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.deleteConfig",
          "name": {
            "originalName": "deleteConfig",
            "camelCase": {
              "unsafeName": "deleteConfig",
              "safeName": "deleteConfig"
            },
            "snakeCase": {
              "unsafeName": "delete_config",
              "safeName": "delete_config"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_CONFIG",
              "safeName": "DELETE_CONFIG"
            },
            "pascalCase": {
              "unsafeName": "DeleteConfig",
              "safeName": "DeleteConfig"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteConfigExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update config name",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.updateConfigName",
          "name": {
            "originalName": "updateConfigName",
            "camelCase": {
              "unsafeName": "updateConfigName",
              "safeName": "updateConfigName"
            },
            "snakeCase": {
              "unsafeName": "update_config_name",
              "safeName": "update_config_name"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_CONFIG_NAME",
              "safeName": "UPDATE_CONFIG_NAME"
            },
            "pascalCase": {
              "unsafeName": "UpdateConfigName",
              "safeName": "UpdateConfigName"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsUpdateConfigNameExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/configs/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Get config version",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.getReturnPromptByRevisionId",
          "name": {
            "originalName": "getReturnPromptByRevisionId",
            "camelCase": {
              "unsafeName": "getReturnPromptByRevisionId",
              "safeName": "getReturnPromptByRevisionId"
            },
            "snakeCase": {
              "unsafeName": "get_return_prompt_by_revision_id",
              "safeName": "get_return_prompt_by_revision_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_PROMPT_BY_REVISION_ID",
              "safeName": "GET_RETURN_PROMPT_BY_REVISION_ID"
            },
            "pascalCase": {
              "unsafeName": "GetReturnPromptByRevisionId",
              "safeName": "GetReturnPromptByRevisionId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnPromptByRevisionIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/configs/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Delete config version",
          "method": "DELETE",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.deleteConfigVersion",
          "name": {
            "originalName": "deleteConfigVersion",
            "camelCase": {
              "unsafeName": "deleteConfigVersion",
              "safeName": "deleteConfigVersion"
            },
            "snakeCase": {
              "unsafeName": "delete_config_version",
              "safeName": "delete_config_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_CONFIG_VERSION",
              "safeName": "DELETE_CONFIG_VERSION"
            },
            "pascalCase": {
              "unsafeName": "DeleteConfigVersion",
              "safeName": "DeleteConfigVersion"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "deleteConfigVersionExample": {
                "request": {
                  "endpoint": {
                    "method": "DELETE",
                    "path": "/v0/evi/configs/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {}
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Update config description",
          "method": "PATCH",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/configs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/version/"
              },
              {
                "pathParameter": "version",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a config. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "originalName": "version",
                "camelCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "snakeCase": {
                  "unsafeName": "version",
                  "safeName": "version"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VERSION",
                  "safeName": "VERSION"
                },
                "pascalCase": {
                  "unsafeName": "Version",
                  "safeName": "Version"
                }
              },
              "docs": "Version number for a config. Version numbers should be integers.",
              "valueType": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "version_example": 42
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_configs.updateConfigVersionDescription",
          "name": {
            "originalName": "updateConfigVersionDescription",
            "camelCase": {
              "unsafeName": "updateConfigVersionDescription",
              "safeName": "updateConfigVersionDescription"
            },
            "snakeCase": {
              "unsafeName": "update_config_version_description",
              "safeName": "update_config_version_description"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_CONFIG_VERSION_DESCRIPTION",
              "safeName": "UPDATE_CONFIG_VERSION_DESCRIPTION"
            },
            "pascalCase": {
              "unsafeName": "UpdateConfigVersionDescription",
              "safeName": "UpdateConfigVersionDescription"
            }
          },
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "configsUpdateConfigVersionDescriptionExample": {
                "request": {
                  "endpoint": {
                    "method": "PATCH",
                    "path": "/v0/evi/configs/id/version/42"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id",
                    "version": 42
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_chats": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Chats",
              "camelCase": {
                "unsafeName": "chats",
                "safeName": "chats"
              },
              "snakeCase": {
                "unsafeName": "chats",
                "safeName": "chats"
              },
              "screamingSnakeCase": {
                "unsafeName": "CHATS",
                "safeName": "CHATS"
              },
              "pascalCase": {
                "unsafeName": "Chats",
                "safeName": "Chats"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Chats",
            "camelCase": {
              "unsafeName": "chats",
              "safeName": "chats"
            },
            "snakeCase": {
              "unsafeName": "chats",
              "safeName": "chats"
            },
            "screamingSnakeCase": {
              "unsafeName": "CHATS",
              "safeName": "CHATS"
            },
            "pascalCase": {
              "unsafeName": "Chats",
              "safeName": "Chats"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List chats",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chats",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "ascending_order",
                  "camelCase": {
                    "unsafeName": "ascendingOrder",
                    "safeName": "ascendingOrder"
                  },
                  "snakeCase": {
                    "unsafeName": "ascending_order",
                    "safeName": "ascending_order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASCENDING_ORDER",
                    "safeName": "ASCENDING_ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "AscendingOrder",
                    "safeName": "AscendingOrder"
                  }
                },
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "config_id",
                  "camelCase": {
                    "unsafeName": "configId",
                    "safeName": "configId"
                  },
                  "snakeCase": {
                    "unsafeName": "config_id",
                    "safeName": "config_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONFIG_ID",
                    "safeName": "CONFIG_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ConfigId",
                    "safeName": "ConfigId"
                  }
                },
                "wireValue": "config_id"
              },
              "docs": "Filter to only include chats that used this config.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "uuid"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "config_id_example": "config_id"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chats",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_chats.getReturnChatsForUser",
          "name": {
            "originalName": "getReturnChatsForUser",
            "camelCase": {
              "unsafeName": "getReturnChatsForUser",
              "safeName": "getReturnChatsForUser"
            },
            "snakeCase": {
              "unsafeName": "get_return_chats_for_user",
              "safeName": "get_return_chats_for_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_CHATS_FOR_USER",
              "safeName": "GET_RETURN_CHATS_FOR_USER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnChatsForUser",
              "safeName": "GetReturnChatsForUser"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnChatsForUserExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chats"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List chat events",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "ascending_order",
                  "camelCase": {
                    "unsafeName": "ascendingOrder",
                    "safeName": "ascendingOrder"
                  },
                  "snakeCase": {
                    "unsafeName": "ascending_order",
                    "safeName": "ascending_order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASCENDING_ORDER",
                    "safeName": "ASCENDING_ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "AscendingOrder",
                    "safeName": "AscendingOrder"
                  }
                },
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_chats.getChatByChatId",
          "name": {
            "originalName": "getChatByChatId",
            "camelCase": {
              "unsafeName": "getChatByChatId",
              "safeName": "getChatByChatId"
            },
            "snakeCase": {
              "unsafeName": "get_chat_by_chat_id",
              "safeName": "get_chat_by_chat_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CHAT_BY_CHAT_ID",
              "safeName": "GET_CHAT_BY_CHAT_ID"
            },
            "pascalCase": {
              "unsafeName": "GetChatByChatId",
              "safeName": "GetChatByChatId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getChatByChatIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chats/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Return signed url with audio reconstruction of chat",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chats/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_chats.getReconstructionByChatId",
          "name": {
            "originalName": "getReconstructionByChatId",
            "camelCase": {
              "unsafeName": "getReconstructionByChatId",
              "safeName": "getReconstructionByChatId"
            },
            "snakeCase": {
              "unsafeName": "get_reconstruction_by_chat_id",
              "safeName": "get_reconstruction_by_chat_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RECONSTRUCTION_BY_CHAT_ID",
              "safeName": "GET_RECONSTRUCTION_BY_CHAT_ID"
            },
            "pascalCase": {
              "unsafeName": "GetReconstructionByChatId",
              "safeName": "GetReconstructionByChatId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReconstructionByChatIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chats/id/audio"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    },
    "service_chatGroups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "Chat_groups",
              "camelCase": {
                "unsafeName": "chatGroups",
                "safeName": "chatGroups"
              },
              "snakeCase": {
                "unsafeName": "chat_groups",
                "safeName": "chat_groups"
              },
              "screamingSnakeCase": {
                "unsafeName": "CHAT_GROUPS",
                "safeName": "CHAT_GROUPS"
              },
              "pascalCase": {
                "unsafeName": "ChatGroups",
                "safeName": "ChatGroups"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "Chat_groups",
            "camelCase": {
              "unsafeName": "chatGroups",
              "safeName": "chatGroups"
            },
            "snakeCase": {
              "unsafeName": "chat_groups",
              "safeName": "chat_groups"
            },
            "screamingSnakeCase": {
              "unsafeName": "CHAT_GROUPS",
              "safeName": "CHAT_GROUPS"
            },
            "pascalCase": {
              "unsafeName": "ChatGroups",
              "safeName": "ChatGroups"
            }
          }
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "displayName": "List chat_groups",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "ascending_order",
                  "camelCase": {
                    "unsafeName": "ascendingOrder",
                    "safeName": "ascendingOrder"
                  },
                  "snakeCase": {
                    "unsafeName": "ascending_order",
                    "safeName": "ascending_order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASCENDING_ORDER",
                    "safeName": "ASCENDING_ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "AscendingOrder",
                    "safeName": "AscendingOrder"
                  }
                },
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "config_id",
                  "camelCase": {
                    "unsafeName": "configId",
                    "safeName": "configId"
                  },
                  "snakeCase": {
                    "unsafeName": "config_id",
                    "safeName": "config_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CONFIG_ID",
                    "safeName": "CONFIG_ID"
                  },
                  "pascalCase": {
                    "unsafeName": "ConfigId",
                    "safeName": "ConfigId"
                  }
                },
                "wireValue": "config_id"
              },
              "docs": "Filter chatgroups to only include chats that used this config in their most recent chat.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "uuid"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "config_id_example": "config_id"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_chatGroups.getReturnChatGroupsForUser",
          "name": {
            "originalName": "getReturnChatGroupsForUser",
            "camelCase": {
              "unsafeName": "getReturnChatGroupsForUser",
              "safeName": "getReturnChatGroupsForUser"
            },
            "snakeCase": {
              "unsafeName": "get_return_chat_groups_for_user",
              "safeName": "get_return_chat_groups_for_user"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RETURN_CHAT_GROUPS_FOR_USER",
              "safeName": "GET_RETURN_CHAT_GROUPS_FOR_USER"
            },
            "pascalCase": {
              "unsafeName": "GetReturnChatGroupsForUser",
              "safeName": "GetReturnChatGroupsForUser"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReturnChatGroupsForUserExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List chat summaries in a specific chat_group",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "ascending_order",
                  "camelCase": {
                    "unsafeName": "ascendingOrder",
                    "safeName": "ascendingOrder"
                  },
                  "snakeCase": {
                    "unsafeName": "ascending_order",
                    "safeName": "ascending_order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASCENDING_ORDER",
                    "safeName": "ASCENDING_ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "AscendingOrder",
                    "safeName": "AscendingOrder"
                  }
                },
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_chatGroups.getChatsByChatGroupId",
          "name": {
            "originalName": "getChatsByChatGroupId",
            "camelCase": {
              "unsafeName": "getChatsByChatGroupId",
              "safeName": "getChatsByChatGroupId"
            },
            "snakeCase": {
              "unsafeName": "get_chats_by_chat_group_id",
              "safeName": "get_chats_by_chat_group_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CHATS_BY_CHAT_GROUP_ID",
              "safeName": "GET_CHATS_BY_CHAT_GROUP_ID"
            },
            "pascalCase": {
              "unsafeName": "GetChatsByChatGroupId",
              "safeName": "GetChatsByChatGroupId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getChatsByChatGroupIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups/id"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "List chat events from a specific chat_group",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/events"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "ascending_order",
                  "camelCase": {
                    "unsafeName": "ascendingOrder",
                    "safeName": "ascendingOrder"
                  },
                  "snakeCase": {
                    "unsafeName": "ascending_order",
                    "safeName": "ascending_order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASCENDING_ORDER",
                    "safeName": "ASCENDING_ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "AscendingOrder",
                    "safeName": "AscendingOrder"
                  }
                },
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/events"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_chatGroups.getChatEventsByChatGroupId",
          "name": {
            "originalName": "getChatEventsByChatGroupId",
            "camelCase": {
              "unsafeName": "getChatEventsByChatGroupId",
              "safeName": "getChatEventsByChatGroupId"
            },
            "snakeCase": {
              "unsafeName": "get_chat_events_by_chat_group_id",
              "safeName": "get_chat_events_by_chat_group_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_CHAT_EVENTS_BY_CHAT_GROUP_ID",
              "safeName": "GET_CHAT_EVENTS_BY_CHAT_GROUP_ID"
            },
            "pascalCase": {
              "unsafeName": "GetChatEventsByChatGroupId",
              "safeName": "GetChatEventsByChatGroupId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getChatEventsByChatGroupIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups/id/events"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        },
        {
          "displayName": "Return signed urls with audio reconstructions of each chat in chatgroup",
          "method": "GET",
          "baseUrl": "Base",
          "path": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "pathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "page_number",
                  "camelCase": {
                    "unsafeName": "pageNumber",
                    "safeName": "pageNumber"
                  },
                  "snakeCase": {
                    "unsafeName": "page_number",
                    "safeName": "page_number"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_NUMBER",
                    "safeName": "PAGE_NUMBER"
                  },
                  "pascalCase": {
                    "unsafeName": "PageNumber",
                    "safeName": "PageNumber"
                  }
                },
                "wireValue": "page_number"
              },
              "docs": "Specifies the page number to retrieve, enabling pagination.\n\nThis parameter uses zero-based indexing. For example, setting `page_number` to 0 retrieves the first page of results (items 0-9 if `page_size` is 10), setting `page_number` to 1 retrieves the second page (items 10-19), and so on. Defaults to 0, which retrieves the first page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_number_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "page_size",
                  "camelCase": {
                    "unsafeName": "pageSize",
                    "safeName": "pageSize"
                  },
                  "snakeCase": {
                    "unsafeName": "page_size",
                    "safeName": "page_size"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PAGE_SIZE",
                    "safeName": "PAGE_SIZE"
                  },
                  "pascalCase": {
                    "unsafeName": "PageSize",
                    "safeName": "PageSize"
                  }
                },
                "wireValue": "page_size"
              },
              "docs": "Specifies the maximum number of results to include per page, enabling pagination. The value must be between 1 and 100, inclusive.\n\nFor example, if `page_size` is set to 10, each page will include up to 10 items. Defaults to 10.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 42
                }
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "ascending_order",
                  "camelCase": {
                    "unsafeName": "ascendingOrder",
                    "safeName": "ascendingOrder"
                  },
                  "snakeCase": {
                    "unsafeName": "ascending_order",
                    "safeName": "ascending_order"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ASCENDING_ORDER",
                    "safeName": "ASCENDING_ORDER"
                  },
                  "pascalCase": {
                    "unsafeName": "AscendingOrder",
                    "safeName": "AscendingOrder"
                  }
                },
                "wireValue": "ascending_order"
              },
              "docs": "Boolean to indicate if the results should be paginated in chronological order or reverse-chronological order. Defaults to true.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ascending_order_example": true
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/v0/evi/chat_groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": "/audio"
              }
            ]
          },
          "allPathParameters": [
            {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "pascalCase": {
                  "unsafeName": "Id",
                  "safeName": "Id"
                }
              },
              "docs": "Identifier for a chat. Formatted as a UUID.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "id": "endpoint_chatGroups.getReconstructionByChatGroupId",
          "name": {
            "originalName": "getReconstructionByChatGroupId",
            "camelCase": {
              "unsafeName": "getReconstructionByChatGroupId",
              "safeName": "getReconstructionByChatGroupId"
            },
            "snakeCase": {
              "unsafeName": "get_reconstruction_by_chat_group_id",
              "safeName": "get_reconstruction_by_chat_group_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_RECONSTRUCTION_BY_CHAT_GROUP_ID",
              "safeName": "GET_RECONSTRUCTION_BY_CHAT_GROUP_ID"
            },
            "pascalCase": {
              "unsafeName": "GetReconstructionByChatGroupId",
              "safeName": "GetReconstructionByChatGroupId"
            }
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "type": "unknown"
                },
                "docs": "Success",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "v2Examples": {
            "autogeneratedExamples": {
              "getReconstructionByChatGroupIdExample": {
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/v0/evi/chat_groups/id/audio"
                  },
                  "environment": "https://api.hume.ai/v0/evi",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          }
        }
      ]
    }
  },
  "webhookGroups": {
    "Chat Webhooks": [
      {
        "id": "Chat Webhooks.chatEnded",
        "name": {
          "originalName": "chatEnded",
          "camelCase": {
            "unsafeName": "chatEnded",
            "safeName": "chatEnded"
          },
          "snakeCase": {
            "unsafeName": "chat_ended",
            "safeName": "chat_ended"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_ENDED",
            "safeName": "CHAT_ENDED"
          },
          "pascalCase": {
            "unsafeName": "ChatEnded",
            "safeName": "ChatEnded"
          }
        },
        "displayName": "Chat Ended",
        "method": "POST",
        "headers": [],
        "payload": {
          "payloadType": {
            "type": "unknown"
          },
          "type": "reference"
        },
        "examples": [],
        "docs": "Sent when an EVI chat ends.",
        "v2Examples": {
          "autogeneratedExamples": {
            "chatWebhooksChatEndedExample": {
              "name": "chatWebhooksChatEndedExample"
            }
          },
          "userSpecifiedExamples": {}
        }
      },
      {
        "id": "Chat Webhooks.chatStarted",
        "name": {
          "originalName": "chatStarted",
          "camelCase": {
            "unsafeName": "chatStarted",
            "safeName": "chatStarted"
          },
          "snakeCase": {
            "unsafeName": "chat_started",
            "safeName": "chat_started"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_STARTED",
            "safeName": "CHAT_STARTED"
          },
          "pascalCase": {
            "unsafeName": "ChatStarted",
            "safeName": "ChatStarted"
          }
        },
        "displayName": "Chat Started",
        "method": "POST",
        "headers": [],
        "payload": {
          "payloadType": {
            "type": "unknown"
          },
          "type": "reference"
        },
        "examples": [],
        "docs": "Sent when an EVI chat is started.",
        "v2Examples": {
          "autogeneratedExamples": {
            "chatWebhooksChatStartedExample": {
              "name": "chatWebhooksChatStartedExample"
            }
          },
          "userSpecifiedExamples": {}
        }
      }
    ]
  },
  "subpackages": {
    "subpackage_chat": {
      "name": {
        "originalName": "chat",
        "camelCase": {
          "unsafeName": "chat",
          "safeName": "chat"
        },
        "snakeCase": {
          "unsafeName": "chat",
          "safeName": "chat"
        },
        "screamingSnakeCase": {
          "unsafeName": "CHAT",
          "safeName": "CHAT"
        },
        "pascalCase": {
          "unsafeName": "Chat",
          "safeName": "Chat"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "chat",
            "camelCase": {
              "unsafeName": "chat",
              "safeName": "chat"
            },
            "snakeCase": {
              "unsafeName": "chat",
              "safeName": "chat"
            },
            "screamingSnakeCase": {
              "unsafeName": "CHAT",
              "safeName": "CHAT"
            },
            "pascalCase": {
              "unsafeName": "Chat",
              "safeName": "Chat"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "chat",
          "camelCase": {
            "unsafeName": "chat",
            "safeName": "chat"
          },
          "snakeCase": {
            "unsafeName": "chat",
            "safeName": "chat"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT",
            "safeName": "CHAT"
          },
          "pascalCase": {
            "unsafeName": "Chat",
            "safeName": "Chat"
          }
        }
      },
      "types": [],
      "errors": [],
      "subpackages": [],
      "websocket": "channel_chat",
      "hasEndpointsInTree": false
    },
    "subpackage_chatWebhooks": {
      "name": {
        "originalName": "chatWebhooks",
        "camelCase": {
          "unsafeName": "chatWebhooks",
          "safeName": "chatWebhooks"
        },
        "snakeCase": {
          "unsafeName": "chat_webhooks",
          "safeName": "chat_webhooks"
        },
        "screamingSnakeCase": {
          "unsafeName": "CHAT_WEBHOOKS",
          "safeName": "CHAT_WEBHOOKS"
        },
        "pascalCase": {
          "unsafeName": "ChatWebhooks",
          "safeName": "ChatWebhooks"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "chatWebhooks",
            "camelCase": {
              "unsafeName": "chatWebhooks",
              "safeName": "chatWebhooks"
            },
            "snakeCase": {
              "unsafeName": "chat_webhooks",
              "safeName": "chat_webhooks"
            },
            "screamingSnakeCase": {
              "unsafeName": "CHAT_WEBHOOKS",
              "safeName": "CHAT_WEBHOOKS"
            },
            "pascalCase": {
              "unsafeName": "ChatWebhooks",
              "safeName": "ChatWebhooks"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "chatWebhooks",
          "camelCase": {
            "unsafeName": "chatWebhooks",
            "safeName": "chatWebhooks"
          },
          "snakeCase": {
            "unsafeName": "chat_webhooks",
            "safeName": "chat_webhooks"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_WEBHOOKS",
            "safeName": "CHAT_WEBHOOKS"
          },
          "pascalCase": {
            "unsafeName": "ChatWebhooks",
            "safeName": "ChatWebhooks"
          }
        }
      },
      "types": [],
      "errors": [],
      "subpackages": [],
      "webhooks": "Chat Webhooks",
      "hasEndpointsInTree": false
    },
    "subpackage_tools": {
      "name": {
        "originalName": "tools",
        "camelCase": {
          "unsafeName": "tools",
          "safeName": "tools"
        },
        "snakeCase": {
          "unsafeName": "tools",
          "safeName": "tools"
        },
        "screamingSnakeCase": {
          "unsafeName": "TOOLS",
          "safeName": "TOOLS"
        },
        "pascalCase": {
          "unsafeName": "Tools",
          "safeName": "Tools"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "tools",
            "camelCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "snakeCase": {
              "unsafeName": "tools",
              "safeName": "tools"
            },
            "screamingSnakeCase": {
              "unsafeName": "TOOLS",
              "safeName": "TOOLS"
            },
            "pascalCase": {
              "unsafeName": "Tools",
              "safeName": "Tools"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "tools",
          "camelCase": {
            "unsafeName": "tools",
            "safeName": "tools"
          },
          "snakeCase": {
            "unsafeName": "tools",
            "safeName": "tools"
          },
          "screamingSnakeCase": {
            "unsafeName": "TOOLS",
            "safeName": "TOOLS"
          },
          "pascalCase": {
            "unsafeName": "Tools",
            "safeName": "Tools"
          }
        }
      },
      "service": "service_tools",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_prompts": {
      "name": {
        "originalName": "prompts",
        "camelCase": {
          "unsafeName": "prompts",
          "safeName": "prompts"
        },
        "snakeCase": {
          "unsafeName": "prompts",
          "safeName": "prompts"
        },
        "screamingSnakeCase": {
          "unsafeName": "PROMPTS",
          "safeName": "PROMPTS"
        },
        "pascalCase": {
          "unsafeName": "Prompts",
          "safeName": "Prompts"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "prompts",
            "camelCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "snakeCase": {
              "unsafeName": "prompts",
              "safeName": "prompts"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROMPTS",
              "safeName": "PROMPTS"
            },
            "pascalCase": {
              "unsafeName": "Prompts",
              "safeName": "Prompts"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "prompts",
          "camelCase": {
            "unsafeName": "prompts",
            "safeName": "prompts"
          },
          "snakeCase": {
            "unsafeName": "prompts",
            "safeName": "prompts"
          },
          "screamingSnakeCase": {
            "unsafeName": "PROMPTS",
            "safeName": "PROMPTS"
          },
          "pascalCase": {
            "unsafeName": "Prompts",
            "safeName": "Prompts"
          }
        }
      },
      "service": "service_prompts",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_customVoices": {
      "name": {
        "originalName": "customVoices",
        "camelCase": {
          "unsafeName": "customVoices",
          "safeName": "customVoices"
        },
        "snakeCase": {
          "unsafeName": "custom_voices",
          "safeName": "custom_voices"
        },
        "screamingSnakeCase": {
          "unsafeName": "CUSTOM_VOICES",
          "safeName": "CUSTOM_VOICES"
        },
        "pascalCase": {
          "unsafeName": "CustomVoices",
          "safeName": "CustomVoices"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "customVoices",
            "camelCase": {
              "unsafeName": "customVoices",
              "safeName": "customVoices"
            },
            "snakeCase": {
              "unsafeName": "custom_voices",
              "safeName": "custom_voices"
            },
            "screamingSnakeCase": {
              "unsafeName": "CUSTOM_VOICES",
              "safeName": "CUSTOM_VOICES"
            },
            "pascalCase": {
              "unsafeName": "CustomVoices",
              "safeName": "CustomVoices"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "customVoices",
          "camelCase": {
            "unsafeName": "customVoices",
            "safeName": "customVoices"
          },
          "snakeCase": {
            "unsafeName": "custom_voices",
            "safeName": "custom_voices"
          },
          "screamingSnakeCase": {
            "unsafeName": "CUSTOM_VOICES",
            "safeName": "CUSTOM_VOICES"
          },
          "pascalCase": {
            "unsafeName": "CustomVoices",
            "safeName": "CustomVoices"
          }
        }
      },
      "service": "service_customVoices",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_configs": {
      "name": {
        "originalName": "configs",
        "camelCase": {
          "unsafeName": "configs",
          "safeName": "configs"
        },
        "snakeCase": {
          "unsafeName": "configs",
          "safeName": "configs"
        },
        "screamingSnakeCase": {
          "unsafeName": "CONFIGS",
          "safeName": "CONFIGS"
        },
        "pascalCase": {
          "unsafeName": "Configs",
          "safeName": "Configs"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "configs",
            "camelCase": {
              "unsafeName": "configs",
              "safeName": "configs"
            },
            "snakeCase": {
              "unsafeName": "configs",
              "safeName": "configs"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONFIGS",
              "safeName": "CONFIGS"
            },
            "pascalCase": {
              "unsafeName": "Configs",
              "safeName": "Configs"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "configs",
          "camelCase": {
            "unsafeName": "configs",
            "safeName": "configs"
          },
          "snakeCase": {
            "unsafeName": "configs",
            "safeName": "configs"
          },
          "screamingSnakeCase": {
            "unsafeName": "CONFIGS",
            "safeName": "CONFIGS"
          },
          "pascalCase": {
            "unsafeName": "Configs",
            "safeName": "Configs"
          }
        }
      },
      "service": "service_configs",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_chats": {
      "name": {
        "originalName": "chats",
        "camelCase": {
          "unsafeName": "chats",
          "safeName": "chats"
        },
        "snakeCase": {
          "unsafeName": "chats",
          "safeName": "chats"
        },
        "screamingSnakeCase": {
          "unsafeName": "CHATS",
          "safeName": "CHATS"
        },
        "pascalCase": {
          "unsafeName": "Chats",
          "safeName": "Chats"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "chats",
            "camelCase": {
              "unsafeName": "chats",
              "safeName": "chats"
            },
            "snakeCase": {
              "unsafeName": "chats",
              "safeName": "chats"
            },
            "screamingSnakeCase": {
              "unsafeName": "CHATS",
              "safeName": "CHATS"
            },
            "pascalCase": {
              "unsafeName": "Chats",
              "safeName": "Chats"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "chats",
          "camelCase": {
            "unsafeName": "chats",
            "safeName": "chats"
          },
          "snakeCase": {
            "unsafeName": "chats",
            "safeName": "chats"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHATS",
            "safeName": "CHATS"
          },
          "pascalCase": {
            "unsafeName": "Chats",
            "safeName": "Chats"
          }
        }
      },
      "service": "service_chats",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_chatGroups": {
      "name": {
        "originalName": "chatGroups",
        "camelCase": {
          "unsafeName": "chatGroups",
          "safeName": "chatGroups"
        },
        "snakeCase": {
          "unsafeName": "chat_groups",
          "safeName": "chat_groups"
        },
        "screamingSnakeCase": {
          "unsafeName": "CHAT_GROUPS",
          "safeName": "CHAT_GROUPS"
        },
        "pascalCase": {
          "unsafeName": "ChatGroups",
          "safeName": "ChatGroups"
        }
      },
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "chatGroups",
            "camelCase": {
              "unsafeName": "chatGroups",
              "safeName": "chatGroups"
            },
            "snakeCase": {
              "unsafeName": "chat_groups",
              "safeName": "chat_groups"
            },
            "screamingSnakeCase": {
              "unsafeName": "CHAT_GROUPS",
              "safeName": "CHAT_GROUPS"
            },
            "pascalCase": {
              "unsafeName": "ChatGroups",
              "safeName": "ChatGroups"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "chatGroups",
          "camelCase": {
            "unsafeName": "chatGroups",
            "safeName": "chatGroups"
          },
          "snakeCase": {
            "unsafeName": "chat_groups",
            "safeName": "chat_groups"
          },
          "screamingSnakeCase": {
            "unsafeName": "CHAT_GROUPS",
            "safeName": "CHAT_GROUPS"
          },
          "pascalCase": {
            "unsafeName": "ChatGroups",
            "safeName": "ChatGroups"
          }
        }
      },
      "service": "service_chatGroups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "websocketChannels": {
    "channel_chat": {
      "name": {
        "originalName": "chat",
        "camelCase": {
          "unsafeName": "chat",
          "safeName": "chat"
        },
        "snakeCase": {
          "unsafeName": "chat",
          "safeName": "chat"
        },
        "screamingSnakeCase": {
          "unsafeName": "CHAT",
          "safeName": "CHAT"
        },
        "pascalCase": {
          "unsafeName": "Chat",
          "safeName": "Chat"
        }
      },
      "baseUrl": "prod",
      "path": {
        "head": "/chat",
        "parts": []
      },
      "auth": false,
      "headers": [],
      "queryParameters": [
        {
          "name": {
            "name": {
              "originalName": "access_token",
              "camelCase": {
                "unsafeName": "accessToken",
                "safeName": "accessToken"
              },
              "snakeCase": {
                "unsafeName": "access_token",
                "safeName": "access_token"
              },
              "screamingSnakeCase": {
                "unsafeName": "ACCESS_TOKEN",
                "safeName": "ACCESS_TOKEN"
              },
              "pascalCase": {
                "unsafeName": "AccessToken",
                "safeName": "AccessToken"
              }
            },
            "wireValue": "access_token"
          },
          "docs": "Access token used for authenticating the client. If not provided, an `api_key` must be provided to authenticate.\n\nThe access token is generated using both an API key and a Secret key, which provides an additional layer of security compared to using just an API key.\n\nFor more details, refer to the [Authentication Strategies Guide](/docs/introduction/api-key#authentication-strategies).",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "default": "",
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "access_token_example": ""
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "config_id",
              "camelCase": {
                "unsafeName": "configId",
                "safeName": "configId"
              },
              "snakeCase": {
                "unsafeName": "config_id",
                "safeName": "config_id"
              },
              "screamingSnakeCase": {
                "unsafeName": "CONFIG_ID",
                "safeName": "CONFIG_ID"
              },
              "pascalCase": {
                "unsafeName": "ConfigId",
                "safeName": "ConfigId"
              }
            },
            "wireValue": "config_id"
          },
          "docs": "The unique identifier for an EVI configuration.\n\nInclude this ID in your connection request to equip EVI with the Prompt, Language Model, Voice, and Tools associated with the specified configuration. If omitted, EVI will apply [default configuration settings](/docs/empathic-voice-interface-evi/configuration#default-configuration).\n\nFor help obtaining this ID, see our [Configuration Guide](/docs/empathic-voice-interface-evi/configuration).",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "config_id_example": "config_id"
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "config_version",
              "camelCase": {
                "unsafeName": "configVersion",
                "safeName": "configVersion"
              },
              "snakeCase": {
                "unsafeName": "config_version",
                "safeName": "config_version"
              },
              "screamingSnakeCase": {
                "unsafeName": "CONFIG_VERSION",
                "safeName": "CONFIG_VERSION"
              },
              "pascalCase": {
                "unsafeName": "ConfigVersion",
                "safeName": "ConfigVersion"
              }
            },
            "wireValue": "config_version"
          },
          "docs": "The version number of the EVI configuration specified by the `config_id`.\n\nConfigs, as well as Prompts and Tools, are versioned. This versioning system supports iterative development, allowing you to progressively refine configurations and revert to previous versions if needed.\n\nInclude this parameter to apply a specific version of an EVI configuration. If omitted, the latest version will be applied.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "config_version_example": 42
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "enable_context_injection",
              "camelCase": {
                "unsafeName": "enableContextInjection",
                "safeName": "enableContextInjection"
              },
              "snakeCase": {
                "unsafeName": "enable_context_injection",
                "safeName": "enable_context_injection"
              },
              "screamingSnakeCase": {
                "unsafeName": "ENABLE_CONTEXT_INJECTION",
                "safeName": "ENABLE_CONTEXT_INJECTION"
              },
              "pascalCase": {
                "unsafeName": "EnableContextInjection",
                "safeName": "EnableContextInjection"
              }
            },
            "wireValue": "enable_context_injection"
          },
          "docs": "A flag to enable context injection. Set this query parameter to true to have EVI inject context into the conversation. This is useful for scenarios where you want to provide additional information to EVI to help it better understand the user's request.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "BOOLEAN",
                  "v2": {
                    "default": true,
                    "type": "boolean"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "enable_context_injection_example": true
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "event_limit",
              "camelCase": {
                "unsafeName": "eventLimit",
                "safeName": "eventLimit"
              },
              "snakeCase": {
                "unsafeName": "event_limit",
                "safeName": "event_limit"
              },
              "screamingSnakeCase": {
                "unsafeName": "EVENT_LIMIT",
                "safeName": "EVENT_LIMIT"
              },
              "pascalCase": {
                "unsafeName": "EventLimit",
                "safeName": "EventLimit"
              }
            },
            "wireValue": "event_limit"
          },
          "docs": "The maximum number of chat events to return from chat history. By default, the system returns up to 300 events (100 events per page × 3 pages). Set this parameter to a smaller value to limit the number of events returned.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "validation": {},
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "event_limit_example": 42
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "resumed_chat_group_id",
              "camelCase": {
                "unsafeName": "resumedChatGroupId",
                "safeName": "resumedChatGroupId"
              },
              "snakeCase": {
                "unsafeName": "resumed_chat_group_id",
                "safeName": "resumed_chat_group_id"
              },
              "screamingSnakeCase": {
                "unsafeName": "RESUMED_CHAT_GROUP_ID",
                "safeName": "RESUMED_CHAT_GROUP_ID"
              },
              "pascalCase": {
                "unsafeName": "ResumedChatGroupId",
                "safeName": "ResumedChatGroupId"
              }
            },
            "wireValue": "resumed_chat_group_id"
          },
          "docs": "The unique identifier for a Chat Group. Use this field to preserve context from a previous Chat session.\n\nA Chat represents a single session from opening to closing a WebSocket connection. In contrast, a Chat Group is a series of resumed Chats that collectively represent a single conversation spanning multiple sessions. Each Chat includes a Chat Group ID, which is used to preserve the context of previous Chat sessions when starting a new one.\n\nIncluding the Chat Group ID in the `resumed_chat_group_id` query parameter is useful for seamlessly resuming a Chat after unexpected network disconnections and for picking up conversations exactly where you left off at a later time. This ensures preserved context across multiple sessions.\n\nThere are three ways to obtain the Chat Group ID:\n\n- [Chat Metadata](/reference/empathic-voice-interface-evi/chat/chat#receive.ChatMetadata.type): Upon establishing a WebSocket connection with EVI, the user receives a Chat Metadata message. This message contains a `chat_group_id`, which can be used to resume conversations within this chat group in future sessions.\n\n- [List Chats endpoint](/reference/empathic-voice-interface-evi/chats/list-chats): Use the GET `/v0/evi/chats` endpoint to obtain the Chat Group ID of individual Chat sessions. This endpoint lists all available Chat sessions and their associated Chat Group ID.\n\n- [List Chat Groups endpoint](/reference/empathic-voice-interface-evi/chat-groups/list-chat-groups): Use the GET `/v0/evi/chat_groups` endpoint to obtain the Chat Group IDs of all Chat Groups associated with an API key. This endpoint returns a list of all available chat groups.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "resumed_chat_group_id_example": "resumed_chat_group_id"
            }
          }
        },
        {
          "name": {
            "name": {
              "originalName": "verbose_transcription",
              "camelCase": {
                "unsafeName": "verboseTranscription",
                "safeName": "verboseTranscription"
              },
              "snakeCase": {
                "unsafeName": "verbose_transcription",
                "safeName": "verbose_transcription"
              },
              "screamingSnakeCase": {
                "unsafeName": "VERBOSE_TRANSCRIPTION",
                "safeName": "VERBOSE_TRANSCRIPTION"
              },
              "pascalCase": {
                "unsafeName": "VerboseTranscription",
                "safeName": "VerboseTranscription"
              }
            },
            "wireValue": "verbose_transcription"
          },
          "docs": "A flag to enable verbose transcription. Set this query parameter to `\"true\"` to have unfinalized user transcripts be sent to the client as interim `UserMessage` messages.",
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "BOOLEAN",
                  "v2": {
                    "default": false,
                    "type": "boolean"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {
              "verbose_transcription_example": false
            }
          }
        }
      ],
      "pathParameters": [],
      "messages": [
        {
          "type": "subscribe",
          "displayName": "subscribe",
          "origin": "server",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ChatSubscribe",
                "camelCase": {
                  "unsafeName": "chatSubscribe",
                  "safeName": "chatSubscribe"
                },
                "snakeCase": {
                  "unsafeName": "chat_subscribe",
                  "safeName": "chat_subscribe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAT_SUBSCRIBE",
                  "safeName": "CHAT_SUBSCRIBE"
                },
                "pascalCase": {
                  "unsafeName": "ChatSubscribe",
                  "safeName": "ChatSubscribe"
                }
              },
              "typeId": "ChatSubscribe",
              "inline": false,
              "type": "named"
            },
            "type": "reference"
          }
        },
        {
          "type": "publish",
          "displayName": "publish",
          "origin": "client",
          "body": {
            "bodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "ChatPublish",
                "camelCase": {
                  "unsafeName": "chatPublish",
                  "safeName": "chatPublish"
                },
                "snakeCase": {
                  "unsafeName": "chat_publish",
                  "safeName": "chat_publish"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAT_PUBLISH",
                  "safeName": "CHAT_PUBLISH"
                },
                "pascalCase": {
                  "unsafeName": "ChatPublish",
                  "safeName": "ChatPublish"
                }
              },
              "typeId": "ChatPublish",
              "inline": false,
              "type": "named"
            },
            "type": "reference"
          }
        }
      ],
      "docs": "Chat with Empathic Voice Interface (EVI)",
      "examples": [
        {
          "pathParameters": [],
          "headers": [],
          "queryParameters": [],
          "messages": [
            {
              "type": "publish",
              "body": {
                "jsonExample": {
                  "data": "data",
                  "type": "audio_input"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "data": "data",
                        "type": "audio_input"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": {
                                  "originalName": "custom_session_id",
                                  "camelCase": {
                                    "unsafeName": "customSessionId",
                                    "safeName": "customSessionId"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "custom_session_id",
                                    "safeName": "custom_session_id"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "CUSTOM_SESSION_ID",
                                    "safeName": "CUSTOM_SESSION_ID"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "CustomSessionId",
                                    "safeName": "CustomSessionId"
                                  }
                                },
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "AudioInput",
                                  "camelCase": {
                                    "unsafeName": "audioInput",
                                    "safeName": "audioInput"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "audio_input",
                                    "safeName": "audio_input"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "AUDIO_INPUT",
                                    "safeName": "AUDIO_INPUT"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "AudioInput",
                                    "safeName": "AudioInput"
                                  }
                                }
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "data",
                                  "camelCase": {
                                    "unsafeName": "data",
                                    "safeName": "data"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "data",
                                    "safeName": "data"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "DATA",
                                    "safeName": "DATA"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "Data",
                                    "safeName": "Data"
                                  }
                                },
                                "wireValue": "data"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "AudioInput",
                                  "camelCase": {
                                    "unsafeName": "audioInput",
                                    "safeName": "audioInput"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "audio_input",
                                    "safeName": "audio_input"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "AUDIO_INPUT",
                                    "safeName": "AUDIO_INPUT"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "AudioInput",
                                    "safeName": "AudioInput"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "data",
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "data"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "TYPE",
                                    "safeName": "TYPE"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "Type",
                                    "safeName": "Type"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AudioInput",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "AudioInput",
                                  "camelCase": {
                                    "unsafeName": "audioInput",
                                    "safeName": "audioInput"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "audio_input",
                                    "safeName": "audio_input"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "AUDIO_INPUT",
                                    "safeName": "AUDIO_INPUT"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "AudioInput",
                                    "safeName": "AudioInput"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "audio_input",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "audio_input"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AudioInput",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "AudioInput",
                            "camelCase": {
                              "unsafeName": "audioInput",
                              "safeName": "audioInput"
                            },
                            "snakeCase": {
                              "unsafeName": "audio_input",
                              "safeName": "audio_input"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "AUDIO_INPUT",
                              "safeName": "AUDIO_INPUT"
                            },
                            "pascalCase": {
                              "unsafeName": "AudioInput",
                              "safeName": "AudioInput"
                            }
                          }
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatPublish",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "ChatPublish",
                      "camelCase": {
                        "unsafeName": "chatPublish",
                        "safeName": "chatPublish"
                      },
                      "snakeCase": {
                        "unsafeName": "chat_publish",
                        "safeName": "chat_publish"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "CHAT_PUBLISH",
                        "safeName": "CHAT_PUBLISH"
                      },
                      "pascalCase": {
                        "unsafeName": "ChatPublish",
                        "safeName": "ChatPublish"
                      }
                    }
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            },
            {
              "type": "subscribe",
              "body": {
                "jsonExample": {
                  "type": "assistant_end"
                },
                "shape": {
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "jsonExample": {
                        "type": "assistant_end"
                      },
                      "shape": {
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": {
                                  "originalName": "custom_session_id",
                                  "camelCase": {
                                    "unsafeName": "customSessionId",
                                    "safeName": "customSessionId"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "custom_session_id",
                                    "safeName": "custom_session_id"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "CUSTOM_SESSION_ID",
                                    "safeName": "CUSTOM_SESSION_ID"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "CustomSessionId",
                                    "safeName": "CustomSessionId"
                                  }
                                },
                                "wireValue": "custom_session_id"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "AssistantEnd",
                                  "camelCase": {
                                    "unsafeName": "assistantEnd",
                                    "safeName": "assistantEnd"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "assistant_end",
                                    "safeName": "assistant_end"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "ASSISTANT_END",
                                    "safeName": "ASSISTANT_END"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "AssistantEnd",
                                    "safeName": "AssistantEnd"
                                  }
                                }
                              },
                              "value": {
                                "shape": {
                                  "container": {
                                    "valueType": {
                                      "container": {
                                        "nullable": {
                                          "primitive": {
                                            "v1": "STRING",
                                            "v2": {
                                              "validation": {},
                                              "type": "string"
                                            }
                                          },
                                          "type": "primitive"
                                        },
                                        "type": "nullable"
                                      },
                                      "type": "container"
                                    },
                                    "type": "optional"
                                  },
                                  "type": "container"
                                }
                              }
                            },
                            {
                              "name": {
                                "name": {
                                  "originalName": "type",
                                  "camelCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "type",
                                    "safeName": "type_"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "TYPE",
                                    "safeName": "TYPE"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "Type",
                                    "safeName": "Type"
                                  }
                                },
                                "wireValue": "type"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "AssistantEnd",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": {
                                  "originalName": "AssistantEnd",
                                  "camelCase": {
                                    "unsafeName": "assistantEnd",
                                    "safeName": "assistantEnd"
                                  },
                                  "snakeCase": {
                                    "unsafeName": "assistant_end",
                                    "safeName": "assistant_end"
                                  },
                                  "screamingSnakeCase": {
                                    "unsafeName": "ASSISTANT_END",
                                    "safeName": "ASSISTANT_END"
                                  },
                                  "pascalCase": {
                                    "unsafeName": "AssistantEnd",
                                    "safeName": "AssistantEnd"
                                  }
                                }
                              },
                              "value": {
                                "jsonExample": "assistant_end",
                                "shape": {
                                  "container": {
                                    "literal": {
                                      "string": {
                                        "original": "assistant_end"
                                      },
                                      "type": "string"
                                    },
                                    "type": "literal"
                                  },
                                  "type": "container"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "typeName": {
                          "typeId": "AssistantEnd",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "AssistantEnd",
                            "camelCase": {
                              "unsafeName": "assistantEnd",
                              "safeName": "assistantEnd"
                            },
                            "snakeCase": {
                              "unsafeName": "assistant_end",
                              "safeName": "assistant_end"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "ASSISTANT_END",
                              "safeName": "ASSISTANT_END"
                            },
                            "pascalCase": {
                              "unsafeName": "AssistantEnd",
                              "safeName": "AssistantEnd"
                            }
                          }
                        },
                        "type": "named"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "typeName": {
                    "typeId": "ChatSubscribe",
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": {
                      "originalName": "ChatSubscribe",
                      "camelCase": {
                        "unsafeName": "chatSubscribe",
                        "safeName": "chatSubscribe"
                      },
                      "snakeCase": {
                        "unsafeName": "chat_subscribe",
                        "safeName": "chat_subscribe"
                      },
                      "screamingSnakeCase": {
                        "unsafeName": "CHAT_SUBSCRIBE",
                        "safeName": "CHAT_SUBSCRIBE"
                      },
                      "pascalCase": {
                        "unsafeName": "ChatSubscribe",
                        "safeName": "ChatSubscribe"
                      }
                    }
                  },
                  "type": "named"
                },
                "type": "reference"
              }
            }
          ],
          "url": "/chat"
        }
      ],
      "v2Examples": {
        "autogeneratedExamples": {},
        "userSpecifiedExamples": {}
      }
    }
  },
  "rootPackage": {
    "service": "service_",
    "types": [
      "AssistantEnd",
      "AssistantInput",
      "AssistantMessage",
      "AudioInput",
      "AudioOutput",
      "ChatMetadata",
      "Error",
      "PauseAssistantMessage",
      "ResumeAssistantMessage",
      "SessionSettings",
      "ToolCallMessage",
      "ToolErrorMessage",
      "ToolResponseMessage",
      "UserInput",
      "UserInterruption",
      "UserMessage",
      "AssistantEnd",
      "AssistantInput",
      "AssistantMessage",
      "AudioConfiguration",
      "AudioInput",
      "AudioOutput",
      "BuiltInTool",
      "BuiltinToolConfig",
      "ChatMessage",
      "ChatMetadata",
      "Context",
      "ContextType",
      "EmotionScores",
      "Encoding",
      "Error",
      "ErrorLevel",
      "Inference",
      "MillisecondInterval",
      "PauseAssistantMessage",
      "ProsodyInference",
      "ResumeAssistantMessage",
      "Role",
      "SessionSettings",
      "Tool",
      "ToolCallMessage",
      "ToolErrorMessage",
      "ToolResponseMessage",
      "ToolType",
      "UserInput",
      "UserInterruption",
      "UserMessage"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_chat",
      "subpackage_chatWebhooks",
      "subpackage_tools",
      "subpackage_prompts",
      "subpackage_customVoices",
      "subpackage_configs",
      "subpackage_chats",
      "subpackage_chatGroups"
    ],
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "hasEndpointsInTree": false
  },
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  }
}