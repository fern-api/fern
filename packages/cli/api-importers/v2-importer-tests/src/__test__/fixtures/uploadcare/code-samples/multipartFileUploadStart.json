[
    {
        "lang": "JavaScript",
        "label": "JS",
        "source": "import { multipartStart } from '@uploadcare/upload-client'\n\nconst result = await multipartStart(\n  27796904,\n  {\n    publicKey: 'YOUR_PUBLIC_KEY',\n    store: 'auto',\n    fileName: 'myfile.mp4',\n    contentType: 'video/mp4',\n    metadata: {\n      subsystem: 'uploader',\n      pet: 'cat'\n    }\n  }\n)\n"
    },
    {
        "lang": "PHP",
        "label": "PHP",
        "source": "// Uploadcare lib provides high level API for multipart uploads that does everything for you\n\n<?php\n$configuration = Uploadcare\\Configuration::create((string) $_ENV['UPLOADCARE_PUBLIC_KEY'], (string) $_ENV['UPLOADCARE_SECRET_KEY']);\n\n$uploader = new Uploadcare\\Uploader\\Uploader($configuration);\n$path = '/path-to-large-file.zip';\n$handle = \\fopen($path, 'rb');\n$response = $uploader->fromResource($handle, null, null, 'auto', [\n    'size' => \\filesize($path), // The \"size\" is the metadata key\n]);\necho \\sprintf('File uploaded. ID is \\'%s\\'', $response->getUuid());\n"
    },
    {
        "lang": "Python",
        "label": "Python",
        "source": "// Uploadcare lib provides high level API for multipart uploads that does everything for you\n\nfrom pyuploadcare import Uploadcare, File\n\nuploadcare = Uploadcare(public_key='YOUR_PUBLIC_KEY', secret_key='YOUR_SECRET_KEY')\nwith open('test1.txt', 'rb') as file_object:\n    ucare_file = uploadcare.multipart_upload(file_object)\n"
    },
    {
        "lang": "Ruby",
        "label": "Ruby",
        "source": "// Uploadcare lib provides high level API for multipart uploads that does everything for you\n\nrequire 'uploadcare'\nUploadcare.config.public_key = \"YOUR_PUBLIC_KEY\"\nUploadcare.config.secret_key = \"YOUR_SECRET_KEY\"\n\nsource_file = File.open('image.png')\nuploaded_file = Uploadcare::Uploader.upload(source_file, store: auto)\n"
    },
    {
        "lang": "Swift",
        "label": "Swift",
        "source": "// Uploadcare lib provides high level API for multipart uploads that does everything for you\n\nimport Uploadcare\n\nlet uploadcare = Uploadcare(withPublicKey: \"YOUR_PUBLIC_KEY\", secretKey: \"YOUR_SECRET_KEY\")\n\nguard let url = Bundle.main.url(forResource: \"Mona_Lisa_23mb\", withExtension: \"jpg\"),\n      let data = try? Data(contentsOf: url) else { return }\n\nlet metadata = [\"subsystem\": \"uploader\", \"pet\": \"cat\"]\nlet onProgress: (Double)->Void = { (progress) in\n  print(\"progress: \\(progress)\")\n}\n\nlet file = try await uploadcare.uploadAPI.multipartUpload(data, withName: \"Mona_Lisa_big.jpg\", store: .auto, metadata: metadata, onProgress)\nprint(file)\n"
    },
    {
        "lang": "Kotlin",
        "label": "Kotlin",
        "source": "import com.uploadcare.android.library.api.UploadcareClient\n\nval uploadcare = UploadcareClient(publicKey = \"YOUR_PUBLIC_KEY\", secretKey = \"YOUR_SECRET_KEY\")\n\nval uri = \"content://com.android.providers.media.documents/document/image%3A1000001178\".toUri()\nval file = FileUploader(uploadcare, uri = uri, context = context).upload()\nLog.d(\"TAG\", file.toString())\n"
    }
]