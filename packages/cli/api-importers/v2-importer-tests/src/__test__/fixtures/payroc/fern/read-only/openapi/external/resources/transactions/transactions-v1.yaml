openapi: 3.0.3
info:
  title: Settlement
  description: Settlement
  version: '1'
  termsOfService: https://www.payroc.com/terms
  contact:
    name: Payroc Helpdesk
    url: https://www.payroc.com/help
    email: helpdesk@payroc.com
security:
- bearerAuth: []
tags:
  - name: Settlement
    description: Settlement information.

paths:
  /transactions:
    get:
      tags: [Settlement]
      summary: List transactions
      description: Retrieve a list of transactions.
      operationId: getTransactions
      parameters:
        - $ref: '../../../common/parameters/before-v1.yaml#/components/parameters/before'
        - $ref: '../../../common/parameters/after-v1.yaml#/components/parameters/after'
        - $ref: '../../../common/parameters/limit-v1.yaml#/components/parameters/limit'
        - $ref: '../../../common/parameters/settlement-v1.yaml#/components/parameters/keyDate'
        - $ref: '../../../common/parameters/settlement-v1.yaml#/components/parameters/batchIdQuery'
        - $ref: '../../../common/parameters/merchant-id-v1.yaml#/components/parameters/merchantId'
        - $ref: './parameters-v1.yaml#/components/parameters/transactionType'
      responses:
        '200':
          description: Successful request. Returns a paginated list of transactions.
          content:
            application/json:
              schema:
                type: object
                allOf:
                - $ref: '../../../common/schemas/common/paginated-list-v1.yaml#/components/schemas/paginatedList'
                - type: object
                  properties:
                    data:
                      type: array
                      description: Array of transaction objects.
                      items:
                        $ref: '#/components/schemas/transaction'
                  required: [data] 
              examples:
                paginatedList:
                  $ref: './example-responses-v1.yaml#/components/examples/paginatedTransactions'
                noActivity:
                  $ref: '../../../common/responses/no-activity-v1.yaml#/components/examples/noActivity'        
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: '../../../common/responses/errors/400-v1.yaml#/components/schemas/400'
              examples: 
                parameterError:
                  $ref: '../../../common/responses/rfc-errors/400-v1.yaml#/components/examples/parameterError'
                paginationError:
                  $ref: '../../../common/responses/rfc-errors/400-v1.yaml#/components/examples/paginationError'
        '401':
          $ref: '../../../common/responses/errors/401-v1.yaml#/components/responses/401'
        '403':
          $ref: '../../../common/responses/errors/403-v1.yaml#/components/responses/403'
        '406':
          $ref: '../../../common/responses/errors/406-v1.yaml#/components/responses/406'
        '500':
          $ref: '../../../common/responses/errors/500-v1.yaml#/components/responses/500'
  /transactions/{transactionId}:
    get:
      tags: [Settlement]
      summary: Retrieve transaction
      description: Retrieve a specific transaction.
      operationId: gettransaction
      parameters:
        - $ref: './parameters-v1.yaml#/components/parameters/transactionId'
      responses:
        '200':
          description: Successful request. Returns the requested transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction'    
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: '../../../common/responses/errors/400-v1.yaml#/components/schemas/400'
              examples: 
                transactionIdError:
                  $ref: './example-responses-v1.yaml#/components/examples/transactionIdError'
        '401':
          $ref: '../../../common/responses/errors/401-v1.yaml#/components/responses/401'
        '403':
          $ref: '../../../common/responses/errors/403-v1.yaml#/components/responses/403'
        '404':
          $ref: '../../../common/responses/errors/404-v1.yaml#/components/responses/404'
        '406':
          $ref: '../../../common/responses/errors/406-v1.yaml#/components/responses/406'
        '500':
          $ref: '../../../common/responses/errors/500-v1.yaml#/components/responses/500'

components:
  schemas:
    settledSummary:
      type: object
      title: settlement summary
      description: Object that contains information about the settlement.
      properties:
        settledBy:
          type: string
          description: Processor that settled the transaction.
          example: Payroc
        achDate:
          type: string
          format: date
          description: Date that the processor settled the transaction. The format of this value is **YYYY-MM-DD**.
          example: '2024-07-02'
        achDepositId:
          type: integer
          description: Unique identifier of the ACH deposit.
        link:
          $ref: '../../../common/schemas/common/link/link-v1.yaml#/components/schemas/link'
      example:
        settledBy: '3rd party'
        achDate: '2024-07-02'
        achDepositId: 99
        link: 
          rel: achDeposit
          method: get
          href: 'https://api.payroc.com/v1/ach-deposits/99?merchantId=4525644354'
           
    authorizationSummary:
      type: object
      title: authorization summary
      description: Object that contains information about the authorization.
      properties:
        authorizationId:
          type: integer
          description: Unique identifier of the authorization.
          example: 303101
        code:
          type: string
          description: | 
            Authorization code.  

            **Note:** For returns, the card brands may not provide an authorization code.
          example: A1B2C3
        amount:
          type: integer
          description: Authorization amount. We return the value in the currency's lowest denomination, for example, cents.
          example: 4999
        avsResponseCode:
          type: string
          description: Response code that indicates if the address matches the address registered to the customer.
          example: Y
        link:
          $ref: '../../../common/schemas/common/link/link-v1.yaml#/components/schemas/link'
    
    transaction:
      type: object
      title: transaction
      description: Object that contains information about the transaction.
      properties:
        transactionId:
          type: integer
          description: Unique identifier of the transaction. If we can't match a dispute to a transaction, we don't return 'transactionID' or a 'link' object.
          example: 442233
          nullable: true
        type:
          type: string
          description: Indicates the type of transaction. 
          enum:
            - capture
            - return
          example: capture
        date:
          type: string
          format: date
          description: Date of the transaction. The format of this value is **YYYY-MM-DD**.
          example: '2024-07-02'
        amount:
          type: integer
          description: Transaction amount. We return the value in the currency's lowest denomination, for example, cents.
          example: 4999
        entryMethod:
          type: string
          description: Describes how the merchant received the payment details. If we can't match a dispute to a transaction, we don't return an 'entryMethod' object.
          nullable: true
          enum:
            - barcodeRead
            - smartChipRead
            - swipedOriginUnknown
            - contactlessChip
            - ecommerce
            - manuallyEntered
            - manuallyEnteredFallback
            - swiped
            - swipedFallback
            - swipedError
            - scannedCheckReader
            - credentialOnFile
            - unknown
          example: contactlessChip
        createdDate:
          type: string
          format: date
          description: Date that we received the transaction.  The format of this value is **YYYY-MM-DD**.
          example: '2024-07-02'
        lastModifiedDate:
          type: string
          format: date
          description: Date that the transaction was last changed.  The format of this value is **YYYY-MM-DD**.
          example: '2024-07-02'
        status:
          type: string
          description: Indicates the status of the transaction.
          enum:
            - fullSuspense
            - heldAudited
            - heldReleasedAudited
            - holdForSettlement30Days
            - holdForSettlementDuplicate
            - holdLongTerm
            - paid 
            - paidByThirdParty
            - partialRelease
            - pull
            - release
            - new
            - held
            - unknown
          example: paid
        cashbackAmount:
          type: integer
          description: Cashback amount. We return the value in the currency's lowest denomination, for example, cents.
          example: 0
        interchange: 
          type: object
          description: Object that contains information about the interchange fees for the transaction.
          properties:    
            basisPoint:
              type: integer
              description: Interchange basis points that we apply to the transaction.
              example: 150
            transactionFee:
              type: integer
              description: Interchange fee for the transaction. We return the value in the currency's lowest denomination, for example, cents.
              example: 50
        currency:
          type: string
          description: Currency of the transaction.
          example: USD
        merchant:
          $ref: '../../../common/schemas/settlement/merchant-summary-v1.yaml#/components/schemas/merchantSummary'
        settled:
          $ref: '#/components/schemas/settledSummary'
        batch:
          $ref: '../../../common/schemas/settlement/batch-summary-v1.yaml#/components/schemas/batchSummary'
        card:
          $ref: '../../../common/schemas/settlement/card-summary-v1.yaml#/components/schemas/cardSummary'
        authorization:
          $ref: '#/components/schemas/authorizationSummary'   

  securitySchemes:
    bearerAuth:
      $ref: '../../../common/security/bearer-auth.yaml#/components/securitySchemes/bearerAuth'