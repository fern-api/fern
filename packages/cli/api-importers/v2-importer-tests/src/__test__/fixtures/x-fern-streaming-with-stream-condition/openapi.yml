openapi: 3.1.0
info:
  version: 0.1.0
  title: Vectara REST API v2
servers:
  - url: https://api.streamingtest.io
paths:
  /v2/chats:
    post:
      tags:
        - Chats
      summary: Start a chat
      description: Create a chat while specifying the default retrieval parameters used by the prompt.
      operationId: createChat
      x-fern-streaming:
        stream-condition: $request.stream_response
        response:
          $ref: "#/components/schemas/ChatFullResponse"
        response-stream:
          $ref: "#/components/schemas/ChatStreamedResponse"
      x-fern-sdk-method-name: chat
      parameters:
        - $ref: "#/components/parameters/RequestTimeout"
        - $ref: "#/components/parameters/RequestTimeoutMillis"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRequest"
      x-stream-based-on-body: "streamResponse()"
      responses:
        "200":
          description: A response to a chat request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatFullResponse"
            text/event-stream:
              schema:
                $ref: "#/components/schemas/ChatStreamedResponse"
components:
  schemas:
    ChatRequest:
      type: object
      properties:
        query:
          description: The chat message or question.
          type: string
          example: How can I use the Vectara platform?
        stream_response:
          description: Indicates whether the response should be streamed or not.
          type: boolean
          default: false
      required:
        - query
    ChatFullResponse:
      description: Full response to a chat question when the result is not streamed.
      type: object
      properties:
        chat_id:
          description: If the chat response was stored, the ID of the chat.
          type: string
        turn_id:
          description: If the chat response was stored, the ID of the turn.
          type: string
        answer:
          description: The message from the chat model for the chat message.
          type: string
    ChatStreamedResponse:
      description: An individual event when the response is streamed.
      type: object
      properties:
        chunk:
          description: The chunk of the response.
          type: string
          example: "Hello, how can I help you today?"
  parameters:
    RequestTimeout:
      in: header
      name: Request-Timeout
      description: The API will make a best effort to complete the request in the specified seconds or time out.
      schema:
        type: integer
        minimum: 1
      required: false
    RequestTimeoutMillis:
      in: header
      name: Request-Timeout-Millis
      description: The API will make a best effort to complete the request in the specified milliseconds or time out.
      schema:
        type: integer
        minimum: 1
