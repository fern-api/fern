openapi: 3.1.0
info:
  title: Readonly Properties API
  version: 1.0.0

paths:
  /users:
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Get a user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  
  /users/validate:
    post:
      summary: Validate a user object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User object validated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: Invalid user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Cannot set read-only properties"

components:
  schemas:
    UserCreate:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
        settings:
          $ref: '#/components/schemas/UserSettings'

    User:
      type: object
      required:
        - id
        - name
        - email
        - password
        - createdAt
        - settings
        - stats
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        settings:
          $ref: '#/components/schemas/UserSettings'
        stats:
          $ref: '#/components/schemas/UserStats'

    UserSettings:
      type: object
      required:
        - theme
        - notifications
        - lastModified
        - apiKey
      properties:
        theme:
          type: string
        notifications:
          type: boolean
        lastModified:
          type: string
          format: date-time
          readOnly: true
        apiKey:
          type: string
          writeOnly: true

    UserStats:
      type: object
      required:
        - totalLogins
        - lastLoginTime
        - accountStatus
        - securityScore
      properties:
        totalLogins:
          type: integer
          readOnly: true
        lastLoginTime:
          type: string
          format: date-time
          readOnly: true
        accountStatus:
          type: string
          enum: [active, suspended, deleted]
        securityScore:
          type: integer
          writeOnly: true

