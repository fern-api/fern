{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "AuthGetTokenRequestBadRequestError": {
            "docs": "Bad request",
            "status-code": 400,
            "type": "unknown",
          },
          "AuthGetTokenRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "status-code": 401,
            "type": "unknown",
          },
        },
      },
      "rawContents": "errors:
  AuthGetTokenRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: Bad request
  AuthGetTokenRequestUnauthorizedError:
    status-code: 401
    type: unknown
    docs: Unauthorized
",
    },
    "auth.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "get-token": {
              "auth": false,
              "display-name": "Request an access token",
              "docs": "Exchange credentials or refresh token for an access token",
              "errors": [
                "root.AuthGetTokenRequestBadRequestError",
                "root.AuthGetTokenRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "request": {
                    "client_id": "client_id",
                    "client_secret": "client_secret",
                    "grant_type": "password",
                  },
                  "response": {
                    "body": {
                      "access_token": "access_token",
                      "expires_in": 1,
                      "refresh_token": "refresh_token",
                      "token_type": "Bearer",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/oauth/token",
              "request": {
                "body": {
                  "properties": {
                    "client_id": {
                      "docs": "The client identifier",
                      "type": "string",
                    },
                    "client_secret": {
                      "docs": "The client secret",
                      "type": "string",
                    },
                    "grant_type": {
                      "docs": "The type of grant to request",
                      "type": "AuthGetTokenRequestGrantType",
                    },
                    "password": {
                      "docs": "Required for password grant type",
                      "type": "optional<string>",
                    },
                    "refresh_token": {
                      "docs": "Required for refresh_token grant type",
                      "type": "optional<string>",
                    },
                    "username": {
                      "docs": "Required for password grant type",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AuthGetTokenRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful token response",
                "status-code": 200,
                "type": "AuthGetTokenResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AuthGetTokenRequestGrantType": {
            "docs": "The type of grant to request",
            "enum": [
              "password",
              "refresh_token",
              "client_credentials",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AuthGetTokenResponse": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "access_token": "optional<string>",
              "expires_in": {
                "docs": "Token expiration time in seconds",
                "type": "optional<integer>",
              },
              "refresh_token": "optional<string>",
              "token_type": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  AuthGetTokenRequestGrantType:
    enum:
      - password
      - refresh_token
      - client_credentials
    docs: The type of grant to request
    inline: true
    source:
      openapi: ../openapi.yml
  AuthGetTokenResponse:
    properties:
      access_token: optional<string>
      token_type: optional<string>
      expires_in:
        type: optional<integer>
        docs: Token expiration time in seconds
      refresh_token: optional<string>
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get-token:
      path: /oauth/token
      method: POST
      auth: false
      docs: Exchange credentials or refresh token for an access token
      source:
        openapi: ../openapi.yml
      display-name: Request an access token
      request:
        name: AuthGetTokenRequest
        body:
          properties:
            grant_type:
              type: AuthGetTokenRequestGrantType
              docs: The type of grant to request
            username:
              type: optional<string>
              docs: Required for password grant type
            password:
              type: optional<string>
              docs: Required for password grant type
            refresh_token:
              type: optional<string>
              docs: Required for refresh_token grant type
            client_id:
              type: string
              docs: The client identifier
            client_secret:
              type: string
              docs: The client secret
        content-type: application/json
      response:
        docs: Successful token response
        type: AuthGetTokenResponse
        status-code: 200
      errors:
        - root.AuthGetTokenRequestBadRequestError
        - root.AuthGetTokenRequestUnauthorizedError
      examples:
        - request:
            grant_type: password
            client_id: client_id
            client_secret: client_secret
          response:
            body:
              access_token: access_token
              token_type: Bearer
              expires_in: 1
              refresh_token: refresh_token
  source:
    openapi: ../openapi.yml
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "OAuth Token API",
      "environments": {
        "Default": "https://api.example.com/v1",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: OAuth Token API
environments:
  Default: https://api.example.com/v1
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}