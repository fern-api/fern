
imports: 
  auth: ./fernDefinition/auth.yml
  file: ./fernDefinition/file.yml
  environments: ./fernDefinition/environments.yml
  group: ./group.yml
  reviewers: ./reviewers.yml
types: 
  GeneratorsConfigurationSchema:
    audiences: 
      - generators-yml
    properties:
      auth-schemes:
        type: optional<map<string, auth.AuthSchemeDeclarationSchema>>
      api:
        type: optional<APIConfigurationSchema>
      whitelabel:
        type: optional<WhitelabelConfigurationSchema>
      metadata:
        type: optional<OutputMetadataSchema>
      readme:
        type: optional<ReadmeSchema>
      default-group:
        type: optional<string>
      groups:
        type: optional<map<string, group.GeneratorGroupSchema>>
      reviewers:
        type: optional<reviewers.ReviewersSchema>
      openapi:
        type: optional<GeneratorsOpenAPISchema>
        docs: Deprecated, use the `api` key instead

      # Deprecated use the `api` key instead
      openapi-overrides:
        type: optional<string>
        availability: deprecated
        docs: Deprecated, use the `api` key instead
      spec-origin:
        type: optional<string>
        availability: deprecated
        docs: Deprecated, use the `api` key instead
      async-api:
        type: optional<string>
        availability: deprecated
        docs: Deprecated, use the `api` key instead
      api-settings:
        type: optional<APIDefinitionSettingsSchema>
        availability: deprecated
        docs: Deprecated, use the `api` key instead
  
  APIConfigurationSchema:
    discriminated: false
    union:
      - APIConfigurationSchemaInternal
      - NamespacedAPIConfigurationSchema
      - APIConfigurationV2Schema
  
  NamespacedAPIConfigurationSchema:
    properties:
      namespaces: map<string, APIConfigurationSchemaInternal>
  
  WhitelabelConfigurationSchema: 
    properties:
      github: optional<WhitelabelGithubConfigurationSchema>
  
  WhitelabelGithubConfigurationSchema:
    properties:
      username: string
      email: string
      token: string
  
  OutputMetadataSchema:
    properties:
      description: optional<string>
      authors: optional<list<OutputMetadataAuthor>>

  OutputMetadataAuthor:
    properties:
      name: string
      email: string
  
  ReadmeSchema:
    properties:
      bannerLink: optional<string>
      introduction: optional<string>
      apiReferenceLink: optional<string>
      defaultEndpoint:
        type: optional<ReadmeEndpointSchema>
        docs: "If set, use this endpoint's snippet as the default whenever possible"
      features:
        type: optional<map<string, list<ReadmeEndpointSchema>>>
        docs: "Specifies a list of endpoints associated with the feature"
  
  ReadmeEndpointSchema:
    discriminated: false
    union:
      - type: string
        docs: "Endpoint name in 'POST /users' format"
      - ReadmeEndpointObjectSchema
  
  ReadmeEndpointObjectSchema:
    properties:
      method: string
      path: string
      stream: optional<boolean>
  
  GeneratorsOpenAPISchema:
    discriminated: false
    union:
      - GeneratorsOpenAPIObjectSchema
      - string
  
  GeneratorsOpenAPIObjectSchema:
    properties:
      path: string
      origin: optional<string>
      overrides: optional<string>
      disable-examples: optional<boolean>
      settings: APIDefinitionSettingsSchema
  
  ## V1 API Configuration (now deprecated, use v2 instead)

  APIDefinitionPathSchema:
    type: string
    docs: Path to the OpenAPI, AsyncAPI or Fern Definition

  APIDefinitionSettingsSchema:
    properties:
      use-title:
        type: optional<boolean>
        docs: Whether to use the titles of the schemas within an OpenAPI definition as the names of the types within Fern. Defaults to true.
      unions:
        type: optional<UnionSettingsSchema>
        docs: What version of union generation to use, this will grow over time. Defaults to v0.
      message-naming:
        type: optional<MessageNamingSettingsSchema>
        docs: What version of message naming to use for AsyncAPI messages, this will grow over time. Defaults to v1.
      respect-nullable-schemas:
        type: optional<boolean>
        docs: Preserves nullable schemas in API definition settings. Defaults to false, where nullable schemas are treated as optional.
      only-include-referenced-schemas:
        type: optional<boolean>
        docs: Whether to only include schemas referenced by endpoints in the generated SDK (i.e. a form of tree-shaking). Defaults to false.
      inline-path-parameters:
        type: optional<boolean>
        docs: Whether to include path parameters within the generated in-lined request. Defaults to false.
  
  UnionSettingsSchema:
    enum: 
      - v1
  
  MessageNamingSettingsSchema:
    enum:
      - v1
      - v2

  APIDefinitionWithOverridesSchema:
    properties:
      path: APIDefinitionPathSchema
      origin:
        type: optional<string>
        docs: The URL of the API definition origin, from which the file should be polled.
      overrides:
        type: optional<string>
        docs: Path to the OpenAPI or AsyncAPI overrides
      audiences:
        type: optional<list<string>>
        docs: Audiences that you would like to filter to
      settings: optional<APIDefinitionSettingsSchema>

  ProtobufDefinitionSchema:
    properties:
      root:
        type: string
        docs: The path to the `.proto` directory root (e.g. `proto`).
      target:
        type: string
        docs: The path to the target `.proto` file that defines the API (e.g. `proto/user/v1/user.proto`).
      overrides:
        type: optional<string>
        docs: Path to the overrides configuration
      local-generation:
        type: optional<boolean>
        docs: Whether to compile the `.proto` files locally. By default, we generate remotely.

  ProtobufAPIDefinitionSchema:
    properties:
      proto: ProtobufDefinitionSchema

  APIDefinitionList:
    type: list<APIDefinitionSchema>
  
  APIDefinitionSchema: 
    discriminated: false
    union:
      - APIDefinitionPathSchema
      - APIDefinitionWithOverridesSchema
      - ProtobufAPIDefinitionSchema

  APIConfigurationSchemaInternal:
    discriminated: false
    union:
      - APIDefinitionPathSchema
      - APIDefinitionWithOverridesSchema
      - APIDefinitionList
      - ProtobufAPIDefinitionSchema

  ## V2 API Configuration
  APIConfigurationV2Schema:
    properties:
      auth: optional<auth.ApiAuthSchema>
      specs: APIConfigurationV2SpecsSchema
    extends:
      - file.WithHeadersSchema
      - environments.WithEnvironmentsSchema
  
  APIConfigurationV2SpecsSchema:
    discriminated: false
    union:
      - list<AsyncAPIOrOpenAPISpecSchema>
      - ConjureSchema

  OpenAPISettingsSchema:
    properties:
      title-as-schema-name: optional<boolean>
      optional-additional-properties: optional<boolean>
      coerce-enums-to-literals: optional<boolean>
      prefer-undiscriminated-unions-with-literals: 
        type: optional<boolean>
        docs: Whether to prefer undiscriminated unions with literals. Defaults to false.
      object-query-parameters: 
        type: optional<boolean>
        docs: Enables parsing deep object query parameters
      respect-readonly-schemas:
        type: optional<boolean>
        docs: Enables exploring readonly schemas in OpenAPI specifications
      respect-nullable-schemas:
        type: optional<boolean>
        docs: Preserves nullable schemas in OpenAPI specifications. Defaults to false, where nullable schemas are treated as optional.
      only-include-referenced-schemas:
        type: optional<boolean>
        docs: Whether to only include schemas referenced by endpoints in the generated SDK (i.e. a form of tree-shaking). Defaults to false.
      inline-path-parameters:
        type: optional<boolean>
        docs: Whether to include path parameters within the generated in-lined request. Defaults to false.
      filter:
        type: optional<OpenAPIFilterSchema>
        docs: Filter to apply to the OpenAPI specification.
      example-generation: 
        type: optional<OpenAPIExampleGenerationSchema>
        docs: Fine-tune your example generation
  
  OpenAPIExampleGenerationSchema: 
    properties: 
      request: optional<RequestOrResponseExampleGenerationSchema>
      response: optional<RequestOrResponseExampleGenerationSchema>
  
  RequestOrResponseExampleGenerationSchema: 
    properties: 
      max-depth: 
        type: optional<integer>
        docs: Controls the maximum depth for which optional properties will have examples generated. A depth of 0 means no optional properties will have examples.

  OpenAPIFilterSchema:
    properties:
      endpoints:
        docs: Endpoints to include in the generated SDK (e.g. "POST /users").
        type: optional<list<string>>

  OpenAPISpecSchema:
    properties:
      openapi: string
      origin: optional<string>
      overrides: optional<string>
      namespace: optional<string>
      settings: optional<OpenAPISettingsSchema>

  AsyncAPISettingsSchema:
    properties:
      title-as-schema-name: optional<boolean>
      optional-additional-properties: optional<boolean>
      coerce-enums-to-literals: optional<boolean>
      respect-nullable-schemas: optional<boolean>

  AsyncAPISchema:
    properties:
      asyncapi: string
      origin: optional<string>
      overrides: optional<string>
      namespace: optional<string>
      settings: optional<AsyncAPISettingsSchema>

  ConjureSettingsSchema: 
    properties: {}

  ConjureSchema:
    properties:
      conjure: string

  AsyncAPIOrOpenAPISpecSchema:
    discriminated: false
    union:
      - OpenAPISpecSchema
      - AsyncAPISchema