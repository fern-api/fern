# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  DocsConfiguration:
    properties:
      instances: list<DocsInstances>
      navigation:
        type: optional<NavigationConfig>
        docs: The navigation config is skipped when multiple versions are present.
      tabs:
        type: optional<map<TabId, TabConfig>>
      versions: optional<list<VersionConfig>>
      title:
        type: optional<string>
        docs: used as tab bar title, and in the navbar if no logo is defined
      logo: optional<LogoConfiguration>
      favicon: optional<string>
      background-image:
        type: optional<string>
        docs: This background image is used to customize the appearance of your docs site.
      colors: optional<ColorsConfiguration>
      "navbar-links": optional<list<NavbarLink>>
      typography: optional<DocsTypographyConfig>
      layout:
        type: optional<LayoutConfig>
        availability: in-development
      css: optional<CssConfig>
      js: optional<JsConfig>

  TabId: string

  TabConfig:
    properties:
      display-name: string
      icon: string

  DocsInstances:
    properties:
      url: string
      "custom-domain": optional<string>
      audiences:
        type: optional<AudiencesConfig>
        availability: in-development
      private:
        type: optional<boolean>
        docs: |
          If `private` is set to true, Fern will protect the docs site with SSO.
        availability: in-development
      "edit-this-page":
        type: optional<EditThisPageConfig>
        docs: |
          If `edit-this-page` is set, Fern will add an "Edit this page" link to the bottom of each page that links to the given GitHub repository.
        availability: in-development

  # this is a partial object in case we want to add more options in the future
  EditThisPageConfig:
    properties:
      github: optional<GithubEditThisPageConfig>

  GithubEditThisPageConfig:
    properties:
      host:
        type: optional<string>
        docs: |
          @default: `github.com`
      owner: string
      repo: string
      branch:
        type: optional<string>
        docs: |
          @default: `main`

  AudiencesConfig:
    discriminated: false
    docs: |
      Restricts the API endpoints and webhooks that are included in the docs site.
      If `audiences` is not set, only entities marked as "external" will be included.
    union:
      - string
      - list<string>
      # - AudiencesRuleConfig

  # AudiencesRuleConfig:
  #   properties:
  #     include:
  #       type: optional<list<string>>
  #       docs: |
  #         If `include` is set, only entities that match the given audiences will be included in the site.
  #     exclude:
  #       type: optional<list<string>>
  #       docs: |
  #         If `exclude` is set, entities that match the given audiences will be excluded from the site.
  #     exclude-no-audience:
  #       type: optional<boolean>
  #       docs: |
  #         If `exclude-no-audience` is set to true, entities that do not have an audience will be excluded from the site.

  VersionConfig:
    properties:
      display-name: string
      path: string
      slug: optional<string>
      availability: optional<VersionAvailability>

  VersionAvailability:
    enum:
      - deprecated
      - ga
      - stable
      - beta

  VersionFileConfig:
    properties:
      navigation: NavigationConfig

  NavigationConfig:
    discriminated: false
    union:
      - UntabbedNavigationConifg
      - TabbedNavigationConfig

  UntabbedNavigationConifg: list<NavigationItem>

  TabbedNavigationConfig:
    type: list<TabbedNavigationItem>

  TabbedNavigationItem:
    properties:
      tab: TabId
      layout: list<NavigationItem>

  NavigationItem:
    discriminated: false
    union:
      - PageConfiguration
      - SectionConfiguration
      - ApiSectionConfiguration

  LogoConfiguration:
    properties:
      dark: optional<string>
      light: optional<string>
      height: optional<double>
      href: optional<string>

  DocsTypographyConfig:
    properties:
      headingsFont: optional<FontConfig>
      bodyFont: optional<FontConfig>
      codeFont: optional<FontConfig>

  LayoutConfig:
    properties:
      "page-width":
        type: optional<string>
        docs: |
          Sets the maximum width of the docs layout, including the sidebar and content.
          If `page-width` is not set, the default value is 88rem (1408px).

          Valid options are:
          - `{number}rem`
          - `{number}px`
          - `full` (100% of the viewport width)

      "content-width":
        type: optional<string>
        docs: |
          Sets the maximum width of the markdown article content.
          If `content-width` is not set, the default value is 44rem (704px).

          Valid options are:
          - `{number}rem`
          - `{number}px`

      "sidebar-width":
        type: optional<string>
        docs: |
          Sets the width of the sidebar in desktop mode.
          If `sidebar-width` is not set, the default value is 18rem (288px).

          Valid options are:
          - `{number}rem`
          - `{number}px`

      "header-height":
        type: optional<string>
        docs: |
          Sets the height of the header.
          If `header-height` is not set, the default value is 4rem (64px).

          Valid options are:
          - `{number}rem`
          - `{number}px`

      "searchbar-placement":
        type: optional<SidebarOrHeaderPlacement>
        docs: |
          Sets the placement of the searchbar.
          If `searchbar-position` is not set, the default value is `sidebar`.

      "tabs-placement":
        type: optional<SidebarOrHeaderPlacement>
        docs: |
          Set the placement of the tabs.
          If `tabs-position` is not set, the default value is `sidebar`.

  SidebarOrHeaderPlacement:
    enum:
      - header
      - sidebar

  FontConfig:
    properties:
      name:
        type: optional<string>
        docs: |
          If the `name` is not supplied, Fern will default it to a generated name that will be used to reference your custom font in the eventually injected CSS in the docs.
      path:
        type: optional<string>
        docs: The relative path of the font file. To define multiple weight and style varations of the same font, use `paths` instead.
      weight:
        type: optional<string>
        docs: |
          @default: `100 900`.
        availability: in-development
      style:
        type: optional<FontStyle>
        docs: |
          @default: `normal`.
        availability: in-development
      paths:
        type: optional<list<FontConfigPath>>
        docs: |
          Use this instead of `path` if you want to specify multiple font files for different font weights and styles.
        availability: in-development
      display:
        type: optional<FontDisplay>
        docs: |
          @default: `swap`.
        availability: in-development
      fallback:
        type: optional<list<string>>
        docs: |
          Define fallback fonts in case the custom font fails to load.
        availability: in-development
      "font-variation-settings":
        type: optional<string>
        availability: in-development

  FontStyle:
    enum:
      - normal
      - italic

  FontDisplay:
    enum:
      - auto
      - block
      - swap
      - fallback
      - optional

  FontConfigPath:
    discriminated: false
    union:
      - string
      - FontConfigVariant

  FontConfigVariant:
    properties:
      path: string
      weight:
        type: optional<string>
        docs: |
          @default: `100 900`.
      style:
        type: optional<FontStyle>
        docs: |
          @default: `normal`.

  PageConfiguration:
    properties:
      page: string
      path: string
      slug: optional<string>

  SectionConfiguration:
    properties:
      section: string
      contents: list<NavigationItem>
      collapsed: optional<boolean>
      slug: optional<string>

  ApiSectionConfiguration:
    properties:
      api: string
      "api-name":
        type: optional<string>
        docs: Name of API that we are referencing
      audiences: optional<list<string>>
      display-errors:
        type: optional<boolean>
        docs: Defaults to false
      snippets: optional<SnippetsConfiguration>

  SnippetsConfiguration:
    properties:
      python: optional<string>
      typescript: optional<string>
      go: optional<string>
      java: optional<string>

  ColorsConfiguration:
    properties:
      accentPrimary: optional<ColorConfig>
      background: optional<ColorConfig>

  ColorConfig:
    discriminated: false
    union:
      - string
      - ColorThemedConfig

  ColorThemedConfig:
    properties:
      dark: optional<string>
      light: optional<string>

  NavbarLink:
    union:
      primary: NavbarPrimaryLink
      secondary: NavbarSecondaryLink

  NavbarPrimaryLink:
    properties:
      url: string
      text: string

  NavbarSecondaryLink:
    properties:
      url: string
      text: string

  CssConfig:
    docs: |-
      The `css` object allows you to customize the appearance of your docs site by injecting custom CSS, i.e.

      ```yaml
      css: "path/to/css/file.css"
      ```

      or, multiple files:

      ```yaml
      css:
        - "path/to/css/file.css"
        - "path/to/another/css/file.css"
      ```
    discriminated: false
    union:
      - string # path to css file
      - list<string>

  JsConfig:
    docs: |-
      The `js` object allows you to customize the behavior of your docs site by injecting custom JavaScript, i.e.

      ```yaml
      js: "path/to/js/file.js"
      ```

      or, multiple files:

      ```yaml
      js:
        - "path/to/js/file.js"
        - "path/to/another/js/file.js"
      ```

      or remote js:

      ```yaml
      js:
        url: "https://example.com/path/to/js/file.js"
        strategy: "afterInteractive"
      ```

      or, mixed:

      ```yaml
      js:
        - "path/to/js/file.js"
        - path: "path/to/another/js/file.js"
          strategy: "beforeInteractive"
        - url: "https://example.com/path/to/js/file.js"
      ```
    discriminated: false
    union:
      - JsConfigOptions
      - list<JsConfigOptions>

  JsConfigOptions:
    discriminated: false
    union:
      - JsRemoteConfig
      - JsFileConfig

  JsRemoteConfig:
    properties:
      url: string
      strategy: optional<JsScriptStrategy>

  JsFileConfig:
    discriminated: false
    union:
      - string # path to js file
      - JsFileConfigSettings

  JsFileConfigSettings:
    properties:
      path: string
      strategy: optional<JsScriptStrategy>

  JsScriptStrategy:
    enum:
      - beforeInteractive
      - afterInteractive # default
      - lazyOnload
