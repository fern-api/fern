# yaml-language-server: $schema=https://schema.buildwithfern.dev/fern.json 

service: 
   base-path: /sdk
   auth: true
   endpoints: 
     generateSDK: 
       method: POST
       path: /generate
       docs: Generate an SDK for a specified API definition in one of the supported languages.
       request: GenerateSDKRequest
       response: GenerateSDKResponse
       errors:
        - InvalidRequest
        - Unauthorized
        - FailedToPublish

types:
  GenerateSDKRequest:
    properties:
      apiDefinition:
        type: APIDefinitionSchema
        docs: The API definition used as input to the SDK generation process.
      language: 
        type: TargetLanguage
        docs: The target programming language for the SDK.
      output:
        type: OutputConfiguration
        docs: The configuration for the output of the SDK generation process.
      metadata:
        type: optional<MetadataConfiguration>
        docs: Metadata configuration for the generated SDK.
      apiSettings:
        type: optional<APISettings>
        docs: API-specific configuration settings.
      options:
        type: optional<GeneratorOptions>
        docs: Additional generator options and configuration.
  GenerateSDKResponse:
    properties:
      sdkUrl:
        type: string
        docs: The URL where the generated SDK can be downloaded.
      packageMetadata: PackageMetadataSchema

  APIDefinitionSchema: 
    enum:
      - openapi
      - postman
      - ferndef

  PackageMetadataSchema:
    properties:
      packageName:
        type: string
        docs: The name of the generated package.
      version:
        type: string
        docs: The version of the generated SDK.

  OutputConfiguration:
    properties:
      location: 
        type: OutputConfigurationLocation
        docs: The destination where the SDK should be published.
      path:
        type: optional<string>
        docs: The local file system path (required if 'local-file-system' is chosen).
      repository:
        type: optional<string>
        docs: The repository where the SDK should be pushed (required if GitHub, GitLab, BitBucket is chosen).
      packageName:
        type: optional<string>
        docs: The name of the package (if publishing to a public or private package registry).
      token:
        type: optional<string>
        docs: The environment secret used to publish the package to a public or private package registry.

  OutputConfigurationLocation:
    enum:
      - public_registry
      - private_registry
      - local_file_system
      - github
      - gitlab
      - bitbucket

  TargetLanguage:
    enum:
      - typescript
      - python
      - java
      - go
      - csharp
      - ruby
      - php

  MetadataConfiguration:
    properties:
      description:
        type: optional<string>
        docs: A description of the SDK.
      authors:
        type: optional<list<string>>
        docs: List of authors for the SDK.
      keywords:
        type: optional<list<string>>
        docs: Keywords associated with the SDK.
      license: 
        type: LicenseType
        docs: License type for the SDK.
      documentationLink:
        type: optional<string>
        docs: A URL pointing to the SDK documentation.

  APISettings:
    properties:
      useTitle:
        type: optional<boolean>
        docs: Whether to use the title from the API definition.
      respectNullableSchemas:
        type: optional<boolean>
        docs: Whether to respect nullable properties in schemas.
      inlinePathParameters:
        type: optional<boolean>
        docs: Whether to inline path parameters.

  GeneratorOptions:
    properties:
      disableExamples:
        type: optional<boolean>
        docs: Disable generating examples in the SDK.
      version:
        type: optional<string>
        docs: The version of the SDK to generate.
      config:
        type: optional<map<string, unknown>>
        docs: Additional generator-specific configuration.

  LicenseType:
    enum:
      - MIT
      - value: Apache
        docs: Apache 2.0
      - Custom

errors:
  InvalidRequest: 
    status-code: 400
    docs: The request was malformed or contained invalid parameters.

  Unauthorized:
    status-code: 401
    docs: Authentication failed or missing credentials.

  FailedToPublish:
    status-code: 500
    docs: Failed to publish the SDK.