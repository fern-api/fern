# yaml-language-server: $schema=https://schema.buildwithfern.dev/fern.json 

service: 
   base-path: /sdk
   auth: true
   audiences: 
    - external
   endpoints: 
      generate: 
        method: POST
        display-name: Generate SDK
        path: /generate
        availability: pre-release
        docs: Generate an SDK for your API definition in one of our supported languages.
        request:
          name: GenerateSDKRequest
          body: 
            properties: 
              api:
                type: APIDefinition
                docs: The API definition to use as input for SDK generation.
              language: 
                type: SDKLanguage
                docs: The target programming language for the generated SDK.
              publishing:
                type: SDKPublishingConfiguration
                docs: Configuration options for publishing the generated SDK.          
        response: GenerateSDKResponse
      
      getStatus:
        method: GET
        display-name: Get SDK Generation Status
        path: /status/{jobId}
        availability: pre-release
        docs: Get the status of an SDK generation job.
        path-parameters:
          jobId:
            type: string
            docs: The ID of the SDK generation job to check the status of
        response: SDKGenerationStatus

types:
  GenerateSDKResponse:
    properties:
      jobId:
        type: string
        docs: The ID of the SDK generation job that was created

  APIDefinition: 
    union: 
      openapi: 
        type: unknown 
        docs: An OpenAPI specification to generate SDKs from.
      postman: 
        type: unknown 
        docs: A Postman Collection to generate SDKs from.  
      fern: 
        type: unknown 
        docs: A Fern Definition to generate SDKs from.
  
  SDKLanguage:
    docs: The programming language to generate the SDK in
    enum:
      - typescript
      - python
      - java
      - go
      - csharp
      - ruby
      - php
  
  SDKPublishingConfiguration: 
    properties:
      repository: 
        type: optional<Repository>
        docs: Repository to sync the generated SDK to (e.g. GitHub, GitLab)
      registry: 
        type: optional<Registry> 
        docs: Package registry where the SDK should be published

  Registry: 
    union:
      npm: NpmPublishingConfiguration
      pypi: PypiPublishingConfiguration
      maven: MavenPublishingConfiguration
      nuget: NugetPublishingConfiguration
      rubyGems: RubyGemsPublishingConfiguration
      packagist: PackagistPublishingConfiguration

  NpmPublishingConfiguration: 
    properties: 
      url: 
        type: optional<string>
        docs: Registry URL (defaults to public NPM registry)
      packageName: 
        type: string
        docs: Name of the package to publish
      token: 
        type: optional<string>
        docs: NPM authentication token for publishing
  
  PypiPublishingConfiguration:
    properties:
      url:
        type: optional<string>
        docs: Registry URL (defaults to public PyPI registry)
      packageName:
        type: string
        docs: Name of the package to publish
      token:
        type: optional<string>
        docs: PyPI authentication token for publishing

  MavenPublishingConfiguration:
    properties:
      url:
        type: optional<string>
        docs: Registry URL (defaults to Maven Central)
      coordinate:
        type: string
        docs: Maven coordinate for the package (e.g. com.company:sdk)
      username:
        type: string
        docs: Maven username for publishing
      password:
        type: string
        docs: Maven password for publishing

  NugetPublishingConfiguration:
    properties:
      url:
        type: optional<string>
        docs: Registry URL (defaults to public NuGet registry)
      packageName:
        type: string
        docs: Name of the package to publish
      token:
        type: optional<string>
        docs: NuGet authentication token for publishing

  RubyGemsPublishingConfiguration:
    properties:
      url:
        type: optional<string>
        docs: Registry URL (defaults to public RubyGems registry)
      packageName:
        type: string
        docs: Name of the package to publish
      token:
        type: optional<string>
        docs: RubyGems authentication token for publishing

  PackagistPublishingConfiguration:
    properties:
      url:
        type: optional<string>
        docs: Registry URL (defaults to public Packagist registry)
      packageName:
        type: string
        docs: Name of the package to publish
      token:
        type: optional<string>
        docs: Packagist authentication token for publishing
  
  Repository: 
    union: 
      github: GitHubRepository
      gitlab: GitLabRepository

  GitHubRepository: 
    properties:
      repository: 
        type: string
        docs: | 
          GitHub repository to sync to (format: owner/repo)
    
  GitLabRepository:
    properties:
      repository:
        type: string
        docs: | 
          GitLab repository to sync to (format: owner/repo)
  
  SDKGenerationStatus:
    union:
      running: RunningSDKGenerationStatus
      completed: CompletedSDKGenerationStatus  
      failed: FailedSDKGenerationStatus

  RunningSDKGenerationStatus:
    properties:
      estimatedTimeRemainingSeconds:
        type: optional<integer>
        docs: Estimated number of seconds remaining until SDK generation completes

  CompletedSDKGenerationStatus:
    properties:
      downloadUrl:
        type: string
        docs: URL to download the raw source code of the generated SDK
      repository: 
        type: optional<Repository>
        docs: Repository to sync the generated SDK to (e.g. GitHub, GitLab)
      registry: 
        type: optional<Registry> 
        docs: Package registry where the SDK should be published      

  FailedSDKGenerationStatus:
    properties:
      error:
        type: string
        docs: Error message explaining why generation failed
