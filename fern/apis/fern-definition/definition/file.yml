imports: 
  commons: commons.yml
  types: types.yml
  errors: errors.yml
  service: service.yml
  pagination: pagination.yml
  versioning: versioning.yml
  environments: environments.yml
  auth: auth.yml
  variables: variables.yml
  webhooks: webhooks.yml
  websocket: websocket.yml

types: 

  ## Fern definition file ## 
  DefinitionFileSchema: 
    extends: 
      - commons.WithDocsSchema
    properties: 
      imports: optional<map<string, string>>
      types: optional<map<string, types.TypeDeclarationSchema>>
      service: optional<service.HttpServiceSchema>
      errors: optional<map<string, errors.ErrorDeclarationSchema>>
      webhooks: optional<map<string, webhooks.WebhookSchema>>
      channel: optional<websocket.WebSocketChannelSchema>


  ## Package marker file ## 
  PackageMarkerFileSchema: 
    extends: DefinitionFileSchema
    properties: 
      navigation: 
        availability: deprecated
        type: optional<Navigation>
      export: optional<Export>
  
  Navigation: 
    discriminated: false
    union:  
      - string
      - list<string>
  
  Export: 
    discriminated: false
    union: 
      - string
      - ExportDetailed
  
  ExportDetailed: 
    properties: 
      dependency: string
      url: optional<string>
  
  ## Root api.yml file ## 
  WithHeadersSchema: 
    properties: 
      headers: 
        type: optional<map<string, service.HttpHeaderSchema>>
        docs: Global Headers for the entire API

  RootApiFileSchema: 
    extends: 
      - commons.WithDocsSchema
      - commons.WithDisplayName
      - environments.WithEnvironmentsSchema
      - auth.WithAuthSchema
      - WithHeadersSchema
    properties: 
      name: string
      imports: optional<map<string, string>>
      error-discrimination: optional<ErrorDiscriminationSchema>
      audiences: optional<list<string>>
      errors: optional<list<string>>
      base-path: optional<string>
      path-parameters: optional<map<string, service.HttpPathParameterSchema>>
      idempotency-headers: optional<map<string, service.HttpHeaderSchema>>
      variables: optional<map<string, variables.VariableDeclarationSchema>>
      pagination: optional<pagination.PaginationSchema>
      version: optional<versioning.VersionDeclarationSchema> 
      
  
  ErrorDiscriminationSchema: 
    discriminated: false
    union: 
      - PropertyBasedErrorDiscrimination
      - StatusCodeBasedErrorDiscrimination

  PropertyBasedErrorDiscrimination: 
    properties: 
      strategy: literal<"property">
      property-name: string
  
  StatusCodeBasedErrorDiscrimination: 
    properties: 
      strategy: literal<"status-code">
  