imports: 
  commons: commons.yml

types: 
  WithAuthSchema: 
    properties: 
      auth: optional<ApiAuthSchema>
      auth-schemes: optional<map<string, AuthSchemeDeclarationSchema>>

  ApiAuthSchema: 
    discriminated: false
    union: 
      - string
      - AuthSchemeReferenceSchema
      - AnyAuthSchemesSchema
  
  AuthSchemeReferenceSchema: 
    extends: 
      - commons.WithDocsSchema
    properties: 
      scheme: string
  
  AnyAuthSchemesSchema: 
    extends: 
      - commons.WithDocsSchema
    properties: 
      any: list<AnyAuthItem>
  
  AnyAuthItem: 
    discriminated: false
    union: 
      - string
      - AuthSchemeReferenceSchema
  
  AuthSchemeDeclarationSchema: 
    discriminated: false
    union: 
      - OAuthSchemeSchema
      - HeaderAuthSchemeSchema
      - BasicAuthSchemeSchema
      - BearerAuthSchemeSchema
  
  WithEnvironmentVariable: 
    properties: 
      env: optional<string>
  
  AuthVariable: 
    extends: 
      - WithEnvironmentVariable
      - commons.WithName
  
  HeaderAuthSchemeSchema: 
    extends: 
      - WithEnvironmentVariable
      - commons.WithName
      - commons.WithDocsSchema
    properties: 
      header: string
      type: 
        type: optional<string> 
        docs: Defaults to string
      prefix: optional<string>

  BasicAuthSchemeSchema:  
    extends: 
      - commons.WithDocsSchema
    properties: 
      scheme: literal<"basic">
      username: optional<AuthVariable>
      password: optional<AuthVariable>
  
  BearerAuthSchemeSchema: 
    extends: 
      - commons.WithDocsSchema
    properties: 
      scheme: literal<"bearer">
      token: optional<AuthVariable>

  OAuthSchemeSchema: 
    extends: 
      - commons.WithDocsSchema
    properties: 
      scheme: literal<"oauth">
      type: literal<"client-credentials">
      scopes: optional<list<string>>
      client-id-env: optional<string>
      client-secret-env: optional<string>
      token-prefix: 
        type: optional<string>
        docs: Sets the token header value prefix. Defaults to 'Bearer'
      token-header: 
        type: optional<string>
        docs: Sets the token header key name. Defaults to 'Authorization'
      get-token: OAuthGetTokenEndpointSchema
      refresh-token: optional<OAuthRefreshTokenEndpointSchema>
  
  OAuthGetTokenEndpointSchema: 
    properties: 
      endpoint: 
        type: string
        docs: "The endpoint to get the access token, such as 'auth.get_token"
      request-properties:
        type: optional<OAuthAccessTokenRequestPropertiesSchema>
      response-properties: 
        type: optional<OAuthAccessTokenResponsePropertiesSchema>
  
  OAuthAccessTokenRequestPropertiesSchema: 
    properties: 
      client-id:
        type: optional<string>
        docs: The property name for the client ID.
      client-secret: 
        type: optional<string>
        docs: The property name for the client secret.
      scopes: 
        type: optional<string>
        docs: The property name for the scopes.
  
  OAuthAccessTokenResponsePropertiesSchema: 
    properties: 
      access-token: 
        type: optional<string>
        docs: The property name for the access token.
      expires-in: 
        type: optional<string>
        docs: The property name for the expires in property.
      refresh-token:
        type: optional<string> 
        docs: The property name for the refresh token

  OAuthRefreshTokenEndpointSchema: 
    properties: 
      endpoint: 
        type: string
        docs: "The endpoint to refresh the access token, such as 'auth.refresh_token"
      request-properties:
        type: optional<OAuthRefreshTokenRequestPropertiesSchema>
      response-properties: 
        type: optional<OAuthRefreshTokenResponsePropertiesSchema>

  OAuthRefreshTokenRequestPropertiesSchema: 
    properties: 
      refresh-token: 
        type: string
        docs: The property name for the refresh token.
  
  OAuthRefreshTokenResponsePropertiesSchema: 
    properties: 
      access-token: 
        type: optional<string>
        docs: The property name for the access token.
      expires-in: 
        type: optional<string> 
        docs: The property name for the expires in property.
      refresh-token: 
        type: optional<string>
        docs: The property name for the refresh token.