imports:
  types: types.yml
  auth: auth.yml
  commons: commons.yml
  environments: environments.yml
  errors: errors.yml
  pagination: pagination.yml
  service: service.yml
  variables: variables.yml
  versioning: versioning.yml
  webhooks: webhooks.yml
  websocket: websocket.yml
types:
  DefinitionFileSchema:
    extends:
      - commons.WithDocsSchema
    properties:
      imports: optional<map<string, string>>
      types: optional<map<string, types.TypeDeclarationSchema>>
      channel: optional<websocket.WebSocketChannelSchema>
      errors: optional<map<string, errors.ErrorDeclarationSchema>>
      service: optional<service.HttpServiceSchema>
      webhooks: optional<map<string, webhooks.WebhookSchema>>
  ErrorDiscriminationSchema:
    discriminated: false
    union:
      - PropertyBasedErrorDiscrimination
      - StatusCodeBasedErrorDiscrimination
  Export:
    discriminated: false
    union:
      - string
      - ExportDetailed
  ExportDetailed:
    properties:
      dependency: string
      url: optional<string>
  Navigation:
    discriminated: false
    union:
      - string
      - list<string>
  PackageMarkerFileSchema:
    extends: DefinitionFileSchema
    properties:
      export: optional<Export>
      navigation:
        availability: deprecated
        type: optional<Navigation>
  PropertyBasedErrorDiscrimination:
    properties:
      property-name: string
      strategy: literal<"property">
  RootApiFileSchema:
    extends:
      - commons.WithDocsSchema
      - commons.WithDisplayName
      - environments.WithEnvironmentsSchema
      - auth.WithAuthSchema
      - WithHeadersSchema
    properties:
      imports: optional<map<string, string>>
      audiences: optional<list<string>>
      base-path: optional<string>
      error-discrimination: optional<ErrorDiscriminationSchema>
      errors: optional<list<string>>
      idempotency-headers: optional<map<string, service.HttpHeaderSchema>>
      name: string
      pagination: optional<pagination.PaginationSchema>
      path-parameters: optional<map<string, service.HttpPathParameterSchema>>
      variables: optional<map<string, variables.VariableDeclarationSchema>>
      version: optional<versioning.VersionDeclarationSchema>
  StatusCodeBasedErrorDiscrimination:
    properties:
      strategy: literal<"status-code">
  WithHeadersSchema:
    properties:
      headers:
        docs: Global Headers for the entire API
        type: optional<map<string, service.HttpHeaderSchema>>
