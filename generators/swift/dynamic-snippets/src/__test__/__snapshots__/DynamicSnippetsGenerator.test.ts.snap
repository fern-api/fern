// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`snippets (default) > examples > 'GET /metadata (allow-multiple)' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.service.getMetadata(

)
"
`;

exports[`snippets (default) > examples > 'GET /metadata (simple)' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.service.getMetadata(

)
"
`;

exports[`snippets (default) > examples > 'POST /big-entity (simple)' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.service.createBigEntity(
    request: BigEntity(
        castMember: ,
        extendedMovie: 
    )
)
"
`;

exports[`snippets (default) > examples > 'POST /movie (invalid request body)' 1`] = `
"[
  {
    "severity": "CRITICAL",
    "path": [
      "title"
    ],
    "message": "Expected string, got number"
  }
]"
`;

exports[`snippets (default) > examples > 'POST /movie (simple)' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.service.createMovie(
    request: Movie(
        id: "movie-c06a4ad7",
        prequel: ,
        title: "The Boy and the Heron",
        from: "Hayao Miyazaki",
        rating: 8,
        type: ,
        tag: "development",
        metadata: [
            "actors": , 
            "releaseDate": , 
            "ratings": 
        ],
        revenue: 1000000
    )
)
"
`;

exports[`snippets (default) > exhaustive > 'GET /object/get-and-return-with-optio…' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.endpoints.object.getAndReturnWithOptionalField(
    request: ObjectWithOptionalField(
        string: ,
        integer: ,
        long: ,
        double: ,
        bool: ,
        datetime: ,
        date: ,
        uuid: ,
        base64: ,
        list: ,
        set: ,
        map: ,
        bigint: 
    )
)
"
`;

exports[`snippets (default) > exhaustive > 'POST /container/list-of-objects (inva…' 1`] = `
"[
  {
    "severity": "CRITICAL",
    "path": [
      "string"
    ],
    "message": "Expected string, got boolean"
  },
  {
    "severity": "CRITICAL",
    "path": [
      "invalid"
    ],
    "message": "\\"invalid\\" is not a recognized parameter for this endpoint"
  },
  {
    "severity": "CRITICAL",
    "path": [
      "string"
    ],
    "message": "Expected string, got number"
  }
]"
`;

exports[`snippets (default) > exhaustive > 'POST /container/list-of-objects (simp…' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.endpoints.container.getAndReturnListOfObjects(
    request: [
        ObjectWithRequiredField(
            string: "one"
        ),
        ObjectWithRequiredField(
            string: "two"
        ),
        ObjectWithRequiredField(
            string: "three"
        )
    ]
)
"
`;

exports[`snippets (default) > exhaustive > 'POST /container/list-of-primitives (s…' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.endpoints.container.getAndReturnListOfPrimitives(
    request: [
        "one",
        "two",
        "three"
    ]
)
"
`;

exports[`snippets (default) > file-upload > 'POST /' 1`] = `
"import Acme

let client = AcmeAcmeClient()

try await client.service.post(

)
"
`;

exports[`snippets (default) > file-upload > 'POST /just-file' 1`] = `
"import Acme

let client = AcmeAcmeClient()

try await client.service.justFile(

)
"
`;

exports[`snippets (default) > file-upload > 'POST /just-file-with-query-params' 1`] = `
"import Acme

let client = AcmeAcmeClient()

try await client.service.justFileWithQueryParams(

)
"
`;

exports[`snippets (default) > imdb > 'GET /movies/{movieId} (simple)' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.imdb.getMovie(

)
"
`;

exports[`snippets (default) > imdb > 'POST /movies/create-movie (simple)' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.imdb.createMovie(
    request: CreateMovieRequest(
        title: "The Matrix",
        rating: 8.2
    )
)
"
`;

exports[`snippets (default) > multi-url-environment > 'Custom environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.s3.getPresignedURL(

)
"
`;

exports[`snippets (default) > multi-url-environment > 'Invalid multi url environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.s3.getPresignedURL(

)
"
`;

exports[`snippets (default) > multi-url-environment > 'Production environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.s3.getPresignedURL(

)
"
`;

exports[`snippets (default) > multi-url-environment > 'Staging environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.s3.getPresignedURL(

)
"
`;

exports[`snippets (default) > multi-url-environment > 'Unrecognized environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.s3.getPresignedURL(

)
"
`;

exports[`snippets (default) > nullable > 'Body properties' 1`] = `
"import Acme

let client = AcmeAcmeClient()

try await client.nullable.createUser(

)
"
`;

exports[`snippets (default) > nullable > 'Invalid null value' 1`] = `
"import Acme

let client = AcmeAcmeClient()

try await client.nullable.createUser(

)
"
`;

exports[`snippets (default) > nullable > 'Query parameters' 1`] = `
"import Acme

let client = AcmeAcmeClient()

try await client.nullable.getUsers(

)
"
`;

exports[`snippets (default) > single-url-environment-default > 'Production environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.dummy.getDummy(

)
"
`;

exports[`snippets (default) > single-url-environment-default > 'Staging environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.dummy.getDummy(

)
"
`;

exports[`snippets (default) > single-url-environment-default > 'custom baseURL' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.dummy.getDummy(

)
"
`;

exports[`snippets (default) > single-url-environment-default > 'invalid baseURL and environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.dummy.getDummy(

)
"
`;

exports[`snippets (default) > single-url-environment-default > 'invalid environment' 1`] = `
"import Acme

let client = AcmeAcmeClient(token: "<YOUR_API_KEY>")

try await client.dummy.getDummy(

)
"
`;
