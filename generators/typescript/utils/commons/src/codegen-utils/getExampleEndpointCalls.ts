import { ExampleEndpointCall, HttpEndpoint } from "@fern-fern/ir-sdk/api";

export function getExampleEndpointCallsForTests(endpoint: HttpEndpoint): ExampleEndpointCall[] {
    const examples: ExampleEndpointCall[] = [];
    // If any of the examples are user provided, we should only include those.
    const hasUserExamples = endpoint.userSpecifiedExamples.length > 0;
    const userExamplesHasErrorExample = endpoint.userSpecifiedExamples.some(
        (e) => e.example?.response.type === "error"
    );
    if (hasUserExamples) {
        examples.push(...endpoint.userSpecifiedExamples.map((e) => e.example).filter((e) => e != null));
        // if no user examples, add auto generated error examples
        if (!userExamplesHasErrorExample) {
            examples.push(
                ...endpoint.autogeneratedExamples
                    .map((e) => e.example)
                    .filter((e) => e != null)
                    .filter((e) => e.response.type === "error")
            );
        }

        return examples;
    }

    // Otherwise we should only include a single one of the generated examples.
    examples.push(...endpoint.autogeneratedExamples.map((e) => e.example).filter((e) => e != null));
    return examples;
}

export function getExampleEndpointCalls(endpoint: HttpEndpoint): ExampleEndpointCall[] {
    // If any of the examples are user provided, we should only include those.
    if (endpoint.userSpecifiedExamples.length > 0) {
        const examples: ExampleEndpointCall[] = [];
        for (const userDefinedExample of endpoint.userSpecifiedExamples) {
            if (userDefinedExample.example != null) {
                examples.push(userDefinedExample.example);
            }
        }
        return examples;
    }
    // Otherwise we should only include a single one of the generated examples.
    for (const autogenerated of endpoint.autogeneratedExamples) {
        if (autogenerated.example != null) {
            return [autogenerated.example];
        }
    }
    return [];
}
