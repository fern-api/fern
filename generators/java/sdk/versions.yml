- changelogEntry:
    - summary: |
        Fix wrapped requests without inline path parameters checking not rendering 
        no-request endpoint because of non-optional parameters
      type: fix
  createdAt: '2025-01-23'
  irVersion: 53
  version: 2.10.7
- changelogEntry:
    - summary: |
        Prevent accept header from being removed in wrapped requests
      type: fix
  createdAt: '2025-01-21'
  irVersion: 53
  version: 2.10.6
- changelogEntry:
    - summary: |
        Add Accept header for json responses
      type: fix
  createdAt: '2025-01-21'
  irVersion: 53
  version: 2.10.5
- changelogEntry:
    - summary: |
        Fix potential NPE initializing client options with default version
      type: fix
  createdAt: '2025-01-19'
  irVersion: 53
  version: 2.10.4
- changelogEntry:
    - summary: |
        Fix inlining unwrapped alias types.
      type: fix
  createdAt: '2025-01-17'
  irVersion: 53
  version: 2.10.3
- changelogEntry:
    - summary: |
        Omit methods with inlined types from interface definitions.
      type: fix
  createdAt: '2025-01-16'
  irVersion: 53
  version: 2.10.2
- changelogEntry:
    - summary: |
        Fix union inline type name conflict resolution.
      type: fix
  createdAt: '2025-01-16'
  irVersion: 53
  version: 2.10.1
- changelogEntry:
    - summary: |
        Support inline types in the Java generator.
      type: feat
  createdAt: '2025-01-16'
  irVersion: 53
  version: 2.10.0
- changelogEntry:
    - summary: |
        Support version headers in request and client options.
      type: feat
  createdAt: '2025-01-07'
  irVersion: 53
  version: 2.9.0
- changelogEntry:
    - summary: |
        Implement global timeout configuration for generated clients.
          ```java
          var client = Client.builder()
            .apiKey("...")
            .timeout(40)
            .build();
          ```
      type: feat
  createdAt: '2024-12-23'
  irVersion: 53
  version: 2.8.1
- changelogEntry:
    - summary: |
        Generate inline request bodies with their path parameters in the object.
      type: feat
  createdAt: '2024-12-20'
  irVersion: 53
  version: 2.8.0
- changelogEntry:
    - summary: |
        Apply Content-Type header from endpoint definition in SDK generator.
      type: feat
  createdAt: '2024-12-11'
  irVersion: 53
  version: 2.7.0
- changelogEntry:
    - summary: |
        Don't generate pagination with nonempty path. Fixes pagination seed tests breaking.
      type: fix
  createdAt: '2024-12-10'
  irVersion: 53
  version: 2.6.0
- changelogEntry:
    - summary: |
        Bump IR version to latest (v53)
      type: chore
  createdAt: '2024-12-10'
  irVersion: 53
  version: 2.5.0
- changelogEntry:
    - summary: |
        We now support overriding sdk package prefixes by adding a "package-prefix" key under the java-sdk generator 
        configuration.
      type: feat
  createdAt: '2024-12-10'
  irVersion: 46
  version: 2.4.0

- changelogEntry:
    - summary: |
        The rootProject.name is now set in settings.gradle and ci.yml uses ./gradlew sonatypeCentralUpload for publishing.
      type: fix
  createdAt: '2024-12-04'
  irVersion: 46
  version: 2.3.1

- changelogEntry:
    - summary: |
        Fix publishing to Maven Central with proper signing configuration and metadata.
      type: feat
  createdAt: '2024-12-04'
  irVersion: 46
  version: 2.3.0

- changelogEntry:
    - summary: |
        We now provide endpoint methods for streaming byte array requests in addition to the previous methods accepting
        byte array directly.
      type: feat
    - summary: |
        Bump Jackson version to latest (2.17.2)
      type: chore
  createdAt: '2024-09-26'
  irVersion: 46
  version: 2.2.0

- changelogEntry:
  - summary: |
      We no longer enforce non-null constraints for Object type properties in builders.
    type: feat
  createdAt: '2024-09-11'
  irVersion: 46
  version: 2.1.0

- changelogEntry:
  - summary: |
      The SDK generator is now on major version 2. To take this upgrade without any breaks, please add the below
      configuration to your `generators.yml` file:
      ```yaml
      generators:
        - name: fernapi/fern-java-sdk
          config:
            disable-required-property-builder-checks: true
      ```
    type: break
  - summary: |
      Generated builder methods now enforce non-null checks for required fields, ensuring that all required 
      fields are properly validated during object construction:
        ```java
        @java.lang.Override
        @JsonSetter("name")
        public NameStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }
        ```
    type: feat
  createdAt: '2024-09-05'
  irVersion: 46
  version: 2.0.0

- changelogEntry:
  - summary: |
      Public constructors can now be generated for all model types:
      ```yaml
      generators:
        - name: fernapi/fern-java-sdk
          config:
            enable-public-constructors: true # default false
        ```
    type: feat
  createdAt: '2024-09-04'
  irVersion: 46
  version: 1.0.7

- changelogEntry:
  - summary: Fixed a bug where optional collections are not handled properly in paginated responses.
    type: fix
  createdAt: '2024-09-04'
  irVersion: 46
  version: 1.0.6

- changelogEntry:
  - summary: Fixed a bug where local generation custom config doesn't pick up some values, including exception naming.
    type: fix
  createdAt: '2024-07-26'
  irVersion: 46
  version: 1.0.5

- changelogEntry:
  - summary: Fixed a bug where OkHttp responses could be closed prematurely.
    type: fix
  createdAt: '2024-07-24'
  irVersion: 46
  version: 1.0.4

- changelogEntry:
  - summary: Generated builder methods for optional fields can now accept null directly.
    type: feat
  createdAt: '2024-07-23'
  irVersion: 46
  version: 1.0.3

- changelogEntry:
  - summary: |
      The generator now adds a class-level `@JsonInclude(JsonInclude.Include.NON_ABSENT)` annotation to
      each generated type in place of the previous `@JsonInclude(JsonInclude.Include.NON_EMPTY)` by default. This is
      configurable in the `generators.yml` file:
      ```yaml
      generators:
        - name: fernapi/fern-java-sdk
          config:
            json-include: non-empty # default non-absent
      ```
    type: feat
  createdAt: '2024-07-02'
  irVersion: 46
  version: 1.0.2-rc0

- changelogEntry:
  - summary: |
      The Java SDK is now on major version 1. To take this upgrade without any breaks, please add the below
      configuration to your `generators.yml` file:
      ```yaml
      generators:
        - name: fernapi/fern-java-sdk
          config:
            base-api-exception-class-name: ApiError
            base-exception-class-name: CompanyException # Optional: This should only be set if default naming is undesirable
      ```
    type: break
  - summary: |
      We now generate Exception types for all errors that are defined in the IR. Generated clients with an
      error discrimination strategy of "status code" will throw one of these typed Exceptions based on the status code of
      error responses. Example error type:
      ```java
      public final class BadRequest extends MyCompanyApiError {
        public BadRequest(Object body) {
            super("BadRequest", 400, body);
        }
      }
      ```
    type: feat
  createdAt: '2024-06-26'
  irVersion: 46
  version: 1.0.1

- changelogEntry:
  - summary: Add support for cursor and offset pagination.
    added:
      - |
        Add support for cursor and offset pagination.

        For example, consider the following endpoint `/users` endpoint:

        ```yaml
        types:
          User:
            properties:
              name: string

          ListUserResponse:
            properties:
              next: optional<string>
              data: list<User>

        service:
          auth: false
          base-path: /users
          endpoints:
            list:
              path: ""
              method: GET
              pagination:
                cursor: $request.starting_after
                next_cursor: $response.next
                results: $response.data
              request:
                name: ListUsersRequest
                query-parameters:
                  starting_after: optional<string>
              response: ListUsersResponse
        ```

        The generated `SyncPagingIterable<User>` can then be used to traverse through the `User` objects:

        ```java
        for (User user : client.users.list(...)) {
            System.out.println(user);
        }
        ```

        Or stream them:

        ```java
        client.users.list(...).streamItems().map(user -> ...);
        ```

        Or statically calling `nextPage()` to perform the pagination manually:

        ```java
        SyncPagingIterable<User> pager = client.users.list(...);
        // First page
        System.out.println(pager.getItems());
        // Second page
        pager = pager.nextPage();
        System.out.println(pager.getItems());
        ```
    type: feat
  createdAt: '2024-06-13'
  irVersion: 46
  version: 0.10.1

- changelogEntry:
  - summary: The generator now supports BigInteger types.
    type: feat
  createdAt: '2024-06-07'
  irVersion: 46
  version: 0.10.0

- changelogEntry:
  - summary: |
      `RequestOptions` are now generated with the `timeout` field initialized to `Optional.empty()` instead of `null` to avoid NPEs if `timeout` is not set in the builder.
    type: feat
  createdAt: '2024-06-06'
  irVersion: 42
  version: 0.9.8

- changelogEntry:
  - summary: |
      The SDK generator now generates `@java.lang.Override` over `@Override` in all files to avoid clashes with any
      `Override.java` class that may have been generated in the same package. The former was used most places, but not all,
      until this release.
    type: feat
  createdAt: '2024-06-06'
  irVersion: 42
  version: 0.9.7

- changelogEntry:
  - summary: The SDK generator now supports returning response properties from client methods rather than just the responses themselves.
    type: feat
  createdAt: '2024-06-05'
  irVersion: 42
  version: 0.9.6

- changelogEntry:
  - summary: Types without fields are now generated with builders. Previously, they were not, which made them impossible to initialize.
    type: fix
  createdAt: '2024-05-30'
  irVersion: 42
  version: 0.9.5

- changelogEntry:
  - summary: The SDK now generates undiscriminated unions with de-conflicted method signatures. Previously, certain undiscriminated unions would have failed to compile due to Java's type erasure causing conflicts.
    type: fix
  createdAt: '2024-05-30'
  irVersion: 42
  version: 0.9.4

- changelogEntry:
  - summary: Generated SDK clients with an OAuth security scheme will now automatically refresh access tokens before they expire.
    type: feat
  createdAt: '2024-05-23'
  irVersion: 42
  version: 0.9.3

- changelogEntry:
  - summary: Java 8 Compatibility.
    type: fix
  createdAt: '2024-05-21'
  irVersion: 42
  version: 0.9.2

- changelogEntry:
  - summary: |
      Support OAuth without token refresh. Example of initializing a client with OAuth:

      ```java
      ExampleApiClient client = ExampleApiClient
          .builder()
          .clientId("4bf2a37d-8512-44a2-af50-28a7701d9f2e")
          .clientSecret("b3b187b0-ef48-49ba-9d99-80d89fd11c4a")
          .build();
      ```
    type: fix
  createdAt: '2024-05-15'
  irVersion: 42
  version: 0.9.1

- changelogEntry:
  - summary: Bump intermediate representation to v42
    type: internal
  createdAt: '2024-05-13'
  irVersion: 42
  version: 0.9.0-rc0

- changelogEntry:
  - summary: Corrects the fix in 0.8.10 to check null value as opposed to a .isPresent check, given the header is not `Optional`, it's always `String`
    type: fix
  createdAt: '2024-05-08'
  irVersion: 31
  version: 0.8.11

- changelogEntry:
  - summary: Fixes regression from 0.8.8, headers are no longer added to the header map unless they are non-null.
    type: fix
  createdAt: '2024-05-08'
  irVersion: 31
  version: 0.8.10

- changelogEntry:
  - summary: Generated SDK clients now handle null response bodies and avoid NPEs when they receive error responses.
    type: fix
  createdAt: '2024-05-07'
  irVersion: 31
  version: 0.8.9

- changelogEntry:
  - summary: The generated SDKs no longer require global headers that are not directly related to auth if auth is mandatory within the SDK. Previously, the generator would require all global headers if auth was mandatory.
    type: fix
  createdAt: '2024-05-07'
  irVersion: 31
  version: 0.8.8

- changelogEntry:
  - summary: |
      You can now specify publishing metadata to populate your POM on publish:
      ```yaml
      generators:
        - name: fernapi/fern-java-sdk
          version: 0.X.Y
          output:
            location: maven
            registryUrl: ""
            publish-metadata:
              author: ""
              email: ""
              package-description: ""
              reference-url: ""
      ```
    type: feat
  createdAt: '2024-03-21'
  irVersion: 31
  version: 0.8.7

- changelogEntry:
  - summary: |
      The SDK now generates RequestOptions functions for timeouts with IdempotentRequestOptions correctly, previously
      timeout functions were only taking in regular RequestOptions. This also addresses a JavaPoet issue where fields were
      being initialized twice across RequestOptions and IdempotentRequestOptions classes, preventing the SDK from generating at all.
    type: fix
  createdAt: '2024-03-20'
  irVersion: 31
  version: 0.8.6

- changelogEntry:
  - summary: |
      Add in publishing config that allows for signing published artifacts, this is required for publishing to Maven
      Central.
      To sign your artifacts, you must add the below to your publishing config:
      ```yaml
      generators:
        - name: fernapi/fern-java-sdk
          version: 0.X.Y
          output:
            location: maven
            registryUrl: ""
            signature:
              keyId: ""
              password: ""
              secretKey: ""
      ```
      and secrets can be used, similar to how API keys are specified today:
      ```yaml
      generators:
        - name: fernapi/fern-java-sdk
          version: 0.X.Y
          output:
            location: maven
            registryUrl: ""
            signature:
              keyId: ${MY_KID_ENVVAR}
              password: ${MY_SECRET_ENVVAR}
              secretKey: ${MY_SECRET_KEY_ENVVAR}
      ```
    type: feat
  createdAt: '2024-03-18'
  irVersion: 31
  version: 0.8.5

- changelogEntry:
  - summary: Update docker image for Java SDK task runner.
    type: internal
  createdAt: '2024-02-23'
  irVersion: 31
  version: 0.8.5-rc0

- changelogEntry:
  - summary: |
      The timeout specified on the RequestOptions object now sets the timeout on the entire call, not just the
      read timeout of the request.
      As a refresher, a timeout can be added per request like so:
      ```java
      RequestOptions ro = RequestOptions.builder().timeout(90).build(); // Creates a timeout of 90 seconds for the request
      //  You could also specify the timeunit, similar to as if you were using OkHttp directly
      //  RequestOptions ro = RequestOptions.builder().timeout(2, TimeUnit.MINUTES).build();
      client.films.list(ro);
      ```
    type: fix
  createdAt: '2024-02-23'
  irVersion: 31
  version: 0.8.4

- changelogEntry:
  - summary: The SDK generator now always creates a valid name for union discriminator wrapper classes.
    type: fix
  createdAt: '2024-02-23'
  irVersion: 31
  version: 0.8.3

- changelogEntry:
  - summary: |
      File upload endpoints no longer fail to compile because the reference to
      the mime type variable is present.

      ```java
      // Code that failed to compile
      String fileMimeType = Files.probeContentType(file.toPath());
      MediaType fileMediaType = fileMimeType != null ? MediaType.parse(mimeType) : null; // mimeType undefined
      // Code that now compiles
      MediaType fileMediaType = fileMimeType != null ? MediaType.parse(fileMimeType) : null;
      ```
    type: fix
  createdAt: '2024-02-21'
  irVersion: 31
  version: 0.8.2

- changelogEntry:
  - summary: |
      The RequestOptions object now supports configuring an optional timeout to apply per-request.
      ```java
      RequestOptions ro = RequestOptions.builder().timeout(90).build(); // Creates a timeout of 90 seconds for the request
      //  You could also specify the timeunit, similar to as if you were using OkHttp directly
      //  RequestOptions ro = RequestOptions.builder().timeout(2, TimeUnit.MINUTES).build();
      client.films.list(ro);
      ```
    type: feat
  createdAt: '2024-02-14'
  irVersion: 31
  version: 0.8.1

- changelogEntry:
  - summary: |
      The SDK generator now supports whitelabelling. When this is turned on,
      there will be no mention of Fern in the generated code.

      **Note**: You must be on the enterprise tier to enable this mode.
    type: feat
  createdAt: '2024-02-11'
  irVersion: 31
  version: 0.8.0

- changelogEntry:
  - summary: |
      The SDK generator now supports idempotency headers. Users
      will be able to specify the idempotency headers in RequestOptions.

      ```java
      Imdb imdb = Imdb.builder()
        .apiKey("...")
        .build();

      var response = imdb.ticket.purchase("theatre-id", IdempotentRequestOptions.builder()
        .idempotencyKey("...")
        .build());
      ```
    type: feat

  - summary: |
     The SDK generator now supports scanning API credentials
      via environment varaibles.
      ```java
      Imdb imdb = Imdb.builder()
        .apiKey("...") // defaults to System.getenv("IMDB_API_KEY")
        .build();
      ```
    type: feat

  - summary: |
      The generated models now support boolean literals and users
      do not have to specify them in the builder.
      For example, for the following object
      ```yaml
      Actor:
        properties:
          name: string
          isMale: literal<true>
      ```
      the user will not need to specify the literal properties when building
      the object.
      ```java
      var actor = Actor.builder()
        .name("Brad Pitt")
        .build();
      ```
    type: feat
  createdAt: '2024-02-04'
  irVersion: 31
  version: 0.7.1

- changelogEntry:
  - summary: Release version 0.6.1
    type: internal
  createdAt: '2024-02-03'
  irVersion: 31
  version: 0.6.1
