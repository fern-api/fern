[project]
name = "fern_python"
version = "0.0.0"
description = ""
authors = []
requires-python = ">=3.9,<4.0"
dependencies = [
    "black>=25.1.0,<26.0.0",
    "fern-fern-fdr-sdk>=0.98.20,<0.99.0",
    "fern-fern-generator-cli-sdk>=0.1.1,<0.2.0",
    "fern-fern-generator-exec-sdk>=0.82.5,<0.83.0",
    "fern-fern-ir-v60==60.3.1",
    "isort>=6.0.1,<7.0.0",
    "ordered-set>=4.1.0,<5.0.0",
    "pydantic>=2.11.9",
    "pytest>=7.4.4",
    "pyyaml>=6.0.3",
    "typer[all]>=0.6.1,<0.7.0",
]

[project.optional-dependencies]
dev = [
    "mypy==1.13.0",
    "pre-commit>=2.20.0,<3.0.0",
    "pytest>=7.4.2,<8.0.0",
    "pytest-only>=2.0.0,<3.0.0",
    "ruff==0.11.5",
    "setuptools>=80.9.0,<81.0.0",
]

[tool.poetry]
packages = [
    { include = "fern_python", from = "src" }
]

[tool.poetry.dependencies]
fern-fern-generator-exec-sdk = { version = "^0.82.5", source = "fern-prod" }
fern-fern-fdr-sdk = { version = "^0.98.20", source = "fern-prod" }
fern-fern-generator-cli-sdk = { version = "^0.1.1", source = "fern-prod" }

[[tool.poetry.source]]
name = "fern-prod"
url = "https://pypi.buildwithfern.com/"
priority = "supplemental"

[tool.uv.sources]
fern-fern-generator-exec-sdk = { index = "fern-prod" }
fern-fern-fdr-sdk = { index = "fern-prod" }
fern-fern-generator-cli-sdk = { index = "fern-prod" }
fern-fern-ir-v60 = { index = "fern-prod" }

[[tool.uv.index]]
name = "fern-prod"
url = "https://pypi.buildwithfern.com/"
explicit = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--ignore-glob=tests/**/generated --ignore-glob=tests/**/snapshots"

[tool.ruff]
line-length = 120
target-version = "py38"
include = ["*.py", "*.pyi"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
]
ignore = [
    "E402",  # Module level import not at top of file
    "E501",  # Line too long
    "E711",  # Comparison to `None` should be `cond is not None`
    "E712",  # Avoid equality comparisons to `True`; use `if ...:` checks
    "E721",  # Use `is` and `is not` for type comparisons, or `isinstance()` for insinstance checks
    "E722",  # Do not use bare `except`
    "E731",  # Do not assign a `lambda` expression, use a `def`
    "F821",  # Undefined name
    "F841"   # Local variable ... is assigned to but never used
]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[dependency-groups]
dev = [
    "syrupy>=4.9.1",
]
