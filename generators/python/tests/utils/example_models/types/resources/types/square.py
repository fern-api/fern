# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class Square(UncheckedBaseModel):
    length: float

    def __init__(self, **kwargs):
        print(f"[DEBUG] Creating Square object with kwargs: {kwargs}")
        super().__init__(**kwargs)
        print(f"[DEBUG] Square object created with length: {self.length}")

    def __post_init__(self):
        print(f"[DEBUG] Square.__post_init__ called for length: {self.length}")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            extra = pydantic.Extra.allow
