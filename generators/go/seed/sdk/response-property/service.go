// This file was auto-generated by Fern from our API Definition.

package responseproperty

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/response-property/fern/core"
)

type OptionalStringResponse = *StringResponse

type StringResponse struct {
	Data string `json:"data" url:"data"`

	_rawJSON json.RawMessage
}

func (s *StringResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler StringResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = StringResponse(value)
	s._rawJSON = json.RawMessage(data)
	return nil
}

func (s *StringResponse) String() string {
	if len(s._rawJSON) > 0 {
		if value, err := core.StringifyJSON(s._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type OptionalWithDocs = *WithDocs

type Response struct {
	Metadata map[string]string `json:"metadata,omitempty" url:"metadata,omitempty"`
	Docs     string            `json:"docs" url:"docs"`
	Data     *Movie            `json:"data,omitempty" url:"data,omitempty"`

	_rawJSON json.RawMessage
}

func (r *Response) UnmarshalJSON(data []byte) error {
	type unmarshaler Response
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = Response(value)
	r._rawJSON = json.RawMessage(data)
	return nil
}

func (r *Response) String() string {
	if len(r._rawJSON) > 0 {
		if value, err := core.StringifyJSON(r._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}
