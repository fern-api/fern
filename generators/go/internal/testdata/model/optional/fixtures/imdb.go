// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "sdk/internal"
)

type AnotherType struct {
	String *string `json:"string,omitempty" url:"string,omitempty"`
	Type   *Type   `json:"type,omitempty" url:"type,omitempty"`

	extraProperties map[string]interface{}
}

func (a *AnotherType) GetString() *string {
	if a == nil {
		return nil
	}
	return a.String
}

func (a *AnotherType) GetType() *Type {
	if a == nil {
		return nil
	}
	return a.Type
}

func (a *AnotherType) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AnotherType) UnmarshalJSON(data []byte) error {
	type unmarshaler AnotherType
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AnotherType(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	return nil
}

func (a *AnotherType) String() string {
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type Type struct {
	Name string `json:"name" url:"name"`

	extraProperties map[string]interface{}
}

func (t *Type) GetName() string {
	if t == nil {
		return ""
	}
	return t.Name
}

func (t *Type) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *Type) UnmarshalJSON(data []byte) error {
	type unmarshaler Type
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = Type(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	return nil
}

func (t *Type) String() string {
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}
