# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  commons: commons.yml
types:
  TypeDeclaration:
    docs: "A type, which is a name and a shape"
    extends: commons.Declaration
    properties:
      name: DeclaredTypeName
      shape: Type
      examples: list<ExampleType>
      referencedTypes:
        docs: All other named types that this type references (directly or indirectly)
        type: set<DeclaredTypeName>

  DeclaredTypeName:
    properties:
      typeId: commons.TypeId
      fernFilepath: commons.FernFilepath
      name: commons.Name

  Type:
    discriminant:
      value: _type
      name: type
    union:
      alias: AliasTypeDeclaration
      enum: EnumTypeDeclaration
      object: ObjectTypeDeclaration
      union: UnionTypeDeclaration
      undiscriminatedUnion: UndiscriminatedUnionTypeDeclaration

  AliasTypeDeclaration:
    properties:
      aliasOf: TypeReference
      resolvedType: ResolvedTypeReference
  ResolvedTypeReference:
    discriminant:
      value: _type
      name: type
    union:
      container:
        type: ContainerType
        key: container
      named: ResolvedNamedType
      primitive:
        type: PrimitiveType
        key: primitive
      unknown: {}
  ResolvedNamedType:
    properties:
      name: DeclaredTypeName
      shape: ShapeType
  ShapeType:
    enum:
      - ENUM
      - OBJECT
      - UNION
      - UNDISCRIMINATED_UNION

  EnumTypeDeclaration:
    properties:
      values: list<EnumValue>
  EnumValue:
    extends: commons.Declaration
    properties:
      name: commons.NameAndWireValue

  ObjectTypeDeclaration:
    properties:
      extends:
        docs: "A list of other types to inherit from"
        type: list<DeclaredTypeName>
      properties: list<ObjectProperty>
  ObjectProperty:
    extends: commons.Declaration
    properties:
      name: commons.NameAndWireValue
      valueType: TypeReference

  UnionTypeDeclaration:
    properties:
      discriminant: commons.NameAndWireValue
      extends:
        docs: "A list of other types to inherit from"
        type: list<DeclaredTypeName>
      types: list<SingleUnionType>
      baseProperties: list<ObjectProperty>
  SingleUnionType:
    extends: commons.WithDocs
    properties:
      discriminantValue: commons.NameAndWireValue
      shape: SingleUnionTypeProperties
  SingleUnionTypeProperties:
    discriminant:
      value: _type
      name: propertiesType
    union:
      samePropertiesAsObject: DeclaredTypeName
      singleProperty: SingleUnionTypeProperty
      noProperties: {}
  SingleUnionTypeProperty:
    properties:
      name: commons.NameAndWireValue
      type: TypeReference

  UndiscriminatedUnionTypeDeclaration:
    properties:
      members: list<UndiscriminatedUnionMember>
  UndiscriminatedUnionMember:
    extends: commons.WithDocs
    properties:
      type: TypeReference

  TypeReference:
    discriminant:
      value: _type
      name: type
    union:
      container:
        type: ContainerType
        key: container
      named: DeclaredTypeName
      primitive:
        type: PrimitiveType
        key: primitive
      unknown: {}
  ContainerType:
    discriminant:
      value: _type
      name: type
    union:
      list:
        type: TypeReference
        key: list
      map: MapType
      optional:
        type: TypeReference
        key: optional
      set:
        type: TypeReference
        key: set
      literal:
        type: Literal
        key: literal
  MapType:
    properties:
      keyType: TypeReference
      valueType: TypeReference
  PrimitiveType:
    enum:
      - INTEGER
      - DOUBLE
      - STRING
      - BOOLEAN
      - value: LONG
        docs: "Within the range -2^53 to 2^53"
      - DATE_TIME
      - DATE
      - UUID
      - BASE_64
  Literal:
    union:
      string:
        type: string
        key: string

  # examples

  ExampleType:
    extends:
      - commons.WithJsonExample
      - commons.WithDocs
    properties:
      name: optional<commons.Name>
      shape: ExampleTypeShape

  ExampleTypeShape:
    union:
      alias: ExampleAliasType
      enum: ExampleEnumType
      object: ExampleObjectType
      union: ExampleSingleUnionType

  ExampleAliasType:
    properties:
      value: ExampleTypeReference

  ExampleEnumType:
    properties:
      wireValue: string

  ExampleObjectType:
    properties:
      properties: list<ExampleObjectProperty>

  ExampleObjectProperty:
    properties:
      wireKey: string
      value: ExampleTypeReference
      originalTypeDeclaration:
        docs: |
          this property may have been brought in via extension. originalTypeDeclaration
          is the name of the type that contains this property
        type: DeclaredTypeName

  ExampleSingleUnionType:
    properties:
      wireDiscriminantValue: string
      properties: ExampleSingleUnionTypeProperties

  ExampleSingleUnionTypeProperties:
    union:
      samePropertiesAsObject: ExampleNamedType
      singleProperty: ExampleTypeReference
      noProperties: {}

  ExampleTypeReference:
    extends: commons.WithJsonExample
    properties:
      shape: ExampleTypeReferenceShape

  ExampleTypeReferenceShape:
    union:
      primitive:
        type: ExamplePrimitive
        key: primitive
      container:
        type: ExampleContainer
        key: container
      unknown:
        type: unknown
        key: unknown
      named: ExampleNamedType

  ExampleContainer:
    union:
      list:
        type: list<ExampleTypeReference>
        key: list
      set:
        type: list<ExampleTypeReference>
        key: set
      optional:
        type: optional<ExampleTypeReference>
        key: optional
      map:
        type: list<ExampleKeyValuePair>
        key: map

  ExampleKeyValuePair:
    properties:
      key: ExampleTypeReference
      value: ExampleTypeReference

  ExamplePrimitive:
    union:
      integer:
        type: integer
        key: integer
      double:
        type: double
        key: double
      string:
        type: string
        key: string
      boolean:
        type: boolean
        key: boolean
      long:
        type: long
        key: long
      datetime:
        type: datetime
        key: datetime
      date:
        type: date
        key: date
      uuid:
        type: uuid
        key: uuid

  ExampleNamedType:
    properties:
      typeName: DeclaredTypeName
      shape: ExampleTypeShape
