// This file was auto-generated by Fern from our API Definition.

package api

import (
	fmt "fmt"
)

type Enum string

const (
	// The first enum value.
	EnumOne   Enum = "ONE"
	EnumTwo   Enum = "TWO"
	EnumThree Enum = "THREE"
)

func NewEnumFromString(s string) (Enum, error) {
	switch s {
	case "ONE":
		return EnumOne, nil
	case "TWO":
		return EnumTwo, nil
	case "THREE":
		return EnumThree, nil
	}
	var t Enum
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e Enum) Ptr() *Enum {
	return &e
}

type Something string

const (
	Somethingone Something = "one"
	SomethingOne Something = "One"
	SomethingONe Something = "ONe"
	SomethingONE Something = "ONE"
)

func NewSomethingFromString(s string) (Something, error) {
	switch s {
	case "one":
		return Somethingone, nil
	case "One":
		return SomethingOne, nil
	case "ONe":
		return SomethingONe, nil
	case "ONE":
		return SomethingONE, nil
	}
	var t Something
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (s Something) Ptr() *Something {
	return &s
}
