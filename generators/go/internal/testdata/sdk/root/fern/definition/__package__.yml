types:
  Bar:
    properties: {}
    extends:
      - Foo

  Foo:
    properties:
      id:
        type: optional<id>
      name:
        type: optional<string>
      list:
        type: optional<string>
      type:
        type: optional<FooType>
      request:
        type: optional<Request>
      delay:
        type: optional<string>

  FooType:
    enum:
      - name: one
        value: one
      - name: two
        value: two
      - name: three
        value: three
      - name: four
        value: four

  Baz:
    properties:
      id:
        type: optional<id>
      name:
        type: optional<string>
      list:
        type: optional<string>
      description:
        type: optional<string>
      hasDocs:
        docs: |
          This field has documentation, so it should be rendered
          just above the field.
          Note: Newlines should be preserved.
        type: optional<string>

  id:
    type: string

  Request:
    properties:
      url:
        type: string
      headers:
        type: optional<map<string, unknown>>
      body:
        type: optional<string>
      platform:
        type: optional<literal<"platform">>
      unknown:
        type: optional<unknown>

  Error:
    properties:
      message:
        type: optional<string>
      recursive:
        type: optional<list<Error>>

service:
  auth: false
  base-path: ""
  endpoints:
    getFoo:
      path: /foo
      method: GET
      auth: true
      response:
        type: list<Foo>
      errors: []

    postFoo:
      path: /foo
      method: POST
      auth: true
      request:
        body:
          type: Bar
      response:
        type: Foo
      errors:
        - ConflictError
        - UnprocessableEntityError

    getFooFooId:
      path: /foo/{foo_id}
      method: GET
      auth: true
      path-parameters:
        foo_id:
          type: id
      response:
        type: Foo
      errors:
        - NotFoundError

    patchFooFooId:
      path: /foo/{foo_id}
      method: PATCH
      path-parameters:
        foo_id:
          type: id
      request:
        body:
          type: Foo
      response:
        type: Foo
      errors:
        - NotFoundError
        - ConflictError
        - UnprocessableEntityError

    deleteFooFooId:
      path: /foo/{foo_id}
      method: DELETE
      auth: true
      path-parameters:
        foo_id:
          type: id
      errors:
        - NotFoundError

    postFooFooIdRun:
      path: /foo/{foo_id}/run
      method: POST
      auth: true
      path-parameters:
        foo_id:
          type: id
      response:
        type: Foo
      errors:
        - NotFoundError
        - ConflictError

    postFooBatchCreate:
      path: /foo/batch-create
      method: POST
      auth: true
      request:
        body:
          type: list<Bar>
      response:
        type: list<Foo>
      errors:
        - NotFoundError
        - ConflictError
        - ContentTooLargeError
        - UnprocessableEntityError

    postFooBatchDelete:
      path: /foo/batch-delete
      method: POST
      auth: true
      request:
        body:
          type: list<id>
      errors:
        - NotFoundError
        - ContentTooLargeError

errors:
  NotFoundError:
    status-code: 404
    type: Error

  ConflictError:
    status-code: 409
    type: Error

  ContentTooLargeError:
    status-code: 413
    type: Error

  UnprocessableEntityError:
    status-code: 422
    type: Error
