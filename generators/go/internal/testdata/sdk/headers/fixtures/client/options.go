// This file was auto-generated by Fern from our API Definition.

package client

import (
	core "github.com/fern-api/fern-go/internal/testdata/sdk/headers/fixtures/core"
	option "github.com/fern-api/fern-go/internal/testdata/sdk/headers/fixtures/option"
	uuid "github.com/google/uuid"
	http "net/http"
	time "time"
)

// WithBaseURL sets the base URL, overriding the default
// environment, if any.
func WithBaseURL(baseURL string) *core.BaseURLOption {
	return option.WithBaseURL(baseURL)
}

// WithHTTPClient uses the given HTTPClient to issue the request.
func WithHTTPClient(httpClient core.HTTPClient) *core.HTTPClientOption {
	return option.WithHTTPClient(httpClient)
}

// WithHTTPHeader adds the given http.Header to the request.
func WithHTTPHeader(httpHeader http.Header) *core.HTTPHeaderOption {
	return option.WithHTTPHeader(httpHeader)
}

// WithMaxAttempts configures the maximum number of retry attempts.
func WithMaxAttempts(attempts uint) *core.MaxAttemptsOption {
	return option.WithMaxAttempts(attempts)
}

// WithCustom sets the custom auth request header.
func WithCustom(custom *[]byte) *core.CustomOption {
	return option.WithCustom(custom)
}

// WithXApiName sets the xApiName request header.
func WithXApiName(xApiName string) *core.XApiNameOption {
	return option.WithXApiName(xApiName)
}

// WithXApiId sets the xApiId request header.
func WithXApiId(xApiId uuid.UUID) *core.XApiIdOption {
	return option.WithXApiId(xApiId)
}

// WithXApiDatetime sets the xApiDatetime request header.
func WithXApiDatetime(xApiDatetime time.Time) *core.XApiDatetimeOption {
	return option.WithXApiDatetime(xApiDatetime)
}

// WithXApiDate sets the xApiDate request header.
func WithXApiDate(xApiDate time.Time) *core.XApiDateOption {
	return option.WithXApiDate(xApiDate)
}

// WithXApiBytes sets the xApiBytes request header.
func WithXApiBytes(xApiBytes []byte) *core.XApiBytesOption {
	return option.WithXApiBytes(xApiBytes)
}

// WithXApiOptionalName sets the xApiOptionalName request header.
func WithXApiOptionalName(xApiOptionalName *string) *core.XApiOptionalNameOption {
	return option.WithXApiOptionalName(xApiOptionalName)
}

// WithXApiOptionalId sets the xApiOptionalId request header.
func WithXApiOptionalId(xApiOptionalId *uuid.UUID) *core.XApiOptionalIdOption {
	return option.WithXApiOptionalId(xApiOptionalId)
}

// WithXApiOptionalDatetime sets the xApiOptionalDatetime request header.
func WithXApiOptionalDatetime(xApiOptionalDatetime *time.Time) *core.XApiOptionalDatetimeOption {
	return option.WithXApiOptionalDatetime(xApiOptionalDatetime)
}

// WithXApiOptionalDate sets the xApiOptionalDate request header.
func WithXApiOptionalDate(xApiOptionalDate *time.Time) *core.XApiOptionalDateOption {
	return option.WithXApiOptionalDate(xApiOptionalDate)
}

// WithXApiOptionalBytes sets the xApiOptionalBytes request header.
func WithXApiOptionalBytes(xApiOptionalBytes *[]byte) *core.XApiOptionalBytesOption {
	return option.WithXApiOptionalBytes(xApiOptionalBytes)
}

// WithIdempotencyKey sets the idempotencyKey request header.
func WithIdempotencyKey(idempotencyKey string) *core.IdempotencyKeyOption {
	return option.WithIdempotencyKey(idempotencyKey)
}
