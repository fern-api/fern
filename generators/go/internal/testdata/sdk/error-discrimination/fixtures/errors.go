// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	core "github.com/fern-api/fern-go/internal/testdata/sdk/error-discrimination/fixtures/core"
)

type NotFoundError struct {
	*core.APIError
	Body string
}

func (n *NotFoundError) UnmarshalJSON(data []byte) error {
	var body string
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	n.StatusCode = 404
	n.Body = body
	return nil
}

func (n *NotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(n.Body)
}

func (n *NotFoundError) Unwrap() error {
	return n.APIError
}

type OrganizationNotFoundError struct {
	*core.APIError
	Body *OrganizationNotFoundErrorBody
}

func (o *OrganizationNotFoundError) UnmarshalJSON(data []byte) error {
	var body *OrganizationNotFoundErrorBody
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	o.StatusCode = 404
	o.Body = body
	return nil
}

func (o *OrganizationNotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.Body)
}

func (o *OrganizationNotFoundError) Unwrap() error {
	return o.APIError
}

type UntypedNotFoundError struct {
	*core.APIError
}

func (u *UntypedNotFoundError) UnmarshalJSON(data []byte) error {
	u.StatusCode = 404
	return nil
}

func (u *UntypedNotFoundError) MarshalJSON() ([]byte, error) {
	return nil, nil
}

type UserNotFoundError struct {
	*core.APIError
	Body *UserNotFoundErrorBody
}

func (u *UserNotFoundError) UnmarshalJSON(data []byte) error {
	var body *UserNotFoundErrorBody
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	u.StatusCode = 404
	u.Body = body
	return nil
}

func (u *UserNotFoundError) MarshalJSON() ([]byte, error) {
	return json.Marshal(u.Body)
}

func (u *UserNotFoundError) Unwrap() error {
	return u.APIError
}
