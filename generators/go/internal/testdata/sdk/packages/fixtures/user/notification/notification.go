// This file was auto-generated by Fern from our API Definition.

package notification

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/fern-api/fern-go/internal/testdata/sdk/packages/fixtures/internal"
)

type Notification struct {
	Id      string `json:"id" url:"id"`
	Message string `json:"message" url:"message"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (n *Notification) GetId() string {
	if n == nil {
		return ""
	}
	return n.Id
}

func (n *Notification) GetMessage() string {
	if n == nil {
		return ""
	}
	return n.Message
}

func (n *Notification) GetExtraProperties() map[string]interface{} {
	return n.extraProperties
}

func (n *Notification) UnmarshalJSON(data []byte) error {
	type unmarshaler Notification
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = Notification(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *n)
	if err != nil {
		return err
	}
	n.extraProperties = extraProperties
	n.rawJSON = json.RawMessage(data)
	return nil
}

func (n *Notification) String() string {
	if len(n.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(n.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}
