name: Nightly Seed Packaging

on:
  # Runs every night at 5:00 AM UTC (1:00 AM ET)
  schedule:
    - cron: "0 5 * * *"
  # CHRISM - temporary for testing
  push:
    branches:
      - mallinson/nightly-seed-packaging-testing-branch
  # Runs when triggered manually to do so
  workflow_dispatch:

# Cancel previous workflows when another is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-seed-test:
    runs-on: ${{ matrix.runs-on }}
    # CHRISM - temp
    if: false
    strategy:
      fail-fast: false # Let all tests run and cascade errors, will only PR generator updates that passed
      matrix:
        sdk-name:
          [
            ruby-model,
            ruby-sdk,
            ruby-sdk-v2,
            pydantic,
            python-sdk,
            fastapi,
            openapi,
            postman,
            java-sdk,
            java-model,
            java-spring,
            ts-sdk,
            ts-express,
            go-fiber,
            go-model,
            go-sdk,
            csharp-model,
            csharp-sdk,
            php-model,
            php-sdk,
            swift-sdk,
            rust-model,
            rust-sdk,
          ]
        include:
          # CHRISM???
          # Every generator runs on ubuntu-latest except the python-sdk, which requires more space right now
          - runs-on: Seed
            sdk-name: python-sdk
          - runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/install

      - uses: bufbuild/buf-setup-action@v1.34.0
        with:
          github_token: ${{ github.token }}

      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Install protoc-gen-openapi
        shell: bash
        run: go install github.com/fern-api/protoc-gen-openapi/cmd/protoc-gen-openapi@latest

      - name: Build seed
        shell: bash
        run: |
          pnpm seed:build

      - name: Save seed test log to file
        id: save-seed-test-log-to-file
        run: |
          pnpm seed:local test --generator ${{ matrix.sdk-name }} --parallel 16 --allow-unexpected-failures > ${{ matrix.sdk-name }}-seed-test-log.txt

      - name: Upload seed test log as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.sdk-name }}-seed-test-log.txt
          path: ${{ matrix.sdk-name }}-seed-test-log.txt
          if-no-files-found: error
          retention-days: 1

      - name: Echo info for this run
        run: |
          echo "Artifact name: ${{ matrix.sdk-name }}-seed-test-log.txt"
          echo "GitHub event name: ${{ github.event_name }}"
          echo "GitHub repository name: ${{ github.repository }}"
          echo "GitHub workflow name: ${{ github.workflow }}"
          echo "GitHub workflow run ID: ${{ github.run_id }}"

  # Always trigger this stage. Failing jobs for a generator will continue to fail and won't PR any changes
  build-test-packages:
    runs-on: ubuntu-latest
    if: always()
    # CHRISM - temp
    # needs: [run-seed-test]
    strategy:
      fail-fast: false
      matrix:
        sdk-name:
          [
            ruby-model,
            ruby-sdk,
            ruby-sdk-v2,
            pydantic,
            python-sdk,
            fastapi,
            openapi,
            postman,
            java-sdk,
            java-model,
            java-spring,
            ts-sdk,
            ts-express,
            go-fiber,
            go-model,
            go-sdk,
            csharp-model,
            csharp-sdk,
            php-model,
            php-sdk,
            swift-sdk,
            rust-model,
            rust-sdk,
          ]
    steps:
      - name: Make artifacts directory
        shell: bash
        run: |
          mkdir -p artifacts

      - name: Download package file artifact
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts
          name: ${{ matrix.sdk-name }}-seed-test-log.txt
          run-id: 18135449832 # CHRISM - temp
          github-token: ${{ secrets.FERN_GITHUB_PAT }}
          repository: ${{ github.repository }}
          merge-multiple: true

      - name: Package Seed Tests
        id: package-tests
        uses: fern-api/package-seed-test@mallinson/packaging-setup # CHRISM - set to tag
        with:
          seed-generator-alias: ${{ matrix.sdk-name }}
          number-of-packages: 10
          add-package-for-leftovers: true
          split-tests-cutoff-time-in-seconds: 9600 # Roughly 10 minutes (across 16 batches, but will depend on concurrency runners)
          seed-test-log-file-path: artifacts/${{ matrix.sdk-name }}-seed-test-log.txt

      - name: Create Seed Packages File
        id: create-seed-packages-file
        run: |
          BASH_VAR='${{ steps.package-tests.outputs.json-file-contents }}'
          echo "$BASH_VAR" > "${{ matrix.sdk-name }}-seed-packages.json"

      - name: Upload Seed Packages File as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.sdk-name }}-seed-packages.json
          path: ${{ matrix.sdk-name }}-seed-packages.json
          if-no-files-found: error
          retention-days: 1

  pr-package-files:
    runs-on: ubuntu-latest
    if: always()
    needs: [build-test-packages]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download package file artifact
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts
          pattern: "*-seed-packages.json"
          merge-multiple: true

      - name: Check and Make Directory
        run: |
          if [ ! -d ".github/workflow-resource-files/seed-packages" ]; then
            mkdir -p .github/workflow-resource-files/seed-packages
          fi

      - name: Overwrite Repo Package Files
        run: |
          cp -f artifacts/*-seed-packages.json .github/workflow-resource-files/seed-packages/

      - name: Lint the package files
        run: |
          pnpm prettier --write .github/workflow-resource-files/seed-packages/**

      # Create PR, approve and set to merge per generator
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.FERN_GITHUB_PAT }}
          commit-message: "chore(internal): update seed test packages"
          title: "chore(internal): update seed test packages"
          branch: update-seed-test-packages
          body: "Auto-generated PR, triggered by nightly-seed-packaging workflow with: ${{ github.event_name }} from branch: ${{ github.ref_name }}.\nGitHub workflow run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          delete-branch: true
          add-paths: |
            .github/workflow-resource-files/seed-packages/**
          labels: |
            seed

      - name: Log PR Creation Failure
        if: steps.cpr.outputs.pull-request-operation != 'created'
        shell: bash
        run: |
          echo "PR was not created, likely due to no diff for seed test package file"

      - name: Log PR Creation Details
        if: steps.cpr.outputs.pull-request-operation == 'created'
        shell: bash
        run: |
          echo "PR Created: ${{ steps.cpr.outputs.pull-request-url }}"

      #  CHRISM add back
      # - name: Enable Pull Request Automerge
      #   if: steps.cpr.outputs.pull-request-operation == 'created'
      #   uses: peter-evans/enable-pull-request-automerge@v3
      #   with:
      #     token: ${{ secrets.FERN_GITHUB_PAT }}
      #     pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
      #     merge-method: squash

      # - name: Approve PR
      #   if: steps.cpr.outputs.pull-request-operation == 'created'
      #   uses: ./.github/actions/auto-approve
      #   with:
      #     approver-gh-token: ${{ secrets.PR_BOT_GH_PAT }}
      #     pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
