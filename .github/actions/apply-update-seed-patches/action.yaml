name: Apply Update Seed Patches
description: Apply the patch artifacts that match the passed in pattern. Let the calling workflow apply patches by commit or PR depending on workflow.

inputs:
  patch-pattern:
    description: "Pattern to determine which artifacts to apply as patches."
    required: true
  checkout-ref:
    description: "Specific branch to checkout, depending on workflow. No input will checkout default branch in detached HEAD (okay for applying by PR workflow)"
    required: false
    default: ""

outputs:
  has-patches:
    description: "Whether or not there were patches found to update seed."
    value: ${{ steps.get-number-of-patches.outputs.HAS_PATCHES }}

runs:
  using: "composite"
  steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.checkout-ref }}

    - name: Create artifacts downloads directory
      shell: bash
      run: |
        DIRECTORY=artifacts
        if [ ! -d "$DIRECTORY" ]; then
          echo "'$DIRECTORY' does NOT exist, creating it now."
          mkdir $DIRECTORY
        else
          echo "WARNING: Directory '$DIRECTORY' already exists. Not an immediate error but could cause a problem downstream."
        fi

    # Merge-multiple is set so all patches are downloaded into the same folder. Otherwise
    # they are subfoldered into folders that match *.patch pattern and cause errors downstream
    - name: Download patches
      uses: actions/download-artifact@v5
      with:
        path: ./artifacts
        merge-multiple: true

    - name: Display content of a folder
      shell: bash
      run: |
        echo "Content of 'artifacts' folder:"
        ls -R artifacts/

    - name: Get number of patches
      shell: bash
      id: get-number-of-patches
      run: |
        # Apply patches per generator for multiple, separate, PRs
        PATCHES_PATTERN="${{ inputs.patch-pattern }}"
        file_count=$(find ./artifacts -type f -name "$PATCHES_PATTERN" | wc -l)
        echo "Number of patches downloaded: $file_count"
        if [ "$file_count" -gt 0 ]; then
          echo "HAS_PATCHES=true" >> $GITHUB_OUTPUT
        else
          echo "HAS_PATCHES=false" >> $GITHUB_OUTPUT
        fi

    - name: Apply patches
      shell: bash
      if: ${{ steps.get-number-of-patches.outputs.HAS_PATCHES == 'true' }}
      run: |
        PATCHES_PATTERN="${{ inputs.patch-pattern }}"
        git apply artifacts/$PATCHES_PATTERN
