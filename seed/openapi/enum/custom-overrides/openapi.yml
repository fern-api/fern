openapi: 3.0.1
info:
  title: enum
  version: ''
paths:
  /inlined:
    post:
      operationId: inlinedRequest_send
      tags:
        - InlinedRequest
      parameters: []
      responses:
        '204':
          description: ''
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operand:
                  $ref: '#/components/schemas/Operand'
                maybeOperand:
                  $ref: '#/components/schemas/Operand'
                  nullable: true
                operandOrColor:
                  $ref: '#/components/schemas/ColorOrOperand'
                maybeOperandOrColor:
                  $ref: '#/components/schemas/ColorOrOperand'
                  nullable: true
              required:
                - operand
                - operandOrColor
            examples:
              Example1:
                value:
                  operand: '>'
                  operandOrColor: red
  /path/{operand}/{operandOrColor}:
    post:
      operationId: pathParam_send
      tags:
        - PathParam
      parameters:
        - name: operand
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/Operand'
          example: '>'
          examples:
            Example1:
              value: '>'
        - name: operandOrColor
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ColorOrOperand'
          example: red
          examples:
            Example1:
              value: red
      responses:
        '204':
          description: ''
  /query:
    post:
      operationId: queryParam_send
      tags:
        - QueryParam
      parameters:
        - name: operand
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Operand'
          example: '>'
          examples:
            Example1:
              value: '>'
        - name: maybeOperand
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Operand'
            nullable: true
        - name: operandOrColor
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ColorOrOperand'
          example: red
          examples:
            Example1:
              value: red
        - name: maybeOperandOrColor
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ColorOrOperand'
            nullable: true
      responses:
        '204':
          description: ''
  /query-list:
    post:
      operationId: queryParam_sendList
      tags:
        - QueryParam
      parameters:
        - name: operand
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Operand'
        - name: maybeOperand
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Operand'
              nullable: true
        - name: operandOrColor
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ColorOrOperand'
        - name: maybeOperandOrColor
          in: query
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ColorOrOperand'
              nullable: true
      responses:
        '204':
          description: ''
components:
  schemas:
    Operand:
      title: Operand
      enum:
        - '>'
        - '='
        - less_than
      description: |-
        Tests enum name and value can be
        different.
    Color:
      title: Color
      type: string
      enum:
        - red
        - blue
    ColorOrOperand:
      title: ColorOrOperand
      oneOf:
        - $ref: '#/components/schemas/Color'
        - $ref: '#/components/schemas/Operand'
    EnumWithCustom:
      title: EnumWithCustom
      type: string
      enum:
        - safe
        - Custom
    SpecialEnum:
      title: SpecialEnum
      type: string
      enum:
        - ''
        - Hello \"World\"
        - Hello 'World'
        - Hello\\World
        - Hello\nWorld
        - Hello\rWorld
        - Hello\tWorld
        - Hello\fWorld
        - Hello\u0008World
        - Hello\vWorld
        - Hello\0World
        - Hello\u0007World
        - Hello\u0001World
        - Hello\u0002World
        - Hello\u001FWorld
        - Hello\u007FWorld
        - Hello\u009FWorld
        - Line 1\n"Quote"\tTab\\Backslash\r\nLine 2\0Null
        - \n\r\t\0\u0008\f\v\u0007
        - Hello ä¸–ç•Œ
        - cafÃ©
        - ðŸš€
        - \\n
        - \\
        - '{"name": "John", "age": 30, "city": "New York"}'
        - SELECT * FROM users WHERE name = 'John O\\'Reilly'
        - C:\\Users\\John\\Documents\\file.txt
        - /usr/local/bin/app
        - \\d{3}-\\d{2}-\\d{4}
        - '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}'
        - transcript[transcriptType="final"]
        - transcript[transcriptType='final']
    Status:
      title: Status
      type: string
      enum:
        - Known
        - Unknown
  securitySchemes: {}
