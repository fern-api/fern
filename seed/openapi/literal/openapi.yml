openapi: 3.0.1
info:
  title: literal
  version: ''
  description: 'Test definition for literal schemas. '
paths:
  /headers:
    post:
      operationId: headers_send
      tags:
        - Headers
      parameters:
        - name: X-Endpoint-Version
          in: header
          required: true
          schema:
            type: string
            const: 02-12-2024
          example: 02-12-2024
          examples:
            Example1:
              value: 02-12-2024
        - name: X-Async
          in: header
          required: true
          schema:
            type: boolean
            const: true
          example: true
          examples:
            Example1:
              value: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendResponse'
              examples:
                Example1:
                  value:
                    message: The weather is sunny
                    status: 200
                    success: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  example: What is the weather today
              required:
                - query
            examples:
              Example1:
                value:
                  query: What is the weather today
  /inlined:
    post:
      operationId: inlined_send
      tags:
        - Inlined
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendResponse'
              examples:
                Example1:
                  value:
                    message: The weather is sunny
                    status: 200
                    success: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  const: You are a helpful assistant
                context:
                  type: string
                  const: You're super wise
                  nullable: true
                query:
                  type: string
                  example: What is the weather today
                temperature:
                  type: number
                  format: double
                  nullable: true
                stream:
                  type: boolean
                  const: false
                aliasedContext:
                  $ref: '#/components/schemas/SomeAliasedLiteral'
                maybeContext:
                  $ref: '#/components/schemas/SomeAliasedLiteral'
                  nullable: true
                objectWithLiteral:
                  $ref: '#/components/schemas/ATopLevelLiteral'
              required:
                - prompt
                - query
                - stream
                - aliasedContext
                - objectWithLiteral
            examples:
              Example1:
                value:
                  temperature: 10.1
                  prompt: You are a helpful assistant
                  context: You're super wise
                  aliasedContext: You're super wise
                  maybeContext: You're super wise
                  objectWithLiteral:
                    nestedLiteral:
                      myLiteral: How super cool
                  stream: false
                  query: What is the weather today
  /path/{id}:
    post:
      operationId: path_send
      tags:
        - Path
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            const: '123'
          example: '123'
          examples:
            Example1:
              value: '123'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendResponse'
              examples:
                Example1:
                  value:
                    message: The weather is sunny
                    status: 200
                    success: true
  /query:
    post:
      operationId: query_send
      tags:
        - Query
      parameters:
        - name: prompt
          in: query
          required: true
          schema:
            type: string
            const: You are a helpful assistant
          example: You are a helpful assistant
          examples:
            Example1:
              value: You are a helpful assistant
        - name: optional_prompt
          in: query
          required: false
          schema:
            type: string
            const: You are a helpful assistant
            nullable: true
          example: You are a helpful assistant
          examples:
            Example1:
              value: You are a helpful assistant
        - name: alias_prompt
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AliasToPrompt'
          example: You are a helpful assistant
          examples:
            Example1:
              value: You are a helpful assistant
        - name: alias_optional_prompt
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/AliasToPrompt'
            nullable: true
          example: You are a helpful assistant
          examples:
            Example1:
              value: You are a helpful assistant
        - name: query
          in: query
          required: true
          schema:
            type: string
          example: What is the weather today
          examples:
            Example1:
              value: What is the weather today
        - name: stream
          in: query
          required: true
          schema:
            type: boolean
            const: false
          example: false
          examples:
            Example1:
              value: false
        - name: optional_stream
          in: query
          required: false
          schema:
            type: boolean
            const: false
            nullable: true
          example: false
          examples:
            Example1:
              value: false
        - name: alias_stream
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AliasToStream'
          example: false
          examples:
            Example1:
              value: false
        - name: alias_optional_stream
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/AliasToStream'
            nullable: true
          example: false
          examples:
            Example1:
              value: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendResponse'
              examples:
                Example1:
                  value:
                    message: The weather is sunny
                    status: 200
                    success: true
  /reference:
    post:
      operationId: reference_send
      tags:
        - Reference
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendResponse'
              examples:
                Example1:
                  value:
                    message: The weather is sunny
                    status: 200
                    success: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRequest'
            examples:
              Example1:
                value:
                  prompt: You are a helpful assistant
                  stream: false
                  context: You're super wise
                  query: What is the weather today
                  containerObject:
                    nestedObjects:
                      - literal1: literal1
                        literal2: literal2
                        strProp: strProp
components:
  schemas:
    SendResponse:
      title: SendResponse
      type: object
      properties:
        message:
          type: string
          example: The weather is sunny
        status:
          type: integer
          example: 200
        success:
          type: boolean
          const: true
      required:
        - message
        - status
        - success
    SomeAliasedLiteral:
      title: SomeAliasedLiteral
      type: string
      const: You're super wise
    ATopLevelLiteral:
      title: ATopLevelLiteral
      type: object
      properties:
        nestedLiteral:
          $ref: '#/components/schemas/ANestedLiteral'
      required:
        - nestedLiteral
    ANestedLiteral:
      title: ANestedLiteral
      type: object
      properties:
        myLiteral:
          type: string
          const: How super cool
      required:
        - myLiteral
    AliasToPrompt:
      title: AliasToPrompt
      type: string
      const: You are a helpful assistant
    AliasToStream:
      title: AliasToStream
      type: boolean
      const: false
    SendRequest:
      title: SendRequest
      type: object
      properties:
        prompt:
          type: string
          const: You are a helpful assistant
        query:
          type: string
          example: What is the weather today
        stream:
          type: boolean
          const: false
        context:
          $ref: '#/components/schemas/SomeLiteral'
        maybeContext:
          $ref: '#/components/schemas/SomeLiteral'
          nullable: true
        containerObject:
          $ref: '#/components/schemas/ContainerObject'
      required:
        - prompt
        - query
        - stream
        - context
        - containerObject
    ContainerObject:
      title: ContainerObject
      type: object
      properties:
        nestedObjects:
          type: array
          items:
            $ref: '#/components/schemas/NestedObjectWithLiterals'
      required:
        - nestedObjects
    NestedObjectWithLiterals:
      title: NestedObjectWithLiterals
      type: object
      properties:
        literal1:
          type: string
          const: literal1
        literal2:
          type: string
          const: literal2
        strProp:
          type: string
      required:
        - literal1
        - literal2
        - strProp
    SomeLiteral:
      title: SomeLiteral
      type: string
      const: You're super wise
  securitySchemes: {}
