// This file was auto-generated by Fern from our API Definition.

package queryparameters

import (
	fmt "fmt"
	uuid "github.com/google/uuid"
	core "github.com/query-parameters/fern/core"
	time "time"
)

type GetUsersRequest struct {
	Limit          int               `query:"limit"`
	Id             uuid.UUID         `query:"id"`
	Date           time.Time         `query:"date"`
	Deadline       time.Time         `query:"deadline"`
	Bytes          []byte            `query:"bytes"`
	User           *User             `query:"user"`
	KeyValue       map[string]string `query:"keyValue"`
	OptionalString *string           `query:"optionalString"`
	NestedUser     *NestedUser       `query:"nestedUser"`
	ExcludeUser    []*User           `query:"excludeUser"`
	Filter         []string          `query:"filter"`
}

type NestedUser struct {
	Name string `json:"name" url:"name"`
	User *User  `json:"user,omitempty" url:"user,omitempty"`
}

func (n *NestedUser) String() string {
	if value, err := core.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}

type User struct {
	Name string   `json:"name" url:"name"`
	Tags []string `json:"tags,omitempty" url:"tags,omitempty"`
}

func (u *User) String() string {
	if value, err := core.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}
