// Code generated by Fern. DO NOT EDIT.

package errors

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/errors/fern/internal"
)

type FooRequest struct {
	Bar string `json:"bar" url:"bar"`

	extraProperties map[string]interface{}
}

func (f *FooRequest) GetBar() string {
	if f == nil {
		return ""
	}
	return f.Bar
}

func (f *FooRequest) GetExtraProperties() map[string]interface{} {
	return f.extraProperties
}

func (f *FooRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler FooRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*f = FooRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *f)
	if err != nil {
		return err
	}
	f.extraProperties = extraProperties
	return nil
}

func (f *FooRequest) String() string {
	if value, err := internal.StringifyJSON(f); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", f)
}

type FooResponse struct {
	Bar string `json:"bar" url:"bar"`

	extraProperties map[string]interface{}
}

func (f *FooResponse) GetBar() string {
	if f == nil {
		return ""
	}
	return f.Bar
}

func (f *FooResponse) GetExtraProperties() map[string]interface{} {
	return f.extraProperties
}

func (f *FooResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler FooResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*f = FooResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *f)
	if err != nil {
		return err
	}
	f.extraProperties = extraProperties
	return nil
}

func (f *FooResponse) String() string {
	if value, err := internal.StringifyJSON(f); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", f)
}
