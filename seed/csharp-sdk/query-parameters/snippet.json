{
    "types": {},
    "endpoints": [
        {
            "example_identifier": null,
            "id": {
                "path": "/user",
                "method": "GET",
                "identifier_override": "endpoint_user.getUsername"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedQueryParameters;\n\nvar client = new SeedQueryParametersClient();\nawait client.User.GetUsernameAsync(\n    new GetUsersRequest\n    {\n        Limit = 1,\n        Id = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        Date = new DateOnly(2023, 1, 15),\n        Deadline = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n        Bytes = \"SGVsbG8gd29ybGQh\",\n        User = new User\n        {\n            Name = \"name\",\n            Tags = new List<string>() { \"tags\", \"tags\" },\n        },\n        UserList = new List<User>()\n        {\n            new User\n            {\n                Name = \"name\",\n                Tags = new List<string>() { \"tags\", \"tags\" },\n            },\n            new User\n            {\n                Name = \"name\",\n                Tags = new List<string>() { \"tags\", \"tags\" },\n            },\n        },\n        OptionalDeadline = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n        KeyValue = new Dictionary<string, string>() { { \"keyValue\", \"keyValue\" } },\n        OptionalString = \"optionalString\",\n        NestedUser = new NestedUser\n        {\n            Name = \"name\",\n            User = new User\n            {\n                Name = \"name\",\n                Tags = new List<string>() { \"tags\", \"tags\" },\n            },\n        },\n        OptionalUser = new User\n        {\n            Name = \"name\",\n            Tags = new List<string>() { \"tags\", \"tags\" },\n        },\n        ExcludeUser =\n        [\n            new User\n            {\n                Name = \"name\",\n                Tags = new List<string>() { \"tags\", \"tags\" },\n            },\n        ],\n        Filter = [\"filter\"],\n    }\n);\n"
            }
        }
    ]
}