{
    "types": {},
    "endpoints": [
        {
            "example_identifier": null,
            "id": {
                "path": "/container/list-of-primitives",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/container.getAndReturnListOfPrimitives"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Container.GetAndReturnListOfPrimitivesAsync(\n    new List<string>() { \"string\", \"string\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/container/list-of-objects",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/container.getAndReturnListOfObjects"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Container.GetAndReturnListOfObjectsAsync(\n    new List<SeedExhaustive.Types.Object.ObjectWithRequiredField>()\n    {\n        new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" },\n        new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/container/set-of-primitives",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/container.getAndReturnSetOfPrimitives"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Container.GetAndReturnSetOfPrimitivesAsync(\n    new HashSet<string>() { \"string\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/container/set-of-objects",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/container.getAndReturnSetOfObjects"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Container.GetAndReturnSetOfObjectsAsync(\n    new HashSet<SeedExhaustive.Types.Object.ObjectWithRequiredField>()\n    {\n        new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/container/map-prim-to-prim",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/container.getAndReturnMapPrimToPrim"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Container.GetAndReturnMapPrimToPrimAsync(\n    new Dictionary<string, string>() { { \"string\", \"string\" } }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/container/map-prim-to-object",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/container.getAndReturnMapOfPrimToObject"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Container.GetAndReturnMapOfPrimToObjectAsync(\n    new Dictionary<string, SeedExhaustive.Types.Object.ObjectWithRequiredField>()\n    {\n        {\n            \"string\",\n            new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" }\n        },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/container/opt-objects",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/container.getAndReturnOptional"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Container.GetAndReturnOptionalAsync(\n    new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/foo/bar",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/content-type.postJsonPatchContentType"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.ContentType.PostJsonPatchContentTypeAsync(\n    new SeedExhaustive.Types.Object.ObjectWithOptionalField\n    {\n        String = \"string\",\n        Integer = 1,\n        Long = 1000000,\n        Double = 1.1,\n        Bool = true,\n        Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n        Date = new DateOnly(2023, 1, 15),\n        Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        Base64 = \"SGVsbG8gd29ybGQh\",\n        List = new List<string>() { \"list\", \"list\" },\n        Set = new HashSet<string>() { \"set\" },\n        Map = new Dictionary<int, string>() { { 1, \"map\" } },\n        Bigint = \"1000000\",\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/foo/baz",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/content-type.postJsonPatchContentWithCharsetType"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.ContentType.PostJsonPatchContentWithCharsetTypeAsync(\n    new SeedExhaustive.Types.Object.ObjectWithOptionalField\n    {\n        String = \"string\",\n        Integer = 1,\n        Long = 1000000,\n        Double = 1.1,\n        Bool = true,\n        Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n        Date = new DateOnly(2023, 1, 15),\n        Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        Base64 = \"SGVsbG8gd29ybGQh\",\n        List = new List<string>() { \"list\", \"list\" },\n        Set = new HashSet<string>() { \"set\" },\n        Map = new Dictionary<int, string>() { { 1, \"map\" } },\n        Bigint = \"1000000\",\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/enum",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/enum.getAndReturnEnum"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Enum;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Enum.GetAndReturnEnumAsync(SeedExhaustive.Types.Enum.WeatherReport.Sunny);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/http-methods/{id}",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/http-methods.testGet"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.HttpMethods.TestGetAsync(\"id\");\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/http-methods",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/http-methods.testPost"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.HttpMethods.TestPostAsync(\n    new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/http-methods/{id}",
                "method": "PUT",
                "identifier_override": "endpoint_endpoints/http-methods.testPut"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.HttpMethods.TestPutAsync(\n    \"id\",\n    new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/http-methods/{id}",
                "method": "PATCH",
                "identifier_override": "endpoint_endpoints/http-methods.testPatch"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.HttpMethods.TestPatchAsync(\n    \"id\",\n    new SeedExhaustive.Types.Object.ObjectWithOptionalField\n    {\n        String = \"string\",\n        Integer = 1,\n        Long = 1000000,\n        Double = 1.1,\n        Bool = true,\n        Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n        Date = new DateOnly(2023, 1, 15),\n        Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        Base64 = \"SGVsbG8gd29ybGQh\",\n        List = new List<string>() { \"list\", \"list\" },\n        Set = new HashSet<string>() { \"set\" },\n        Map = new Dictionary<int, string>() { { 1, \"map\" } },\n        Bigint = \"1000000\",\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/http-methods/{id}",
                "method": "DELETE",
                "identifier_override": "endpoint_endpoints/http-methods.testDelete"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.HttpMethods.TestDeleteAsync(\"id\");\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/object/get-and-return-with-optional-field",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/object.getAndReturnWithOptionalField"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Object.GetAndReturnWithOptionalFieldAsync(\n    new SeedExhaustive.Types.Object.ObjectWithOptionalField\n    {\n        String = \"string\",\n        Integer = 1,\n        Long = 1000000,\n        Double = 1.1,\n        Bool = true,\n        Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n        Date = new DateOnly(2023, 1, 15),\n        Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        Base64 = \"SGVsbG8gd29ybGQh\",\n        List = new List<string>() { \"list\", \"list\" },\n        Set = new HashSet<string>() { \"set\" },\n        Map = new Dictionary<int, string>() { { 1, \"map\" } },\n        Bigint = \"1000000\",\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/object/get-and-return-with-required-field",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/object.getAndReturnWithRequiredField"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Object.GetAndReturnWithRequiredFieldAsync(\n    new SeedExhaustive.Types.Object.ObjectWithRequiredField { String = \"string\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/object/get-and-return-with-map-of-map",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/object.getAndReturnWithMapOfMap"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Object.GetAndReturnWithMapOfMapAsync(\n    new SeedExhaustive.Types.Object.ObjectWithMapOfMap\n    {\n        Map = new Dictionary<string, Dictionary<string, string>>()\n        {\n            {\n                \"map\",\n                new Dictionary<string, string>() { { \"map\", \"map\" } }\n            },\n        },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/object/get-and-return-nested-with-optional-field",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/object.getAndReturnNestedWithOptionalField"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Object.GetAndReturnNestedWithOptionalFieldAsync(\n    new SeedExhaustive.Types.Object.NestedObjectWithOptionalField\n    {\n        String = \"string\",\n        NestedObject = new SeedExhaustive.Types.Object.ObjectWithOptionalField\n        {\n            String = \"string\",\n            Integer = 1,\n            Long = 1000000,\n            Double = 1.1,\n            Bool = true,\n            Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n            Date = new DateOnly(2023, 1, 15),\n            Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            Base64 = \"SGVsbG8gd29ybGQh\",\n            List = new List<string>() { \"list\", \"list\" },\n            Set = new HashSet<string>() { \"set\" },\n            Map = new Dictionary<int, string>() { { 1, \"map\" } },\n            Bigint = \"1000000\",\n        },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/object/get-and-return-nested-with-required-field/{string}",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/object.getAndReturnNestedWithRequiredField"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Object.GetAndReturnNestedWithRequiredFieldAsync(\n    \"string\",\n    new SeedExhaustive.Types.Object.NestedObjectWithRequiredField\n    {\n        String = \"string\",\n        NestedObject = new SeedExhaustive.Types.Object.ObjectWithOptionalField\n        {\n            String = \"string\",\n            Integer = 1,\n            Long = 1000000,\n            Double = 1.1,\n            Bool = true,\n            Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n            Date = new DateOnly(2023, 1, 15),\n            Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            Base64 = \"SGVsbG8gd29ybGQh\",\n            List = new List<string>() { \"list\", \"list\" },\n            Set = new HashSet<string>() { \"set\" },\n            Map = new Dictionary<int, string>() { { 1, \"map\" } },\n            Bigint = \"1000000\",\n        },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/object/get-and-return-nested-with-required-field-list",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/object.getAndReturnNestedWithRequiredFieldAsList"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Object.GetAndReturnNestedWithRequiredFieldAsListAsync(\n    new List<SeedExhaustive.Types.Object.NestedObjectWithRequiredField>()\n    {\n        new SeedExhaustive.Types.Object.NestedObjectWithRequiredField\n        {\n            String = \"string\",\n            NestedObject = new SeedExhaustive.Types.Object.ObjectWithOptionalField\n            {\n                String = \"string\",\n                Integer = 1,\n                Long = 1000000,\n                Double = 1.1,\n                Bool = true,\n                Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n                Date = new DateOnly(2023, 1, 15),\n                Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n                Base64 = \"SGVsbG8gd29ybGQh\",\n                List = new List<string>() { \"list\", \"list\" },\n                Set = new HashSet<string>() { \"set\" },\n                Map = new Dictionary<int, string>() { { 1, \"map\" } },\n                Bigint = \"1000000\",\n            },\n        },\n        new SeedExhaustive.Types.Object.NestedObjectWithRequiredField\n        {\n            String = \"string\",\n            NestedObject = new SeedExhaustive.Types.Object.ObjectWithOptionalField\n            {\n                String = \"string\",\n                Integer = 1,\n                Long = 1000000,\n                Double = 1.1,\n                Bool = true,\n                Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n                Date = new DateOnly(2023, 1, 15),\n                Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n                Base64 = \"SGVsbG8gd29ybGQh\",\n                List = new List<string>() { \"list\", \"list\" },\n                Set = new HashSet<string>() { \"set\" },\n                Map = new Dictionary<int, string>() { { 1, \"map\" } },\n                Bigint = \"1000000\",\n            },\n        },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params/path/{param}",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/params.getWithPath"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.GetWithPathAsync(\"param\");\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params/path/{param}",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/params.getWithInlinePath"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Endpoints.Params;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.GetWithInlinePathAsync(\n    new SeedExhaustive.Endpoints.Params.GetWithInlinePath { Param = \"param\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/params.getWithQuery"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Endpoints.Params;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.GetWithQueryAsync(\n    new SeedExhaustive.Endpoints.Params.GetWithQuery { Query = \"query\", Number = 1 }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/params.getWithAllowMultipleQuery"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Endpoints.Params;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.GetWithAllowMultipleQueryAsync(\n    new SeedExhaustive.Endpoints.Params.GetWithMultipleQuery { Query = [\"query\"], Number = [1] }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params/path-query/{param}",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/params.getWithPathAndQuery"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Endpoints.Params;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.GetWithPathAndQueryAsync(\n    \"param\",\n    new SeedExhaustive.Endpoints.Params.GetWithPathAndQuery { Query = \"query\" }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params/path-query/{param}",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/params.getWithInlinePathAndQuery"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Endpoints.Params;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.GetWithInlinePathAndQueryAsync(\n    new SeedExhaustive.Endpoints.Params.GetWithInlinePathAndQuery\n    {\n        Param = \"param\",\n        Query = \"query\",\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params/path/{param}",
                "method": "PUT",
                "identifier_override": "endpoint_endpoints/params.modifyWithPath"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.ModifyWithPathAsync(\"param\", \"string\");\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/params/path/{param}",
                "method": "PUT",
                "identifier_override": "endpoint_endpoints/params.modifyWithInlinePath"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Endpoints.Params;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Params.ModifyWithInlinePathAsync(\n    new SeedExhaustive.Endpoints.Params.ModifyResourceAtInlinedPath\n    {\n        Param = \"param\",\n        Body = \"string\",\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/string",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnString"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnStringAsync(\"string\");\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/integer",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnInt"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnIntAsync(1);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/long",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnLong"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnLongAsync(1000000);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/double",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnDouble"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnDoubleAsync(1.1);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/boolean",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnBool"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnBoolAsync(true);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/datetime",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnDatetime"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnDatetimeAsync(\n    new DateTime(2024, 01, 15, 09, 30, 00, 000)\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/date",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnDate"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnDateAsync(new DateOnly(2023, 1, 15));\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/uuid",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnUUID"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnUuidAsync(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\");\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/primitive/base64",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnBase64"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Primitive.GetAndReturnBase64Async(\"SGVsbG8gd29ybGQh\");\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/{id}",
                "method": "PUT",
                "identifier_override": "endpoint_endpoints/put.add"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Endpoints.Put;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Put.AddAsync(new SeedExhaustive.Endpoints.Put.PutRequest { Id = \"id\" });\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/union",
                "method": "POST",
                "identifier_override": "endpoint_endpoints/union.getAndReturnUnion"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.Types.Union;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Union.GetAndReturnUnionAsync(\n    new SeedExhaustive.Types.Union.Animal(\n        new SeedExhaustive.Types.Union.Animal.Dog(\n            new SeedExhaustive.Types.Union.Dog { Name = \"name\", LikesToWoof = true }\n        )\n    )\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/urls/MixedCase",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/urls.withMixedCase"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Urls.WithMixedCaseAsync();\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/urls/no-ending-slash",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/urls.noEndingSlash"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Urls.NoEndingSlashAsync();\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/urls/with-ending-slash/",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/urls.withEndingSlash"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Urls.WithEndingSlashAsync();\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/urls/with_underscores",
                "method": "GET",
                "identifier_override": "endpoint_endpoints/urls.withUnderscores"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.Endpoints.Urls.WithUnderscoresAsync();\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/req-bodies/object",
                "method": "POST",
                "identifier_override": "endpoint_inlined-requests.postWithObjectBodyandResponse"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.InlinedRequests;\nusing SeedExhaustive.Types.Object;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.InlinedRequests.PostWithObjectBodyandResponseAsync(\n    new SeedExhaustive.InlinedRequests.PostWithObjectBody\n    {\n        String = \"string\",\n        Integer = 1,\n        NestedObject = new SeedExhaustive.Types.Object.ObjectWithOptionalField\n        {\n            String = \"string\",\n            Integer = 1,\n            Long = 1000000,\n            Double = 1.1,\n            Bool = true,\n            Datetime = new DateTime(2024, 01, 15, 09, 30, 00, 000),\n            Date = new DateOnly(2023, 1, 15),\n            Uuid = \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            Base64 = \"SGVsbG8gd29ybGQh\",\n            List = new List<string>() { \"list\", \"list\" },\n            Set = new HashSet<string>() { \"set\" },\n            Map = new Dictionary<int, string>() { { 1, \"map\" } },\n            Bigint = \"1000000\",\n        },\n    }\n);\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/no-auth",
                "method": "POST",
                "identifier_override": "endpoint_no-auth.postWithNoAuth"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.NoAuth.PostWithNoAuthAsync(new Dictionary<object, object?>() { { \"key\", \"value\" } });\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/no-req-body",
                "method": "GET",
                "identifier_override": "endpoint_no-req-body.getWithNoRequestBody"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.NoReqBody.GetWithNoRequestBodyAsync();\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/no-req-body",
                "method": "POST",
                "identifier_override": "endpoint_no-req-body.postWithNoRequestBody"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.NoReqBody.PostWithNoRequestBodyAsync();\n"
            }
        },
        {
            "example_identifier": null,
            "id": {
                "path": "/test-headers/custom-header",
                "method": "POST",
                "identifier_override": "endpoint_req-with-headers.getWithCustomHeader"
            },
            "snippet": {
                "type": "csharp",
                "client": "using SeedExhaustive.ReqWithHeaders;\nusing SeedExhaustive;\n\nvar client = new SeedExhaustive.SeedExhaustiveClient(\"TOKEN\");\nawait client.ReqWithHeaders.GetWithCustomHeaderAsync(\n    new SeedExhaustive.ReqWithHeaders.ReqWithHeaders\n    {\n        XTestEndpointHeader = \"X-TEST-ENDPOINT-HEADER\",\n        XTestServiceHeader = \"X-TEST-SERVICE-HEADER\",\n        Body = \"string\",\n    }\n);\n"
            }
        }
    ]
}