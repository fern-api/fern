# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
from ....types.operand import Operand
import typing
import pydantic
from ....types.color_or_operand import ColorOrOperand
from ....core.pydantic_utilities import IS_PYDANTIC_V2
class SendEnumInlinedRequest(UniversalBaseModel):
    operand: Operand
    maybe_operand: typing.Optional[Operand] = pydantic.Field(alias="maybeOperand", default=None)
    operand_or_color: ColorOrOperand = pydantic.Field(alias="operandOrColor")
    maybe_operand_or_color: typing.Optional[ColorOrOperand] = pydantic.Field(alias="maybeOperandOrColor", default=None)
    
    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="forbid")  # type: ignore # Pydantic v2
    else:
        class Config:
            extra = pydantic.Extra.forbid
