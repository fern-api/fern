# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .address import Address
from .notification_method import NotificationMethod
from .organization import Organization
from .search_result import SearchResult
from .user_role import UserRole
from .user_status import UserStatus


class DeserializationTestRequest(UniversalBaseModel):
    """
    Request body for testing deserialization of null values
    """

    required_string: str = pydantic.Field(alias="requiredString")
    nullable_string: typing.Optional[str] = pydantic.Field(alias="nullableString", default=None)
    optional_string: typing.Optional[str] = pydantic.Field(alias="optionalString", default=None)
    optional_nullable_string: typing.Optional[str] = pydantic.Field(alias="optionalNullableString", default=None)
    nullable_enum: typing.Optional[UserRole] = pydantic.Field(alias="nullableEnum", default=None)
    optional_enum: typing.Optional[UserStatus] = pydantic.Field(alias="optionalEnum", default=None)
    nullable_union: typing.Optional[NotificationMethod] = pydantic.Field(alias="nullableUnion", default=None)
    optional_union: typing.Optional[SearchResult] = pydantic.Field(alias="optionalUnion", default=None)
    nullable_list: typing.Optional[typing.List[str]] = pydantic.Field(alias="nullableList", default=None)
    nullable_map: typing.Optional[typing.Dict[str, int]] = pydantic.Field(alias="nullableMap", default=None)
    nullable_object: typing.Optional[Address] = pydantic.Field(alias="nullableObject", default=None)
    optional_object: typing.Optional[Organization] = pydantic.Field(alias="optionalObject", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="forbid")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.forbid
