# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..types.notification_method import NotificationMethod
from ..types.search_result import SearchResult
from ..types.user_role import UserRole
from ..types.user_status import UserStatus


class UpdateComplexProfileRequest(UniversalBaseModel):
    nullable_role: typing.Optional[UserRole] = pydantic.Field(alias="nullableRole", default=None)
    nullable_status: typing.Optional[UserStatus] = pydantic.Field(alias="nullableStatus", default=None)
    nullable_notification: typing.Optional[NotificationMethod] = pydantic.Field(
        alias="nullableNotification", default=None
    )
    nullable_search_result: typing.Optional[SearchResult] = pydantic.Field(alias="nullableSearchResult", default=None)
    nullable_array: typing.Optional[typing.List[str]] = pydantic.Field(alias="nullableArray", default=None)

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="forbid")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.forbid
