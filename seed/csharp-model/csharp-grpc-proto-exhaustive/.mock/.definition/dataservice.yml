imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  display-name: DataService
  endpoints:
    delete:
      auth: false
      examples:
        - request: {}
          response:
            body: {}
      method: POST
      path: /data/delete
      request:
        body:
          properties:
            deleteAll: optional<boolean>
            filter: optional<root.Metadata>
            ids: optional<list<string>>
            namespace: optional<string>
        content-type: application/json
        name: DeleteRequest
      response:
        docs: OK
        status-code: 200
        type: root.DeleteResponse
      source:
        proto: proto/data/v1/data.proto
    describe:
      auth: false
      examples:
        - request: {}
          response:
            body:
              dimension: 1
              fullness: 1.1
              namespaces:
                key:
                  count: 1
              totalCount: 1
      method: POST
      path: /data/describe
      request:
        body:
          properties:
            filter: optional<root.Metadata>
        content-type: application/json
        name: DescribeRequest
      response:
        docs: OK
        status-code: 200
        type: root.DescribeResponse
      source:
        proto: proto/data/v1/data.proto
    fetch:
      auth: false
      examples:
        - response:
            body:
              columns:
                key:
                  enumProp: A
                  id: id
                  indexedData:
                    indices:
                      - 1
                    values:
                      - 1.1
                  metadata:
                    key: 1.1
                  values:
                    - 1.1
              namespace: namespace
              usage:
                units: 1
      method: GET
      path: /data/fetch
      request:
        name: FetchRequest
        query-parameters:
          ids:
            allow-multiple: true
            type: optional<string>
          namespace: optional<string>
      response:
        docs: OK
        status-code: 200
        type: root.FetchResponse
      source:
        proto: proto/data/v1/data.proto
    foo:
      auth: false
      examples:
        - response:
            body:
              key: value
      method: POST
      path: /foo
      response:
        status-code: 200
        type: map<string, unknown>
      source:
        openapi: openapi/openapi.yml
    list:
      auth: false
      examples:
        - response:
            body:
              columns:
                - id: id
              namespace: namespace
              pagination:
                next: next
              usage:
                units: 1
      method: GET
      path: /data/list
      request:
        name: ListRequest
        query-parameters:
          limit: optional<uint>
          namespace: optional<string>
          paginationToken: optional<string>
          prefix: optional<string>
      response:
        docs: OK
        status-code: 200
        type: root.ListResponse
      source:
        proto: proto/data/v1/data.proto
    query:
      auth: false
      examples:
        - request:
            topK: 1
          response:
            body:
              matches:
                - id: id
                  indexedData:
                    indices:
                      - 1
                    values:
                      - 1.1
                  metadata:
                    key: 1.1
                  score: 1.1
                  values:
                    - 1.1
              namespace: namespace
              results:
                - matches:
                    - id: id
                  namespace: namespace
              usage:
                units: 1
      method: POST
      path: /data/query
      request:
        body:
          properties:
            column: optional<list<float>>
            filter: optional<root.Metadata>
            id: optional<string>
            includeMetadata: optional<boolean>
            includeValues: optional<boolean>
            indexedData: optional<root.IndexedData>
            namespace: optional<string>
            queries: optional<list<root.QueryColumn>>
            topK: uint
        content-type: application/json
        name: QueryRequest
      response:
        docs: OK
        status-code: 200
        type: root.QueryResponse
      source:
        proto: proto/data/v1/data.proto
    update:
      auth: false
      examples:
        - request:
            id: id
          response:
            body: {}
      method: POST
      path: /data/update
      request:
        body:
          properties:
            id: string
            indexedData: optional<root.IndexedData>
            namespace: optional<string>
            setMetadata: optional<root.Metadata>
            values: optional<list<float>>
        content-type: application/json
        name: UpdateRequest
      response:
        docs: OK
        status-code: 200
        type: root.UpdateResponse
      source:
        proto: proto/data/v1/data.proto
    upload:
      auth: false
      examples:
        - request:
            columns:
              - id: id
                values:
                  - 1.1
          response:
            body:
              count: 1
      method: POST
      path: /data
      request:
        body:
          properties:
            columns: list<root.Column>
            namespace: optional<string>
        content-type: application/json
        name: UploadRequest
      response:
        docs: OK
        status-code: 200
        type: root.UploadResponse
      source:
        proto: proto/data/v1/data.proto
  source:
    proto: proto/data/v1/data.proto
