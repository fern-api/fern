/**
 * This file was auto-generated by Fern from our API Definition.
 */

package types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UserProfile.Builder.class
)
public final class UserProfile {
  private final String name;

  private final UserProfileVerification verification;

  private final String ssn;

  private UserProfile(String name, UserProfileVerification verification, String ssn) {
    this.name = name;
    this.verification = verification;
    this.ssn = ssn;
  }

  /**
   * @return The name of the user.
   */
  @JsonProperty("name")
  public String getName() {
    return name;
  }

  /**
   * @return User profile verification object
   */
  @JsonProperty("verification")
  public UserProfileVerification getVerification() {
    return verification;
  }

  /**
   * @return The social security number of the user.
   */
  @JsonProperty("ssn")
  public String getSsn() {
    return ssn;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UserProfile && equalTo((UserProfile) other);
  }

  private boolean equalTo(UserProfile other) {
    return name.equals(other.name) && verification.equals(other.verification) && ssn.equals(other.ssn);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.name, this.verification, this.ssn);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static NameStage builder() {
    return new Builder();
  }

  public interface NameStage {
    /**
     * <p>The name of the user.</p>
     */
    VerificationStage name(@NotNull String name);

    Builder from(UserProfile other);
  }

  public interface VerificationStage {
    /**
     * <p>User profile verification object</p>
     */
    SsnStage verification(@NotNull UserProfileVerification verification);
  }

  public interface SsnStage {
    /**
     * <p>The social security number of the user.</p>
     */
    _FinalStage ssn(@NotNull String ssn);
  }

  public interface _FinalStage {
    UserProfile build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements NameStage, VerificationStage, SsnStage, _FinalStage {
    private String name;

    private UserProfileVerification verification;

    private String ssn;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(UserProfile other) {
      name(other.getName());
      verification(other.getVerification());
      ssn(other.getSsn());
      return this;
    }

    /**
     * <p>The name of the user.</p>
     * <p>The name of the user.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("name")
    public VerificationStage name(@NotNull String name) {
      this.name = Objects.requireNonNull(name, "name must not be null");
      return this;
    }

    /**
     * <p>User profile verification object</p>
     * <p>User profile verification object</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("verification")
    public SsnStage verification(@NotNull UserProfileVerification verification) {
      this.verification = Objects.requireNonNull(verification, "verification must not be null");
      return this;
    }

    /**
     * <p>The social security number of the user.</p>
     * <p>The social security number of the user.</p>
     * @return Reference to {@code this} so that method calls can be chained together.
     */
    @java.lang.Override
    @JsonSetter("ssn")
    public _FinalStage ssn(@NotNull String ssn) {
      this.ssn = Objects.requireNonNull(ssn, "ssn must not be null");
      return this;
    }

    @java.lang.Override
    public UserProfile build() {
      return new UserProfile(name, verification, ssn);
    }
  }
}
