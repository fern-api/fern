/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.ast.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = Acai.Builder.class
)
public final class Acai {
  private final Animal animal;

  private Acai(Animal animal) {
    this.animal = animal;
  }

  @JsonProperty("animal")
  public Animal getAnimal() {
    return animal;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof Acai && equalTo((Acai) other);
  }

  private boolean equalTo(Acai other) {
    return animal.equals(other.animal);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.animal);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static AnimalStage builder() {
    return new Builder();
  }

  public interface AnimalStage {
    _FinalStage animal(@NotNull Animal animal);

    Builder from(Acai other);
  }

  public interface _FinalStage {
    Acai build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements AnimalStage, _FinalStage {
    private Animal animal;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(Acai other) {
      animal(other.getAnimal());
      return this;
    }

    @java.lang.Override
    @JsonSetter("animal")
    public _FinalStage animal(@NotNull Animal animal) {
      this.animal = Objects.requireNonNull(animal, "animal must not be null");
      return this;
    }

    @java.lang.Override
    public Acai build() {
      return new Acai(animal);
    }
  }
}
