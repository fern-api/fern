/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.types.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = User.Builder.class
)
public final class User {
  private final String userId;

  private final String email;

  private final boolean emailVerified;

  private final Optional<String> username;

  private final Optional<String> phoneNumber;

  private final Optional<Boolean> phoneVerified;

  private final OffsetDateTime createdAt;

  private final OffsetDateTime updatedAt;

  private final Optional<List<Identity>> identities;

  private final Optional<Map<String, Object>> appMetadata;

  private final Optional<Map<String, Object>> userMetadata;

  private final Optional<String> picture;

  private final Optional<String> name;

  private final Optional<String> nickname;

  private final Optional<List<String>> multifactor;

  private final Optional<String> lastIp;

  private final Optional<OffsetDateTime> lastLogin;

  private final Optional<Integer> loginsCount;

  private final Optional<Boolean> blocked;

  private final Optional<String> givenName;

  private final Optional<String> familyName;

  private User(String userId, String email, boolean emailVerified, Optional<String> username,
      Optional<String> phoneNumber, Optional<Boolean> phoneVerified, OffsetDateTime createdAt,
      OffsetDateTime updatedAt, Optional<List<Identity>> identities,
      Optional<Map<String, Object>> appMetadata, Optional<Map<String, Object>> userMetadata,
      Optional<String> picture, Optional<String> name, Optional<String> nickname,
      Optional<List<String>> multifactor, Optional<String> lastIp,
      Optional<OffsetDateTime> lastLogin, Optional<Integer> loginsCount, Optional<Boolean> blocked,
      Optional<String> givenName, Optional<String> familyName) {
    this.userId = userId;
    this.email = email;
    this.emailVerified = emailVerified;
    this.username = username;
    this.phoneNumber = phoneNumber;
    this.phoneVerified = phoneVerified;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.identities = identities;
    this.appMetadata = appMetadata;
    this.userMetadata = userMetadata;
    this.picture = picture;
    this.name = name;
    this.nickname = nickname;
    this.multifactor = multifactor;
    this.lastIp = lastIp;
    this.lastLogin = lastLogin;
    this.loginsCount = loginsCount;
    this.blocked = blocked;
    this.givenName = givenName;
    this.familyName = familyName;
  }

  @JsonProperty("user_id")
  public String getUserId() {
    return userId;
  }

  @JsonProperty("email")
  public String getEmail() {
    return email;
  }

  @JsonProperty("email_verified")
  public boolean getEmailVerified() {
    return emailVerified;
  }

  @JsonProperty("username")
  public Optional<String> getUsername() {
    return username;
  }

  @JsonProperty("phone_number")
  public Optional<String> getPhoneNumber() {
    return phoneNumber;
  }

  @JsonProperty("phone_verified")
  public Optional<Boolean> getPhoneVerified() {
    return phoneVerified;
  }

  @JsonProperty("created_at")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  @JsonProperty("updated_at")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  @JsonProperty("identities")
  public Optional<List<Identity>> getIdentities() {
    return identities;
  }

  @JsonProperty("app_metadata")
  public Optional<Map<String, Object>> getAppMetadata() {
    return appMetadata;
  }

  @JsonProperty("user_metadata")
  public Optional<Map<String, Object>> getUserMetadata() {
    return userMetadata;
  }

  @JsonProperty("picture")
  public Optional<String> getPicture() {
    return picture;
  }

  @JsonProperty("name")
  public Optional<String> getName() {
    return name;
  }

  @JsonProperty("nickname")
  public Optional<String> getNickname() {
    return nickname;
  }

  @JsonProperty("multifactor")
  public Optional<List<String>> getMultifactor() {
    return multifactor;
  }

  @JsonProperty("last_ip")
  public Optional<String> getLastIp() {
    return lastIp;
  }

  @JsonProperty("last_login")
  public Optional<OffsetDateTime> getLastLogin() {
    return lastLogin;
  }

  @JsonProperty("logins_count")
  public Optional<Integer> getLoginsCount() {
    return loginsCount;
  }

  @JsonProperty("blocked")
  public Optional<Boolean> getBlocked() {
    return blocked;
  }

  @JsonProperty("given_name")
  public Optional<String> getGivenName() {
    return givenName;
  }

  @JsonProperty("family_name")
  public Optional<String> getFamilyName() {
    return familyName;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof User && equalTo((User) other);
  }

  private boolean equalTo(User other) {
    return userId.equals(other.userId) && email.equals(other.email) && emailVerified == other.emailVerified && username.equals(other.username) && phoneNumber.equals(other.phoneNumber) && phoneVerified.equals(other.phoneVerified) && createdAt.equals(other.createdAt) && updatedAt.equals(other.updatedAt) && identities.equals(other.identities) && appMetadata.equals(other.appMetadata) && userMetadata.equals(other.userMetadata) && picture.equals(other.picture) && name.equals(other.name) && nickname.equals(other.nickname) && multifactor.equals(other.multifactor) && lastIp.equals(other.lastIp) && lastLogin.equals(other.lastLogin) && loginsCount.equals(other.loginsCount) && blocked.equals(other.blocked) && givenName.equals(other.givenName) && familyName.equals(other.familyName);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.userId, this.email, this.emailVerified, this.username, this.phoneNumber, this.phoneVerified, this.createdAt, this.updatedAt, this.identities, this.appMetadata, this.userMetadata, this.picture, this.name, this.nickname, this.multifactor, this.lastIp, this.lastLogin, this.loginsCount, this.blocked, this.givenName, this.familyName);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static UserIdStage builder() {
    return new Builder();
  }

  public interface UserIdStage {
    EmailStage userId(@NotNull String userId);

    Builder from(User other);
  }

  public interface EmailStage {
    EmailVerifiedStage email(@NotNull String email);
  }

  public interface EmailVerifiedStage {
    CreatedAtStage emailVerified(boolean emailVerified);
  }

  public interface CreatedAtStage {
    UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
  }

  public interface UpdatedAtStage {
    _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt);
  }

  public interface _FinalStage {
    User build();

    _FinalStage username(Optional<String> username);

    _FinalStage username(String username);

    _FinalStage phoneNumber(Optional<String> phoneNumber);

    _FinalStage phoneNumber(String phoneNumber);

    _FinalStage phoneVerified(Optional<Boolean> phoneVerified);

    _FinalStage phoneVerified(Boolean phoneVerified);

    _FinalStage identities(Optional<List<Identity>> identities);

    _FinalStage identities(List<Identity> identities);

    _FinalStage appMetadata(Optional<Map<String, Object>> appMetadata);

    _FinalStage appMetadata(Map<String, Object> appMetadata);

    _FinalStage userMetadata(Optional<Map<String, Object>> userMetadata);

    _FinalStage userMetadata(Map<String, Object> userMetadata);

    _FinalStage picture(Optional<String> picture);

    _FinalStage picture(String picture);

    _FinalStage name(Optional<String> name);

    _FinalStage name(String name);

    _FinalStage nickname(Optional<String> nickname);

    _FinalStage nickname(String nickname);

    _FinalStage multifactor(Optional<List<String>> multifactor);

    _FinalStage multifactor(List<String> multifactor);

    _FinalStage lastIp(Optional<String> lastIp);

    _FinalStage lastIp(String lastIp);

    _FinalStage lastLogin(Optional<OffsetDateTime> lastLogin);

    _FinalStage lastLogin(OffsetDateTime lastLogin);

    _FinalStage loginsCount(Optional<Integer> loginsCount);

    _FinalStage loginsCount(Integer loginsCount);

    _FinalStage blocked(Optional<Boolean> blocked);

    _FinalStage blocked(Boolean blocked);

    _FinalStage givenName(Optional<String> givenName);

    _FinalStage givenName(String givenName);

    _FinalStage familyName(Optional<String> familyName);

    _FinalStage familyName(String familyName);
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements UserIdStage, EmailStage, EmailVerifiedStage, CreatedAtStage, UpdatedAtStage, _FinalStage {
    private String userId;

    private String email;

    private boolean emailVerified;

    private OffsetDateTime createdAt;

    private OffsetDateTime updatedAt;

    private Optional<String> familyName = Optional.empty();

    private Optional<String> givenName = Optional.empty();

    private Optional<Boolean> blocked = Optional.empty();

    private Optional<Integer> loginsCount = Optional.empty();

    private Optional<OffsetDateTime> lastLogin = Optional.empty();

    private Optional<String> lastIp = Optional.empty();

    private Optional<List<String>> multifactor = Optional.empty();

    private Optional<String> nickname = Optional.empty();

    private Optional<String> name = Optional.empty();

    private Optional<String> picture = Optional.empty();

    private Optional<Map<String, Object>> userMetadata = Optional.empty();

    private Optional<Map<String, Object>> appMetadata = Optional.empty();

    private Optional<List<Identity>> identities = Optional.empty();

    private Optional<Boolean> phoneVerified = Optional.empty();

    private Optional<String> phoneNumber = Optional.empty();

    private Optional<String> username = Optional.empty();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(User other) {
      userId(other.getUserId());
      email(other.getEmail());
      emailVerified(other.getEmailVerified());
      username(other.getUsername());
      phoneNumber(other.getPhoneNumber());
      phoneVerified(other.getPhoneVerified());
      createdAt(other.getCreatedAt());
      updatedAt(other.getUpdatedAt());
      identities(other.getIdentities());
      appMetadata(other.getAppMetadata());
      userMetadata(other.getUserMetadata());
      picture(other.getPicture());
      name(other.getName());
      nickname(other.getNickname());
      multifactor(other.getMultifactor());
      lastIp(other.getLastIp());
      lastLogin(other.getLastLogin());
      loginsCount(other.getLoginsCount());
      blocked(other.getBlocked());
      givenName(other.getGivenName());
      familyName(other.getFamilyName());
      return this;
    }

    @java.lang.Override
    @JsonSetter("user_id")
    public EmailStage userId(@NotNull String userId) {
      this.userId = Objects.requireNonNull(userId, "userId must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("email")
    public EmailVerifiedStage email(@NotNull String email) {
      this.email = Objects.requireNonNull(email, "email must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("email_verified")
    public CreatedAtStage emailVerified(boolean emailVerified) {
      this.emailVerified = emailVerified;
      return this;
    }

    @java.lang.Override
    @JsonSetter("created_at")
    public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
      this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("updated_at")
    public _FinalStage updatedAt(@NotNull OffsetDateTime updatedAt) {
      this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
      return this;
    }

    @java.lang.Override
    public _FinalStage familyName(String familyName) {
      this.familyName = Optional.ofNullable(familyName);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "family_name",
        nulls = Nulls.SKIP
    )
    public _FinalStage familyName(Optional<String> familyName) {
      this.familyName = familyName;
      return this;
    }

    @java.lang.Override
    public _FinalStage givenName(String givenName) {
      this.givenName = Optional.ofNullable(givenName);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "given_name",
        nulls = Nulls.SKIP
    )
    public _FinalStage givenName(Optional<String> givenName) {
      this.givenName = givenName;
      return this;
    }

    @java.lang.Override
    public _FinalStage blocked(Boolean blocked) {
      this.blocked = Optional.ofNullable(blocked);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "blocked",
        nulls = Nulls.SKIP
    )
    public _FinalStage blocked(Optional<Boolean> blocked) {
      this.blocked = blocked;
      return this;
    }

    @java.lang.Override
    public _FinalStage loginsCount(Integer loginsCount) {
      this.loginsCount = Optional.ofNullable(loginsCount);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "logins_count",
        nulls = Nulls.SKIP
    )
    public _FinalStage loginsCount(Optional<Integer> loginsCount) {
      this.loginsCount = loginsCount;
      return this;
    }

    @java.lang.Override
    public _FinalStage lastLogin(OffsetDateTime lastLogin) {
      this.lastLogin = Optional.ofNullable(lastLogin);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "last_login",
        nulls = Nulls.SKIP
    )
    public _FinalStage lastLogin(Optional<OffsetDateTime> lastLogin) {
      this.lastLogin = lastLogin;
      return this;
    }

    @java.lang.Override
    public _FinalStage lastIp(String lastIp) {
      this.lastIp = Optional.ofNullable(lastIp);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "last_ip",
        nulls = Nulls.SKIP
    )
    public _FinalStage lastIp(Optional<String> lastIp) {
      this.lastIp = lastIp;
      return this;
    }

    @java.lang.Override
    public _FinalStage multifactor(List<String> multifactor) {
      this.multifactor = Optional.ofNullable(multifactor);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "multifactor",
        nulls = Nulls.SKIP
    )
    public _FinalStage multifactor(Optional<List<String>> multifactor) {
      this.multifactor = multifactor;
      return this;
    }

    @java.lang.Override
    public _FinalStage nickname(String nickname) {
      this.nickname = Optional.ofNullable(nickname);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nickname",
        nulls = Nulls.SKIP
    )
    public _FinalStage nickname(Optional<String> nickname) {
      this.nickname = nickname;
      return this;
    }

    @java.lang.Override
    public _FinalStage name(String name) {
      this.name = Optional.ofNullable(name);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "name",
        nulls = Nulls.SKIP
    )
    public _FinalStage name(Optional<String> name) {
      this.name = name;
      return this;
    }

    @java.lang.Override
    public _FinalStage picture(String picture) {
      this.picture = Optional.ofNullable(picture);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "picture",
        nulls = Nulls.SKIP
    )
    public _FinalStage picture(Optional<String> picture) {
      this.picture = picture;
      return this;
    }

    @java.lang.Override
    public _FinalStage userMetadata(Map<String, Object> userMetadata) {
      this.userMetadata = Optional.ofNullable(userMetadata);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "user_metadata",
        nulls = Nulls.SKIP
    )
    public _FinalStage userMetadata(Optional<Map<String, Object>> userMetadata) {
      this.userMetadata = userMetadata;
      return this;
    }

    @java.lang.Override
    public _FinalStage appMetadata(Map<String, Object> appMetadata) {
      this.appMetadata = Optional.ofNullable(appMetadata);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "app_metadata",
        nulls = Nulls.SKIP
    )
    public _FinalStage appMetadata(Optional<Map<String, Object>> appMetadata) {
      this.appMetadata = appMetadata;
      return this;
    }

    @java.lang.Override
    public _FinalStage identities(List<Identity> identities) {
      this.identities = Optional.ofNullable(identities);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "identities",
        nulls = Nulls.SKIP
    )
    public _FinalStage identities(Optional<List<Identity>> identities) {
      this.identities = identities;
      return this;
    }

    @java.lang.Override
    public _FinalStage phoneVerified(Boolean phoneVerified) {
      this.phoneVerified = Optional.ofNullable(phoneVerified);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "phone_verified",
        nulls = Nulls.SKIP
    )
    public _FinalStage phoneVerified(Optional<Boolean> phoneVerified) {
      this.phoneVerified = phoneVerified;
      return this;
    }

    @java.lang.Override
    public _FinalStage phoneNumber(String phoneNumber) {
      this.phoneNumber = Optional.ofNullable(phoneNumber);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "phone_number",
        nulls = Nulls.SKIP
    )
    public _FinalStage phoneNumber(Optional<String> phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    @java.lang.Override
    public _FinalStage username(String username) {
      this.username = Optional.ofNullable(username);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "username",
        nulls = Nulls.SKIP
    )
    public _FinalStage username(Optional<String> username) {
      this.username = username;
      return this;
    }

    @java.lang.Override
    public User build() {
      return new User(userId, email, emailVerified, username, phoneNumber, phoneVerified, createdAt, updatedAt, identities, appMetadata, userMetadata, picture, name, nickname, multifactor, lastIp, lastLogin, loginsCount, blocked, givenName, familyName);
    }
  }
}
