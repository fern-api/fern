/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.nullableoptional.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import resources.nullableoptional.types.NotificationMethod;
import resources.nullableoptional.types.SearchResult;
import resources.nullableoptional.types.UserRole;
import resources.nullableoptional.types.UserStatus;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UpdateComplexProfileRequest.Builder.class
)
public final class UpdateComplexProfileRequest {
  private final Optional<UserRole> nullableRole;

  private final Optional<UserStatus> nullableStatus;

  private final Optional<NotificationMethod> nullableNotification;

  private final Optional<SearchResult> nullableSearchResult;

  private final Optional<List<String>> nullableArray;

  private UpdateComplexProfileRequest(Optional<UserRole> nullableRole,
      Optional<UserStatus> nullableStatus, Optional<NotificationMethod> nullableNotification,
      Optional<SearchResult> nullableSearchResult, Optional<List<String>> nullableArray) {
    this.nullableRole = nullableRole;
    this.nullableStatus = nullableStatus;
    this.nullableNotification = nullableNotification;
    this.nullableSearchResult = nullableSearchResult;
    this.nullableArray = nullableArray;
  }

  @JsonProperty("nullableRole")
  public Optional<UserRole> getNullableRole() {
    return nullableRole;
  }

  @JsonProperty("nullableStatus")
  public Optional<UserStatus> getNullableStatus() {
    return nullableStatus;
  }

  @JsonProperty("nullableNotification")
  public Optional<NotificationMethod> getNullableNotification() {
    return nullableNotification;
  }

  @JsonProperty("nullableSearchResult")
  public Optional<SearchResult> getNullableSearchResult() {
    return nullableSearchResult;
  }

  @JsonProperty("nullableArray")
  public Optional<List<String>> getNullableArray() {
    return nullableArray;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UpdateComplexProfileRequest && equalTo((UpdateComplexProfileRequest) other);
  }

  private boolean equalTo(UpdateComplexProfileRequest other) {
    return nullableRole.equals(other.nullableRole) && nullableStatus.equals(other.nullableStatus) && nullableNotification.equals(other.nullableNotification) && nullableSearchResult.equals(other.nullableSearchResult) && nullableArray.equals(other.nullableArray);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.nullableRole, this.nullableStatus, this.nullableNotification, this.nullableSearchResult, this.nullableArray);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static Builder builder() {
    return new Builder();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder {
    private Optional<UserRole> nullableRole = Optional.empty();

    private Optional<UserStatus> nullableStatus = Optional.empty();

    private Optional<NotificationMethod> nullableNotification = Optional.empty();

    private Optional<SearchResult> nullableSearchResult = Optional.empty();

    private Optional<List<String>> nullableArray = Optional.empty();

    private Builder() {
    }

    public Builder from(UpdateComplexProfileRequest other) {
      nullableRole(other.getNullableRole());
      nullableStatus(other.getNullableStatus());
      nullableNotification(other.getNullableNotification());
      nullableSearchResult(other.getNullableSearchResult());
      nullableArray(other.getNullableArray());
      return this;
    }

    @JsonSetter(
        value = "nullableRole",
        nulls = Nulls.SKIP
    )
    public Builder nullableRole(Optional<UserRole> nullableRole) {
      this.nullableRole = nullableRole;
      return this;
    }

    public Builder nullableRole(UserRole nullableRole) {
      this.nullableRole = Optional.ofNullable(nullableRole);
      return this;
    }

    @JsonSetter(
        value = "nullableStatus",
        nulls = Nulls.SKIP
    )
    public Builder nullableStatus(Optional<UserStatus> nullableStatus) {
      this.nullableStatus = nullableStatus;
      return this;
    }

    public Builder nullableStatus(UserStatus nullableStatus) {
      this.nullableStatus = Optional.ofNullable(nullableStatus);
      return this;
    }

    @JsonSetter(
        value = "nullableNotification",
        nulls = Nulls.SKIP
    )
    public Builder nullableNotification(Optional<NotificationMethod> nullableNotification) {
      this.nullableNotification = nullableNotification;
      return this;
    }

    public Builder nullableNotification(NotificationMethod nullableNotification) {
      this.nullableNotification = Optional.ofNullable(nullableNotification);
      return this;
    }

    @JsonSetter(
        value = "nullableSearchResult",
        nulls = Nulls.SKIP
    )
    public Builder nullableSearchResult(Optional<SearchResult> nullableSearchResult) {
      this.nullableSearchResult = nullableSearchResult;
      return this;
    }

    public Builder nullableSearchResult(SearchResult nullableSearchResult) {
      this.nullableSearchResult = Optional.ofNullable(nullableSearchResult);
      return this;
    }

    @JsonSetter(
        value = "nullableArray",
        nulls = Nulls.SKIP
    )
    public Builder nullableArray(Optional<List<String>> nullableArray) {
      this.nullableArray = nullableArray;
      return this;
    }

    public Builder nullableArray(List<String> nullableArray) {
      this.nullableArray = Optional.ofNullable(nullableArray);
      return this;
    }

    public UpdateComplexProfileRequest build() {
      return new UpdateComplexProfileRequest(nullableRole, nullableStatus, nullableNotification, nullableSearchResult, nullableArray);
    }
  }
}
