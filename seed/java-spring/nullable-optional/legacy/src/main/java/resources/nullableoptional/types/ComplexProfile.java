/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.nullableoptional.types;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.Nullable;
import core.NullableNonemptyFilter;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = ComplexProfile.Builder.class
)
public final class ComplexProfile {
  private final String id;

  private final Optional<UserRole> nullableRole;

  private final Optional<UserRole> optionalRole;

  private final Optional<UserRole> optionalNullableRole;

  private final Optional<UserStatus> nullableStatus;

  private final Optional<UserStatus> optionalStatus;

  private final Optional<UserStatus> optionalNullableStatus;

  private final Optional<NotificationMethod> nullableNotification;

  private final Optional<NotificationMethod> optionalNotification;

  private final Optional<NotificationMethod> optionalNullableNotification;

  private final Optional<SearchResult> nullableSearchResult;

  private final Optional<SearchResult> optionalSearchResult;

  private final Optional<List<String>> nullableArray;

  private final Optional<List<String>> optionalArray;

  private final Optional<List<String>> optionalNullableArray;

  private final Optional<List<Optional<String>>> nullableListOfNullables;

  private final Optional<Map<String, Optional<Address>>> nullableMapOfNullables;

  private final Optional<List<NotificationMethod>> nullableListOfUnions;

  private final Optional<Map<String, UserRole>> optionalMapOfEnums;

  private ComplexProfile(String id, Optional<UserRole> nullableRole,
      Optional<UserRole> optionalRole, Optional<UserRole> optionalNullableRole,
      Optional<UserStatus> nullableStatus, Optional<UserStatus> optionalStatus,
      Optional<UserStatus> optionalNullableStatus,
      Optional<NotificationMethod> nullableNotification,
      Optional<NotificationMethod> optionalNotification,
      Optional<NotificationMethod> optionalNullableNotification,
      Optional<SearchResult> nullableSearchResult, Optional<SearchResult> optionalSearchResult,
      Optional<List<String>> nullableArray, Optional<List<String>> optionalArray,
      Optional<List<String>> optionalNullableArray,
      Optional<List<Optional<String>>> nullableListOfNullables,
      Optional<Map<String, Optional<Address>>> nullableMapOfNullables,
      Optional<List<NotificationMethod>> nullableListOfUnions,
      Optional<Map<String, UserRole>> optionalMapOfEnums) {
    this.id = id;
    this.nullableRole = nullableRole;
    this.optionalRole = optionalRole;
    this.optionalNullableRole = optionalNullableRole;
    this.nullableStatus = nullableStatus;
    this.optionalStatus = optionalStatus;
    this.optionalNullableStatus = optionalNullableStatus;
    this.nullableNotification = nullableNotification;
    this.optionalNotification = optionalNotification;
    this.optionalNullableNotification = optionalNullableNotification;
    this.nullableSearchResult = nullableSearchResult;
    this.optionalSearchResult = optionalSearchResult;
    this.nullableArray = nullableArray;
    this.optionalArray = optionalArray;
    this.optionalNullableArray = optionalNullableArray;
    this.nullableListOfNullables = nullableListOfNullables;
    this.nullableMapOfNullables = nullableMapOfNullables;
    this.nullableListOfUnions = nullableListOfUnions;
    this.optionalMapOfEnums = optionalMapOfEnums;
  }

  @JsonProperty("id")
  public String getId() {
    return id;
  }

  @JsonIgnore
  public Optional<UserRole> getNullableRole() {
    if (nullableRole == null) {
      return Optional.empty();
    }
    return nullableRole;
  }

  @JsonProperty("optionalRole")
  public Optional<UserRole> getOptionalRole() {
    return optionalRole;
  }

  @JsonProperty("optionalNullableRole")
  public Optional<UserRole> getOptionalNullableRole() {
    return optionalNullableRole;
  }

  @JsonIgnore
  public Optional<UserStatus> getNullableStatus() {
    if (nullableStatus == null) {
      return Optional.empty();
    }
    return nullableStatus;
  }

  @JsonProperty("optionalStatus")
  public Optional<UserStatus> getOptionalStatus() {
    return optionalStatus;
  }

  @JsonProperty("optionalNullableStatus")
  public Optional<UserStatus> getOptionalNullableStatus() {
    return optionalNullableStatus;
  }

  @JsonIgnore
  public Optional<NotificationMethod> getNullableNotification() {
    if (nullableNotification == null) {
      return Optional.empty();
    }
    return nullableNotification;
  }

  @JsonProperty("optionalNotification")
  public Optional<NotificationMethod> getOptionalNotification() {
    return optionalNotification;
  }

  @JsonProperty("optionalNullableNotification")
  public Optional<NotificationMethod> getOptionalNullableNotification() {
    return optionalNullableNotification;
  }

  @JsonIgnore
  public Optional<SearchResult> getNullableSearchResult() {
    if (nullableSearchResult == null) {
      return Optional.empty();
    }
    return nullableSearchResult;
  }

  @JsonProperty("optionalSearchResult")
  public Optional<SearchResult> getOptionalSearchResult() {
    return optionalSearchResult;
  }

  @JsonIgnore
  public Optional<List<String>> getNullableArray() {
    if (nullableArray == null) {
      return Optional.empty();
    }
    return nullableArray;
  }

  @JsonProperty("optionalArray")
  public Optional<List<String>> getOptionalArray() {
    return optionalArray;
  }

  @JsonProperty("optionalNullableArray")
  public Optional<List<String>> getOptionalNullableArray() {
    return optionalNullableArray;
  }

  @JsonIgnore
  public Optional<List<Optional<String>>> getNullableListOfNullables() {
    if (nullableListOfNullables == null) {
      return Optional.empty();
    }
    return nullableListOfNullables;
  }

  @JsonIgnore
  public Optional<Map<String, Optional<Address>>> getNullableMapOfNullables() {
    if (nullableMapOfNullables == null) {
      return Optional.empty();
    }
    return nullableMapOfNullables;
  }

  @JsonIgnore
  public Optional<List<NotificationMethod>> getNullableListOfUnions() {
    if (nullableListOfUnions == null) {
      return Optional.empty();
    }
    return nullableListOfUnions;
  }

  @JsonProperty("optionalMapOfEnums")
  public Optional<Map<String, UserRole>> getOptionalMapOfEnums() {
    return optionalMapOfEnums;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableRole")
  private Optional<UserRole> _getNullableRole() {
    return nullableRole;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableStatus")
  private Optional<UserStatus> _getNullableStatus() {
    return nullableStatus;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableNotification")
  private Optional<NotificationMethod> _getNullableNotification() {
    return nullableNotification;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableSearchResult")
  private Optional<SearchResult> _getNullableSearchResult() {
    return nullableSearchResult;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableArray")
  private Optional<List<String>> _getNullableArray() {
    return nullableArray;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableListOfNullables")
  private Optional<List<Optional<String>>> _getNullableListOfNullables() {
    return nullableListOfNullables;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableMapOfNullables")
  private Optional<Map<String, Optional<Address>>> _getNullableMapOfNullables() {
    return nullableMapOfNullables;
  }

  @JsonInclude(
      value = JsonInclude.Include.CUSTOM,
      valueFilter = NullableNonemptyFilter.class
  )
  @JsonProperty("nullableListOfUnions")
  private Optional<List<NotificationMethod>> _getNullableListOfUnions() {
    return nullableListOfUnions;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof ComplexProfile && equalTo((ComplexProfile) other);
  }

  private boolean equalTo(ComplexProfile other) {
    return id.equals(other.id) && nullableRole.equals(other.nullableRole) && optionalRole.equals(other.optionalRole) && optionalNullableRole.equals(other.optionalNullableRole) && nullableStatus.equals(other.nullableStatus) && optionalStatus.equals(other.optionalStatus) && optionalNullableStatus.equals(other.optionalNullableStatus) && nullableNotification.equals(other.nullableNotification) && optionalNotification.equals(other.optionalNotification) && optionalNullableNotification.equals(other.optionalNullableNotification) && nullableSearchResult.equals(other.nullableSearchResult) && optionalSearchResult.equals(other.optionalSearchResult) && nullableArray.equals(other.nullableArray) && optionalArray.equals(other.optionalArray) && optionalNullableArray.equals(other.optionalNullableArray) && nullableListOfNullables.equals(other.nullableListOfNullables) && nullableMapOfNullables.equals(other.nullableMapOfNullables) && nullableListOfUnions.equals(other.nullableListOfUnions) && optionalMapOfEnums.equals(other.optionalMapOfEnums);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.id, this.nullableRole, this.optionalRole, this.optionalNullableRole, this.nullableStatus, this.optionalStatus, this.optionalNullableStatus, this.nullableNotification, this.optionalNotification, this.optionalNullableNotification, this.nullableSearchResult, this.optionalSearchResult, this.nullableArray, this.optionalArray, this.optionalNullableArray, this.nullableListOfNullables, this.nullableMapOfNullables, this.nullableListOfUnions, this.optionalMapOfEnums);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static IdStage builder() {
    return new Builder();
  }

  public interface IdStage {
    _FinalStage id(@NotNull String id);

    Builder from(ComplexProfile other);
  }

  public interface _FinalStage {
    ComplexProfile build();

    _FinalStage nullableRole(Optional<UserRole> nullableRole);

    _FinalStage nullableRole(UserRole nullableRole);

    _FinalStage nullableRole(Nullable<UserRole> nullableRole);

    _FinalStage optionalRole(Optional<UserRole> optionalRole);

    _FinalStage optionalRole(UserRole optionalRole);

    _FinalStage optionalNullableRole(Optional<UserRole> optionalNullableRole);

    _FinalStage optionalNullableRole(UserRole optionalNullableRole);

    _FinalStage nullableStatus(Optional<UserStatus> nullableStatus);

    _FinalStage nullableStatus(UserStatus nullableStatus);

    _FinalStage nullableStatus(Nullable<UserStatus> nullableStatus);

    _FinalStage optionalStatus(Optional<UserStatus> optionalStatus);

    _FinalStage optionalStatus(UserStatus optionalStatus);

    _FinalStage optionalNullableStatus(Optional<UserStatus> optionalNullableStatus);

    _FinalStage optionalNullableStatus(UserStatus optionalNullableStatus);

    _FinalStage nullableNotification(Optional<NotificationMethod> nullableNotification);

    _FinalStage nullableNotification(NotificationMethod nullableNotification);

    _FinalStage nullableNotification(Nullable<NotificationMethod> nullableNotification);

    _FinalStage optionalNotification(Optional<NotificationMethod> optionalNotification);

    _FinalStage optionalNotification(NotificationMethod optionalNotification);

    _FinalStage optionalNullableNotification(
        Optional<NotificationMethod> optionalNullableNotification);

    _FinalStage optionalNullableNotification(NotificationMethod optionalNullableNotification);

    _FinalStage nullableSearchResult(Optional<SearchResult> nullableSearchResult);

    _FinalStage nullableSearchResult(SearchResult nullableSearchResult);

    _FinalStage nullableSearchResult(Nullable<SearchResult> nullableSearchResult);

    _FinalStage optionalSearchResult(Optional<SearchResult> optionalSearchResult);

    _FinalStage optionalSearchResult(SearchResult optionalSearchResult);

    _FinalStage nullableArray(Optional<List<String>> nullableArray);

    _FinalStage nullableArray(List<String> nullableArray);

    _FinalStage nullableArray(Nullable<List<String>> nullableArray);

    _FinalStage optionalArray(Optional<List<String>> optionalArray);

    _FinalStage optionalArray(List<String> optionalArray);

    _FinalStage optionalNullableArray(Optional<List<String>> optionalNullableArray);

    _FinalStage optionalNullableArray(List<String> optionalNullableArray);

    _FinalStage nullableListOfNullables(Optional<List<Optional<String>>> nullableListOfNullables);

    _FinalStage nullableListOfNullables(List<Optional<String>> nullableListOfNullables);

    _FinalStage nullableListOfNullables(Nullable<List<Optional<String>>> nullableListOfNullables);

    _FinalStage nullableMapOfNullables(
        Optional<Map<String, Optional<Address>>> nullableMapOfNullables);

    _FinalStage nullableMapOfNullables(Map<String, Optional<Address>> nullableMapOfNullables);

    _FinalStage nullableMapOfNullables(
        Nullable<Map<String, Optional<Address>>> nullableMapOfNullables);

    _FinalStage nullableListOfUnions(Optional<List<NotificationMethod>> nullableListOfUnions);

    _FinalStage nullableListOfUnions(List<NotificationMethod> nullableListOfUnions);

    _FinalStage nullableListOfUnions(Nullable<List<NotificationMethod>> nullableListOfUnions);

    _FinalStage optionalMapOfEnums(Optional<Map<String, UserRole>> optionalMapOfEnums);

    _FinalStage optionalMapOfEnums(Map<String, UserRole> optionalMapOfEnums);
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements IdStage, _FinalStage {
    private String id;

    private Optional<Map<String, UserRole>> optionalMapOfEnums = Optional.empty();

    private Optional<List<NotificationMethod>> nullableListOfUnions = Optional.empty();

    private Optional<Map<String, Optional<Address>>> nullableMapOfNullables = Optional.empty();

    private Optional<List<Optional<String>>> nullableListOfNullables = Optional.empty();

    private Optional<List<String>> optionalNullableArray = Optional.empty();

    private Optional<List<String>> optionalArray = Optional.empty();

    private Optional<List<String>> nullableArray = Optional.empty();

    private Optional<SearchResult> optionalSearchResult = Optional.empty();

    private Optional<SearchResult> nullableSearchResult = Optional.empty();

    private Optional<NotificationMethod> optionalNullableNotification = Optional.empty();

    private Optional<NotificationMethod> optionalNotification = Optional.empty();

    private Optional<NotificationMethod> nullableNotification = Optional.empty();

    private Optional<UserStatus> optionalNullableStatus = Optional.empty();

    private Optional<UserStatus> optionalStatus = Optional.empty();

    private Optional<UserStatus> nullableStatus = Optional.empty();

    private Optional<UserRole> optionalNullableRole = Optional.empty();

    private Optional<UserRole> optionalRole = Optional.empty();

    private Optional<UserRole> nullableRole = Optional.empty();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(ComplexProfile other) {
      id(other.getId());
      nullableRole(other.getNullableRole());
      optionalRole(other.getOptionalRole());
      optionalNullableRole(other.getOptionalNullableRole());
      nullableStatus(other.getNullableStatus());
      optionalStatus(other.getOptionalStatus());
      optionalNullableStatus(other.getOptionalNullableStatus());
      nullableNotification(other.getNullableNotification());
      optionalNotification(other.getOptionalNotification());
      optionalNullableNotification(other.getOptionalNullableNotification());
      nullableSearchResult(other.getNullableSearchResult());
      optionalSearchResult(other.getOptionalSearchResult());
      nullableArray(other.getNullableArray());
      optionalArray(other.getOptionalArray());
      optionalNullableArray(other.getOptionalNullableArray());
      nullableListOfNullables(other.getNullableListOfNullables());
      nullableMapOfNullables(other.getNullableMapOfNullables());
      nullableListOfUnions(other.getNullableListOfUnions());
      optionalMapOfEnums(other.getOptionalMapOfEnums());
      return this;
    }

    @java.lang.Override
    @JsonSetter("id")
    public _FinalStage id(@NotNull String id) {
      this.id = Objects.requireNonNull(id, "id must not be null");
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalMapOfEnums(Map<String, UserRole> optionalMapOfEnums) {
      this.optionalMapOfEnums = Optional.ofNullable(optionalMapOfEnums);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalMapOfEnums",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalMapOfEnums(Optional<Map<String, UserRole>> optionalMapOfEnums) {
      this.optionalMapOfEnums = optionalMapOfEnums;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableListOfUnions(
        Nullable<List<NotificationMethod>> nullableListOfUnions) {
      if (nullableListOfUnions.isNull()) {
        this.nullableListOfUnions = null;
      }
      else if (nullableListOfUnions.isEmpty()) {
        this.nullableListOfUnions = Optional.empty();
      }
      else {
        this.nullableListOfUnions = Optional.of(nullableListOfUnions.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableListOfUnions(List<NotificationMethod> nullableListOfUnions) {
      this.nullableListOfUnions = Optional.ofNullable(nullableListOfUnions);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableListOfUnions",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableListOfUnions(
        Optional<List<NotificationMethod>> nullableListOfUnions) {
      this.nullableListOfUnions = nullableListOfUnions;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableMapOfNullables(
        Nullable<Map<String, Optional<Address>>> nullableMapOfNullables) {
      if (nullableMapOfNullables.isNull()) {
        this.nullableMapOfNullables = null;
      }
      else if (nullableMapOfNullables.isEmpty()) {
        this.nullableMapOfNullables = Optional.empty();
      }
      else {
        this.nullableMapOfNullables = Optional.of(nullableMapOfNullables.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableMapOfNullables(
        Map<String, Optional<Address>> nullableMapOfNullables) {
      this.nullableMapOfNullables = Optional.ofNullable(nullableMapOfNullables);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableMapOfNullables",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableMapOfNullables(
        Optional<Map<String, Optional<Address>>> nullableMapOfNullables) {
      this.nullableMapOfNullables = nullableMapOfNullables;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableListOfNullables(
        Nullable<List<Optional<String>>> nullableListOfNullables) {
      if (nullableListOfNullables.isNull()) {
        this.nullableListOfNullables = null;
      }
      else if (nullableListOfNullables.isEmpty()) {
        this.nullableListOfNullables = Optional.empty();
      }
      else {
        this.nullableListOfNullables = Optional.of(nullableListOfNullables.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableListOfNullables(List<Optional<String>> nullableListOfNullables) {
      this.nullableListOfNullables = Optional.ofNullable(nullableListOfNullables);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableListOfNullables",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableListOfNullables(
        Optional<List<Optional<String>>> nullableListOfNullables) {
      this.nullableListOfNullables = nullableListOfNullables;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalNullableArray(List<String> optionalNullableArray) {
      this.optionalNullableArray = Optional.ofNullable(optionalNullableArray);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalNullableArray",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalNullableArray(Optional<List<String>> optionalNullableArray) {
      this.optionalNullableArray = optionalNullableArray;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalArray(List<String> optionalArray) {
      this.optionalArray = Optional.ofNullable(optionalArray);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalArray",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalArray(Optional<List<String>> optionalArray) {
      this.optionalArray = optionalArray;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableArray(Nullable<List<String>> nullableArray) {
      if (nullableArray.isNull()) {
        this.nullableArray = null;
      }
      else if (nullableArray.isEmpty()) {
        this.nullableArray = Optional.empty();
      }
      else {
        this.nullableArray = Optional.of(nullableArray.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableArray(List<String> nullableArray) {
      this.nullableArray = Optional.ofNullable(nullableArray);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableArray",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableArray(Optional<List<String>> nullableArray) {
      this.nullableArray = nullableArray;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalSearchResult(SearchResult optionalSearchResult) {
      this.optionalSearchResult = Optional.ofNullable(optionalSearchResult);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalSearchResult",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalSearchResult(Optional<SearchResult> optionalSearchResult) {
      this.optionalSearchResult = optionalSearchResult;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableSearchResult(Nullable<SearchResult> nullableSearchResult) {
      if (nullableSearchResult.isNull()) {
        this.nullableSearchResult = null;
      }
      else if (nullableSearchResult.isEmpty()) {
        this.nullableSearchResult = Optional.empty();
      }
      else {
        this.nullableSearchResult = Optional.of(nullableSearchResult.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableSearchResult(SearchResult nullableSearchResult) {
      this.nullableSearchResult = Optional.ofNullable(nullableSearchResult);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableSearchResult",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableSearchResult(Optional<SearchResult> nullableSearchResult) {
      this.nullableSearchResult = nullableSearchResult;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalNullableNotification(
        NotificationMethod optionalNullableNotification) {
      this.optionalNullableNotification = Optional.ofNullable(optionalNullableNotification);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalNullableNotification",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalNullableNotification(
        Optional<NotificationMethod> optionalNullableNotification) {
      this.optionalNullableNotification = optionalNullableNotification;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalNotification(NotificationMethod optionalNotification) {
      this.optionalNotification = Optional.ofNullable(optionalNotification);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalNotification",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalNotification(Optional<NotificationMethod> optionalNotification) {
      this.optionalNotification = optionalNotification;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableNotification(Nullable<NotificationMethod> nullableNotification) {
      if (nullableNotification.isNull()) {
        this.nullableNotification = null;
      }
      else if (nullableNotification.isEmpty()) {
        this.nullableNotification = Optional.empty();
      }
      else {
        this.nullableNotification = Optional.of(nullableNotification.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableNotification(NotificationMethod nullableNotification) {
      this.nullableNotification = Optional.ofNullable(nullableNotification);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableNotification",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableNotification(Optional<NotificationMethod> nullableNotification) {
      this.nullableNotification = nullableNotification;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalNullableStatus(UserStatus optionalNullableStatus) {
      this.optionalNullableStatus = Optional.ofNullable(optionalNullableStatus);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalNullableStatus",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalNullableStatus(Optional<UserStatus> optionalNullableStatus) {
      this.optionalNullableStatus = optionalNullableStatus;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalStatus(UserStatus optionalStatus) {
      this.optionalStatus = Optional.ofNullable(optionalStatus);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalStatus",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalStatus(Optional<UserStatus> optionalStatus) {
      this.optionalStatus = optionalStatus;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableStatus(Nullable<UserStatus> nullableStatus) {
      if (nullableStatus.isNull()) {
        this.nullableStatus = null;
      }
      else if (nullableStatus.isEmpty()) {
        this.nullableStatus = Optional.empty();
      }
      else {
        this.nullableStatus = Optional.of(nullableStatus.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableStatus(UserStatus nullableStatus) {
      this.nullableStatus = Optional.ofNullable(nullableStatus);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableStatus",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableStatus(Optional<UserStatus> nullableStatus) {
      this.nullableStatus = nullableStatus;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalNullableRole(UserRole optionalNullableRole) {
      this.optionalNullableRole = Optional.ofNullable(optionalNullableRole);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalNullableRole",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalNullableRole(Optional<UserRole> optionalNullableRole) {
      this.optionalNullableRole = optionalNullableRole;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalRole(UserRole optionalRole) {
      this.optionalRole = Optional.ofNullable(optionalRole);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalRole",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalRole(Optional<UserRole> optionalRole) {
      this.optionalRole = optionalRole;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableRole(Nullable<UserRole> nullableRole) {
      if (nullableRole.isNull()) {
        this.nullableRole = null;
      }
      else if (nullableRole.isEmpty()) {
        this.nullableRole = Optional.empty();
      }
      else {
        this.nullableRole = Optional.of(nullableRole.get());
      }
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableRole(UserRole nullableRole) {
      this.nullableRole = Optional.ofNullable(nullableRole);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableRole",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableRole(Optional<UserRole> nullableRole) {
      this.nullableRole = nullableRole;
      return this;
    }

    @java.lang.Override
    public ComplexProfile build() {
      return new ComplexProfile(id, nullableRole, optionalRole, optionalNullableRole, nullableStatus, optionalStatus, optionalNullableStatus, nullableNotification, optionalNotification, optionalNullableNotification, nullableSearchResult, optionalSearchResult, nullableArray, optionalArray, optionalNullableArray, nullableListOfNullables, nullableMapOfNullables, nullableListOfUnions, optionalMapOfEnums);
    }
  }
}
