/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.nullableoptional.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UserProfile.Builder.class
)
public final class UserProfile {
  private final String id;

  private final String username;

  private final String nullableString;

  private final Integer nullableInteger;

  private final Boolean nullableBoolean;

  private final OffsetDateTime nullableDate;

  private final Address nullableObject;

  private final List<String> nullableList;

  private final Map<String, String> nullableMap;

  private final Optional<String> optionalString;

  private final Optional<Integer> optionalInteger;

  private final Optional<Boolean> optionalBoolean;

  private final Optional<OffsetDateTime> optionalDate;

  private final Optional<Address> optionalObject;

  private final Optional<List<String>> optionalList;

  private final Optional<Map<String, String>> optionalMap;

  private final Optional<String> optionalNullableString;

  private final Optional<Address> optionalNullableObject;

  private UserProfile(String id, String username, String nullableString, Integer nullableInteger,
      Boolean nullableBoolean, OffsetDateTime nullableDate, Address nullableObject,
      List<String> nullableList, Map<String, String> nullableMap, Optional<String> optionalString,
      Optional<Integer> optionalInteger, Optional<Boolean> optionalBoolean,
      Optional<OffsetDateTime> optionalDate, Optional<Address> optionalObject,
      Optional<List<String>> optionalList, Optional<Map<String, String>> optionalMap,
      Optional<String> optionalNullableString, Optional<Address> optionalNullableObject) {
    this.id = id;
    this.username = username;
    this.nullableString = nullableString;
    this.nullableInteger = nullableInteger;
    this.nullableBoolean = nullableBoolean;
    this.nullableDate = nullableDate;
    this.nullableObject = nullableObject;
    this.nullableList = nullableList;
    this.nullableMap = nullableMap;
    this.optionalString = optionalString;
    this.optionalInteger = optionalInteger;
    this.optionalBoolean = optionalBoolean;
    this.optionalDate = optionalDate;
    this.optionalObject = optionalObject;
    this.optionalList = optionalList;
    this.optionalMap = optionalMap;
    this.optionalNullableString = optionalNullableString;
    this.optionalNullableObject = optionalNullableObject;
  }

  @JsonProperty("id")
  public String getId() {
    return id;
  }

  @JsonProperty("username")
  public String getUsername() {
    return username;
  }

  @Nullable
  @JsonProperty("nullableString")
  public String getNullableString() {
    return nullableString;
  }

  @Nullable
  @JsonProperty("nullableInteger")
  public Integer getNullableInteger() {
    return nullableInteger;
  }

  @Nullable
  @JsonProperty("nullableBoolean")
  public Boolean getNullableBoolean() {
    return nullableBoolean;
  }

  @Nullable
  @JsonProperty("nullableDate")
  public OffsetDateTime getNullableDate() {
    return nullableDate;
  }

  @Nullable
  @JsonProperty("nullableObject")
  public Address getNullableObject() {
    return nullableObject;
  }

  @Nullable
  @JsonProperty("nullableList")
  public List<String> getNullableList() {
    return nullableList;
  }

  @Nullable
  @JsonProperty("nullableMap")
  public Map<String, String> getNullableMap() {
    return nullableMap;
  }

  @JsonProperty("optionalString")
  public Optional<String> getOptionalString() {
    return optionalString;
  }

  @JsonProperty("optionalInteger")
  public Optional<Integer> getOptionalInteger() {
    return optionalInteger;
  }

  @JsonProperty("optionalBoolean")
  public Optional<Boolean> getOptionalBoolean() {
    return optionalBoolean;
  }

  @JsonProperty("optionalDate")
  public Optional<OffsetDateTime> getOptionalDate() {
    return optionalDate;
  }

  @JsonProperty("optionalObject")
  public Optional<Address> getOptionalObject() {
    return optionalObject;
  }

  @JsonProperty("optionalList")
  public Optional<List<String>> getOptionalList() {
    return optionalList;
  }

  @JsonProperty("optionalMap")
  public Optional<Map<String, String>> getOptionalMap() {
    return optionalMap;
  }

  @JsonProperty("optionalNullableString")
  public Optional<String> getOptionalNullableString() {
    return optionalNullableString;
  }

  @JsonProperty("optionalNullableObject")
  public Optional<Address> getOptionalNullableObject() {
    return optionalNullableObject;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UserProfile && equalTo((UserProfile) other);
  }

  private boolean equalTo(UserProfile other) {
    return java.util.Objects.equals(id, other.id) && java.util.Objects.equals(username, other.username) && java.util.Objects.equals(nullableString, other.nullableString) && java.util.Objects.equals(nullableInteger, other.nullableInteger) && java.util.Objects.equals(nullableBoolean, other.nullableBoolean) && java.util.Objects.equals(nullableDate, other.nullableDate) && java.util.Objects.equals(nullableObject, other.nullableObject) && java.util.Objects.equals(nullableList, other.nullableList) && java.util.Objects.equals(nullableMap, other.nullableMap) && java.util.Objects.equals(optionalString, other.optionalString) && java.util.Objects.equals(optionalInteger, other.optionalInteger) && java.util.Objects.equals(optionalBoolean, other.optionalBoolean) && java.util.Objects.equals(optionalDate, other.optionalDate) && java.util.Objects.equals(optionalObject, other.optionalObject) && java.util.Objects.equals(optionalList, other.optionalList) && java.util.Objects.equals(optionalMap, other.optionalMap) && java.util.Objects.equals(optionalNullableString, other.optionalNullableString) && java.util.Objects.equals(optionalNullableObject, other.optionalNullableObject);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.id, this.username, this.nullableString, this.nullableInteger, this.nullableBoolean, this.nullableDate, this.nullableObject, this.nullableList, this.nullableMap, this.optionalString, this.optionalInteger, this.optionalBoolean, this.optionalDate, this.optionalObject, this.optionalList, this.optionalMap, this.optionalNullableString, this.optionalNullableObject);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static IdStage builder() {
    return new Builder();
  }

  public interface IdStage {
    UsernameStage id(@NotNull String id);

    Builder from(UserProfile other);
  }

  public interface UsernameStage {
    NullableStringStage username(@NotNull String username);
  }

  public interface NullableStringStage {
    NullableIntegerStage nullableString(@NotNull String nullableString);
  }

  public interface NullableIntegerStage {
    NullableBooleanStage nullableInteger(@NotNull Integer nullableInteger);
  }

  public interface NullableBooleanStage {
    NullableDateStage nullableBoolean(@NotNull Boolean nullableBoolean);
  }

  public interface NullableDateStage {
    NullableObjectStage nullableDate(@NotNull OffsetDateTime nullableDate);
  }

  public interface NullableObjectStage {
    _FinalStage nullableObject(@NotNull Address nullableObject);
  }

  public interface _FinalStage {
    UserProfile build();

    _FinalStage nullableList(List<String> nullableList);

    _FinalStage addNullableList(String nullableList);

    _FinalStage addAllNullableList(List<String> nullableList);

    _FinalStage nullableMap(Map<String, String> nullableMap);

    _FinalStage putAllNullableMap(Map<String, String> nullableMap);

    _FinalStage nullableMap(String key, String value);

    _FinalStage optionalString(Optional<String> optionalString);

    _FinalStage optionalString(String optionalString);

    _FinalStage optionalInteger(Optional<Integer> optionalInteger);

    _FinalStage optionalInteger(Integer optionalInteger);

    _FinalStage optionalBoolean(Optional<Boolean> optionalBoolean);

    _FinalStage optionalBoolean(Boolean optionalBoolean);

    _FinalStage optionalDate(Optional<OffsetDateTime> optionalDate);

    _FinalStage optionalDate(OffsetDateTime optionalDate);

    _FinalStage optionalObject(Optional<Address> optionalObject);

    _FinalStage optionalObject(Address optionalObject);

    _FinalStage optionalList(Optional<List<String>> optionalList);

    _FinalStage optionalList(List<String> optionalList);

    _FinalStage optionalMap(Optional<Map<String, String>> optionalMap);

    _FinalStage optionalMap(Map<String, String> optionalMap);

    _FinalStage optionalNullableString(Optional<String> optionalNullableString);

    _FinalStage optionalNullableString(String optionalNullableString);

    _FinalStage optionalNullableObject(Optional<Address> optionalNullableObject);

    _FinalStage optionalNullableObject(Address optionalNullableObject);
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements IdStage, UsernameStage, NullableStringStage, NullableIntegerStage, NullableBooleanStage, NullableDateStage, NullableObjectStage, _FinalStage {
    private String id;

    private String username;

    private String nullableString;

    private Integer nullableInteger;

    private Boolean nullableBoolean;

    private OffsetDateTime nullableDate;

    private Address nullableObject;

    private Optional<Address> optionalNullableObject = Optional.empty();

    private Optional<String> optionalNullableString = Optional.empty();

    private Optional<Map<String, String>> optionalMap = Optional.empty();

    private Optional<List<String>> optionalList = Optional.empty();

    private Optional<Address> optionalObject = Optional.empty();

    private Optional<OffsetDateTime> optionalDate = Optional.empty();

    private Optional<Boolean> optionalBoolean = Optional.empty();

    private Optional<Integer> optionalInteger = Optional.empty();

    private Optional<String> optionalString = Optional.empty();

    private Map<String, String> nullableMap = new LinkedHashMap<>();

    private List<String> nullableList = new ArrayList<>();

    private Builder() {
    }

    @java.lang.Override
    public Builder from(UserProfile other) {
      id(other.getId());
      username(other.getUsername());
      nullableString(other.getNullableString());
      nullableInteger(other.getNullableInteger());
      nullableBoolean(other.getNullableBoolean());
      nullableDate(other.getNullableDate());
      nullableObject(other.getNullableObject());
      nullableList(other.getNullableList());
      nullableMap(other.getNullableMap());
      optionalString(other.getOptionalString());
      optionalInteger(other.getOptionalInteger());
      optionalBoolean(other.getOptionalBoolean());
      optionalDate(other.getOptionalDate());
      optionalObject(other.getOptionalObject());
      optionalList(other.getOptionalList());
      optionalMap(other.getOptionalMap());
      optionalNullableString(other.getOptionalNullableString());
      optionalNullableObject(other.getOptionalNullableObject());
      return this;
    }

    @java.lang.Override
    @JsonSetter("id")
    public UsernameStage id(@NotNull String id) {
      this.id = Objects.requireNonNull(id, "id must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("username")
    public NullableStringStage username(@NotNull String username) {
      this.username = Objects.requireNonNull(username, "username must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("nullableString")
    public NullableIntegerStage nullableString(@NotNull String nullableString) {
      this.nullableString = Objects.requireNonNull(nullableString, "nullableString must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("nullableInteger")
    public NullableBooleanStage nullableInteger(@NotNull Integer nullableInteger) {
      this.nullableInteger = Objects.requireNonNull(nullableInteger, "nullableInteger must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("nullableBoolean")
    public NullableDateStage nullableBoolean(@NotNull Boolean nullableBoolean) {
      this.nullableBoolean = Objects.requireNonNull(nullableBoolean, "nullableBoolean must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("nullableDate")
    public NullableObjectStage nullableDate(@NotNull OffsetDateTime nullableDate) {
      this.nullableDate = Objects.requireNonNull(nullableDate, "nullableDate must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("nullableObject")
    public _FinalStage nullableObject(@NotNull Address nullableObject) {
      this.nullableObject = Objects.requireNonNull(nullableObject, "nullableObject must not be null");
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalNullableObject(Address optionalNullableObject) {
      this.optionalNullableObject = Optional.ofNullable(optionalNullableObject);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalNullableObject",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalNullableObject(Optional<Address> optionalNullableObject) {
      this.optionalNullableObject = optionalNullableObject;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalNullableString(String optionalNullableString) {
      this.optionalNullableString = Optional.ofNullable(optionalNullableString);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalNullableString",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalNullableString(Optional<String> optionalNullableString) {
      this.optionalNullableString = optionalNullableString;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalMap(Map<String, String> optionalMap) {
      this.optionalMap = Optional.ofNullable(optionalMap);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalMap",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalMap(Optional<Map<String, String>> optionalMap) {
      this.optionalMap = optionalMap;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalList(List<String> optionalList) {
      this.optionalList = Optional.ofNullable(optionalList);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalList",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalList(Optional<List<String>> optionalList) {
      this.optionalList = optionalList;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalObject(Address optionalObject) {
      this.optionalObject = Optional.ofNullable(optionalObject);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalObject",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalObject(Optional<Address> optionalObject) {
      this.optionalObject = optionalObject;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalDate(OffsetDateTime optionalDate) {
      this.optionalDate = Optional.ofNullable(optionalDate);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalDate",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalDate(Optional<OffsetDateTime> optionalDate) {
      this.optionalDate = optionalDate;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalBoolean(Boolean optionalBoolean) {
      this.optionalBoolean = Optional.ofNullable(optionalBoolean);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalBoolean",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalBoolean(Optional<Boolean> optionalBoolean) {
      this.optionalBoolean = optionalBoolean;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalInteger(Integer optionalInteger) {
      this.optionalInteger = Optional.ofNullable(optionalInteger);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalInteger",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalInteger(Optional<Integer> optionalInteger) {
      this.optionalInteger = optionalInteger;
      return this;
    }

    @java.lang.Override
    public _FinalStage optionalString(String optionalString) {
      this.optionalString = Optional.ofNullable(optionalString);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "optionalString",
        nulls = Nulls.SKIP
    )
    public _FinalStage optionalString(Optional<String> optionalString) {
      this.optionalString = optionalString;
      return this;
    }

    @java.lang.Override
    public _FinalStage nullableMap(String key, String value) {
      this.nullableMap.put(key, value);
      return this;
    }

    @java.lang.Override
    public _FinalStage putAllNullableMap(Map<String, String> nullableMap) {
      this.nullableMap.putAll(nullableMap);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableMap",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableMap(Map<String, String> nullableMap) {
      this.nullableMap.clear();
      this.nullableMap.putAll(nullableMap);
      return this;
    }

    @java.lang.Override
    public _FinalStage addAllNullableList(List<String> nullableList) {
      this.nullableList.addAll(nullableList);
      return this;
    }

    @java.lang.Override
    public _FinalStage addNullableList(String nullableList) {
      this.nullableList.add(nullableList);
      return this;
    }

    @java.lang.Override
    @JsonSetter(
        value = "nullableList",
        nulls = Nulls.SKIP
    )
    public _FinalStage nullableList(List<String> nullableList) {
      this.nullableList.clear();
      this.nullableList.addAll(nullableList);
      return this;
    }

    @java.lang.Override
    public UserProfile build() {
      return new UserProfile(id, username, nullableString, nullableInteger, nullableBoolean, nullableDate, nullableObject, nullableList, nullableMap, optionalString, optionalInteger, optionalBoolean, optionalDate, optionalObject, optionalList, optionalMap, optionalNullableString, optionalNullableObject);
    }
  }
}
