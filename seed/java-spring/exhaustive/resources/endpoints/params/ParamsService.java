/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.endpoints.params;

import core.BearerAuth;
import java.lang.Integer;
import java.lang.String;
import java.security.Principal;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@RequestMapping(
    path = "/params"
)
public interface ParamsService {
  @GetMapping(
      value = "/path/{param}",
      produces = "application/json"
  )
  String getWithPath(@RequestHeader("Authorization") BearerAuth auth, Principal principal,
      @PathVariable("param") String param);

  @GetMapping(
      value = "/path/{param}",
      produces = "application/json"
  )
  String getWithInlinePath(@RequestHeader("Authorization") BearerAuth auth, Principal principal,
      @PathVariable("param") String param);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  void getWithQuery(@RequestHeader("Authorization") BearerAuth auth, Principal principal,
      @RequestParam("query") String query, @RequestParam("number") Integer number);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  void getWithAllowMultipleQuery(@RequestHeader("Authorization") BearerAuth auth,
      Principal principal, @RequestParam("query") String query,
      @RequestParam("number") Integer number);

  @GetMapping(
      value = "/path-query/{param}",
      produces = "application/json"
  )
  void getWithPathAndQuery(@RequestHeader("Authorization") BearerAuth auth, Principal principal,
      @PathVariable("param") String param, @RequestParam("query") String query);

  @GetMapping(
      value = "/path-query/{param}",
      produces = "application/json"
  )
  void getWithInlinePathAndQuery(@RequestHeader("Authorization") BearerAuth auth,
      Principal principal, @PathVariable("param") String param,
      @RequestParam("query") String query);

  @PutMapping(
      value = "/path/{param}",
      produces = "application/json",
      consumes = "application/json"
  )
  String modifyWithPath(@RequestHeader("Authorization") BearerAuth auth, Principal principal,
      @PathVariable("param") String param, @RequestBody String body);

  @PutMapping(
      value = "/path/{param}",
      produces = "application/json",
      consumes = "application/json"
  )
  String modifyWithInlinePath(@RequestHeader("Authorization") BearerAuth auth, Principal principal,
      @PathVariable("param") String param, @RequestBody String body);
}
