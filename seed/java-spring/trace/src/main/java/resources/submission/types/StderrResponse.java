/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.submission.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = StderrResponse.Builder.class
)
public final class StderrResponse {
  private final SubmissionId submissionId;

  private final String stderr;

  private StderrResponse(SubmissionId submissionId, String stderr) {
    this.submissionId = submissionId;
    this.stderr = stderr;
  }

  @JsonProperty("submissionId")
  public SubmissionId getSubmissionId() {
    return submissionId;
  }

  @JsonProperty("stderr")
  public String getStderr() {
    return stderr;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof StderrResponse && equalTo((StderrResponse) other);
  }

  private boolean equalTo(StderrResponse other) {
    return submissionId.equals(other.submissionId) && stderr.equals(other.stderr);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.submissionId, this.stderr);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static SubmissionIdStage builder() {
    return new Builder();
  }

  public interface SubmissionIdStage {
    StderrStage submissionId(@NotNull SubmissionId submissionId);

    Builder from(StderrResponse other);
  }

  public interface StderrStage {
    _FinalStage stderr(@NotNull String stderr);
  }

  public interface _FinalStage {
    StderrResponse build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements SubmissionIdStage, StderrStage, _FinalStage {
    private SubmissionId submissionId;

    private String stderr;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(StderrResponse other) {
      submissionId(other.getSubmissionId());
      stderr(other.getStderr());
      return this;
    }

    @java.lang.Override
    @JsonSetter("submissionId")
    public StderrStage submissionId(@NotNull SubmissionId submissionId) {
      this.submissionId = Objects.requireNonNull(submissionId, "submissionId must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("stderr")
    public _FinalStage stderr(@NotNull String stderr) {
      this.stderr = Objects.requireNonNull(stderr, "stderr must not be null");
      return this;
    }

    @java.lang.Override
    public StderrResponse build() {
      return new StderrResponse(submissionId, stderr);
    }
  }
}
