/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.submission.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = TracedTestCase.Builder.class
)
public final class TracedTestCase {
  private final TestCaseResultWithStdout result;

  private final int traceResponsesSize;

  private TracedTestCase(TestCaseResultWithStdout result, int traceResponsesSize) {
    this.result = result;
    this.traceResponsesSize = traceResponsesSize;
  }

  @JsonProperty("result")
  public TestCaseResultWithStdout getResult() {
    return result;
  }

  @JsonProperty("traceResponsesSize")
  public int getTraceResponsesSize() {
    return traceResponsesSize;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof TracedTestCase && equalTo((TracedTestCase) other);
  }

  private boolean equalTo(TracedTestCase other) {
    return result.equals(other.result) && traceResponsesSize == other.traceResponsesSize;
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.result, this.traceResponsesSize);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static ResultStage builder() {
    return new Builder();
  }

  public interface ResultStage {
    TraceResponsesSizeStage result(@NotNull TestCaseResultWithStdout result);

    Builder from(TracedTestCase other);
  }

  public interface TraceResponsesSizeStage {
    _FinalStage traceResponsesSize(int traceResponsesSize);
  }

  public interface _FinalStage {
    TracedTestCase build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements ResultStage, TraceResponsesSizeStage, _FinalStage {
    private TestCaseResultWithStdout result;

    private int traceResponsesSize;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(TracedTestCase other) {
      result(other.getResult());
      traceResponsesSize(other.getTraceResponsesSize());
      return this;
    }

    @java.lang.Override
    @JsonSetter("result")
    public TraceResponsesSizeStage result(@NotNull TestCaseResultWithStdout result) {
      this.result = Objects.requireNonNull(result, "result must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("traceResponsesSize")
    public _FinalStage traceResponsesSize(int traceResponsesSize) {
      this.traceResponsesSize = traceResponsesSize;
      return this;
    }

    @java.lang.Override
    public TracedTestCase build() {
      return new TracedTestCase(result, traceResponsesSize);
    }
  }
}
