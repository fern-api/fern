/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.v2.v3.problem.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = DeepEqualityCorrectnessCheck.Builder.class
)
public final class DeepEqualityCorrectnessCheck {
  private final ParameterId expectedValueParameterId;

  private DeepEqualityCorrectnessCheck(ParameterId expectedValueParameterId) {
    this.expectedValueParameterId = expectedValueParameterId;
  }

  @JsonProperty("expectedValueParameterId")
  public ParameterId getExpectedValueParameterId() {
    return expectedValueParameterId;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof DeepEqualityCorrectnessCheck && equalTo((DeepEqualityCorrectnessCheck) other);
  }

  private boolean equalTo(DeepEqualityCorrectnessCheck other) {
    return expectedValueParameterId.equals(other.expectedValueParameterId);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.expectedValueParameterId);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static ExpectedValueParameterIdStage builder() {
    return new Builder();
  }

  public interface ExpectedValueParameterIdStage {
    _FinalStage expectedValueParameterId(@NotNull ParameterId expectedValueParameterId);

    Builder from(DeepEqualityCorrectnessCheck other);
  }

  public interface _FinalStage {
    DeepEqualityCorrectnessCheck build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements ExpectedValueParameterIdStage, _FinalStage {
    private ParameterId expectedValueParameterId;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(DeepEqualityCorrectnessCheck other) {
      expectedValueParameterId(other.getExpectedValueParameterId());
      return this;
    }

    @java.lang.Override
    @JsonSetter("expectedValueParameterId")
    public _FinalStage expectedValueParameterId(@NotNull ParameterId expectedValueParameterId) {
      this.expectedValueParameterId = Objects.requireNonNull(expectedValueParameterId, "expectedValueParameterId must not be null");
      return this;
    }

    @java.lang.Override
    public DeepEqualityCorrectnessCheck build() {
      return new DeepEqualityCorrectnessCheck(expectedValueParameterId);
    }
  }
}
