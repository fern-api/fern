/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.commons.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = BinaryTreeNodeAndTreeValue.Builder.class
)
public final class BinaryTreeNodeAndTreeValue {
  private final NodeId nodeId;

  private final BinaryTreeValue fullTree;

  private BinaryTreeNodeAndTreeValue(NodeId nodeId, BinaryTreeValue fullTree) {
    this.nodeId = nodeId;
    this.fullTree = fullTree;
  }

  @JsonProperty("nodeId")
  public NodeId getNodeId() {
    return nodeId;
  }

  @JsonProperty("fullTree")
  public BinaryTreeValue getFullTree() {
    return fullTree;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof BinaryTreeNodeAndTreeValue && equalTo((BinaryTreeNodeAndTreeValue) other);
  }

  private boolean equalTo(BinaryTreeNodeAndTreeValue other) {
    return nodeId.equals(other.nodeId) && fullTree.equals(other.fullTree);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.nodeId, this.fullTree);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static NodeIdStage builder() {
    return new Builder();
  }

  public interface NodeIdStage {
    FullTreeStage nodeId(@NotNull NodeId nodeId);

    Builder from(BinaryTreeNodeAndTreeValue other);
  }

  public interface FullTreeStage {
    _FinalStage fullTree(@NotNull BinaryTreeValue fullTree);
  }

  public interface _FinalStage {
    BinaryTreeNodeAndTreeValue build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements NodeIdStage, FullTreeStage, _FinalStage {
    private NodeId nodeId;

    private BinaryTreeValue fullTree;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(BinaryTreeNodeAndTreeValue other) {
      nodeId(other.getNodeId());
      fullTree(other.getFullTree());
      return this;
    }

    @java.lang.Override
    @JsonSetter("nodeId")
    public FullTreeStage nodeId(@NotNull NodeId nodeId) {
      this.nodeId = Objects.requireNonNull(nodeId, "nodeId must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("fullTree")
    public _FinalStage fullTree(@NotNull BinaryTreeValue fullTree) {
      this.fullTree = Objects.requireNonNull(fullTree, "fullTree must not be null");
      return this;
    }

    @java.lang.Override
    public BinaryTreeNodeAndTreeValue build() {
      return new BinaryTreeNodeAndTreeValue(nodeId, fullTree);
    }
  }
}
