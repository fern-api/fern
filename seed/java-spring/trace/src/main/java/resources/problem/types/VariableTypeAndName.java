/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.problem.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;
import resources.commons.types.VariableType;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = VariableTypeAndName.Builder.class
)
public final class VariableTypeAndName {
  private final VariableType variableType;

  private final String name;

  private VariableTypeAndName(VariableType variableType, String name) {
    this.variableType = variableType;
    this.name = name;
  }

  @JsonProperty("variableType")
  public VariableType getVariableType() {
    return variableType;
  }

  @JsonProperty("name")
  public String getName() {
    return name;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof VariableTypeAndName && equalTo((VariableTypeAndName) other);
  }

  private boolean equalTo(VariableTypeAndName other) {
    return variableType.equals(other.variableType) && name.equals(other.name);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.variableType, this.name);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static VariableTypeStage builder() {
    return new Builder();
  }

  public interface VariableTypeStage {
    NameStage variableType(@NotNull VariableType variableType);

    Builder from(VariableTypeAndName other);
  }

  public interface NameStage {
    _FinalStage name(@NotNull String name);
  }

  public interface _FinalStage {
    VariableTypeAndName build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements VariableTypeStage, NameStage, _FinalStage {
    private VariableType variableType;

    private String name;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(VariableTypeAndName other) {
      variableType(other.getVariableType());
      name(other.getName());
      return this;
    }

    @java.lang.Override
    @JsonSetter("variableType")
    public NameStage variableType(@NotNull VariableType variableType) {
      this.variableType = Objects.requireNonNull(variableType, "variableType must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("name")
    public _FinalStage name(@NotNull String name) {
      this.name = Objects.requireNonNull(name, "name must not be null");
      return this;
    }

    @java.lang.Override
    public VariableTypeAndName build() {
      return new VariableTypeAndName(variableType, name);
    }
  }
}
