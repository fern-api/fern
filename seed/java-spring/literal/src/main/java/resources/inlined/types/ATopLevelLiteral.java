/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.inlined.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = ATopLevelLiteral.Builder.class
)
public final class ATopLevelLiteral {
  private final ANestedLiteral nestedLiteral;

  private ATopLevelLiteral(ANestedLiteral nestedLiteral) {
    this.nestedLiteral = nestedLiteral;
  }

  @JsonProperty("nestedLiteral")
  public ANestedLiteral getNestedLiteral() {
    return nestedLiteral;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof ATopLevelLiteral && equalTo((ATopLevelLiteral) other);
  }

  private boolean equalTo(ATopLevelLiteral other) {
    return nestedLiteral.equals(other.nestedLiteral);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.nestedLiteral);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static NestedLiteralStage builder() {
    return new Builder();
  }

  public interface NestedLiteralStage {
    _FinalStage nestedLiteral(@NotNull ANestedLiteral nestedLiteral);

    Builder from(ATopLevelLiteral other);
  }

  public interface _FinalStage {
    ATopLevelLiteral build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements NestedLiteralStage, _FinalStage {
    private ANestedLiteral nestedLiteral;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(ATopLevelLiteral other) {
      nestedLiteral(other.getNestedLiteral());
      return this;
    }

    @java.lang.Override
    @JsonSetter("nestedLiteral")
    public _FinalStage nestedLiteral(@NotNull ANestedLiteral nestedLiteral) {
      this.nestedLiteral = Objects.requireNonNull(nestedLiteral, "nestedLiteral must not be null");
      return this;
    }

    @java.lang.Override
    public ATopLevelLiteral build() {
      return new ATopLevelLiteral(nestedLiteral);
    }
  }
}
