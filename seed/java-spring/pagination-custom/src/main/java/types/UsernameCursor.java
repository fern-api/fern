/**
 * This file was auto-generated by Fern from our API Definition.
 */

package types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UsernameCursor.Builder.class
)
public final class UsernameCursor {
  private final UsernamePage cursor;

  private UsernameCursor(UsernamePage cursor) {
    this.cursor = cursor;
  }

  @JsonProperty("cursor")
  public UsernamePage getCursor() {
    return cursor;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UsernameCursor && equalTo((UsernameCursor) other);
  }

  private boolean equalTo(UsernameCursor other) {
    return cursor.equals(other.cursor);
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.cursor);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static CursorStage builder() {
    return new Builder();
  }

  public interface CursorStage {
    _FinalStage cursor(@NotNull UsernamePage cursor);

    Builder from(UsernameCursor other);
  }

  public interface _FinalStage {
    UsernameCursor build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements CursorStage, _FinalStage {
    private UsernamePage cursor;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(UsernameCursor other) {
      cursor(other.getCursor());
      return this;
    }

    @java.lang.Override
    @JsonSetter("cursor")
    public _FinalStage cursor(@NotNull UsernamePage cursor) {
      this.cursor = Objects.requireNonNull(cursor, "cursor must not be null");
      return this;
    }

    @java.lang.Override
    public UsernameCursor build() {
      return new UsernameCursor(cursor);
    }
  }
}
