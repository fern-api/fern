/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.inlineusers.inlineusers;

import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import java.util.UUID;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import resources.inlineusers.inlineusers.requests.ListUsersBodyCursorPaginationRequest;
import resources.inlineusers.inlineusers.requests.ListUsersBodyOffsetPaginationRequest;
import resources.inlineusers.inlineusers.types.ListUsersExtendedOptionalListResponse;
import resources.inlineusers.inlineusers.types.ListUsersExtendedResponse;
import resources.inlineusers.inlineusers.types.ListUsersMixedTypePaginationResponse;
import resources.inlineusers.inlineusers.types.ListUsersPaginationResponse;
import resources.inlineusers.inlineusers.types.Order;
import resources.inlineusers.inlineusers.types.UsernameContainer;
import types.UsernameCursor;

@RequestMapping(
    path = "/inline-users"
)
public interface InlineUsersService {
  @GetMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersPaginationResponse listWithCursorPagination(@RequestParam("page") Optional<Integer> page,
      @RequestParam("per_page") Optional<Integer> perPage,
      @RequestParam("order") Optional<Order> order,
      @RequestParam("starting_after") Optional<String> startingAfter);

  @PostMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersMixedTypePaginationResponse listWithMixedTypeCursorPagination(
      @RequestParam("cursor") Optional<String> cursor);

  @PostMapping(
      value = "",
      produces = "application/json",
      consumes = "application/json"
  )
  ListUsersPaginationResponse listWithBodyCursorPagination(
      @RequestBody ListUsersBodyCursorPaginationRequest body);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersPaginationResponse listWithOffsetPagination(@RequestParam("page") Optional<Integer> page,
      @RequestParam("per_page") Optional<Integer> perPage,
      @RequestParam("order") Optional<Order> order,
      @RequestParam("starting_after") Optional<String> startingAfter);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersPaginationResponse listWithDoubleOffsetPagination(
      @RequestParam("page") Optional<Double> page,
      @RequestParam("per_page") Optional<Double> perPage,
      @RequestParam("order") Optional<Order> order,
      @RequestParam("starting_after") Optional<String> startingAfter);

  @PostMapping(
      value = "",
      produces = "application/json",
      consumes = "application/json"
  )
  ListUsersPaginationResponse listWithBodyOffsetPagination(
      @RequestBody ListUsersBodyOffsetPaginationRequest body);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersPaginationResponse listWithOffsetStepPagination(
      @RequestParam("page") Optional<Integer> page, @RequestParam("limit") Optional<Integer> limit,
      @RequestParam("order") Optional<Order> order);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersPaginationResponse listWithOffsetPaginationHasNextPage(
      @RequestParam("page") Optional<Integer> page, @RequestParam("limit") Optional<Integer> limit,
      @RequestParam("order") Optional<Order> order);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersExtendedResponse listWithExtendedResults(@RequestParam("cursor") Optional<UUID> cursor);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  ListUsersExtendedOptionalListResponse listWithExtendedResultsAndOptionalData(
      @RequestParam("cursor") Optional<UUID> cursor);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  UsernameCursor listUsernames(@RequestParam("starting_after") Optional<String> startingAfter);

  @GetMapping(
      value = "",
      produces = "application/json"
  )
  UsernameContainer listWithGlobalConfig(@RequestParam("offset") Optional<Integer> offset);
}
