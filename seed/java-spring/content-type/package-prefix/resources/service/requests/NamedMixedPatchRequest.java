/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.random.api.generated.resources.service.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.random.api.generated.core.ObjectMappers;
import com.random.api.generated.core.OptionalNullable;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

@JsonDeserialize(
    builder = NamedMixedPatchRequest.Builder.class
)
public final class NamedMixedPatchRequest {
  private final Optional<String> appId;

  private final OptionalNullable<String> instructions;

  private final OptionalNullable<Boolean> active;

  private NamedMixedPatchRequest(Optional<String> appId, OptionalNullable<String> instructions,
      OptionalNullable<Boolean> active) {
    this.appId = appId;
    this.instructions = instructions;
    this.active = active;
  }

  @JsonProperty("appId")
  public Optional<String> getAppId() {
    return appId;
  }

  @JsonProperty("instructions")
  public OptionalNullable<String> getInstructions() {
    return instructions;
  }

  @JsonProperty("active")
  public OptionalNullable<Boolean> getActive() {
    return active;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) {
      return true;
    }
    if (other == null || getClass() != other.getClass()) {
      return false;
    }
    NamedMixedPatchRequest that = (NamedMixedPatchRequest) other;
    return java.util.Objects.equals(this.appId, that.appId);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(this.appId, this.instructions, this.active);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static Builder builder() {
    return new Builder();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder {
    private Optional<String> appId = Optional.empty();

    private OptionalNullable<String> instructions = OptionalNullable.absent();

    private OptionalNullable<Boolean> active = OptionalNullable.absent();

    private Builder() {
    }

    @JsonSetter(
        value = "appId",
        nulls = Nulls.SKIP
    )
    public Builder appId(String value) {
      this.appId = Optional.ofNullable(value);
      return this;
    }

    @JsonSetter("instructions")
    public Builder instructions(String value) {
      this.instructions = OptionalNullable.ofNullable(value);
      return this;
    }

    @JsonSetter("active")
    public Builder active(Boolean value) {
      this.active = OptionalNullable.ofNullable(value);
      return this;
    }

    public NamedMixedPatchRequest build() {
      return new NamedMixedPatchRequest(appId, instructions, active);
    }
  }
}
