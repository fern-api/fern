/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.random.api.generated.resources.service.requests;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.random.api.generated.core.ObjectMappers;
import com.random.api.generated.core.OptionalNullable;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Optional;

@JsonDeserialize(
    builder = OptionalMergePatchRequest.Builder.class
)
public final class OptionalMergePatchRequest {
  private final String requiredField;

  private final Optional<String> optionalString;

  private final Optional<Integer> optionalInteger;

  private final Optional<Boolean> optionalBoolean;

  private final OptionalNullable<String> nullableString;

  private OptionalMergePatchRequest(String requiredField, Optional<String> optionalString,
      Optional<Integer> optionalInteger, Optional<Boolean> optionalBoolean,
      OptionalNullable<String> nullableString) {
    this.requiredField = requiredField;
    this.optionalString = optionalString;
    this.optionalInteger = optionalInteger;
    this.optionalBoolean = optionalBoolean;
    this.nullableString = nullableString;
  }

  @JsonProperty("requiredField")
  public String getRequiredField() {
    return requiredField;
  }

  @JsonProperty("optionalString")
  public Optional<String> getOptionalString() {
    return optionalString;
  }

  @JsonProperty("optionalInteger")
  public Optional<Integer> getOptionalInteger() {
    return optionalInteger;
  }

  @JsonProperty("optionalBoolean")
  public Optional<Boolean> getOptionalBoolean() {
    return optionalBoolean;
  }

  @JsonProperty("nullableString")
  public OptionalNullable<String> getNullableString() {
    return nullableString;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) {
      return true;
    }
    if (other == null || getClass() != other.getClass()) {
      return false;
    }
    OptionalMergePatchRequest that = (OptionalMergePatchRequest) other;
    return java.util.Objects.equals(this.requiredField, that.requiredField);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(this.requiredField, this.optionalString, this.optionalInteger, this.optionalBoolean, this.nullableString);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static Builder builder() {
    return new Builder();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder {
    private String requiredField;

    private Optional<String> optionalString = Optional.empty();

    private Optional<Integer> optionalInteger = Optional.empty();

    private Optional<Boolean> optionalBoolean = Optional.empty();

    private OptionalNullable<String> nullableString = OptionalNullable.absent();

    private Builder() {
    }

    public Builder requiredField(String value) {
      this.requiredField = value;
      return this;
    }

    @JsonSetter(
        value = "optionalString",
        nulls = Nulls.SKIP
    )
    public Builder optionalString(String value) {
      this.optionalString = Optional.ofNullable(value);
      return this;
    }

    @JsonSetter(
        value = "optionalInteger",
        nulls = Nulls.SKIP
    )
    public Builder optionalInteger(Integer value) {
      this.optionalInteger = Optional.ofNullable(value);
      return this;
    }

    @JsonSetter(
        value = "optionalBoolean",
        nulls = Nulls.SKIP
    )
    public Builder optionalBoolean(Boolean value) {
      this.optionalBoolean = Optional.ofNullable(value);
      return this;
    }

    @JsonSetter("nullableString")
    public Builder nullableString(String value) {
      this.nullableString = OptionalNullable.ofNullable(value);
      return this;
    }

    public OptionalMergePatchRequest build() {
      return new OptionalMergePatchRequest(requiredField, optionalString, optionalInteger, optionalBoolean, nullableString);
    }
  }
}
