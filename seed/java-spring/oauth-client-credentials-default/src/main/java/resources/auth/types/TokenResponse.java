/**
 * This file was auto-generated by Fern from our API Definition.
 */

package resources.auth.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import core.ObjectMappers;
import java.lang.Object;
import java.lang.String;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = TokenResponse.Builder.class
)
public final class TokenResponse {
  private final String accessToken;

  private final int expiresIn;

  private TokenResponse(String accessToken, int expiresIn) {
    this.accessToken = accessToken;
    this.expiresIn = expiresIn;
  }

  @JsonProperty("access_token")
  public String getAccessToken() {
    return accessToken;
  }

  @JsonProperty("expires_in")
  public int getExpiresIn() {
    return expiresIn;
  }

  @java.lang.Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof TokenResponse && equalTo((TokenResponse) other);
  }

  private boolean equalTo(TokenResponse other) {
    return accessToken.equals(other.accessToken) && expiresIn == other.expiresIn;
  }

  @java.lang.Override
  public int hashCode() {
    return Objects.hash(this.accessToken, this.expiresIn);
  }

  @java.lang.Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static AccessTokenStage builder() {
    return new Builder();
  }

  public interface AccessTokenStage {
    ExpiresInStage accessToken(@NotNull String accessToken);

    Builder from(TokenResponse other);
  }

  public interface ExpiresInStage {
    _FinalStage expiresIn(int expiresIn);
  }

  public interface _FinalStage {
    TokenResponse build();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder implements AccessTokenStage, ExpiresInStage, _FinalStage {
    private String accessToken;

    private int expiresIn;

    private Builder() {
    }

    @java.lang.Override
    public Builder from(TokenResponse other) {
      accessToken(other.getAccessToken());
      expiresIn(other.getExpiresIn());
      return this;
    }

    @java.lang.Override
    @JsonSetter("access_token")
    public ExpiresInStage accessToken(@NotNull String accessToken) {
      this.accessToken = Objects.requireNonNull(accessToken, "accessToken must not be null");
      return this;
    }

    @java.lang.Override
    @JsonSetter("expires_in")
    public _FinalStage expiresIn(int expiresIn) {
      this.expiresIn = expiresIn;
      return this;
    }

    @java.lang.Override
    public TokenResponse build() {
      return new TokenResponse(accessToken, expiresIn);
    }
  }
}
