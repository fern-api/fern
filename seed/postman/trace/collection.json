{
  "info": {
    "name": "Trace",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": null
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "https://api.trace.come",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "_type": "container",
      "description": null,
      "name": "V 2",
      "item": [
        {
          "_type": "container",
          "description": null,
          "name": "Problem",
          "item": [
            {
              "_type": "endpoint",
              "name": "Get Lightweight Problems",
              "request": {
                "description": "Returns lightweight versions of all problems",
                "url": {
                  "raw": "{{baseUrl}}/problems-v2/lightweight-problem-info",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problems-v2",
                    "lightweight-problem-info"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "response": [
                {
                  "name": "Success",
                  "status": "OK",
                  "code": 200,
                  "originalRequest": {
                    "description": "Returns lightweight versions of all problems",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/lightweight-problem-info",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "lightweight-problem-info"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "description": null,
                  "body": "[\n    {\n        \"problemId\": \"problemId\",\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"variableTypes\": [\n            {\n                \"type\": \"integerType\"\n            }\n        ]\n    },\n    {\n        \"problemId\": \"problemId\",\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"variableTypes\": [\n            {\n                \"type\": \"integerType\"\n            }\n        ]\n    }\n]",
                  "_postman_previewlanguage": "json"
                }
              ]
            },
            {
              "_type": "endpoint",
              "name": "Get Problems",
              "request": {
                "description": "Returns latest versions of all problems",
                "url": {
                  "raw": "{{baseUrl}}/problems-v2/problem-info",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problems-v2",
                    "problem-info"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "response": [
                {
                  "name": "Success",
                  "status": "OK",
                  "code": 200,
                  "originalRequest": {
                    "description": "Returns latest versions of all problems",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/problem-info",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "problem-info"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "description": null,
                  "body": "[\n    {\n        \"problemId\": \"problemId\",\n        \"problemDescription\": {\n            \"boards\": [\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                },\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                }\n            ]\n        },\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"supportedLanguages\": [\n            \"JAVA\"\n        ],\n        \"customFiles\": {\n            \"type\": \"basic\",\n            \"methodName\": \"methodName\",\n            \"signature\": {\n                \"parameters\": [\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    },\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    }\n                ],\n                \"returnType\": {\n                    \"type\": \"integerType\"\n                }\n            },\n            \"additionalFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"basicTestCaseTemplate\": {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"expectedValueParameterId\": \"expectedValueParameterId\"\n            }\n        },\n        \"generatedFiles\": {\n            \"generatedTestCaseFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"generatedTemplateFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"other\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            }\n        },\n        \"customTestCaseTemplates\": [\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            },\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"testcases\": [\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            },\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            }\n        ],\n        \"isPublic\": true\n    },\n    {\n        \"problemId\": \"problemId\",\n        \"problemDescription\": {\n            \"boards\": [\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                },\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                }\n            ]\n        },\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"supportedLanguages\": [\n            \"JAVA\"\n        ],\n        \"customFiles\": {\n            \"type\": \"basic\",\n            \"methodName\": \"methodName\",\n            \"signature\": {\n                \"parameters\": [\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    },\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    }\n                ],\n                \"returnType\": {\n                    \"type\": \"integerType\"\n                }\n            },\n            \"additionalFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"basicTestCaseTemplate\": {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"expectedValueParameterId\": \"expectedValueParameterId\"\n            }\n        },\n        \"generatedFiles\": {\n            \"generatedTestCaseFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"generatedTemplateFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"other\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            }\n        },\n        \"customTestCaseTemplates\": [\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            },\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"testcases\": [\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            },\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            }\n        ],\n        \"isPublic\": true\n    }\n]",
                  "_postman_previewlanguage": "json"
                }
              ]
            },
            {
              "_type": "endpoint",
              "name": "Get Latest Problem",
              "request": {
                "description": "Returns latest version of a problem",
                "url": {
                  "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problems-v2",
                    "problem-info",
                    ":problemId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "problemId",
                      "description": null,
                      "value": "problemId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "response": [
                {
                  "name": "Success",
                  "status": "OK",
                  "code": 200,
                  "originalRequest": {
                    "description": "Returns latest version of a problem",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "problem-info",
                        ":problemId"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "key": "problemId",
                          "description": null,
                          "value": "problemId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "description": null,
                  "body": "{\n    \"problemId\": \"problemId\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"problemName\": \"problemName\",\n    \"problemVersion\": 1,\n    \"supportedLanguages\": [\n        \"JAVA\"\n    ],\n    \"customFiles\": {\n        \"type\": \"basic\",\n        \"methodName\": \"methodName\",\n        \"signature\": {\n            \"parameters\": [\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                },\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                }\n            ],\n            \"returnType\": {\n                \"type\": \"integerType\"\n            }\n        },\n        \"additionalFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"basicTestCaseTemplate\": {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"description\": {\n                \"boards\": [\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    },\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    }\n                ]\n            },\n            \"expectedValueParameterId\": \"expectedValueParameterId\"\n        }\n    },\n    \"generatedFiles\": {\n        \"generatedTestCaseFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"generatedTemplateFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"other\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        }\n    },\n    \"customTestCaseTemplates\": [\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        },\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        }\n    ],\n    \"testcases\": [\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        },\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        }\n    ],\n    \"isPublic\": true\n}",
                  "_postman_previewlanguage": "json"
                }
              ]
            },
            {
              "_type": "endpoint",
              "name": "Get Problem Version",
              "request": {
                "description": "Returns requested version of a problem",
                "url": {
                  "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId/version/:problemVersion",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problems-v2",
                    "problem-info",
                    ":problemId",
                    "version",
                    ":problemVersion"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "problemId",
                      "description": null,
                      "value": "problemId"
                    },
                    {
                      "key": "problemVersion",
                      "description": null,
                      "value": "1"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "response": [
                {
                  "name": "Success",
                  "status": "OK",
                  "code": 200,
                  "originalRequest": {
                    "description": "Returns requested version of a problem",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId/version/:problemVersion",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "problem-info",
                        ":problemId",
                        "version",
                        ":problemVersion"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "key": "problemId",
                          "description": null,
                          "value": "problemId"
                        },
                        {
                          "key": "problemVersion",
                          "description": null,
                          "value": "1"
                        }
                      ]
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "description": null,
                  "body": "{\n    \"problemId\": \"problemId\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"problemName\": \"problemName\",\n    \"problemVersion\": 1,\n    \"supportedLanguages\": [\n        \"JAVA\"\n    ],\n    \"customFiles\": {\n        \"type\": \"basic\",\n        \"methodName\": \"methodName\",\n        \"signature\": {\n            \"parameters\": [\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                },\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                }\n            ],\n            \"returnType\": {\n                \"type\": \"integerType\"\n            }\n        },\n        \"additionalFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"basicTestCaseTemplate\": {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"description\": {\n                \"boards\": [\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    },\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    }\n                ]\n            },\n            \"expectedValueParameterId\": \"expectedValueParameterId\"\n        }\n    },\n    \"generatedFiles\": {\n        \"generatedTestCaseFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"generatedTemplateFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"other\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        }\n    },\n    \"customTestCaseTemplates\": [\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        },\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        }\n    ],\n    \"testcases\": [\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        },\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        }\n    ],\n    \"isPublic\": true\n}",
                  "_postman_previewlanguage": "json"
                }
              ]
            }
          ]
        },
        {
          "_type": "container",
          "description": null,
          "name": "V 3",
          "item": [
            {
              "_type": "container",
              "description": null,
              "name": "Problem",
              "item": [
                {
                  "_type": "endpoint",
                  "name": "Get Lightweight Problems",
                  "request": {
                    "description": "Returns lightweight versions of all problems",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/lightweight-problem-info",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "lightweight-problem-info"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "response": [
                    {
                      "name": "Success",
                      "status": "OK",
                      "code": 200,
                      "originalRequest": {
                        "description": "Returns lightweight versions of all problems",
                        "url": {
                          "raw": "{{baseUrl}}/problems-v2/lightweight-problem-info",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "problems-v2",
                            "lightweight-problem-info"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "type": "text",
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null,
                        "body": null
                      },
                      "description": null,
                      "body": "[\n    {\n        \"problemId\": \"problemId\",\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"variableTypes\": [\n            {\n                \"type\": \"integerType\"\n            }\n        ]\n    },\n    {\n        \"problemId\": \"problemId\",\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"variableTypes\": [\n            {\n                \"type\": \"integerType\"\n            }\n        ]\n    }\n]",
                      "_postman_previewlanguage": "json"
                    }
                  ]
                },
                {
                  "_type": "endpoint",
                  "name": "Get Problems",
                  "request": {
                    "description": "Returns latest versions of all problems",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/problem-info",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "problem-info"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "response": [
                    {
                      "name": "Success",
                      "status": "OK",
                      "code": 200,
                      "originalRequest": {
                        "description": "Returns latest versions of all problems",
                        "url": {
                          "raw": "{{baseUrl}}/problems-v2/problem-info",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "problems-v2",
                            "problem-info"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "header": [
                          {
                            "type": "text",
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null,
                        "body": null
                      },
                      "description": null,
                      "body": "[\n    {\n        \"problemId\": \"problemId\",\n        \"problemDescription\": {\n            \"boards\": [\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                },\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                }\n            ]\n        },\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"supportedLanguages\": [\n            \"JAVA\"\n        ],\n        \"customFiles\": {\n            \"type\": \"basic\",\n            \"methodName\": \"methodName\",\n            \"signature\": {\n                \"parameters\": [\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    },\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    }\n                ],\n                \"returnType\": {\n                    \"type\": \"integerType\"\n                }\n            },\n            \"additionalFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"basicTestCaseTemplate\": {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"expectedValueParameterId\": \"expectedValueParameterId\"\n            }\n        },\n        \"generatedFiles\": {\n            \"generatedTestCaseFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"generatedTemplateFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"other\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            }\n        },\n        \"customTestCaseTemplates\": [\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            },\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"testcases\": [\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            },\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            }\n        ],\n        \"isPublic\": true\n    },\n    {\n        \"problemId\": \"problemId\",\n        \"problemDescription\": {\n            \"boards\": [\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                },\n                {\n                    \"type\": \"html\",\n                    \"value\": \"boards\"\n                }\n            ]\n        },\n        \"problemName\": \"problemName\",\n        \"problemVersion\": 1,\n        \"supportedLanguages\": [\n            \"JAVA\"\n        ],\n        \"customFiles\": {\n            \"type\": \"basic\",\n            \"methodName\": \"methodName\",\n            \"signature\": {\n                \"parameters\": [\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    },\n                    {\n                        \"parameterId\": \"parameterId\",\n                        \"name\": \"name\",\n                        \"variableType\": {\n                            \"type\": \"integerType\"\n                        }\n                    }\n                ],\n                \"returnType\": {\n                    \"type\": \"integerType\"\n                }\n            },\n            \"additionalFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"basicTestCaseTemplate\": {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"expectedValueParameterId\": \"expectedValueParameterId\"\n            }\n        },\n        \"generatedFiles\": {\n            \"generatedTestCaseFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"generatedTemplateFiles\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            },\n            \"other\": {\n                \"JAVA\": {\n                    \"files\": [\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        },\n                        {\n                            \"filename\": \"filename\",\n                            \"directory\": \"directory\",\n                            \"contents\": \"contents\",\n                            \"editable\": true\n                        }\n                    ]\n                }\n            }\n        },\n        \"customTestCaseTemplates\": [\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            },\n            {\n                \"templateId\": \"templateId\",\n                \"name\": \"name\",\n                \"implementation\": {\n                    \"description\": {\n                        \"boards\": [\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            },\n                            {\n                                \"type\": \"html\",\n                                \"value\": \"boards\"\n                            }\n                        ]\n                    },\n                    \"function\": {\n                        \"type\": \"withActualResult\",\n                        \"getActualResult\": {\n                            \"signature\": {\n                                \"parameters\": [\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    },\n                                    {\n                                        \"parameterId\": \"parameterId\",\n                                        \"name\": \"name\",\n                                        \"variableType\": {\n                                            \"type\": \"integerType\"\n                                        }\n                                    }\n                                ],\n                                \"returnType\": {\n                                    \"type\": \"integerType\"\n                                }\n                            },\n                            \"code\": {\n                                \"codeByLanguage\": {\n                                    \"JAVA\": {\n                                        \"impl\": \"impl\"\n                                    }\n                                }\n                            }\n                        },\n                        \"assertCorrectnessCheck\": {\n                            \"type\": \"deepEquality\",\n                            \"expectedValueParameterId\": \"expectedValueParameterId\"\n                        }\n                    }\n                }\n            }\n        ],\n        \"testcases\": [\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            },\n            {\n                \"metadata\": {\n                    \"id\": \"id\",\n                    \"name\": \"name\",\n                    \"hidden\": true\n                },\n                \"implementation\": {\n                    \"type\": \"templateId\",\n                    \"value\": \"implementation\"\n                },\n                \"arguments\": {\n                    \"arguments\": {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                },\n                \"expects\": {\n                    \"expectedStdout\": \"expectedStdout\"\n                }\n            }\n        ],\n        \"isPublic\": true\n    }\n]",
                      "_postman_previewlanguage": "json"
                    }
                  ]
                },
                {
                  "_type": "endpoint",
                  "name": "Get Latest Problem",
                  "request": {
                    "description": "Returns latest version of a problem",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "problem-info",
                        ":problemId"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "key": "problemId",
                          "description": null,
                          "value": "problemId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "response": [
                    {
                      "name": "Success",
                      "status": "OK",
                      "code": 200,
                      "originalRequest": {
                        "description": "Returns latest version of a problem",
                        "url": {
                          "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "problems-v2",
                            "problem-info",
                            ":problemId"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "key": "problemId",
                              "description": null,
                              "value": "problemId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "type": "text",
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null,
                        "body": null
                      },
                      "description": null,
                      "body": "{\n    \"problemId\": \"problemId\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"problemName\": \"problemName\",\n    \"problemVersion\": 1,\n    \"supportedLanguages\": [\n        \"JAVA\"\n    ],\n    \"customFiles\": {\n        \"type\": \"basic\",\n        \"methodName\": \"methodName\",\n        \"signature\": {\n            \"parameters\": [\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                },\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                }\n            ],\n            \"returnType\": {\n                \"type\": \"integerType\"\n            }\n        },\n        \"additionalFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"basicTestCaseTemplate\": {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"description\": {\n                \"boards\": [\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    },\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    }\n                ]\n            },\n            \"expectedValueParameterId\": \"expectedValueParameterId\"\n        }\n    },\n    \"generatedFiles\": {\n        \"generatedTestCaseFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"generatedTemplateFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"other\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        }\n    },\n    \"customTestCaseTemplates\": [\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        },\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        }\n    ],\n    \"testcases\": [\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        },\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        }\n    ],\n    \"isPublic\": true\n}",
                      "_postman_previewlanguage": "json"
                    }
                  ]
                },
                {
                  "_type": "endpoint",
                  "name": "Get Problem Version",
                  "request": {
                    "description": "Returns requested version of a problem",
                    "url": {
                      "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId/version/:problemVersion",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "problems-v2",
                        "problem-info",
                        ":problemId",
                        "version",
                        ":problemVersion"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "key": "problemId",
                          "description": null,
                          "value": "problemId"
                        },
                        {
                          "key": "problemVersion",
                          "description": null,
                          "value": "1"
                        }
                      ]
                    },
                    "header": [
                      {
                        "type": "text",
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "method": "GET",
                    "auth": null,
                    "body": null
                  },
                  "response": [
                    {
                      "name": "Success",
                      "status": "OK",
                      "code": 200,
                      "originalRequest": {
                        "description": "Returns requested version of a problem",
                        "url": {
                          "raw": "{{baseUrl}}/problems-v2/problem-info/:problemId/version/:problemVersion",
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "path": [
                            "problems-v2",
                            "problem-info",
                            ":problemId",
                            "version",
                            ":problemVersion"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "key": "problemId",
                              "description": null,
                              "value": "problemId"
                            },
                            {
                              "key": "problemVersion",
                              "description": null,
                              "value": "1"
                            }
                          ]
                        },
                        "header": [
                          {
                            "type": "text",
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "method": "GET",
                        "auth": null,
                        "body": null
                      },
                      "description": null,
                      "body": "{\n    \"problemId\": \"problemId\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"problemName\": \"problemName\",\n    \"problemVersion\": 1,\n    \"supportedLanguages\": [\n        \"JAVA\"\n    ],\n    \"customFiles\": {\n        \"type\": \"basic\",\n        \"methodName\": \"methodName\",\n        \"signature\": {\n            \"parameters\": [\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                },\n                {\n                    \"parameterId\": \"parameterId\",\n                    \"name\": \"name\",\n                    \"variableType\": {\n                        \"type\": \"integerType\"\n                    }\n                }\n            ],\n            \"returnType\": {\n                \"type\": \"integerType\"\n            }\n        },\n        \"additionalFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"basicTestCaseTemplate\": {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"description\": {\n                \"boards\": [\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    },\n                    {\n                        \"type\": \"html\",\n                        \"value\": \"boards\"\n                    }\n                ]\n            },\n            \"expectedValueParameterId\": \"expectedValueParameterId\"\n        }\n    },\n    \"generatedFiles\": {\n        \"generatedTestCaseFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"generatedTemplateFiles\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        },\n        \"other\": {\n            \"JAVA\": {\n                \"files\": [\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    },\n                    {\n                        \"filename\": \"filename\",\n                        \"directory\": \"directory\",\n                        \"contents\": \"contents\",\n                        \"editable\": true\n                    }\n                ]\n            }\n        }\n    },\n    \"customTestCaseTemplates\": [\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        },\n        {\n            \"templateId\": \"templateId\",\n            \"name\": \"name\",\n            \"implementation\": {\n                \"description\": {\n                    \"boards\": [\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        },\n                        {\n                            \"type\": \"html\",\n                            \"value\": \"boards\"\n                        }\n                    ]\n                },\n                \"function\": {\n                    \"type\": \"withActualResult\",\n                    \"getActualResult\": {\n                        \"signature\": {\n                            \"parameters\": [\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                },\n                                {\n                                    \"parameterId\": \"parameterId\",\n                                    \"name\": \"name\",\n                                    \"variableType\": {\n                                        \"type\": \"integerType\"\n                                    }\n                                }\n                            ],\n                            \"returnType\": {\n                                \"type\": \"integerType\"\n                            }\n                        },\n                        \"code\": {\n                            \"codeByLanguage\": {\n                                \"JAVA\": {\n                                    \"impl\": \"impl\",\n                                    \"imports\": \"imports\"\n                                }\n                            }\n                        }\n                    },\n                    \"assertCorrectnessCheck\": {\n                        \"type\": \"deepEquality\",\n                        \"expectedValueParameterId\": \"expectedValueParameterId\"\n                    }\n                }\n            }\n        }\n    ],\n    \"testcases\": [\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        },\n        {\n            \"metadata\": {\n                \"id\": \"id\",\n                \"name\": \"name\",\n                \"hidden\": true\n            },\n            \"implementation\": {\n                \"type\": \"templateId\",\n                \"value\": \"implementation\"\n            },\n            \"arguments\": {\n                \"arguments\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"expects\": {\n                \"expectedStdout\": \"expectedStdout\"\n            }\n        }\n    ],\n    \"isPublic\": true\n}",
                      "_postman_previewlanguage": "json"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Test",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Admin",
      "item": [
        {
          "_type": "endpoint",
          "name": "Update Test Submission Status",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-test-submission-status/:submissionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-test-submission-status",
                ":submissionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"stopped\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-test-submission-status/:submissionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-test-submission-status",
                    ":submissionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"stopped\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Send Test Submission Update",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-test-submission-status-v2/:submissionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-test-submission-status-v2",
                ":submissionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"updateTime\": \"2024-01-15T09:30:00Z\",\n    \"updateInfo\": {\n        \"type\": \"running\",\n        \"value\": \"QUEUEING_SUBMISSION\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-test-submission-status-v2/:submissionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-test-submission-status-v2",
                    ":submissionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"updateTime\": \"2024-01-15T09:30:00Z\",\n    \"updateInfo\": {\n        \"type\": \"running\",\n        \"value\": \"QUEUEING_SUBMISSION\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Update Workspace Submission Status",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-workspace-submission-status/:submissionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-workspace-submission-status",
                ":submissionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"type\": \"stopped\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-workspace-submission-status/:submissionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-workspace-submission-status",
                    ":submissionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"type\": \"stopped\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Send Workspace Submission Update",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-workspace-submission-status-v2/:submissionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-workspace-submission-status-v2",
                ":submissionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"updateTime\": \"2024-01-15T09:30:00Z\",\n    \"updateInfo\": {\n        \"type\": \"running\",\n        \"value\": \"QUEUEING_SUBMISSION\"\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-workspace-submission-status-v2/:submissionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-workspace-submission-status-v2",
                    ":submissionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"updateTime\": \"2024-01-15T09:30:00Z\",\n    \"updateInfo\": {\n        \"type\": \"running\",\n        \"value\": \"QUEUEING_SUBMISSION\"\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Store Traced Test Case",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-test-trace/submission/:submissionId/testCase/:testCaseId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-test-trace",
                "submission",
                ":submissionId",
                "testCase",
                ":testCaseId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                },
                {
                  "key": "testCaseId",
                  "description": null,
                  "value": "testCaseId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"result\": {\n        \"result\": {\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"actualResult\": {\n                \"type\": \"value\",\n                \"value\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"passed\": true\n        },\n        \"stdout\": \"stdout\"\n    },\n    \"traceResponses\": [\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        },\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-test-trace/submission/:submissionId/testCase/:testCaseId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-test-trace",
                    "submission",
                    ":submissionId",
                    "testCase",
                    ":testCaseId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    },
                    {
                      "key": "testCaseId",
                      "description": null,
                      "value": "testCaseId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"result\": {\n        \"result\": {\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"actualResult\": {\n                \"type\": \"value\",\n                \"value\": {\n                    \"type\": \"integerValue\",\n                    \"value\": 1\n                }\n            },\n            \"passed\": true\n        },\n        \"stdout\": \"stdout\"\n    },\n    \"traceResponses\": [\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        },\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Store Traced Test Case V 2",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-test-trace-v2/submission/:submissionId/testCase/:testCaseId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-test-trace-v2",
                "submission",
                ":submissionId",
                "testCase",
                ":testCaseId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                },
                {
                  "key": "testCaseId",
                  "description": null,
                  "value": "testCaseId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    },\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-test-trace-v2/submission/:submissionId/testCase/:testCaseId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-test-trace-v2",
                    "submission",
                    ":submissionId",
                    "testCase",
                    ":testCaseId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    },
                    {
                      "key": "testCaseId",
                      "description": null,
                      "value": "testCaseId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    },\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Store Traced Workspace",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-workspace-trace/submission/:submissionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-workspace-trace",
                "submission",
                ":submissionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"workspaceRunDetails\": {\n        \"exceptionV2\": {\n            \"type\": \"generic\",\n            \"exceptionType\": \"exceptionType\",\n            \"exceptionMessage\": \"exceptionMessage\",\n            \"exceptionStacktrace\": \"exceptionStacktrace\"\n        },\n        \"exception\": {\n            \"exceptionType\": \"exceptionType\",\n            \"exceptionMessage\": \"exceptionMessage\",\n            \"exceptionStacktrace\": \"exceptionStacktrace\"\n        },\n        \"stdout\": \"stdout\"\n    },\n    \"traceResponses\": [\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        },\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-workspace-trace/submission/:submissionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-workspace-trace",
                    "submission",
                    ":submissionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"workspaceRunDetails\": {\n        \"exceptionV2\": {\n            \"type\": \"generic\",\n            \"exceptionType\": \"exceptionType\",\n            \"exceptionMessage\": \"exceptionMessage\",\n            \"exceptionStacktrace\": \"exceptionStacktrace\"\n        },\n        \"exception\": {\n            \"exceptionType\": \"exceptionType\",\n            \"exceptionMessage\": \"exceptionMessage\",\n            \"exceptionStacktrace\": \"exceptionStacktrace\"\n        },\n        \"stdout\": \"stdout\"\n    },\n    \"traceResponses\": [\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        },\n        {\n            \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n            \"lineNumber\": 1,\n            \"returnValue\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            },\n            \"expressionLocation\": {\n                \"start\": 1,\n                \"offset\": 1\n            },\n            \"stack\": {\n                \"numStackFrames\": 1,\n                \"topStackFrame\": {\n                    \"methodName\": \"methodName\",\n                    \"lineNumber\": 1,\n                    \"scopes\": [\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        },\n                        {\n                            \"variables\": {\n                                \"variables\": {\n                                    \"type\": \"integerValue\",\n                                    \"value\": 1\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"stdout\": \"stdout\"\n        }\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Store Traced Workspace V 2",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/admin/store-workspace-trace-v2/submission/:submissionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "admin",
                "store-workspace-trace-v2",
                "submission",
                ":submissionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "submissionId",
                  "description": null,
                  "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    },\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/admin/store-workspace-trace-v2/submission/:submissionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "admin",
                    "store-workspace-trace-v2",
                    "submission",
                    ":submissionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "submissionId",
                      "description": null,
                      "value": "d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    },\n    {\n        \"submissionId\": \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n        \"lineNumber\": 1,\n        \"file\": {\n            \"filename\": \"filename\",\n            \"directory\": \"directory\"\n        },\n        \"returnValue\": {\n            \"type\": \"integerValue\",\n            \"value\": 1\n        },\n        \"expressionLocation\": {\n            \"start\": 1,\n            \"offset\": 1\n        },\n        \"stack\": {\n            \"numStackFrames\": 1,\n            \"topStackFrame\": {\n                \"methodName\": \"methodName\",\n                \"lineNumber\": 1,\n                \"scopes\": [\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    },\n                    {\n                        \"variables\": {\n                            \"variables\": {\n                                \"type\": \"integerValue\",\n                                \"value\": 1\n                            }\n                        }\n                    }\n                ]\n            }\n        },\n        \"stdout\": \"stdout\"\n    }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Homepage",
      "item": [
        {
          "_type": "endpoint",
          "name": "Get Homepage Problems",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/homepage-problems",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "homepage-problems"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/homepage-problems",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "homepage-problems"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "[\n    \"string\",\n    \"string\"\n]",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Set Homepage Problems",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/homepage-problems",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "homepage-problems"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "[\n    \"string\",\n    \"string\"\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/homepage-problems",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "homepage-problems"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "[\n    \"string\",\n    \"string\"\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Migration",
      "item": [
        {
          "_type": "endpoint",
          "name": "Get Attempted Migrations",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/migration-info/all",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "migration-info",
                "all"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "admin-key-header",
                "description": null,
                "type": "text",
                "value": "\"admin-key-header\""
              },
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/migration-info/all",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "migration-info",
                    "all"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "admin-key-header",
                    "description": null,
                    "type": "text",
                    "value": "\"admin-key-header\""
                  },
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "[\n    {\n        \"name\": \"name\",\n        \"status\": \"RUNNING\"\n    },\n    {\n        \"name\": \"name\",\n        \"status\": \"RUNNING\"\n    }\n]",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Playlist",
      "item": [
        {
          "_type": "endpoint",
          "name": "Create Playlist",
          "request": {
            "description": "Create a new playlist",
            "url": {
              "raw": "{{baseUrl}}/v2/playlist/:serviceParam/create?datetime=2024-01-15T09%3A30%3A00Z&optionalDatetime=2024-01-15T09%3A30%3A00Z",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v2",
                "playlist",
                ":serviceParam",
                "create"
              ],
              "query": [
                {
                  "key": "datetime",
                  "description": null,
                  "value": "2024-01-15T09:30:00Z"
                },
                {
                  "key": "optionalDatetime",
                  "description": null,
                  "value": "2024-01-15T09:30:00Z"
                }
              ],
              "variable": [
                {
                  "key": "serviceParam",
                  "description": null,
                  "value": "1"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"problems\": [\n        \"problems\",\n        \"problems\"\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Create a new playlist",
                "url": {
                  "raw": "{{baseUrl}}/v2/playlist/:serviceParam/create?datetime=2024-01-15T09%3A30%3A00Z&optionalDatetime=2024-01-15T09%3A30%3A00Z",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v2",
                    "playlist",
                    ":serviceParam",
                    "create"
                  ],
                  "query": [
                    {
                      "key": "datetime",
                      "description": null,
                      "value": "2024-01-15T09:30:00Z"
                    },
                    {
                      "key": "optionalDatetime",
                      "description": null,
                      "value": "2024-01-15T09:30:00Z"
                    }
                  ],
                  "variable": [
                    {
                      "key": "serviceParam",
                      "description": null,
                      "value": "1"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"name\",\n    \"problems\": [\n        \"problems\",\n        \"problems\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "{\n    \"name\": \"name\",\n    \"problems\": [\n        \"problems\",\n        \"problems\"\n    ],\n    \"playlist_id\": \"playlist_id\",\n    \"owner-id\": \"owner-id\"\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Get Playlists",
          "request": {
            "description": "Returns the user's playlists",
            "url": {
              "raw": "{{baseUrl}}/v2/playlist/:serviceParam/all?limit=1&otherField=otherField&multiLineDocs=multiLineDocs&optionalMultipleField=optionalMultipleField&multipleField=multipleField",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v2",
                "playlist",
                ":serviceParam",
                "all"
              ],
              "query": [
                {
                  "key": "limit",
                  "description": null,
                  "value": "1"
                },
                {
                  "key": "otherField",
                  "description": "i'm another field",
                  "value": "otherField"
                },
                {
                  "key": "multiLineDocs",
                  "description": "I'm a multiline\ndescription",
                  "value": "multiLineDocs"
                },
                {
                  "key": "optionalMultipleField",
                  "description": null,
                  "value": "optionalMultipleField"
                },
                {
                  "key": "multipleField",
                  "description": null,
                  "value": "multipleField"
                }
              ],
              "variable": [
                {
                  "key": "serviceParam",
                  "description": null,
                  "value": "1"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Returns the user's playlists",
                "url": {
                  "raw": "{{baseUrl}}/v2/playlist/:serviceParam/all?limit=1&otherField=otherField&multiLineDocs=multiLineDocs&optionalMultipleField=optionalMultipleField&multipleField=multipleField",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v2",
                    "playlist",
                    ":serviceParam",
                    "all"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "description": null,
                      "value": "1"
                    },
                    {
                      "key": "otherField",
                      "description": "i'm another field",
                      "value": "otherField"
                    },
                    {
                      "key": "multiLineDocs",
                      "description": "I'm a multiline\ndescription",
                      "value": "multiLineDocs"
                    },
                    {
                      "key": "optionalMultipleField",
                      "description": null,
                      "value": "optionalMultipleField"
                    },
                    {
                      "key": "multipleField",
                      "description": null,
                      "value": "multipleField"
                    }
                  ],
                  "variable": [
                    {
                      "key": "serviceParam",
                      "description": null,
                      "value": "1"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "[\n    {\n        \"name\": \"name\",\n        \"problems\": [\n            \"problems\",\n            \"problems\"\n        ],\n        \"playlist_id\": \"playlist_id\",\n        \"owner-id\": \"owner-id\"\n    },\n    {\n        \"name\": \"name\",\n        \"problems\": [\n            \"problems\",\n            \"problems\"\n        ],\n        \"playlist_id\": \"playlist_id\",\n        \"owner-id\": \"owner-id\"\n    }\n]",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Get Playlist",
          "request": {
            "description": "Returns a playlist",
            "url": {
              "raw": "{{baseUrl}}/v2/playlist/:serviceParam/:playlistId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v2",
                "playlist",
                ":serviceParam",
                ":playlistId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "serviceParam",
                  "description": null,
                  "value": "1"
                },
                {
                  "key": "playlistId",
                  "description": null,
                  "value": "playlistId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Returns a playlist",
                "url": {
                  "raw": "{{baseUrl}}/v2/playlist/:serviceParam/:playlistId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v2",
                    "playlist",
                    ":serviceParam",
                    ":playlistId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "serviceParam",
                      "description": null,
                      "value": "1"
                    },
                    {
                      "key": "playlistId",
                      "description": null,
                      "value": "playlistId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "{\n    \"name\": \"name\",\n    \"problems\": [\n        \"problems\",\n        \"problems\"\n    ],\n    \"playlist_id\": \"playlist_id\",\n    \"owner-id\": \"owner-id\"\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Update Playlist",
          "request": {
            "description": "Updates a playlist",
            "url": {
              "raw": "{{baseUrl}}/v2/playlist/:serviceParam/:playlistId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v2",
                "playlist",
                ":serviceParam",
                ":playlistId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "serviceParam",
                  "description": null,
                  "value": "1"
                },
                {
                  "key": "playlistId",
                  "description": null,
                  "value": "playlistId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"name\",\n    \"problems\": [\n        \"problems\",\n        \"problems\"\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Updates a playlist",
                "url": {
                  "raw": "{{baseUrl}}/v2/playlist/:serviceParam/:playlistId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v2",
                    "playlist",
                    ":serviceParam",
                    ":playlistId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "serviceParam",
                      "description": null,
                      "value": "1"
                    },
                    {
                      "key": "playlistId",
                      "description": null,
                      "value": "playlistId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"name\",\n    \"problems\": [\n        \"problems\",\n        \"problems\"\n    ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "{\n    \"name\": \"name\",\n    \"problems\": [\n        \"problems\",\n        \"problems\"\n    ],\n    \"playlist_id\": \"playlist_id\",\n    \"owner-id\": \"owner-id\"\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Delete Playlist",
          "request": {
            "description": "Deletes a playlist",
            "url": {
              "raw": "{{baseUrl}}/v2/playlist/:serviceParam/:playlist_id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "v2",
                "playlist",
                ":serviceParam",
                ":playlist_id"
              ],
              "query": [],
              "variable": [
                {
                  "key": "serviceParam",
                  "description": null,
                  "value": "1"
                },
                {
                  "key": "playlist_id",
                  "description": null,
                  "value": "playlist_id"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Deletes a playlist",
                "url": {
                  "raw": "{{baseUrl}}/v2/playlist/:serviceParam/:playlist_id",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "v2",
                    "playlist",
                    ":serviceParam",
                    ":playlist_id"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "serviceParam",
                      "description": null,
                      "value": "1"
                    },
                    {
                      "key": "playlist_id",
                      "description": null,
                      "value": "playlist_id"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Problem",
      "item": [
        {
          "_type": "endpoint",
          "name": "Create Problem",
          "request": {
            "description": "Creates a problem",
            "url": {
              "raw": "{{baseUrl}}/problem-crud/create",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "problem-crud",
                "create"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"problemName\": \"problemName\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"files\": {\n        \"JAVA\": {\n            \"solutionFile\": {\n                \"filename\": \"filename\",\n                \"contents\": \"contents\"\n            },\n            \"readOnlyFiles\": [\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                },\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                }\n            ]\n        }\n    },\n    \"inputParams\": [\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        },\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        }\n    ],\n    \"outputType\": {\n        \"type\": \"integerType\"\n    },\n    \"testcases\": [\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        },\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        }\n    ],\n    \"methodName\": \"methodName\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Creates a problem",
                "url": {
                  "raw": "{{baseUrl}}/problem-crud/create",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problem-crud",
                    "create"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"problemName\": \"problemName\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"files\": {\n        \"JAVA\": {\n            \"solutionFile\": {\n                \"filename\": \"filename\",\n                \"contents\": \"contents\"\n            },\n            \"readOnlyFiles\": [\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                },\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                }\n            ]\n        }\n    },\n    \"inputParams\": [\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        },\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        }\n    ],\n    \"outputType\": {\n        \"type\": \"integerType\"\n    },\n    \"testcases\": [\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        },\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        }\n    ],\n    \"methodName\": \"methodName\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "{\n    \"type\": \"success\",\n    \"value\": \"string\"\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Update Problem",
          "request": {
            "description": "Updates a problem",
            "url": {
              "raw": "{{baseUrl}}/problem-crud/update/:problemId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "problem-crud",
                "update",
                ":problemId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "problemId",
                  "description": null,
                  "value": "problemId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"problemName\": \"problemName\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"files\": {\n        \"JAVA\": {\n            \"solutionFile\": {\n                \"filename\": \"filename\",\n                \"contents\": \"contents\"\n            },\n            \"readOnlyFiles\": [\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                },\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                }\n            ]\n        }\n    },\n    \"inputParams\": [\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        },\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        }\n    ],\n    \"outputType\": {\n        \"type\": \"integerType\"\n    },\n    \"testcases\": [\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        },\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        }\n    ],\n    \"methodName\": \"methodName\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Updates a problem",
                "url": {
                  "raw": "{{baseUrl}}/problem-crud/update/:problemId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problem-crud",
                    "update",
                    ":problemId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "problemId",
                      "description": null,
                      "value": "problemId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"problemName\": \"problemName\",\n    \"problemDescription\": {\n        \"boards\": [\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            },\n            {\n                \"type\": \"html\",\n                \"value\": \"boards\"\n            }\n        ]\n    },\n    \"files\": {\n        \"JAVA\": {\n            \"solutionFile\": {\n                \"filename\": \"filename\",\n                \"contents\": \"contents\"\n            },\n            \"readOnlyFiles\": [\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                },\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                }\n            ]\n        }\n    },\n    \"inputParams\": [\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        },\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        }\n    ],\n    \"outputType\": {\n        \"type\": \"integerType\"\n    },\n    \"testcases\": [\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        },\n        {\n            \"testCase\": {\n                \"id\": \"id\",\n                \"params\": [\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    },\n                    {\n                        \"type\": \"integerValue\",\n                        \"value\": 1\n                    }\n                ]\n            },\n            \"expectedResult\": {\n                \"type\": \"integerValue\",\n                \"value\": 1\n            }\n        }\n    ],\n    \"methodName\": \"methodName\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "{\n    \"problemVersion\": 1\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Delete Problem",
          "request": {
            "description": "Soft deletes a problem",
            "url": {
              "raw": "{{baseUrl}}/problem-crud/delete/:problemId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "problem-crud",
                "delete",
                ":problemId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "problemId",
                  "description": null,
                  "value": "problemId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Soft deletes a problem",
                "url": {
                  "raw": "{{baseUrl}}/problem-crud/delete/:problemId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problem-crud",
                    "delete",
                    ":problemId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "problemId",
                      "description": null,
                      "value": "problemId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Get Default Starter Files",
          "request": {
            "description": "Returns default starter files for problem",
            "url": {
              "raw": "{{baseUrl}}/problem-crud/default-starter-files",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "problem-crud",
                "default-starter-files"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": {
              "mode": "raw",
              "raw": "{\n    \"inputParams\": [\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        },\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        }\n    ],\n    \"outputType\": {\n        \"type\": \"integerType\"\n    },\n    \"methodName\": \"methodName\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Returns default starter files for problem",
                "url": {
                  "raw": "{{baseUrl}}/problem-crud/default-starter-files",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "problem-crud",
                    "default-starter-files"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"inputParams\": [\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        },\n        {\n            \"variableType\": {\n                \"type\": \"integerType\"\n            },\n            \"name\": \"name\"\n        }\n    ],\n    \"outputType\": {\n        \"type\": \"integerType\"\n    },\n    \"methodName\": \"methodName\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "description": null,
              "body": "{\n    \"files\": {\n        \"JAVA\": {\n            \"solutionFile\": {\n                \"filename\": \"filename\",\n                \"contents\": \"contents\"\n            },\n            \"readOnlyFiles\": [\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                },\n                {\n                    \"filename\": \"filename\",\n                    \"contents\": \"contents\"\n                }\n            ]\n        }\n    }\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    },
    {
      "_type": "container",
      "description": "Responsible for spinning up and spinning down execution.",
      "name": "Submission",
      "item": [
        {
          "_type": "endpoint",
          "name": "Create Execution Session",
          "request": {
            "description": "Returns sessionId and execution server URL for session. Spins up server.",
            "url": {
              "raw": "{{baseUrl}}/sessions/create-session/:language",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                "create-session",
                ":language"
              ],
              "query": [],
              "variable": [
                {
                  "key": "language",
                  "description": null,
                  "value": "JAVA"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Returns sessionId and execution server URL for session. Spins up server.",
                "url": {
                  "raw": "{{baseUrl}}/sessions/create-session/:language",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sessions",
                    "create-session",
                    ":language"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "language",
                      "description": null,
                      "value": "JAVA"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "{\n    \"sessionId\": \"sessionId\",\n    \"executionSessionUrl\": \"executionSessionUrl\",\n    \"language\": \"JAVA\",\n    \"status\": \"CREATING_CONTAINER\"\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Get Execution Session",
          "request": {
            "description": "Returns execution server URL for session. Returns empty if session isn't registered.",
            "url": {
              "raw": "{{baseUrl}}/sessions/:sessionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                ":sessionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "sessionId",
                  "description": null,
                  "value": "sessionId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Returns execution server URL for session. Returns empty if session isn't registered.",
                "url": {
                  "raw": "{{baseUrl}}/sessions/:sessionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sessions",
                    ":sessionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "sessionId",
                      "description": null,
                      "value": "sessionId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "{\n    \"sessionId\": \"sessionId\",\n    \"executionSessionUrl\": \"executionSessionUrl\",\n    \"language\": \"JAVA\",\n    \"status\": \"CREATING_CONTAINER\"\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Stop Execution Session",
          "request": {
            "description": "Stops execution session.",
            "url": {
              "raw": "{{baseUrl}}/sessions/stop/:sessionId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                "stop",
                ":sessionId"
              ],
              "query": [],
              "variable": [
                {
                  "key": "sessionId",
                  "description": null,
                  "value": "sessionId"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "DELETE",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": "Stops execution session.",
                "url": {
                  "raw": "{{baseUrl}}/sessions/stop/:sessionId",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sessions",
                    "stop",
                    ":sessionId"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "sessionId",
                      "description": null,
                      "value": "sessionId"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "DELETE",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Get Execution Sessions State",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/sessions/execution-sessions-state",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sessions",
                "execution-sessions-state"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/sessions/execution-sessions-state",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sessions",
                    "execution-sessions-state"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "{\n    \"states\": {\n        \"states\": {\n            \"lastTimeContacted\": \"lastTimeContacted\",\n            \"sessionId\": \"sessionId\",\n            \"isWarmInstance\": true,\n            \"awsTaskId\": \"awsTaskId\",\n            \"language\": \"JAVA\",\n            \"status\": \"CREATING_CONTAINER\"\n        }\n    },\n    \"numWarmingInstances\": 1,\n    \"warmingSessionIds\": [\n        \"warmingSessionIds\",\n        \"warmingSessionIds\"\n    ]\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    },
    {
      "_type": "container",
      "description": null,
      "name": "Sysprop",
      "item": [
        {
          "_type": "endpoint",
          "name": "Set Num Warm Instances",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/sysprop/num-warm-instances/:language/:numWarmInstances",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sysprop",
                "num-warm-instances",
                ":language",
                ":numWarmInstances"
              ],
              "query": [],
              "variable": [
                {
                  "key": "language",
                  "description": null,
                  "value": "JAVA"
                },
                {
                  "key": "numWarmInstances",
                  "description": null,
                  "value": "1"
                }
              ]
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/sysprop/num-warm-instances/:language/:numWarmInstances",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sysprop",
                    "num-warm-instances",
                    ":language",
                    ":numWarmInstances"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "key": "language",
                      "description": null,
                      "value": "JAVA"
                    },
                    {
                      "key": "numWarmInstances",
                      "description": null,
                      "value": "1"
                    }
                  ]
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "",
              "_postman_previewlanguage": "json"
            }
          ]
        },
        {
          "_type": "endpoint",
          "name": "Get Num Warm Instances",
          "request": {
            "description": null,
            "url": {
              "raw": "{{baseUrl}}/sysprop/num-warm-instances",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "sysprop",
                "num-warm-instances"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "type": "text",
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "GET",
            "auth": null,
            "body": null
          },
          "response": [
            {
              "name": "Success",
              "status": "OK",
              "code": 200,
              "originalRequest": {
                "description": null,
                "url": {
                  "raw": "{{baseUrl}}/sysprop/num-warm-instances",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sysprop",
                    "num-warm-instances"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "type": "text",
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "auth": null,
                "body": null
              },
              "description": null,
              "body": "{\n    \"JAVA\": 1\n}",
              "_postman_previewlanguage": "json"
            }
          ]
        }
      ]
    }
  ]
}