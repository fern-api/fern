/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "./core";
import { Service } from "./api/resources/service/client/Client";

export declare namespace SeedBearerTokenEnvironmentVariableClient {
    export interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-API-Version header */
        version?: "1.0.0";
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Override the X-API-Version header */
        version?: "1.0.0";
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class SeedBearerTokenEnvironmentVariableClient {
    protected _service: Service | undefined;

    constructor(protected readonly _options: SeedBearerTokenEnvironmentVariableClient.Options) {}

    public get service(): Service {
        return (this._service ??= new Service(this._options));
    }
}
