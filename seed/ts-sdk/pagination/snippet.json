{
    "endpoints": [
        {
            "id": {
                "path": "/{index}/conversations/search",
                "method": "POST",
                "identifier_override": "endpoint_complex.search"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.complex.search(\"index\", {\n    pagination: {\n        per_page: 1,\n        starting_after: \"starting_after\"\n    },\n    query: {\n        field: \"field\",\n        operator: \"=\",\n        value: \"value\"\n    }\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.complex.search(\"index\", {\n    pagination: {\n        per_page: 1,\n        starting_after: \"starting_after\"\n    },\n    query: {\n        field: \"field\",\n        operator: \"=\",\n        value: \"value\"\n    }\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithCursorPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithCursorPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithCursorPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "POST",
                "identifier_override": "endpoint_inline-users/inline-users.listWithMixedTypeCursorPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithMixedTypeCursorPagination({\n    cursor: \"cursor\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithMixedTypeCursorPagination({\n    cursor: \"cursor\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "POST",
                "identifier_override": "endpoint_inline-users/inline-users.listWithBodyCursorPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithBodyCursorPagination({\n    pagination: {\n        cursor: \"cursor\"\n    }\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithBodyCursorPagination({\n    pagination: {\n        cursor: \"cursor\"\n    }\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithOffsetPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithOffsetPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithOffsetPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithDoubleOffsetPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithDoubleOffsetPagination({\n    page: 1.1,\n    per_page: 1.1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithDoubleOffsetPagination({\n    page: 1.1,\n    per_page: 1.1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "POST",
                "identifier_override": "endpoint_inline-users/inline-users.listWithBodyOffsetPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithBodyOffsetPagination({\n    pagination: {\n        page: 1\n    }\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithBodyOffsetPagination({\n    pagination: {\n        page: 1\n    }\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithOffsetStepPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithOffsetStepPagination({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithOffsetStepPagination({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithOffsetPaginationHasNextPage"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithOffsetPaginationHasNextPage({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithOffsetPaginationHasNextPage({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithExtendedResults"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithExtendedResults({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithExtendedResults({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithExtendedResultsAndOptionalData"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithExtendedResultsAndOptionalData({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithExtendedResultsAndOptionalData({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listUsernames"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listUsernames({\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listUsernames({\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/inline-users",
                "method": "GET",
                "identifier_override": "endpoint_inline-users/inline-users.listWithGlobalConfig"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.inlineUsers.inlineUsers.listWithGlobalConfig({\n    offset: 1\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.inlineUsers.inlineUsers.listWithGlobalConfig({\n    offset: 1\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithCursorPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithCursorPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithCursorPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "POST",
                "identifier_override": "endpoint_users.listWithMixedTypeCursorPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithMixedTypeCursorPagination({\n    cursor: \"cursor\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithMixedTypeCursorPagination({\n    cursor: \"cursor\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "POST",
                "identifier_override": "endpoint_users.listWithBodyCursorPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithBodyCursorPagination({\n    pagination: {\n        cursor: \"cursor\"\n    }\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithBodyCursorPagination({\n    pagination: {\n        cursor: \"cursor\"\n    }\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithOffsetPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithOffsetPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithOffsetPagination({\n    page: 1,\n    per_page: 1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithDoubleOffsetPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithDoubleOffsetPagination({\n    page: 1.1,\n    per_page: 1.1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithDoubleOffsetPagination({\n    page: 1.1,\n    per_page: 1.1,\n    order: \"asc\",\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "POST",
                "identifier_override": "endpoint_users.listWithBodyOffsetPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithBodyOffsetPagination({\n    pagination: {\n        page: 1\n    }\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithBodyOffsetPagination({\n    pagination: {\n        page: 1\n    }\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithOffsetStepPagination"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithOffsetStepPagination({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithOffsetStepPagination({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithOffsetPaginationHasNextPage"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithOffsetPaginationHasNextPage({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithOffsetPaginationHasNextPage({\n    page: 1,\n    limit: 1,\n    order: \"asc\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithExtendedResults"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithExtendedResults({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithExtendedResults({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithExtendedResultsAndOptionalData"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithExtendedResultsAndOptionalData({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithExtendedResultsAndOptionalData({\n    cursor: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listUsernames"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listUsernames({\n    starting_after: \"starting_after\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listUsernames({\n    starting_after: \"starting_after\"\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        },
        {
            "id": {
                "path": "/users",
                "method": "GET",
                "identifier_override": "endpoint_users.listWithGlobalConfig"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPaginationClient } from \"@fern/pagination\";\n\nconst client = new SeedPaginationClient({ environment: \"YOUR_BASE_URL\", token: \"YOUR_TOKEN\" });\nconst response = await client.users.listWithGlobalConfig({\n    offset: 1\n});\nfor await (const item of response) {\n    console.log(item);\n}\n\n// Or you can manually iterate page-by-page\nlet page = await client.users.listWithGlobalConfig({\n    offset: 1\n});\nwhile (page.hasNextPage()) {\n    page = page.getNextPage();\n}\n"
            }
        }
    ],
    "types": {}
}