/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SeedLiteralClient } from "../../src/Client";

describe("Query", () => {
    test("send", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedLiteralClient({ environment: server.baseUrl });

        const rawResponseBody = { message: "The weather is sunny", status: 200, success: true };
        server.mockEndpoint().post("/query").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.query.send({
            prompt: "You are a helpful assistant",
            optional_prompt: "You are a helpful assistant",
            alias_prompt: "You are a helpful assistant",
            alias_optional_prompt: "You are a helpful assistant",
            stream: false,
            optional_stream: false,
            alias_stream: false,
            alias_optional_stream: false,
            query: "What is the weather today",
        });
        expect(response).toEqual({
            message: "The weather is sunny",
            status: 200,
            success: true,
        });
    });
});
