/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { SeedExhaustiveClient } from "../../../Client.js";

describe("Union", () => {
    test("getAndReturnUnion", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedExhaustiveClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { animal: "dog", name: "name", likesToWoof: true };
        const rawResponseBody = { animal: "dog", name: "name", likesToWoof: true };
        server
            .mockEndpoint()
            .post("/union")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.endpoints.union.getAndReturnUnion({
            animal: "dog",
            name: "name",
            likesToWoof: true,
        });
        expect(response).toEqual({
            animal: "dog",
            name: "name",
            likesToWoof: true,
        });
    });
});
