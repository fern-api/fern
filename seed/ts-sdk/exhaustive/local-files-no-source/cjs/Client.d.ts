/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as core from "./core/index.js";
import { Endpoints } from "./api/resources/endpoints/client/Client.js";
import { InlinedRequests } from "./api/resources/inlinedRequests/client/Client.js";
import { NoAuth } from "./api/resources/noAuth/client/Client.js";
import { NoReqBody } from "./api/resources/noReqBody/client/Client.js";
import { ReqWithHeaders } from "./api/resources/reqWithHeaders/client/Client.js";
export declare namespace SeedExhaustiveClient {
    interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}
export declare class SeedExhaustiveClient {
    protected readonly _options: SeedExhaustiveClient.Options;
    protected _endpoints: Endpoints | undefined;
    protected _inlinedRequests: InlinedRequests | undefined;
    protected _noAuth: NoAuth | undefined;
    protected _noReqBody: NoReqBody | undefined;
    protected _reqWithHeaders: ReqWithHeaders | undefined;
    constructor(_options: SeedExhaustiveClient.Options);
    get endpoints(): Endpoints;
    get inlinedRequests(): InlinedRequests;
    get noAuth(): NoAuth;
    get noReqBody(): NoReqBody;
    get reqWithHeaders(): ReqWithHeaders;
}
