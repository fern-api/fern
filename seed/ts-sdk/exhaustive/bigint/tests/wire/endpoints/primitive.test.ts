/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { SeedExhaustiveClient } from "../../../src/Client";

const client = new SeedExhaustiveClient({
    environment: process.env.TESTS_BASE_URL || "test",
    token: process.env.TESTS_AUTH || "test",
});

describe("Primitive", () => {
    test("getAndReturnString", async () => {
        const response = await client.endpoints.primitive.getAndReturnString("string");
        expect(response).toEqual("string");
    });

    test("getAndReturnInt", async () => {
        const response = await client.endpoints.primitive.getAndReturnInt(1);
        expect(response).toEqual(1);
    });

    test("getAndReturnLong", async () => {
        const response = await client.endpoints.primitive.getAndReturnLong(BigInt("1000000"));
        expect(response).toEqual(1000000);
    });

    test("getAndReturnDouble", async () => {
        const response = await client.endpoints.primitive.getAndReturnDouble(1.1);
        expect(response).toEqual(1.1);
    });

    test("getAndReturnBool", async () => {
        const response = await client.endpoints.primitive.getAndReturnBool(true);
        expect(response).toEqual(true);
    });

    test("getAndReturnDatetime", async () => {
        const response = await client.endpoints.primitive.getAndReturnDatetime("2024-01-15T09:30:00Z");
        expect(response).toEqual("2024-01-15T09:30:00Z");
    });

    test("getAndReturnDate", async () => {
        const response = await client.endpoints.primitive.getAndReturnDate("2023-01-15");
        expect(response).toEqual("2023-01-15");
    });

    test("getAndReturnUuid", async () => {
        const response = await client.endpoints.primitive.getAndReturnUuid("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32");
        expect(response).toEqual("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32");
    });

    test("getAndReturnBase64", async () => {
        const response = await client.endpoints.primitive.getAndReturnBase64("SGVsbG8gd29ybGQh");
        expect(response).toEqual("SGVsbG8gd29ybGQh");
    });
});
