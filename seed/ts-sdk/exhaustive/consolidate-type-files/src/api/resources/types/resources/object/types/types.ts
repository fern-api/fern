/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SeedExhaustive from "../../../../../index.js";

export interface ObjectWithOptionalField {
    /** This is a rather long descriptor of this single field in a more complex type. If you ask me I think this is a pretty good description for this field all things considered. */
    string?: string;
    integer?: number;
    long?: number;
    double?: number;
    bool?: boolean;
    datetime?: string;
    date?: string;
    uuid?: string;
    base64?: string;
    list?: string[];
    set?: string[];
    map?: Record<number, string>;
    bigint?: string;
}

export interface ObjectWithRequiredField {
    string: string;
}

export interface ObjectWithMapOfMap {
    map: Record<string, Record<string, string>>;
}

export interface NestedObjectWithOptionalField {
    string?: string;
    NestedObject?: SeedExhaustive.types.ObjectWithOptionalField;
}

export interface NestedObjectWithRequiredField {
    string: string;
    NestedObject: SeedExhaustive.types.ObjectWithOptionalField;
}

export interface DoubleOptional {
    optionalAlias?: SeedExhaustive.types.OptionalAlias | undefined;
}

export type OptionalAlias = string | undefined;
