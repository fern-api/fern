/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../../../core";
import { Container } from "../resources/container/client/Client";
import { Enum } from "../resources/enum/client/Client";
import { HttpMethods } from "../resources/httpMethods/client/Client";
import { Object_ } from "../resources/object/client/Client";
import { Params } from "../resources/params/client/Client";
import { Primitive } from "../resources/primitive/client/Client";
import { Union } from "../resources/union/client/Client";

export declare namespace Endpoints {
    interface Options {
        environment: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }

    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}

export class Endpoints {
    constructor(protected readonly _options: Endpoints.Options) {}

    protected _container: Container | undefined;

    public get container(): Container {
        return (this._container ??= new Container(this._options));
    }

    protected _enum: Enum | undefined;

    public get enum(): Enum {
        return (this._enum ??= new Enum(this._options));
    }

    protected _httpMethods: HttpMethods | undefined;

    public get httpMethods(): HttpMethods {
        return (this._httpMethods ??= new HttpMethods(this._options));
    }

    protected _object: Object_ | undefined;

    public get object(): Object_ {
        return (this._object ??= new Object_(this._options));
    }

    protected _params: Params | undefined;

    public get params(): Params {
        return (this._params ??= new Params(this._options));
    }

    protected _primitive: Primitive | undefined;

    public get primitive(): Primitive {
        return (this._primitive ??= new Primitive(this._options));
    }

    protected _union: Union | undefined;

    public get union(): Union {
        return (this._union ??= new Union(this._options));
    }
}
