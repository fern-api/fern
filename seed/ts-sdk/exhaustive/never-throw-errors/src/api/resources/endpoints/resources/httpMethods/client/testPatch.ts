/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SeedExhaustive from "../../../../../index.js";
import * as core from "../../../../../../core/index.js";

export type Error = SeedExhaustive.endpoints.httpMethods.testPatch.Error._Unknown;

export namespace Error {
    export interface _Unknown {
        statusCode: void;
        content: core.Fetcher.Error;
    }

    export interface _Visitor<_Result> {
        _other: (value: core.Fetcher.Error) => _Result;
    }
}

export const Error = {
    _unknown: (fetcherError: core.Fetcher.Error): SeedExhaustive.endpoints.httpMethods.testPatch.Error._Unknown => {
        return {
            statusCode: undefined,
            content: fetcherError,
        };
    },

    _visit: <_Result>(
        value: SeedExhaustive.endpoints.httpMethods.testPatch.Error,
        visitor: SeedExhaustive.endpoints.httpMethods.testPatch.Error._Visitor<_Result>,
    ): _Result => {
        switch (value.statusCode) {
            default:
                return visitor._other(value as any);
        }
    },
} as const;
