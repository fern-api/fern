/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../../../core/index.js";
import { Api } from "../resources/api/client/Client.js";

export declare namespace Nested {
    export interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        authProvider: core.AuthProvider;
    }
}

export class Nested {
    protected readonly _options: Nested.Options;
    protected readonly _authProvider: core.AuthProvider;
    protected _api: Api | undefined;

    constructor(_options: Nested.Options) {
        this._options = _options;
        this._authProvider = _options.authProvider;
    }

    public get api(): Api {
        return (this._api ??= new Api({ ...this._options, authProvider: this._authProvider }));
    }
}
