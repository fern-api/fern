/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as SeedApi from "../../api/index";
import * as core from "../../core";

export const Patient: core.serialization.ObjectSchema<serializers.Patient.Raw, SeedApi.Patient> = core.serialization
    .object({
        resourceType: core.serialization.property("resource_type", core.serialization.stringLiteral("Patient")),
        name: core.serialization.string(),
        scripts: core.serialization.list(core.serialization.lazyObject(() => serializers.Script)),
    })
    .extend(core.serialization.lazyObject(() => serializers.BaseResource));

export declare namespace Patient {
    export interface Raw extends serializers.BaseResource.Raw {
        resource_type: "Patient";
        name: string;
        scripts: serializers.Script.Raw[];
    }
}
