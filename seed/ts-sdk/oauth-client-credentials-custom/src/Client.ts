// This file was auto-generated by Fern from our API Definition.

<<<<<<< HEAD
=======
import * as core from "./core/index.js";
import type { BaseClientOptions, BaseRequestOptions } from "./BaseClient.js";
>>>>>>> 048c276e1390a22745b2ec94e44b36b115bd89f9
import { Auth } from "./api/resources/auth/client/Client.js";
import { Nested } from "./api/resources/nested/client/Client.js";
import { NestedNoAuth } from "./api/resources/nestedNoAuth/client/Client.js";
import { Simple } from "./api/resources/simple/client/Client.js";
import { mergeHeaders } from "./core/headers.js";
import * as core from "./core/index.js";

export declare namespace SeedOauthClientCredentialsClient {
    export interface Options extends BaseClientOptions {
        clientId: core.Supplier<string>;
        clientSecret: core.Supplier<string>;
    }

    export interface RequestOptions extends BaseRequestOptions {}
}

export class SeedOauthClientCredentialsClient {
    protected readonly _options: SeedOauthClientCredentialsClient.Options;
    private readonly _oauthTokenProvider: core.OAuthTokenProvider;
    protected _auth: Auth | undefined;
    protected _nestedNoAuth: NestedNoAuth | undefined;
    protected _nested: Nested | undefined;
    protected _simple: Simple | undefined;

    constructor(_options: SeedOauthClientCredentialsClient.Options) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "@fern/oauth-client-credentials-custom",
                    "X-Fern-SDK-Version": "0.0.1",
                    "User-Agent": "@fern/oauth-client-credentials-custom/0.0.1",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };

        this._oauthTokenProvider = new core.OAuthTokenProvider({
            clientId: this._options.clientId,

            clientSecret: this._options.clientSecret,
            authClient: new Auth({
                ...this._options,
                environment: this._options.environment,
            }),
        });
    }

    public get auth(): Auth {
        return (this._auth ??= new Auth({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get nestedNoAuth(): NestedNoAuth {
        return (this._nestedNoAuth ??= new NestedNoAuth({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get nested(): Nested {
        return (this._nested ??= new Nested({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }

    public get simple(): Simple {
        return (this._simple ??= new Simple({
            ...this._options,
            token: async () => await this._oauthTokenProvider.getToken(),
        }));
    }
}
