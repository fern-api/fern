/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../../../core";
import * as serializers from "../../../index";
import * as SeedUnions from "../../../../api/index";
import { NormalSweet } from "./NormalSweet";
import { ThankfulFactor } from "./ThankfulFactor";
import { JumboEnd } from "./JumboEnd";
import { HastyPain } from "./HastyPain";
import { MistySnow } from "./MistySnow";
import { DistinctFailure } from "./DistinctFailure";
import { PracticalPrinciple } from "./PracticalPrinciple";
import { LimpingStep } from "./LimpingStep";
import { VibrantExcitement } from "./VibrantExcitement";
import { ActiveDiamond } from "./ActiveDiamond";
import { PopularLimit } from "./PopularLimit";
import { FalseMirror } from "./FalseMirror";
import { PrimaryBlock } from "./PrimaryBlock";
import { RotatingRatio } from "./RotatingRatio";
import { ColorfulCover } from "./ColorfulCover";
import { DisloyalValue } from "./DisloyalValue";
import { GruesomeCoach } from "./GruesomeCoach";
import { TotalWork } from "./TotalWork";
import { HarmoniousPlay } from "./HarmoniousPlay";
import { UniqueStress } from "./UniqueStress";
import { UnwillingSmoke } from "./UnwillingSmoke";
import { FrozenSleep } from "./FrozenSleep";
import { DiligentDeal } from "./DiligentDeal";
import { AttractiveScript } from "./AttractiveScript";
import { HoarseMouse } from "./HoarseMouse";
import { CircularCard } from "./CircularCard";
import { PotableBad } from "./PotableBad";
import { TriangularRepair } from "./TriangularRepair";
import { GaseousRoad } from "./GaseousRoad";

const _Base = core.serialization.object({
    id: core.serialization.string(),
    createdAt: core.serialization.property("created-at", core.serialization.date()),
    archivedAt: core.serialization.property("archived-at", core.serialization.date().optional()),
});
export const BigUnion: core.serialization.Schema<serializers.BigUnion.Raw, SeedUnions.BigUnion> = core.serialization
    .union("type", {
        normalSweet: NormalSweet.extend(_Base),
        thankfulFactor: ThankfulFactor.extend(_Base),
        jumboEnd: JumboEnd.extend(_Base),
        hastyPain: HastyPain.extend(_Base),
        mistySnow: MistySnow.extend(_Base),
        distinctFailure: DistinctFailure.extend(_Base),
        practicalPrinciple: PracticalPrinciple.extend(_Base),
        limpingStep: LimpingStep.extend(_Base),
        vibrantExcitement: VibrantExcitement.extend(_Base),
        activeDiamond: ActiveDiamond.extend(_Base),
        popularLimit: PopularLimit.extend(_Base),
        falseMirror: FalseMirror.extend(_Base),
        primaryBlock: PrimaryBlock.extend(_Base),
        rotatingRatio: RotatingRatio.extend(_Base),
        colorfulCover: ColorfulCover.extend(_Base),
        disloyalValue: DisloyalValue.extend(_Base),
        gruesomeCoach: GruesomeCoach.extend(_Base),
        totalWork: TotalWork.extend(_Base),
        harmoniousPlay: HarmoniousPlay.extend(_Base),
        uniqueStress: UniqueStress.extend(_Base),
        unwillingSmoke: UnwillingSmoke.extend(_Base),
        frozenSleep: FrozenSleep.extend(_Base),
        diligentDeal: DiligentDeal.extend(_Base),
        attractiveScript: AttractiveScript.extend(_Base),
        hoarseMouse: HoarseMouse.extend(_Base),
        circularCard: CircularCard.extend(_Base),
        potableBad: PotableBad.extend(_Base),
        triangularRepair: TriangularRepair.extend(_Base),
        gaseousRoad: GaseousRoad.extend(_Base),
    })
    .transform<SeedUnions.BigUnion>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace BigUnion {
    export type Raw =
        | BigUnion.NormalSweet
        | BigUnion.ThankfulFactor
        | BigUnion.JumboEnd
        | BigUnion.HastyPain
        | BigUnion.MistySnow
        | BigUnion.DistinctFailure
        | BigUnion.PracticalPrinciple
        | BigUnion.LimpingStep
        | BigUnion.VibrantExcitement
        | BigUnion.ActiveDiamond
        | BigUnion.PopularLimit
        | BigUnion.FalseMirror
        | BigUnion.PrimaryBlock
        | BigUnion.RotatingRatio
        | BigUnion.ColorfulCover
        | BigUnion.DisloyalValue
        | BigUnion.GruesomeCoach
        | BigUnion.TotalWork
        | BigUnion.HarmoniousPlay
        | BigUnion.UniqueStress
        | BigUnion.UnwillingSmoke
        | BigUnion.FrozenSleep
        | BigUnion.DiligentDeal
        | BigUnion.AttractiveScript
        | BigUnion.HoarseMouse
        | BigUnion.CircularCard
        | BigUnion.PotableBad
        | BigUnion.TriangularRepair
        | BigUnion.GaseousRoad;

    export interface NormalSweet extends _Base, NormalSweet.Raw {
        type: "normalSweet";
    }

    export interface ThankfulFactor extends _Base, ThankfulFactor.Raw {
        type: "thankfulFactor";
    }

    export interface JumboEnd extends _Base, JumboEnd.Raw {
        type: "jumboEnd";
    }

    export interface HastyPain extends _Base, HastyPain.Raw {
        type: "hastyPain";
    }

    export interface MistySnow extends _Base, MistySnow.Raw {
        type: "mistySnow";
    }

    export interface DistinctFailure extends _Base, DistinctFailure.Raw {
        type: "distinctFailure";
    }

    export interface PracticalPrinciple extends _Base, PracticalPrinciple.Raw {
        type: "practicalPrinciple";
    }

    export interface LimpingStep extends _Base, LimpingStep.Raw {
        type: "limpingStep";
    }

    export interface VibrantExcitement extends _Base, VibrantExcitement.Raw {
        type: "vibrantExcitement";
    }

    export interface ActiveDiamond extends _Base, ActiveDiamond.Raw {
        type: "activeDiamond";
    }

    export interface PopularLimit extends _Base, PopularLimit.Raw {
        type: "popularLimit";
    }

    export interface FalseMirror extends _Base, FalseMirror.Raw {
        type: "falseMirror";
    }

    export interface PrimaryBlock extends _Base, PrimaryBlock.Raw {
        type: "primaryBlock";
    }

    export interface RotatingRatio extends _Base, RotatingRatio.Raw {
        type: "rotatingRatio";
    }

    export interface ColorfulCover extends _Base, ColorfulCover.Raw {
        type: "colorfulCover";
    }

    export interface DisloyalValue extends _Base, DisloyalValue.Raw {
        type: "disloyalValue";
    }

    export interface GruesomeCoach extends _Base, GruesomeCoach.Raw {
        type: "gruesomeCoach";
    }

    export interface TotalWork extends _Base, TotalWork.Raw {
        type: "totalWork";
    }

    export interface HarmoniousPlay extends _Base, HarmoniousPlay.Raw {
        type: "harmoniousPlay";
    }

    export interface UniqueStress extends _Base, UniqueStress.Raw {
        type: "uniqueStress";
    }

    export interface UnwillingSmoke extends _Base, UnwillingSmoke.Raw {
        type: "unwillingSmoke";
    }

    export interface FrozenSleep extends _Base, FrozenSleep.Raw {
        type: "frozenSleep";
    }

    export interface DiligentDeal extends _Base, DiligentDeal.Raw {
        type: "diligentDeal";
    }

    export interface AttractiveScript extends _Base, AttractiveScript.Raw {
        type: "attractiveScript";
    }

    export interface HoarseMouse extends _Base, HoarseMouse.Raw {
        type: "hoarseMouse";
    }

    export interface CircularCard extends _Base, CircularCard.Raw {
        type: "circularCard";
    }

    export interface PotableBad extends _Base, PotableBad.Raw {
        type: "potableBad";
    }

    export interface TriangularRepair extends _Base, TriangularRepair.Raw {
        type: "triangularRepair";
    }

    export interface GaseousRoad extends _Base, GaseousRoad.Raw {
        type: "gaseousRoad";
    }

    export interface _Base {
        id: string;
        "created-at": string;
        "archived-at"?: string | null;
    }
}
