/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";
import { Foo } from "./Foo";
import { Bar } from "./Bar";

export const UnionWithoutKey: core.serialization.Schema<serializers.UnionWithoutKey.Raw, SeedUnions.UnionWithoutKey> =
    core.serialization
        .union("type", {
            foo: Foo,
            bar: Bar,
        })
        .transform<SeedUnions.UnionWithoutKey>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace UnionWithoutKey {
    export type Raw = UnionWithoutKey.Foo | UnionWithoutKey.Bar;

    export interface Foo extends Foo.Raw {
        type: "foo";
    }

    export interface Bar extends Bar.Raw {
        type: "bar";
    }
}
