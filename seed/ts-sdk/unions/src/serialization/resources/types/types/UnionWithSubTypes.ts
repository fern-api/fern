/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";
import { Foo } from "./Foo";
import { FooExtended } from "./FooExtended";

export const UnionWithSubTypes: core.serialization.Schema<
    serializers.UnionWithSubTypes.Raw,
    SeedUnions.UnionWithSubTypes
> = core.serialization
    .union("type", {
        foo: Foo,
        fooExtended: FooExtended,
    })
    .transform<SeedUnions.UnionWithSubTypes>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UnionWithSubTypes {
    export type Raw = UnionWithSubTypes.Foo | UnionWithSubTypes.FooExtended;

    export interface Foo extends Foo.Raw {
        type: "foo";
    }

    export interface FooExtended extends FooExtended.Raw {
        type: "fooExtended";
    }
}
