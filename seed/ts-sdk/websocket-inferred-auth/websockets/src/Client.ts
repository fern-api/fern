// This file was auto-generated by Fern from our API Definition.

<<<<<<< HEAD
=======
import type { BaseClientOptions, BaseRequestOptions } from "./BaseClient.js";
import * as core from "./core/index.js";
import { mergeHeaders } from "./core/headers.js";
import { InferredAuthProvider } from "./auth/InferredAuthProvider.js";
>>>>>>> 048c276e1390a22745b2ec94e44b36b115bd89f9
import { Auth } from "./api/resources/auth/client/Client.js";
import { Realtime } from "./api/resources/realtime/client/Client.js";
import { InferredAuthProvider } from "./auth/InferredAuthProvider.js";
import { mergeHeaders } from "./core/headers.js";
import * as core from "./core/index.js";

export declare namespace SeedWebsocketAuthClient {
    export interface Options extends BaseClientOptions {
        xApiKey: string;
        clientId: string;
        clientSecret: string;
        scope?: string;
    }

    export interface RequestOptions extends BaseRequestOptions {}
}

export class SeedWebsocketAuthClient {
    protected readonly _options: SeedWebsocketAuthClient.Options;
    protected readonly _authProvider: core.AuthProvider;
    protected _auth: Auth | undefined;
    protected _realtime: Realtime | undefined;

    constructor(_options: SeedWebsocketAuthClient.Options) {
        this._options = {
            ..._options,
            headers: mergeHeaders(
                {
                    "X-Fern-Language": "JavaScript",
                    "X-Fern-SDK-Name": "@fern/websocket-inferred-auth",
                    "X-Fern-SDK-Version": "0.0.1",
                    "User-Agent": "@fern/websocket-inferred-auth/0.0.1",
                    "X-Fern-Runtime": core.RUNTIME.type,
                    "X-Fern-Runtime-Version": core.RUNTIME.version,
                },
                _options?.headers,
            ),
        };
        this._authProvider = new InferredAuthProvider({
            client: this,
            authTokenParameters: { ...this._options },
        });
    }

    public get auth(): Auth {
        return (this._auth ??= new Auth(this._options));
    }

    public get realtime(): Realtime {
        return (this._realtime ??= new Realtime({ ...this._options, authProvider: this._authProvider }));
    }
}
