/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SeedAuthEnvironmentVariablesClient } from "../../src/Client";

describe("Service", () => {
    test("getWithApiKey", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedAuthEnvironmentVariablesClient({
            apiKey: process.env.FERN_API_KEY || "test",
            xAnotherHeader: process.env.TESTS_HEADER || "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = "string";
        server.mockEndpoint().get("/apiKey").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.service.getWithApiKey();
        expect(response).toEqual("string");
    });

    test("getWithHeader", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedAuthEnvironmentVariablesClient({
            apiKey: process.env.FERN_API_KEY || "test",
            xAnotherHeader: process.env.TESTS_HEADER || "test",
            environment: server.baseUrl,
        });

        const rawResponseBody = "string";
        server
            .mockEndpoint()
            .get("/apiKeyInHeader")
            .header("X-Endpoint-Header", "X-Endpoint-Header")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.service.getWithHeader({
            "X-Endpoint-Header": "X-Endpoint-Header",
        });
        expect(response).toEqual("string");
    });
});
