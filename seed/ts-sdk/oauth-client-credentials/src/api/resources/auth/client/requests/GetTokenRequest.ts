import * as core from "../../../../../core/index.js";
/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * @example
 *     {
 *         client_id: "client_id",
 *         client_secret: "client_secret",
 *         scope: "scope"
 *     }
 */
export interface GetTokenRequest {
    client_id: string;
    client_secret: string;
    scope?: string;
}

export namespace GetTokenRequest {
    /**
     * Creates a GetTokenRequest object from the provided object.
     * This filters out any additional properties that are not part of the GetTokenRequest interface.
     *
     * @param params - Object containing client_id, client_secret, and optional scope
     * @returns A validated GetTokenRequest object
     */
    export function from({ client_id, client_secret, scope }: GetTokenRequest & unknown): GetTokenRequest {
        return {
            client_id,
            client_secret,
            scope,
        };
    }

    export async function fromPropertiesSupplier({
        client_id,
        client_secret,
        scope,
    }: core.PropertiesSupplier<GetTokenRequest>): Promise<GetTokenRequest> {
        return await core.PropertiesSupplier.get({
            client_id,
            client_secret,
            scope,
        });
    }
}
