/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SeedCustomAuthClient } from "../../src/Client";

describe("CustomAuth", () => {
    test("getWithCustomAuth", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedCustomAuthClient({ customAuthScheme: "test", environment: server.baseUrl });

        const rawResponseBody = true;
        server.mockEndpoint().get("/custom-auth").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.customAuth.getWithCustomAuth();
        expect(response).toEqual(true);
    });

    test("postWithCustomAuth", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedCustomAuthClient({ customAuthScheme: "test", environment: server.baseUrl });
        const rawRequestBody = { key: "value" };
        const rawResponseBody = true;
        server
            .mockEndpoint()
            .post("/custom-auth")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.customAuth.postWithCustomAuth({
            key: "value",
        });
        expect(response).toEqual(true);
    });
});
