/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SeedExamples from "../../../../api";
import * as core from "../../../../core";

export const Movie: core.serialization.ObjectSchema<serializers.Movie.Raw, SeedExamples.Movie> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).MovieId),
        prequel: core.serialization.lazy(async () => (await import("../../..")).MovieId).optional(),
        title: core.serialization.string(),
        from: core.serialization.string(),
        rating: core.serialization.number(),
        type: core.serialization.stringLiteral("movie"),
        tag: core.serialization.lazy(async () => (await import("../../..")).commons.Tag),
        book: core.serialization.string().optional(),
    });

export declare namespace Movie {
    interface Raw {
        id: serializers.MovieId.Raw;
        prequel?: serializers.MovieId.Raw | null;
        title: string;
        from: string;
        rating: number;
        type: "movie";
        tag: serializers.commons.Tag.Raw;
        book?: string | null;
    }
}
