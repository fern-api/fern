/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../../mock-server/MockServerPool.js";
import { SeedExamplesClient } from "../../../../src/Client";

describe("Service", () => {
    test("getException", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedExamplesClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            type: "generic",
            exceptionType: "Unavailable",
            exceptionMessage: "This component is unavailable!",
            exceptionStacktrace: "<logs>",
        };
        server
            .mockEndpoint()
            .get("/file/notification/notification-hsy129x")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.file.notification.service.getException("notification-hsy129x");
        expect(response).toEqual({
            type: "generic",
            exceptionType: "Unavailable",
            exceptionMessage: "This component is unavailable!",
            exceptionStacktrace: "<logs>",
        });
    });
});
