/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedExamples from "../../../../api/index";
import * as core from "../../../../core";
import { ExceptionInfo } from "./ExceptionInfo";

export const Exception: core.serialization.Schema<serializers.Exception.Raw, SeedExamples.Exception> =
    core.serialization
        .union("type", {
            generic: ExceptionInfo,
            timeout: core.serialization.object({}),
        })
        .transform<SeedExamples.Exception>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace Exception {
    export type Raw = Exception.Generic | Exception.Timeout;

    export interface Generic extends ExceptionInfo.Raw {
        type: "generic";
    }

    export interface Timeout {
        type: "timeout";
    }
}
