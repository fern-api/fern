/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SeedTrace from "../../../../..";

export type AssertCorrectnessCheck =
    | SeedTrace.v2.AssertCorrectnessCheck.DeepEquality
    | SeedTrace.v2.AssertCorrectnessCheck.Custom
    | SeedTrace.v2.AssertCorrectnessCheck._Unknown;

export declare namespace AssertCorrectnessCheck {
    interface DeepEquality extends SeedTrace.v2.DeepEqualityCorrectnessCheck, _Utils {
        type: "deepEquality";
    }

    interface Custom extends SeedTrace.v2.VoidFunctionDefinitionThatTakesActualResult, _Utils {
        type: "custom";
    }

    interface _Unknown extends _Utils {
        type: void;
    }

    interface _Utils {
        _visit: <_Result>(visitor: SeedTrace.v2.AssertCorrectnessCheck._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        deepEquality: (value: SeedTrace.v2.DeepEqualityCorrectnessCheck) => _Result;
        custom: (value: SeedTrace.v2.VoidFunctionDefinitionThatTakesActualResult) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const AssertCorrectnessCheck = {
    deepEquality: (
        value: SeedTrace.v2.DeepEqualityCorrectnessCheck
    ): SeedTrace.v2.AssertCorrectnessCheck.DeepEquality => {
        return {
            ...value,
            type: "deepEquality",
            _visit: function <_Result>(
                this: SeedTrace.v2.AssertCorrectnessCheck.DeepEquality,
                visitor: SeedTrace.v2.AssertCorrectnessCheck._Visitor<_Result>
            ) {
                return SeedTrace.v2.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },

    custom: (
        value: SeedTrace.v2.VoidFunctionDefinitionThatTakesActualResult
    ): SeedTrace.v2.AssertCorrectnessCheck.Custom => {
        return {
            ...value,
            type: "custom",
            _visit: function <_Result>(
                this: SeedTrace.v2.AssertCorrectnessCheck.Custom,
                visitor: SeedTrace.v2.AssertCorrectnessCheck._Visitor<_Result>
            ) {
                return SeedTrace.v2.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },

    _unknown: (value: { type: string }): SeedTrace.v2.AssertCorrectnessCheck._Unknown => {
        return {
            ...(value as any),
            _visit: function <_Result>(
                this: SeedTrace.v2.AssertCorrectnessCheck._Unknown,
                visitor: SeedTrace.v2.AssertCorrectnessCheck._Visitor<_Result>
            ) {
                return SeedTrace.v2.AssertCorrectnessCheck._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: SeedTrace.v2.AssertCorrectnessCheck,
        visitor: SeedTrace.v2.AssertCorrectnessCheck._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "deepEquality":
                return visitor.deepEquality(value);
            case "custom":
                return visitor.custom(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
