/**
 * This file was auto-generated by Fern from our API Definition.
 */

export type ExecutionSessionStatus =
    | "CREATING_CONTAINER"
    | "PROVISIONING_CONTAINER"
    | "PENDING_CONTAINER"
    | "RUNNING_CONTAINER"
    | "LIVE_CONTAINER"
    | "FAILED_TO_LAUNCH";
export const ExecutionSessionStatus = {
    CreatingContainer: "CREATING_CONTAINER",
    ProvisioningContainer: "PROVISIONING_CONTAINER",
    PendingContainer: "PENDING_CONTAINER",
    RunningContainer: "RUNNING_CONTAINER",
    LiveContainer: "LIVE_CONTAINER",
    FailedToLaunch: "FAILED_TO_LAUNCH",
    _visit: <R>(value: ExecutionSessionStatus, visitor: ExecutionSessionStatus.Visitor<R>) => {
        switch (value) {
            case ExecutionSessionStatus.CreatingContainer:
                return visitor.creatingContainer();
            case ExecutionSessionStatus.ProvisioningContainer:
                return visitor.provisioningContainer();
            case ExecutionSessionStatus.PendingContainer:
                return visitor.pendingContainer();
            case ExecutionSessionStatus.RunningContainer:
                return visitor.runningContainer();
            case ExecutionSessionStatus.LiveContainer:
                return visitor.liveContainer();
            case ExecutionSessionStatus.FailedToLaunch:
                return visitor.failedToLaunch();
            default:
                return visitor._other();
        }
    },
} as const;

export namespace ExecutionSessionStatus {
    export interface Visitor<R> {
        creatingContainer: () => R;
        provisioningContainer: () => R;
        pendingContainer: () => R;
        runningContainer: () => R;
        liveContainer: () => R;
        failedToLaunch: () => R;
        _other: () => R;
    }
}
