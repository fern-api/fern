/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SeedTrace from "../../../../api";
import * as core from "../../../../core";

export const TestSubmissionStatusV2: core.serialization.ObjectSchema<
    serializers.TestSubmissionStatusV2.Raw,
    SeedTrace.TestSubmissionStatusV2
> = core.serialization.object({
    updates: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../..")).TestSubmissionUpdate)
    ),
    problemId: core.serialization.lazy(async () => (await import("../../..")).ProblemId),
    problemVersion: core.serialization.number(),
    problemInfo: core.serialization.lazyObject(async () => (await import("../../..")).v2.ProblemInfoV2),
});

export declare namespace TestSubmissionStatusV2 {
    interface Raw {
        updates: serializers.TestSubmissionUpdate.Raw[];
        problemId: serializers.ProblemId.Raw;
        problemVersion: number;
        problemInfo: serializers.v2.ProblemInfoV2.Raw;
    }
}
