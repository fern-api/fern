/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SeedTrace from "../../../../api";
import * as core from "../../../../core";

export const RecordingResponseNotification: core.serialization.ObjectSchema<
    serializers.RecordingResponseNotification.Raw,
    SeedTrace.RecordingResponseNotification
> = core.serialization.object({
    submissionId: core.serialization.lazy(async () => (await import("../../..")).SubmissionId),
    testCaseId: core.serialization.string().optional(),
    lineNumber: core.serialization.number(),
    lightweightStackInfo: core.serialization.lazyObject(
        async () => (await import("../../..")).LightweightStackframeInformation
    ),
    tracedFile: core.serialization.lazyObject(async () => (await import("../../..")).TracedFile).optional(),
});

export declare namespace RecordingResponseNotification {
    interface Raw {
        submissionId: serializers.SubmissionId.Raw;
        testCaseId?: string | null;
        lineNumber: number;
        lightweightStackInfo: serializers.LightweightStackframeInformation.Raw;
        tracedFile?: serializers.TracedFile.Raw | null;
    }
}
