/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SeedTrace from "../../../../api";
import * as core from "../../../../core";

export const SinglyLinkedListValue: core.serialization.ObjectSchema<
    serializers.SinglyLinkedListValue.Raw,
    SeedTrace.SinglyLinkedListValue
> = core.serialization.object({
    head: core.serialization.lazy(async () => (await import("../../..")).NodeId).optional(),
    nodes: core.serialization.record(
        core.serialization.lazy(async () => (await import("../../..")).NodeId),
        core.serialization.lazyObject(async () => (await import("../../..")).SinglyLinkedListNodeValue)
    ),
});

export declare namespace SinglyLinkedListValue {
    interface Raw {
        head?: serializers.NodeId.Raw | null;
        nodes: Record<serializers.NodeId.Raw, serializers.SinglyLinkedListNodeValue.Raw>;
    }
}
