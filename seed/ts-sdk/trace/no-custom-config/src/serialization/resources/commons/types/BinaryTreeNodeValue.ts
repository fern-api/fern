/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SeedTrace from "../../../../api";
import * as core from "../../../../core";

export const BinaryTreeNodeValue: core.serialization.ObjectSchema<
    serializers.BinaryTreeNodeValue.Raw,
    SeedTrace.BinaryTreeNodeValue
> = core.serialization.object({
    nodeId: core.serialization.lazy(async () => (await import("../../..")).NodeId),
    val: core.serialization.number(),
    right: core.serialization.lazy(async () => (await import("../../..")).NodeId).optional(),
    left: core.serialization.lazy(async () => (await import("../../..")).NodeId).optional(),
});

export declare namespace BinaryTreeNodeValue {
    interface Raw {
        nodeId: serializers.NodeId.Raw;
        val: number;
        right?: serializers.NodeId.Raw | null;
        left?: serializers.NodeId.Raw | null;
    }
}
