/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as SeedTrace from "../../../../api";
import * as core from "../../../../core";

export const Test: core.serialization.Schema<serializers.Test.Raw, SeedTrace.Test> = core.serialization
    .union("type", {
        and: core.serialization.object({
            value: core.serialization.boolean(),
        }),
        or: core.serialization.object({
            value: core.serialization.boolean(),
        }),
    })
    .transform<SeedTrace.Test>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Test {
    type Raw = Test.And | Test.Or;

    interface And {
        type: "and";
        value: boolean;
    }

    interface Or {
        type: "or";
        value: boolean;
    }
}
