/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as SeedTrace from "../../../index";

export type CodeExecutionUpdate =
    /**
     * Statuses if an executor for the session isn't ready (Before RunningResponse). */
    | SeedTrace.CodeExecutionUpdate.BuildingExecutor
    /**
     * Sent once a test submission is executing. */
    | SeedTrace.CodeExecutionUpdate.Running
    /**
     * Sent if a submission cannot be run (i.e. Compile Error). */
    | SeedTrace.CodeExecutionUpdate.Errored
    /**
     * Sent if a submission is stopped. */
    | SeedTrace.CodeExecutionUpdate.Stopped
    /**
     * Graded testcases without trace information. */
    | SeedTrace.CodeExecutionUpdate.Graded
    /**
     * Graded submission for v2 problems. */
    | SeedTrace.CodeExecutionUpdate.GradedV2
    /**
     * Workspace run without trace information. */
    | SeedTrace.CodeExecutionUpdate.WorkspaceRan
    /**
     * Gives progress about what is being recorded. */
    | SeedTrace.CodeExecutionUpdate.Recording
    /**
     * Graded testcases with trace information. */
    | SeedTrace.CodeExecutionUpdate.Recorded
    /**
     * Sent if an invalid request is sent for a submission. */
    | SeedTrace.CodeExecutionUpdate.InvalidRequest
    /**
     * Sent once a submission is graded and fully recorded. */
    | SeedTrace.CodeExecutionUpdate.Finished;

export namespace CodeExecutionUpdate {
    export interface BuildingExecutor extends SeedTrace.BuildingExecutorResponse {
        type: "buildingExecutor";
    }

    export interface Running extends SeedTrace.RunningResponse {
        type: "running";
    }

    export interface Errored extends SeedTrace.ErroredResponse {
        type: "errored";
    }

    export interface Stopped extends SeedTrace.StoppedResponse {
        type: "stopped";
    }

    export interface Graded extends SeedTrace.GradedResponse {
        type: "graded";
    }

    export interface GradedV2 extends SeedTrace.GradedResponseV2 {
        type: "gradedV2";
    }

    export interface WorkspaceRan extends SeedTrace.WorkspaceRanResponse {
        type: "workspaceRan";
    }

    export interface Recording extends SeedTrace.RecordingResponseNotification {
        type: "recording";
    }

    export interface Recorded extends SeedTrace.RecordedResponseNotification {
        type: "recorded";
    }

    export interface InvalidRequest extends SeedTrace.InvalidRequestResponse {
        type: "invalidRequest";
    }

    export interface Finished extends SeedTrace.FinishedResponse {
        type: "finished";
    }
}
