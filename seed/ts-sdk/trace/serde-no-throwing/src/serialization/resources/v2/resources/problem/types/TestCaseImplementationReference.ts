/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as SeedTrace from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { TestCaseTemplateId } from "./TestCaseTemplateId.js";
import { TestCaseImplementation } from "./TestCaseImplementation.js";

export const TestCaseImplementationReference: core.serialization.Schema<
    serializers.v2.TestCaseImplementationReference.Raw,
    SeedTrace.v2.TestCaseImplementationReference
> = core.serialization
    .union("type", {
        templateId: core.serialization.object({
            value: TestCaseTemplateId,
        }),
        implementation: TestCaseImplementation,
    })
    .transform<SeedTrace.v2.TestCaseImplementationReference>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TestCaseImplementationReference {
    export type Raw = TestCaseImplementationReference.TemplateId | TestCaseImplementationReference.Implementation;

    export interface TemplateId {
        type: "templateId";
        value: TestCaseTemplateId.Raw;
    }

    export interface Implementation extends TestCaseImplementation.Raw {
        type: "implementation";
    }
}
