/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as SeedTrace from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { TestCaseWithActualResultImplementation } from "./TestCaseWithActualResultImplementation.js";
import { VoidFunctionDefinition } from "./VoidFunctionDefinition.js";

export const TestCaseFunction: core.serialization.Schema<
    serializers.v2.TestCaseFunction.Raw,
    SeedTrace.v2.TestCaseFunction
> = core.serialization
    .union("type", {
        withActualResult: TestCaseWithActualResultImplementation,
        custom: VoidFunctionDefinition,
    })
    .transform<SeedTrace.v2.TestCaseFunction>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TestCaseFunction {
    export type Raw = TestCaseFunction.WithActualResult | TestCaseFunction.Custom;

    export interface WithActualResult extends TestCaseWithActualResultImplementation.Raw {
        type: "withActualResult";
    }

    export interface Custom extends VoidFunctionDefinition.Raw {
        type: "custom";
    }
}
