// This file was auto-generated by Fern from our API Definition.

import type * as SeedTrace from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import type * as serializers from "../../../index.js";
import { CompileError } from "./CompileError.js";
import { InternalError } from "./InternalError.js";
import { RuntimeError } from "./RuntimeError.js";

export const ErrorInfo: core.serialization.Schema<
  serializers.ErrorInfo.Raw,
  SeedTrace.ErrorInfo
> = core.serialization
  .union("type", {
    compileError: CompileError,
    runtimeError: RuntimeError,
    internalError: InternalError,
  })
  .transform<SeedTrace.ErrorInfo>({
    transform: (value) => value,
    untransform: (value) => value,
  });

export declare namespace ErrorInfo {
  export type Raw =
    | ErrorInfo.CompileError
    | ErrorInfo.RuntimeError
    | ErrorInfo.InternalError;

  export interface CompileError extends CompileError.Raw {
    type: "compileError";
  }

  export interface RuntimeError extends RuntimeError.Raw {
    type: "runtimeError";
  }

  export interface InternalError extends InternalError.Raw {
    type: "internalError";
  }
}
