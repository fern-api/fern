// This file was auto-generated by Fern from our API Definition.

import type * as SeedTrace from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import * as serializers from "../../../index.js";
import { ExpressionLocation } from "./ExpressionLocation.js";
import { StackInformation } from "./StackInformation.js";
import { SubmissionId } from "./SubmissionId.js";
import { TracedFile } from "./TracedFile.js";

export const TraceResponseV2: core.serialization.ObjectSchema<
    serializers.TraceResponseV2.Raw,
    SeedTrace.TraceResponseV2
> = core.serialization.object({
    submissionId: SubmissionId,
    lineNumber: core.serialization.number(),
    file: TracedFile,
    returnValue: core.serialization.lazy(() => serializers.DebugVariableValue).optional(),
    expressionLocation: ExpressionLocation.optional(),
    stack: StackInformation,
    stdout: core.serialization.string().optional(),
});

export declare namespace TraceResponseV2 {
    export interface Raw {
        submissionId: SubmissionId.Raw;
        lineNumber: number;
        file: TracedFile.Raw;
        returnValue?: serializers.DebugVariableValue.Raw | null;
        expressionLocation?: ExpressionLocation.Raw | null;
        stack: StackInformation.Raw;
        stdout?: string | null;
    }
}
