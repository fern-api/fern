/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../../../environments.js";
import * as core from "../../../../../../core/index.js";
import { Problem } from "../resources/problem/client/Client.js";

export declare namespace V3 {
    export interface Options {
        environment?: core.Supplier<environments.SeedTraceEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token?: core.Supplier<core.BearerToken | undefined>;
        /** Override the X-Random-Header header */
        xRandomHeader?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class V3 {
    protected readonly _options: V3.Options;
    protected _problem: Problem | undefined;

    constructor(_options: V3.Options = {}) {
        this._options = _options;
    }

    public get problem(): Problem {
        return (this._problem ??= new Problem(this._options));
    }
}
