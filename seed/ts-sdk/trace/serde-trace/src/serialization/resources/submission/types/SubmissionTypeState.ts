/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as SeedTrace from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { TestSubmissionState } from "./TestSubmissionState.js";
import { WorkspaceSubmissionState } from "./WorkspaceSubmissionState.js";

export const SubmissionTypeState: core.serialization.Schema<
    serializers.SubmissionTypeState.Raw,
    SeedTrace.SubmissionTypeState
> = core.serialization
    .union("type", {
        test: TestSubmissionState,
        workspace: WorkspaceSubmissionState,
    })
    .transform<SeedTrace.SubmissionTypeState>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace SubmissionTypeState {
    export type Raw = SubmissionTypeState.Test | SubmissionTypeState.Workspace;

    export interface Test extends TestSubmissionState.Raw {
        type: "test";
    }

    export interface Workspace extends WorkspaceSubmissionState.Raw {
        type: "workspace";
    }
}
