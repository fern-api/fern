/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index.js";
import * as SeedTrace from "../../../../../../../../api/index.js";
import * as core from "../../../../../../../../core/index.js";
import { ProblemId } from "../../../../../../commons/types/ProblemId.js";

export const LightweightProblemInfoV2: core.serialization.ObjectSchema<
    serializers.v2.v3.LightweightProblemInfoV2.Raw,
    SeedTrace.v2.v3.LightweightProblemInfoV2
> = core.serialization.object({
    problemId: ProblemId,
    problemName: core.serialization.string(),
    problemVersion: core.serialization.number(),
    variableTypes: core.serialization.list(core.serialization.lazy(() => serializers.VariableType)),
});

export declare namespace LightweightProblemInfoV2 {
    export interface Raw {
        problemId: ProblemId.Raw;
        problemName: string;
        problemVersion: number;
        variableTypes: serializers.VariableType.Raw[];
    }
}
