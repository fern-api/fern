/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { SeedUnknownAsAnyClient } from "../../src/Client";

describe("Unknown", () => {
    test("post", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedUnknownAsAnyClient({ environment: server.baseUrl });
        const rawRequestBody = { key: "value" };
        const rawResponseBody = [{ key: "value" }, { key: "value" }];
        server
            .mockEndpoint()
            .post("")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.unknown.post({
            key: "value",
        });
        expect(response).toEqual([
            {
                key: "value",
            },
            {
                key: "value",
            },
        ]);
    });

    test("postObject", async () => {
        const server = mockServerPool.createServer();
        const client = new SeedUnknownAsAnyClient({ environment: server.baseUrl });
        const rawRequestBody = { unknown: { key: "value" } };
        const rawResponseBody = [{ key: "value" }, { key: "value" }];
        server
            .mockEndpoint()
            .post("/with-object")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.unknown.postObject({
            unknown: {
                key: "value",
            },
        });
        expect(response).toEqual([
            {
                key: "value",
            },
            {
                key: "value",
            },
        ]);
    });
});
