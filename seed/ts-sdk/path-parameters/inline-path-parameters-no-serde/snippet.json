{
    "endpoints": [
        {
            "id": {
                "path": "/{tenant_id}/organizations/{organization_id}/",
                "method": "GET",
                "identifier_override": "endpoint_organizations.getOrganization"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPathParametersClient } from \"@fern/path-parameters\";\n\nconst client = new SeedPathParametersClient({ environment: \"YOUR_BASE_URL\" });\nawait client.organizations.getOrganization(\"organization_id\");\n"
            }
        },
        {
            "id": {
                "path": "/{tenant_id}/organizations/{organization_id}/users/{user_id}",
                "method": "GET",
                "identifier_override": "endpoint_organizations.getOrganizationUser"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPathParametersClient } from \"@fern/path-parameters\";\n\nconst client = new SeedPathParametersClient({ environment: \"YOUR_BASE_URL\" });\nawait client.organizations.getOrganizationUser({\n    organization_id: \"organization_id\",\n    user_id: \"user_id\"\n});\n"
            }
        },
        {
            "id": {
                "path": "/{tenant_id}/organizations/{organization_id}/search",
                "method": "GET",
                "identifier_override": "endpoint_organizations.searchOrganizations"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPathParametersClient } from \"@fern/path-parameters\";\n\nconst client = new SeedPathParametersClient({ environment: \"YOUR_BASE_URL\" });\nawait client.organizations.searchOrganizations(\"organization_id\", {\n    limit: 1\n});\n"
            }
        },
        {
            "id": {
                "path": "/{tenant_id}/user/{user_id}",
                "method": "GET",
                "identifier_override": "endpoint_user.getUser"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPathParametersClient } from \"@fern/path-parameters\";\n\nconst client = new SeedPathParametersClient({ environment: \"YOUR_BASE_URL\" });\nawait client.user.getUser({\n    user_id: \"user_id\"\n});\n"
            }
        },
        {
            "id": {
                "path": "/{tenant_id}/user/",
                "method": "POST",
                "identifier_override": "endpoint_user.createUser"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPathParametersClient } from \"@fern/path-parameters\";\n\nconst client = new SeedPathParametersClient({ environment: \"YOUR_BASE_URL\" });\nawait client.user.createUser({\n    name: \"name\",\n    tags: [\"tags\", \"tags\"]\n});\n"
            }
        },
        {
            "id": {
                "path": "/{tenant_id}/user/{user_id}",
                "method": "PATCH",
                "identifier_override": "endpoint_user.updateUser"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPathParametersClient } from \"@fern/path-parameters\";\n\nconst client = new SeedPathParametersClient({ environment: \"YOUR_BASE_URL\" });\nawait client.user.updateUser({\n    user_id: \"user_id\",\n    body: {\n        name: \"name\",\n        tags: [\"tags\", \"tags\"]\n    }\n});\n"
            }
        },
        {
            "id": {
                "path": "/{tenant_id}/user/{user_id}/search",
                "method": "GET",
                "identifier_override": "endpoint_user.searchUsers"
            },
            "snippet": {
                "type": "typescript",
                "client": "import { SeedPathParametersClient } from \"@fern/path-parameters\";\n\nconst client = new SeedPathParametersClient({ environment: \"YOUR_BASE_URL\" });\nawait client.user.searchUsers({\n    user_id: \"user_id\",\n    limit: 1\n});\n"
            }
        }
    ],
    "types": {}
}