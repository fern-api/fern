/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.undiscriminatedUnions.model.union;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.undiscriminatedUnions.core.ObjectMappers;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = NamedMetadata.Builder.class)
public final class NamedMetadata {
    private final String name;

    private final Map<String, Object> value;

    private NamedMetadata(String name, Map<String, Object> value) {
        this.name = name;
        this.value = value;
    }

    @JsonProperty("name")
    public String getName() {
        return name;
    }

    @JsonProperty("value")
    public Map<String, Object> getValue() {
        return value;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof NamedMetadata && equalTo((NamedMetadata) other);
    }

    private boolean equalTo(NamedMetadata other) {
        return name.equals(other.name) && value.equals(other.value);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.name, this.value);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        _FinalStage name(String name);

        Builder from(NamedMetadata other);
    }

    public interface _FinalStage {
        NamedMetadata build();

        _FinalStage value(Map<String, Object> value);

        _FinalStage putAllValue(Map<String, Object> value);

        _FinalStage value(String key, Object value);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, _FinalStage {
        private String name;

        private Map<String, Object> value = new LinkedHashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(NamedMetadata other) {
            name(other.getName());
            value(other.getValue());
            return this;
        }

        @java.lang.Override
        @JsonSetter("name")
        public _FinalStage name(String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage value(String key, Object value) {
            this.value.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllValue(Map<String, Object> value) {
            this.value.putAll(value);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "value", nulls = Nulls.SKIP)
        public _FinalStage value(Map<String, Object> value) {
            this.value.clear();
            this.value.putAll(value);
            return this;
        }

        @java.lang.Override
        public NamedMetadata build() {
            return new NamedMetadata(name, value);
        }
    }
}
