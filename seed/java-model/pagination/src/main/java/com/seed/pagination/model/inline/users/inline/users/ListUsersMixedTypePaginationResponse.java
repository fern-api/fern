/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.pagination.model.inline.users.inline.users;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.pagination.core.ObjectMappers;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ListUsersMixedTypePaginationResponse.Builder.class)
public final class ListUsersMixedTypePaginationResponse {
    private final String next;

    private final Users data;

    private ListUsersMixedTypePaginationResponse(String next, Users data) {
        this.next = next;
        this.data = data;
    }

    @JsonProperty("next")
    public String getNext() {
        return next;
    }

    @JsonProperty("data")
    public Users getData() {
        return data;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ListUsersMixedTypePaginationResponse
                && equalTo((ListUsersMixedTypePaginationResponse) other);
    }

    private boolean equalTo(ListUsersMixedTypePaginationResponse other) {
        return next.equals(other.next) && data.equals(other.data);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.next, this.data);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NextStage builder() {
        return new Builder();
    }

    public interface NextStage {
        DataStage next(String next);

        Builder from(ListUsersMixedTypePaginationResponse other);
    }

    public interface DataStage {
        _FinalStage data(Users data);
    }

    public interface _FinalStage {
        ListUsersMixedTypePaginationResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NextStage, DataStage, _FinalStage {
        private String next;

        private Users data;

        private Builder() {}

        @java.lang.Override
        public Builder from(ListUsersMixedTypePaginationResponse other) {
            next(other.getNext());
            data(other.getData());
            return this;
        }

        @java.lang.Override
        @JsonSetter("next")
        public DataStage next(String next) {
            this.next = Objects.requireNonNull(next, "next must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("data")
        public _FinalStage data(Users data) {
            this.data = Objects.requireNonNull(data, "data must not be null");
            return this;
        }

        @java.lang.Override
        public ListUsersMixedTypePaginationResponse build() {
            return new ListUsersMixedTypePaginationResponse(next, data);
        }
    }
}
