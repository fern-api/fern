/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.clientSideParams.model.types;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.clientSideParams.core.ObjectMappers;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateUserRequest.Builder.class)
public final class CreateUserRequest {
    private final String email;

    private final Optional<Boolean> emailVerified;

    private final Optional<String> username;

    private final Optional<String> password;

    private final Optional<String> phoneNumber;

    private final Optional<Boolean> phoneVerified;

    private final Optional<Map<String, Object>> userMetadata;

    private final Optional<Map<String, Object>> appMetadata;

    private final String connection;

    private CreateUserRequest(
            String email,
            Optional<Boolean> emailVerified,
            Optional<String> username,
            Optional<String> password,
            Optional<String> phoneNumber,
            Optional<Boolean> phoneVerified,
            Optional<Map<String, Object>> userMetadata,
            Optional<Map<String, Object>> appMetadata,
            String connection) {
        this.email = email;
        this.emailVerified = emailVerified;
        this.username = username;
        this.password = password;
        this.phoneNumber = phoneNumber;
        this.phoneVerified = phoneVerified;
        this.userMetadata = userMetadata;
        this.appMetadata = appMetadata;
        this.connection = connection;
    }

    @JsonProperty("email")
    public String getEmail() {
        return email;
    }

    @JsonProperty("email_verified")
    public Optional<Boolean> getEmailVerified() {
        return emailVerified;
    }

    @JsonProperty("username")
    public Optional<String> getUsername() {
        return username;
    }

    @JsonProperty("password")
    public Optional<String> getPassword() {
        return password;
    }

    @JsonProperty("phone_number")
    public Optional<String> getPhoneNumber() {
        return phoneNumber;
    }

    @JsonProperty("phone_verified")
    public Optional<Boolean> getPhoneVerified() {
        return phoneVerified;
    }

    @JsonProperty("user_metadata")
    public Optional<Map<String, Object>> getUserMetadata() {
        return userMetadata;
    }

    @JsonProperty("app_metadata")
    public Optional<Map<String, Object>> getAppMetadata() {
        return appMetadata;
    }

    @JsonProperty("connection")
    public String getConnection() {
        return connection;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateUserRequest && equalTo((CreateUserRequest) other);
    }

    private boolean equalTo(CreateUserRequest other) {
        return email.equals(other.email)
                && emailVerified.equals(other.emailVerified)
                && username.equals(other.username)
                && password.equals(other.password)
                && phoneNumber.equals(other.phoneNumber)
                && phoneVerified.equals(other.phoneVerified)
                && userMetadata.equals(other.userMetadata)
                && appMetadata.equals(other.appMetadata)
                && connection.equals(other.connection);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.email,
                this.emailVerified,
                this.username,
                this.password,
                this.phoneNumber,
                this.phoneVerified,
                this.userMetadata,
                this.appMetadata,
                this.connection);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EmailStage builder() {
        return new Builder();
    }

    public interface EmailStage {
        ConnectionStage email(String email);

        Builder from(CreateUserRequest other);
    }

    public interface ConnectionStage {
        _FinalStage connection(String connection);
    }

    public interface _FinalStage {
        CreateUserRequest build();

        _FinalStage emailVerified(Optional<Boolean> emailVerified);

        _FinalStage emailVerified(Boolean emailVerified);

        _FinalStage username(Optional<String> username);

        _FinalStage username(String username);

        _FinalStage password(Optional<String> password);

        _FinalStage password(String password);

        _FinalStage phoneNumber(Optional<String> phoneNumber);

        _FinalStage phoneNumber(String phoneNumber);

        _FinalStage phoneVerified(Optional<Boolean> phoneVerified);

        _FinalStage phoneVerified(Boolean phoneVerified);

        _FinalStage userMetadata(Optional<Map<String, Object>> userMetadata);

        _FinalStage userMetadata(Map<String, Object> userMetadata);

        _FinalStage appMetadata(Optional<Map<String, Object>> appMetadata);

        _FinalStage appMetadata(Map<String, Object> appMetadata);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements EmailStage, ConnectionStage, _FinalStage {
        private String email;

        private String connection;

        private Optional<Map<String, Object>> appMetadata = Optional.empty();

        private Optional<Map<String, Object>> userMetadata = Optional.empty();

        private Optional<Boolean> phoneVerified = Optional.empty();

        private Optional<String> phoneNumber = Optional.empty();

        private Optional<String> password = Optional.empty();

        private Optional<String> username = Optional.empty();

        private Optional<Boolean> emailVerified = Optional.empty();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateUserRequest other) {
            email(other.getEmail());
            emailVerified(other.getEmailVerified());
            username(other.getUsername());
            password(other.getPassword());
            phoneNumber(other.getPhoneNumber());
            phoneVerified(other.getPhoneVerified());
            userMetadata(other.getUserMetadata());
            appMetadata(other.getAppMetadata());
            connection(other.getConnection());
            return this;
        }

        @java.lang.Override
        @JsonSetter("email")
        public ConnectionStage email(String email) {
            this.email = Objects.requireNonNull(email, "email must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("connection")
        public _FinalStage connection(String connection) {
            this.connection = Objects.requireNonNull(connection, "connection must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage appMetadata(Map<String, Object> appMetadata) {
            this.appMetadata = Optional.ofNullable(appMetadata);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "app_metadata", nulls = Nulls.SKIP)
        public _FinalStage appMetadata(Optional<Map<String, Object>> appMetadata) {
            this.appMetadata = appMetadata;
            return this;
        }

        @java.lang.Override
        public _FinalStage userMetadata(Map<String, Object> userMetadata) {
            this.userMetadata = Optional.ofNullable(userMetadata);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "user_metadata", nulls = Nulls.SKIP)
        public _FinalStage userMetadata(Optional<Map<String, Object>> userMetadata) {
            this.userMetadata = userMetadata;
            return this;
        }

        @java.lang.Override
        public _FinalStage phoneVerified(Boolean phoneVerified) {
            this.phoneVerified = Optional.ofNullable(phoneVerified);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "phone_verified", nulls = Nulls.SKIP)
        public _FinalStage phoneVerified(Optional<Boolean> phoneVerified) {
            this.phoneVerified = phoneVerified;
            return this;
        }

        @java.lang.Override
        public _FinalStage phoneNumber(String phoneNumber) {
            this.phoneNumber = Optional.ofNullable(phoneNumber);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "phone_number", nulls = Nulls.SKIP)
        public _FinalStage phoneNumber(Optional<String> phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        @java.lang.Override
        public _FinalStage password(String password) {
            this.password = Optional.ofNullable(password);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "password", nulls = Nulls.SKIP)
        public _FinalStage password(Optional<String> password) {
            this.password = password;
            return this;
        }

        @java.lang.Override
        public _FinalStage username(String username) {
            this.username = Optional.ofNullable(username);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "username", nulls = Nulls.SKIP)
        public _FinalStage username(Optional<String> username) {
            this.username = username;
            return this;
        }

        @java.lang.Override
        public _FinalStage emailVerified(Boolean emailVerified) {
            this.emailVerified = Optional.ofNullable(emailVerified);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "email_verified", nulls = Nulls.SKIP)
        public _FinalStage emailVerified(Optional<Boolean> emailVerified) {
            this.emailVerified = emailVerified;
            return this;
        }

        @java.lang.Override
        public CreateUserRequest build() {
            return new CreateUserRequest(
                    email,
                    emailVerified,
                    username,
                    password,
                    phoneNumber,
                    phoneVerified,
                    userMetadata,
                    appMetadata,
                    connection);
        }
    }
}
