/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.errors.model.simple;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.errors.core.ObjectMappers;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = FooResponse.Builder.class)
public final class FooResponse {
    private final String bar;

    private FooResponse(String bar) {
        this.bar = bar;
    }

    @JsonProperty("bar")
    public String getBar() {
        return bar;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof FooResponse && equalTo((FooResponse) other);
    }

    private boolean equalTo(FooResponse other) {
        return bar.equals(other.bar);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.bar);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BarStage builder() {
        return new Builder();
    }

    public interface BarStage {
        _FinalStage bar(String bar);

        Builder from(FooResponse other);
    }

    public interface _FinalStage {
        FooResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BarStage, _FinalStage {
        private String bar;

        private Builder() {}

        @java.lang.Override
        public Builder from(FooResponse other) {
            bar(other.getBar());
            return this;
        }

        @java.lang.Override
        @JsonSetter("bar")
        public _FinalStage bar(String bar) {
            this.bar = Objects.requireNonNull(bar, "bar must not be null");
            return this;
        }

        @java.lang.Override
        public FooResponse build() {
            return new FooResponse(bar);
        }
    }
}
