/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.errors.model.commons;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.errors.core.ObjectMappers;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ErrorBody.Builder.class)
public final class ErrorBody {
    private final String message;

    private final int code;

    private ErrorBody(String message, int code) {
        this.message = message;
        this.code = code;
    }

    @JsonProperty("message")
    public String getMessage() {
        return message;
    }

    @JsonProperty("code")
    public int getCode() {
        return code;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ErrorBody && equalTo((ErrorBody) other);
    }

    private boolean equalTo(ErrorBody other) {
        return message.equals(other.message) && code == other.code;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.message, this.code);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MessageStage builder() {
        return new Builder();
    }

    public interface MessageStage {
        CodeStage message(String message);

        Builder from(ErrorBody other);
    }

    public interface CodeStage {
        _FinalStage code(int code);
    }

    public interface _FinalStage {
        ErrorBody build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements MessageStage, CodeStage, _FinalStage {
        private String message;

        private int code;

        private Builder() {}

        @java.lang.Override
        public Builder from(ErrorBody other) {
            message(other.getMessage());
            code(other.getCode());
            return this;
        }

        @java.lang.Override
        @JsonSetter("message")
        public CodeStage message(String message) {
            this.message = Objects.requireNonNull(message, "message must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("code")
        public _FinalStage code(int code) {
            this.code = code;
            return this;
        }

        @java.lang.Override
        public ErrorBody build() {
            return new ErrorBody(message, code);
        }
    }
}
