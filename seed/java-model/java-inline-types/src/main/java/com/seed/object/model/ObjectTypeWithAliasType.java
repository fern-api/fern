/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.object.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.object.core.ObjectMappers;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ObjectTypeWithAliasType.Builder.class)
public final class ObjectTypeWithAliasType {
    private final AliasPropertyType prop;

    private ObjectTypeWithAliasType(AliasPropertyType prop) {
        this.prop = prop;
    }

    @JsonProperty("prop")
    public AliasPropertyType getProp() {
        return prop;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ObjectTypeWithAliasType && equalTo((ObjectTypeWithAliasType) other);
    }

    private boolean equalTo(ObjectTypeWithAliasType other) {
        return prop.equals(other.prop);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.prop);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PropStage builder() {
        return new Builder();
    }

    public interface PropStage {
        _FinalStage prop(AliasPropertyType prop);

        Builder from(ObjectTypeWithAliasType other);
    }

    public interface _FinalStage {
        ObjectTypeWithAliasType build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PropStage, _FinalStage {
        private AliasPropertyType prop;

        private Builder() {}

        @java.lang.Override
        public Builder from(ObjectTypeWithAliasType other) {
            prop(other.getProp());
            return this;
        }

        @java.lang.Override
        @JsonSetter("prop")
        public _FinalStage prop(AliasPropertyType prop) {
            this.prop = Objects.requireNonNull(prop, "prop must not be null");
            return this;
        }

        @java.lang.Override
        public ObjectTypeWithAliasType build() {
            return new ObjectTypeWithAliasType(prop);
        }
    }
}
