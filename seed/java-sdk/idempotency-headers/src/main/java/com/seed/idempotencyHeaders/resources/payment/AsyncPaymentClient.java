/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.idempotencyHeaders.resources.payment;

import com.seed.idempotencyHeaders.core.ClientOptions;
import com.seed.idempotencyHeaders.core.IdempotentRequestOptions;
import com.seed.idempotencyHeaders.core.RequestOptions;
import com.seed.idempotencyHeaders.resources.payment.requests.CreatePaymentRequest;
import java.util.UUID;
import java.util.concurrent.CompletableFuture;

public class AsyncPaymentClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawPaymentClient rawClient;

    public AsyncPaymentClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawPaymentClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawPaymentClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<UUID> create(CreatePaymentRequest request) {
        return this.rawClient.create(request).thenApply(response -> response.body());
    }

    public CompletableFuture<UUID> create(CreatePaymentRequest request, IdempotentRequestOptions requestOptions) {
        return this.rawClient.create(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String paymentId) {
        return this.rawClient.delete(paymentId).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> delete(String paymentId, RequestOptions requestOptions) {
        return this.rawClient.delete(paymentId, requestOptions).thenApply(response -> response.body());
    }
}
