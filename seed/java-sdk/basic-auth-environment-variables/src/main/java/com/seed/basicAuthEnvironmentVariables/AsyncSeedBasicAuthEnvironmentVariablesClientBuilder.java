/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.basicAuthEnvironmentVariables;

import com.seed.basicAuthEnvironmentVariables.core.ClientOptions;
import com.seed.basicAuthEnvironmentVariables.core.Environment;
import java.util.Base64;
import okhttp3.OkHttpClient;

public final class AsyncSeedBasicAuthEnvironmentVariablesClientBuilder {
    private ClientOptions.Builder clientOptionsBuilder = ClientOptions.builder();

    private String username = System.getenv("USERNAME");

    private String accessToken = System.getenv("PASSWORD");

    private Environment environment;

    public AsyncSeedBasicAuthEnvironmentVariablesClientBuilder credentials(String username, String accessToken) {
        this.username = username;
        this.accessToken = accessToken;
        return this;
    }

    public AsyncSeedBasicAuthEnvironmentVariablesClientBuilder url(String url) {
        this.environment = Environment.custom(url);
        return this;
    }

    /**
     * Sets the timeout (in seconds) for the client. Defaults to 60 seconds.
     */
    public AsyncSeedBasicAuthEnvironmentVariablesClientBuilder timeout(int timeout) {
        this.clientOptionsBuilder.timeout(timeout);
        return this;
    }

    /**
     * Sets the maximum number of retries for the client. Defaults to 2 retries.
     */
    public AsyncSeedBasicAuthEnvironmentVariablesClientBuilder maxRetries(int maxRetries) {
        this.clientOptionsBuilder.maxRetries(maxRetries);
        return this;
    }

    /**
     * Sets the underlying OkHttp client
     */
    public AsyncSeedBasicAuthEnvironmentVariablesClientBuilder httpClient(OkHttpClient httpClient) {
        this.clientOptionsBuilder.httpClient(httpClient);
        return this;
    }

    public AsyncSeedBasicAuthEnvironmentVariablesClient build() {
        if (this.username == null) {
            throw new RuntimeException("Please provide username or set the USERNAME environment variable.");
        }
        if (this.accessToken == null) {
            throw new RuntimeException("Please provide accessToken or set the PASSWORD environment variable.");
        }
        String unencodedToken = username + ":" + accessToken;
        String encodedToken = Base64.getEncoder().encodeToString(unencodedToken.getBytes());
        this.clientOptionsBuilder.addHeader("Authorization", "Bearer " + encodedToken);
        clientOptionsBuilder.environment(this.environment);
        return new AsyncSeedBasicAuthEnvironmentVariablesClient(clientOptionsBuilder.build());
    }
}
