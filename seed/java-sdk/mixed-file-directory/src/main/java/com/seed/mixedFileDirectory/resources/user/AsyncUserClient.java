/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.mixedFileDirectory.resources.user;

import com.seed.mixedFileDirectory.core.ClientOptions;
import com.seed.mixedFileDirectory.core.RequestOptions;
import com.seed.mixedFileDirectory.core.Suppliers;
import com.seed.mixedFileDirectory.resources.user.events.AsyncEventsClient;
import com.seed.mixedFileDirectory.resources.user.requests.ListUsersRequest;
import com.seed.mixedFileDirectory.resources.user.types.User;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import java.util.function.Supplier;

public class AsyncUserClient {
    protected final ClientOptions clientOptions;

    private final RawAsyncUserClient rawClient;

    protected final Supplier<AsyncEventsClient> eventsClient;

    public AsyncUserClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawAsyncUserClient(clientOptions);
        this.eventsClient = Suppliers.memoize(() -> new AsyncEventsClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawAsyncUserClient withRawResponses() {
        return this.rawClient;
    }

    public CompletableFuture<List<User>> list() {
        return this.rawClient.list().thenApply(response -> response.body());
    }

    public CompletableFuture<List<User>> list(ListUsersRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<User>> list(ListUsersRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }

    public AsyncEventsClient events() {
        return this.eventsClient.get();
    }
}
