{
    "endpoints": [
        {
            "example_identifier": "b07bc8d3",
            "id": {
                "method": "POST",
                "path": "/container/list-of-primitives",
                "identifier_override": "endpoint_endpoints/container.getAndReturnListOfPrimitives"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnListOfPrimitives(\n            new ArrayList<String>(\n                Arrays.asList(\"string\", \"string\")\n            )\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnListOfPrimitives(\n            new ArrayList<String>(\n                Arrays.asList(\"string\", \"string\")\n            )\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "d92e4709",
            "id": {
                "method": "POST",
                "path": "/container/list-of-objects",
                "identifier_override": "endpoint_endpoints/container.getAndReturnListOfObjects"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnListOfObjects(\n            new ArrayList<ObjectWithRequiredField>(\n                Arrays.asList(\n                    ObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .build(),\n                    ObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .build()\n                )\n            )\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnListOfObjects(\n            new ArrayList<ObjectWithRequiredField>(\n                Arrays.asList(\n                    ObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .build(),\n                    ObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .build()\n                )\n            )\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "638c8d5f",
            "id": {
                "method": "POST",
                "path": "/container/set-of-primitives",
                "identifier_override": "endpoint_endpoints/container.getAndReturnSetOfPrimitives"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.Arrays;\nimport java.util.HashSet;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnSetOfPrimitives(\n            new HashSet<String>(\n                Arrays.asList(\"string\")\n            )\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.Arrays;\nimport java.util.HashSet;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnSetOfPrimitives(\n            new HashSet<String>(\n                Arrays.asList(\"string\")\n            )\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "eebdd933",
            "id": {
                "method": "POST",
                "path": "/container/set-of-objects",
                "identifier_override": "endpoint_endpoints/container.getAndReturnSetOfObjects"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.Arrays;\nimport java.util.HashSet;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnSetOfObjects(\n            new HashSet<ObjectWithRequiredField>(\n                Arrays.asList(\n                    ObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .build()\n                )\n            )\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.Arrays;\nimport java.util.HashSet;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnSetOfObjects(\n            new HashSet<ObjectWithRequiredField>(\n                Arrays.asList(\n                    ObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .build()\n                )\n            )\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "baa0e67f",
            "id": {
                "method": "POST",
                "path": "/container/map-prim-to-prim",
                "identifier_override": "endpoint_endpoints/container.getAndReturnMapPrimToPrim"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.HashMap;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnMapPrimToPrim(\n            new HashMap<String, String>() {{\n                put(\"string\", \"string\");\n            }}\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.HashMap;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnMapPrimToPrim(\n            new HashMap<String, String>() {{\n                put(\"string\", \"string\");\n            }}\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "e4c52833",
            "id": {
                "method": "POST",
                "path": "/container/map-prim-to-object",
                "identifier_override": "endpoint_endpoints/container.getAndReturnMapOfPrimToObject"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.HashMap;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnMapOfPrimToObject(\n            new HashMap<String, ObjectWithRequiredField>() {{\n                put(\"string\", ObjectWithRequiredField\n                    .builder()\n                    .string(\"string\")\n                    .build());\n            }}\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.HashMap;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnMapOfPrimToObject(\n            new HashMap<String, ObjectWithRequiredField>() {{\n                put(\"string\", ObjectWithRequiredField\n                    .builder()\n                    .string(\"string\")\n                    .build());\n            }}\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "c934fddb",
            "id": {
                "method": "POST",
                "path": "/container/opt-objects",
                "identifier_override": "endpoint_endpoints/container.getAndReturnOptional"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.Optional;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnOptional(\n            Optional.of(\n                ObjectWithRequiredField\n                    .builder()\n                    .string(\"string\")\n                    .build()\n            )\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\nimport java.util.Optional;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().container().getAndReturnOptional(\n            Optional.of(\n                ObjectWithRequiredField\n                    .builder()\n                    .string(\"string\")\n                    .build()\n            )\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "f41660ad",
            "id": {
                "method": "POST",
                "path": "/foo/bar",
                "identifier_override": "endpoint_endpoints/content-type.postJsonPatchContentType"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().contentType().postJsonPatchContentType(\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().contentType().postJsonPatchContentType(\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "f41660ad",
            "id": {
                "method": "POST",
                "path": "/foo/baz",
                "identifier_override": "endpoint_endpoints/content-type.postJsonPatchContentWithCharsetType"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().contentType().postJsonPatchContentWithCharsetType(\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().contentType().postJsonPatchContentWithCharsetType(\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "1b0a2a63",
            "id": {
                "method": "POST",
                "path": "/enum",
                "identifier_override": "endpoint_endpoints/enum.getAndReturnEnum"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.enum_.types.WeatherReport;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().enum_().getAndReturnEnum(WeatherReport.SUNNY);\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.enum_.types.WeatherReport;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().enum_().getAndReturnEnum(WeatherReport.SUNNY);\n    }\n}\n"
            }
        },
        {
            "example_identifier": "411ffbb0",
            "id": {
                "method": "GET",
                "path": "/http-methods/{id}",
                "identifier_override": "endpoint_endpoints/http-methods.testGet"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testGet(\"id\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testGet(\"id\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "d304bfe2",
            "id": {
                "method": "POST",
                "path": "/http-methods",
                "identifier_override": "endpoint_endpoints/http-methods.testPost"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testPost(\n            ObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testPost(\n            ObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "7d253445",
            "id": {
                "method": "PUT",
                "path": "/http-methods/{id}",
                "identifier_override": "endpoint_endpoints/http-methods.testPut"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testPut(\n            \"id\",\n            ObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testPut(\n            \"id\",\n            ObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "18290aac",
            "id": {
                "method": "PATCH",
                "path": "/http-methods/{id}",
                "identifier_override": "endpoint_endpoints/http-methods.testPatch"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testPatch(\n            \"id\",\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testPatch(\n            \"id\",\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "2399691",
            "id": {
                "method": "DELETE",
                "path": "/http-methods/{id}",
                "identifier_override": "endpoint_endpoints/http-methods.testDelete"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testDelete(\"id\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().httpMethods().testDelete(\"id\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "9328fcef",
            "id": {
                "method": "POST",
                "path": "/object/get-and-return-with-optional-field",
                "identifier_override": "endpoint_endpoints/object.getAndReturnWithOptionalField"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnWithOptionalField(\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnWithOptionalField(\n            ObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .long_(1000000L)\n                .double_(1.1)\n                .bool(true)\n                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .date(\"2023-01-15\")\n                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                .list(\n                    new ArrayList<String>(\n                        Arrays.asList(\"list\", \"list\")\n                    )\n                )\n                .set(\n                    new HashSet<String>(\n                        Arrays.asList(\"set\")\n                    )\n                )\n                .map(\n                    new HashMap<Integer, String>() {{\n                        put(1, \"map\");\n                    }}\n                )\n                .bigint(new BigInteger(\"1000000\"))\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "5efd338b",
            "id": {
                "method": "POST",
                "path": "/object/get-and-return-with-required-field",
                "identifier_override": "endpoint_endpoints/object.getAndReturnWithRequiredField"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnWithRequiredField(\n            ObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnWithRequiredField(\n            ObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "b0afae0f",
            "id": {
                "method": "POST",
                "path": "/object/get-and-return-with-map-of-map",
                "identifier_override": "endpoint_endpoints/object.getAndReturnWithMapOfMap"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithMapOfMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnWithMapOfMap(\n            ObjectWithMapOfMap\n                .builder()\n                .map(\n                    new HashMap<String, Map<String, String>>() {{\n                        put(\"map\", new HashMap<String, String>() {{\n                            put(\"map\", \"map\");\n                        }});\n                    }}\n                )\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithMapOfMap;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnWithMapOfMap(\n            ObjectWithMapOfMap\n                .builder()\n                .map(\n                    new HashMap<String, Map<String, String>>() {{\n                        put(\"map\", new HashMap<String, String>() {{\n                            put(\"map\", \"map\");\n                        }});\n                    }}\n                )\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "fa8ac13b",
            "id": {
                "method": "POST",
                "path": "/object/get-and-return-nested-with-optional-field",
                "identifier_override": "endpoint_endpoints/object.getAndReturnNestedWithOptionalField"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.NestedObjectWithOptionalField;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnNestedWithOptionalField(\n            NestedObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .nestedObject(\n                    ObjectWithOptionalField\n                        .builder()\n                        .string(\"string\")\n                        .integer(1)\n                        .long_(1000000L)\n                        .double_(1.1)\n                        .bool(true)\n                        .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                        .date(\"2023-01-15\")\n                        .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                        .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                        .list(\n                            new ArrayList<String>(\n                                Arrays.asList(\"list\", \"list\")\n                            )\n                        )\n                        .set(\n                            new HashSet<String>(\n                                Arrays.asList(\"set\")\n                            )\n                        )\n                        .map(\n                            new HashMap<Integer, String>() {{\n                                put(1, \"map\");\n                            }}\n                        )\n                        .bigint(new BigInteger(\"1000000\"))\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.NestedObjectWithOptionalField;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnNestedWithOptionalField(\n            NestedObjectWithOptionalField\n                .builder()\n                .string(\"string\")\n                .nestedObject(\n                    ObjectWithOptionalField\n                        .builder()\n                        .string(\"string\")\n                        .integer(1)\n                        .long_(1000000L)\n                        .double_(1.1)\n                        .bool(true)\n                        .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                        .date(\"2023-01-15\")\n                        .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                        .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                        .list(\n                            new ArrayList<String>(\n                                Arrays.asList(\"list\", \"list\")\n                            )\n                        )\n                        .set(\n                            new HashSet<String>(\n                                Arrays.asList(\"set\")\n                            )\n                        )\n                        .map(\n                            new HashMap<Integer, String>() {{\n                                put(1, \"map\");\n                            }}\n                        )\n                        .bigint(new BigInteger(\"1000000\"))\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "eb17cdee",
            "id": {
                "method": "POST",
                "path": "/object/get-and-return-nested-with-required-field/{string}",
                "identifier_override": "endpoint_endpoints/object.getAndReturnNestedWithRequiredField"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.NestedObjectWithRequiredField;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnNestedWithRequiredField(\n            \"string\",\n            NestedObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .nestedObject(\n                    ObjectWithOptionalField\n                        .builder()\n                        .string(\"string\")\n                        .integer(1)\n                        .long_(1000000L)\n                        .double_(1.1)\n                        .bool(true)\n                        .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                        .date(\"2023-01-15\")\n                        .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                        .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                        .list(\n                            new ArrayList<String>(\n                                Arrays.asList(\"list\", \"list\")\n                            )\n                        )\n                        .set(\n                            new HashSet<String>(\n                                Arrays.asList(\"set\")\n                            )\n                        )\n                        .map(\n                            new HashMap<Integer, String>() {{\n                                put(1, \"map\");\n                            }}\n                        )\n                        .bigint(new BigInteger(\"1000000\"))\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.NestedObjectWithRequiredField;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnNestedWithRequiredField(\n            \"string\",\n            NestedObjectWithRequiredField\n                .builder()\n                .string(\"string\")\n                .nestedObject(\n                    ObjectWithOptionalField\n                        .builder()\n                        .string(\"string\")\n                        .integer(1)\n                        .long_(1000000L)\n                        .double_(1.1)\n                        .bool(true)\n                        .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                        .date(\"2023-01-15\")\n                        .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                        .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                        .list(\n                            new ArrayList<String>(\n                                Arrays.asList(\"list\", \"list\")\n                            )\n                        )\n                        .set(\n                            new HashSet<String>(\n                                Arrays.asList(\"set\")\n                            )\n                        )\n                        .map(\n                            new HashMap<Integer, String>() {{\n                                put(1, \"map\");\n                            }}\n                        )\n                        .bigint(new BigInteger(\"1000000\"))\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "b2c5af3b",
            "id": {
                "method": "POST",
                "path": "/object/get-and-return-nested-with-required-field-list",
                "identifier_override": "endpoint_endpoints/object.getAndReturnNestedWithRequiredFieldAsList"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.NestedObjectWithRequiredField;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnNestedWithRequiredFieldAsList(\n            new ArrayList<NestedObjectWithRequiredField>(\n                Arrays.asList(\n                    NestedObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .nestedObject(\n                            ObjectWithOptionalField\n                                .builder()\n                                .string(\"string\")\n                                .integer(1)\n                                .long_(1000000L)\n                                .double_(1.1)\n                                .bool(true)\n                                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                                .date(\"2023-01-15\")\n                                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                                .list(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"list\", \"list\")\n                                    )\n                                )\n                                .set(\n                                    new HashSet<String>(\n                                        Arrays.asList(\"set\")\n                                    )\n                                )\n                                .map(\n                                    new HashMap<Integer, String>() {{\n                                        put(1, \"map\");\n                                    }}\n                                )\n                                .bigint(new BigInteger(\"1000000\"))\n                                .build()\n                        )\n                        .build(),\n                    NestedObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .nestedObject(\n                            ObjectWithOptionalField\n                                .builder()\n                                .string(\"string\")\n                                .integer(1)\n                                .long_(1000000L)\n                                .double_(1.1)\n                                .bool(true)\n                                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                                .date(\"2023-01-15\")\n                                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                                .list(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"list\", \"list\")\n                                    )\n                                )\n                                .set(\n                                    new HashSet<String>(\n                                        Arrays.asList(\"set\")\n                                    )\n                                )\n                                .map(\n                                    new HashMap<Integer, String>() {{\n                                        put(1, \"map\");\n                                    }}\n                                )\n                                .bigint(new BigInteger(\"1000000\"))\n                                .build()\n                        )\n                        .build()\n                )\n            )\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.object.types.NestedObjectWithRequiredField;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().object().getAndReturnNestedWithRequiredFieldAsList(\n            new ArrayList<NestedObjectWithRequiredField>(\n                Arrays.asList(\n                    NestedObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .nestedObject(\n                            ObjectWithOptionalField\n                                .builder()\n                                .string(\"string\")\n                                .integer(1)\n                                .long_(1000000L)\n                                .double_(1.1)\n                                .bool(true)\n                                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                                .date(\"2023-01-15\")\n                                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                                .list(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"list\", \"list\")\n                                    )\n                                )\n                                .set(\n                                    new HashSet<String>(\n                                        Arrays.asList(\"set\")\n                                    )\n                                )\n                                .map(\n                                    new HashMap<Integer, String>() {{\n                                        put(1, \"map\");\n                                    }}\n                                )\n                                .bigint(new BigInteger(\"1000000\"))\n                                .build()\n                        )\n                        .build(),\n                    NestedObjectWithRequiredField\n                        .builder()\n                        .string(\"string\")\n                        .nestedObject(\n                            ObjectWithOptionalField\n                                .builder()\n                                .string(\"string\")\n                                .integer(1)\n                                .long_(1000000L)\n                                .double_(1.1)\n                                .bool(true)\n                                .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                                .date(\"2023-01-15\")\n                                .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                                .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                                .list(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"list\", \"list\")\n                                    )\n                                )\n                                .set(\n                                    new HashSet<String>(\n                                        Arrays.asList(\"set\")\n                                    )\n                                )\n                                .map(\n                                    new HashMap<Integer, String>() {{\n                                        put(1, \"map\");\n                                    }}\n                                )\n                                .bigint(new BigInteger(\"1000000\"))\n                                .build()\n                        )\n                        .build()\n                )\n            )\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "88011d74",
            "id": {
                "method": "GET",
                "path": "/params/path/{param}",
                "identifier_override": "endpoint_endpoints/params.getWithPath"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPath(\"param\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPath(\"param\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "88011d74",
            "id": {
                "method": "GET",
                "path": "/params/path/{param}",
                "identifier_override": "endpoint_endpoints/params.getWithInlinePath"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPath(\"param\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPath(\"param\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "d5633d39",
            "id": {
                "method": "GET",
                "path": "/params",
                "identifier_override": "endpoint_endpoints/params.getWithQuery"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithQuery(\n            GetWithQuery\n                .builder()\n                .query(\"query\")\n                .number(1)\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithQuery(\n            GetWithQuery\n                .builder()\n                .query(\"query\")\n                .number(1)\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "2588398f",
            "id": {
                "method": "GET",
                "path": "/params",
                "identifier_override": "endpoint_endpoints/params.getWithAllowMultipleQuery"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithQuery(\n            GetWithQuery\n                .builder()\n                .query(\"query\")\n                .number(1)\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithQuery(\n            GetWithQuery\n                .builder()\n                .query(\"query\")\n                .number(1)\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "61cdcffe",
            "id": {
                "method": "GET",
                "path": "/params/path-query/{param}",
                "identifier_override": "endpoint_endpoints/params.getWithPathAndQuery"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPathAndQuery(\n            \"param\",\n            GetWithPathAndQuery\n                .builder()\n                .query(\"query\")\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPathAndQuery(\n            \"param\",\n            GetWithPathAndQuery\n                .builder()\n                .query(\"query\")\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "61cdcffe",
            "id": {
                "method": "GET",
                "path": "/params/path-query/{param}",
                "identifier_override": "endpoint_endpoints/params.getWithInlinePathAndQuery"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPathAndQuery(\n            \"param\",\n            GetWithPathAndQuery\n                .builder()\n                .query(\"query\")\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQuery;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().getWithPathAndQuery(\n            \"param\",\n            GetWithPathAndQuery\n                .builder()\n                .query(\"query\")\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "72c83546",
            "id": {
                "method": "PUT",
                "path": "/params/path/{param}",
                "identifier_override": "endpoint_endpoints/params.modifyWithPath"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().modifyWithPath(\"param\", \"string\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().modifyWithPath(\"param\", \"string\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "72c83546",
            "id": {
                "method": "PUT",
                "path": "/params/path/{param}",
                "identifier_override": "endpoint_endpoints/params.modifyWithInlinePath"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().modifyWithPath(\"param\", \"string\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().params().modifyWithPath(\"param\", \"string\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "d8492cb1",
            "id": {
                "method": "POST",
                "path": "/primitive/string",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnString"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnString(\"string\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnString(\"string\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "44f8b59b",
            "id": {
                "method": "POST",
                "path": "/primitive/integer",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnInt"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnInt(1);\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnInt(1);\n    }\n}\n"
            }
        },
        {
            "example_identifier": "6757feff",
            "id": {
                "method": "POST",
                "path": "/primitive/long",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnLong"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnLong(1000000L);\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnLong(1000000L);\n    }\n}\n"
            }
        },
        {
            "example_identifier": "9c532ef",
            "id": {
                "method": "POST",
                "path": "/primitive/double",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnDouble"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnDouble(1.1);\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnDouble(1.1);\n    }\n}\n"
            }
        },
        {
            "example_identifier": "653ac8bb",
            "id": {
                "method": "POST",
                "path": "/primitive/boolean",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnBool"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnBool(true);\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnBool(true);\n    }\n}\n"
            }
        },
        {
            "example_identifier": "c4328e7f",
            "id": {
                "method": "POST",
                "path": "/primitive/datetime",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnDatetime"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.time.OffsetDateTime;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnDatetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"));\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.time.OffsetDateTime;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnDatetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"));\n    }\n}\n"
            }
        },
        {
            "example_identifier": "aa994713",
            "id": {
                "method": "POST",
                "path": "/primitive/date",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnDate"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnDate(\"2023-01-15\");\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnDate(\"2023-01-15\");\n    }\n}\n"
            }
        },
        {
            "example_identifier": "c723c473",
            "id": {
                "method": "POST",
                "path": "/primitive/uuid",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnUUID"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnUuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"));\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnUuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"));\n    }\n}\n"
            }
        },
        {
            "example_identifier": "51535e73",
            "id": {
                "method": "POST",
                "path": "/primitive/base64",
                "identifier_override": "endpoint_endpoints/primitive.getAndReturnBase64"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnBase64(\"SGVsbG8gd29ybGQh\".getBytes());\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().primitive().getAndReturnBase64(\"SGVsbG8gd29ybGQh\".getBytes());\n    }\n}\n"
            }
        },
        {
            "example_identifier": "38f7224c",
            "id": {
                "method": "PUT",
                "path": "/{id}",
                "identifier_override": "endpoint_endpoints/put.add"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.put.requests.PutRequest;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().put().add(\n            PutRequest\n                .builder()\n                .id(\"id\")\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.endpoints.put.requests.PutRequest;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().put().add(\n            PutRequest\n                .builder()\n                .id(\"id\")\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "26f77cef",
            "id": {
                "method": "POST",
                "path": "/union",
                "identifier_override": "endpoint_endpoints/union.getAndReturnUnion"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.union.types.Animal;\nimport com.seed.exhaustive.resources.types.union.types.Dog;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().union().getAndReturnUnion(\n            Animal.dog(\n                Dog\n                    .builder()\n                    .name(\"name\")\n                    .likesToWoof(true)\n                    .build()\n            )\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.types.union.types.Animal;\nimport com.seed.exhaustive.resources.types.union.types.Dog;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.endpoints().union().getAndReturnUnion(\n            Animal.dog(\n                Dog\n                    .builder()\n                    .name(\"name\")\n                    .likesToWoof(true)\n                    .build()\n            )\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "65f16eb8",
            "id": {
                "method": "POST",
                "path": "/req-bodies/object",
                "identifier_override": "endpoint_inlined-requests.postWithObjectBodyandResponse"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.inlinedrequests.requests.PostWithObjectBody;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.inlinedRequests().postWithObjectBodyandResponse(\n            PostWithObjectBody\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .nestedObject(\n                    ObjectWithOptionalField\n                        .builder()\n                        .string(\"string\")\n                        .integer(1)\n                        .long_(1000000L)\n                        .double_(1.1)\n                        .bool(true)\n                        .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                        .date(\"2023-01-15\")\n                        .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                        .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                        .list(\n                            new ArrayList<String>(\n                                Arrays.asList(\"list\", \"list\")\n                            )\n                        )\n                        .set(\n                            new HashSet<String>(\n                                Arrays.asList(\"set\")\n                            )\n                        )\n                        .map(\n                            new HashMap<Integer, String>() {{\n                                put(1, \"map\");\n                            }}\n                        )\n                        .bigint(new BigInteger(\"1000000\"))\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.inlinedrequests.requests.PostWithObjectBody;\nimport com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;\nimport java.math.BigInteger;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.inlinedRequests().postWithObjectBodyandResponse(\n            PostWithObjectBody\n                .builder()\n                .string(\"string\")\n                .integer(1)\n                .nestedObject(\n                    ObjectWithOptionalField\n                        .builder()\n                        .string(\"string\")\n                        .integer(1)\n                        .long_(1000000L)\n                        .double_(1.1)\n                        .bool(true)\n                        .datetime(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                        .date(\"2023-01-15\")\n                        .uuid(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                        .base64(\"SGVsbG8gd29ybGQh\".getBytes())\n                        .list(\n                            new ArrayList<String>(\n                                Arrays.asList(\"list\", \"list\")\n                            )\n                        )\n                        .set(\n                            new HashSet<String>(\n                                Arrays.asList(\"set\")\n                            )\n                        )\n                        .map(\n                            new HashMap<Integer, String>() {{\n                                put(1, \"map\");\n                            }}\n                        )\n                        .bigint(new BigInteger(\"1000000\"))\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n"
            }
        },
        {
            "example_identifier": "91843eb7",
            "id": {
                "method": "POST",
                "path": "/no-auth",
                "identifier_override": "endpoint_no-auth.postWithNoAuth"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.HashMap;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.noAuth().postWithNoAuth(new \n        HashMap<String, Object>() {{put(\"key\", \"value\");\n        }});\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport java.util.HashMap;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.noAuth().postWithNoAuth(new \n        HashMap<String, Object>() {{put(\"key\", \"value\");\n        }});\n    }\n}\n"
            }
        },
        {
            "example_identifier": "173e45a",
            "id": {
                "method": "GET",
                "path": "/no-req-body",
                "identifier_override": "endpoint_no-req-body.getWithNoRequestBody"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.noReqBody().getWithNoRequestBody();\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.noReqBody().getWithNoRequestBody();\n    }\n}\n"
            }
        },
        {
            "example_identifier": "34d92e75",
            "id": {
                "method": "POST",
                "path": "/no-req-body",
                "identifier_override": "endpoint_no-req-body.postWithNoRequestBody"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.noReqBody().postWithNoRequestBody();\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.noReqBody().postWithNoRequestBody();\n    }\n}\n"
            }
        },
        {
            "example_identifier": "1167f09a",
            "id": {
                "method": "POST",
                "path": "/test-headers/custom-header",
                "identifier_override": "endpoint_req-with-headers.getWithCustomHeader"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.reqwithheaders.requests.ReqWithHeaders;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.reqWithHeaders().getWithCustomHeader(\n            ReqWithHeaders\n                .builder()\n                .xTestServiceHeader(\"X-TEST-SERVICE-HEADER\")\n                .xTestEndpointHeader(\"X-TEST-ENDPOINT-HEADER\")\n                .body(\"string\")\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.exhaustive.SeedExhaustiveClient;\nimport com.seed.exhaustive.resources.reqwithheaders.requests.ReqWithHeaders;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedExhaustiveClient client = SeedExhaustiveClient\n            .builder()\n            .token(\"<token>\")\n            .build();\n\n        client.reqWithHeaders().getWithCustomHeader(\n            ReqWithHeaders\n                .builder()\n                .xTestServiceHeader(\"X-TEST-SERVICE-HEADER\")\n                .xTestEndpointHeader(\"X-TEST-ENDPOINT-HEADER\")\n                .body(\"string\")\n                .build()\n        );\n    }\n}\n"
            }
        }
    ],
    "types": {}
}