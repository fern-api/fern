/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.exhaustive.resources.endpoints.params.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.exhaustive.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ModifyResourceAtInlinedPath.Builder.class)
public final class ModifyResourceAtInlinedPath {
    private final String param;

    private final String body;

    private final Map<String, Object> additionalProperties;

    public ModifyResourceAtInlinedPath(String param, String body, Map<String, Object> additionalProperties) {
        this.param = param;
        this.body = body;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("param")
    public String getParam() {
        return param;
    }

    @JsonProperty("body")
    public String getBody() {
        return body;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ModifyResourceAtInlinedPath && equalTo((ModifyResourceAtInlinedPath) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ModifyResourceAtInlinedPath other) {
        return param.equals(other.param) && body.equals(other.body);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.param, this.body);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ParamStage builder() {
        return new Builder();
    }

    public interface ParamStage {
        BodyStage param(@NotNull String param);

        Builder from(ModifyResourceAtInlinedPath other);
    }

    public interface BodyStage {
        _FinalStage body(@NotNull String body);
    }

    public interface _FinalStage {
        ModifyResourceAtInlinedPath build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ParamStage, BodyStage, _FinalStage {
        private String param;

        private String body;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ModifyResourceAtInlinedPath other) {
            param(other.getParam());
            body(other.getBody());
            return this;
        }

        @java.lang.Override
        @JsonSetter("param")
        public BodyStage param(@NotNull String param) {
            this.param = Objects.requireNonNull(param, "param must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("body")
        public _FinalStage body(@NotNull String body) {
            this.body = Objects.requireNonNull(body, "body must not be null");
            return this;
        }

        @java.lang.Override
        public ModifyResourceAtInlinedPath build() {
            return new ModifyResourceAtInlinedPath(param, body, additionalProperties);
        }
    }
}
