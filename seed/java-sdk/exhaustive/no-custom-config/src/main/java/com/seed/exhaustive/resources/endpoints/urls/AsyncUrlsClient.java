/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.exhaustive.resources.endpoints.urls;

import com.seed.exhaustive.core.ClientOptions;
import com.seed.exhaustive.core.RequestOptions;
import java.util.concurrent.CompletableFuture;

public class AsyncUrlsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawUrlsClient rawClient;

    public AsyncUrlsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawUrlsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawUrlsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<String> withMixedCase() {
        return this.rawClient.withMixedCase().thenApply(response -> response.body());
    }

    public CompletableFuture<String> withMixedCase(RequestOptions requestOptions) {
        return this.rawClient.withMixedCase(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<String> noEndingSlash() {
        return this.rawClient.noEndingSlash().thenApply(response -> response.body());
    }

    public CompletableFuture<String> noEndingSlash(RequestOptions requestOptions) {
        return this.rawClient.noEndingSlash(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<String> withEndingSlash() {
        return this.rawClient.withEndingSlash().thenApply(response -> response.body());
    }

    public CompletableFuture<String> withEndingSlash(RequestOptions requestOptions) {
        return this.rawClient.withEndingSlash(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<String> withUnderscores() {
        return this.rawClient.withUnderscores().thenApply(response -> response.body());
    }

    public CompletableFuture<String> withUnderscores(RequestOptions requestOptions) {
        return this.rawClient.withUnderscores(requestOptions).thenApply(response -> response.body());
    }
}
