/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.exhaustive.resources.endpoints.contenttype;

import com.seed.exhaustive.core.ClientOptions;
import com.seed.exhaustive.core.RequestOptions;
import com.seed.exhaustive.resources.types.object.types.ObjectWithOptionalField;
import java.util.concurrent.CompletableFuture;

public class AsyncContentTypeClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawContentTypeClient rawClient;

    public AsyncContentTypeClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawContentTypeClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawContentTypeClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Void> postJsonPatchContentType() {
        return this.rawClient.postJsonPatchContentType().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> postJsonPatchContentType(ObjectWithOptionalField request) {
        return this.rawClient.postJsonPatchContentType(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> postJsonPatchContentType(
            ObjectWithOptionalField request, RequestOptions requestOptions) {
        return this.rawClient.postJsonPatchContentType(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> postJsonPatchContentWithCharsetType() {
        return this.rawClient.postJsonPatchContentWithCharsetType().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> postJsonPatchContentWithCharsetType(ObjectWithOptionalField request) {
        return this.rawClient.postJsonPatchContentWithCharsetType(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> postJsonPatchContentWithCharsetType(
            ObjectWithOptionalField request, RequestOptions requestOptions) {
        return this.rawClient
                .postJsonPatchContentWithCharsetType(request, requestOptions)
                .thenApply(response -> response.body());
    }
}
