/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.fern.sdk.resources.endpoints.container;

import com.fern.sdk.core.ClientOptions;
import com.fern.sdk.core.RequestOptions;
import com.fern.sdk.resources.types.object.types.ObjectWithRequiredField;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.Set;
import java.util.concurrent.CompletableFuture;

public class AsyncContainerClient {
  protected final ClientOptions clientOptions;

  private final AsyncRawContainerClient rawClient;

  public AsyncContainerClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
    this.rawClient = new AsyncRawContainerClient(clientOptions);
  }

  /**
   * Get responses with HTTP metadata like headers
   */
  public AsyncRawContainerClient withRawResponse() {
    return this.rawClient;
  }

  public CompletableFuture<List<String>> getAndReturnListOfPrimitives(List<String> request) {
    return this.rawClient.getAndReturnListOfPrimitives(request).thenApply(response -> response.body());
  }

  public CompletableFuture<List<String>> getAndReturnListOfPrimitives(List<String> request,
      RequestOptions requestOptions) {
    return this.rawClient.getAndReturnListOfPrimitives(request, requestOptions).thenApply(response -> response.body());
  }

  public CompletableFuture<List<ObjectWithRequiredField>> getAndReturnListOfObjects(
      List<ObjectWithRequiredField> request) {
    return this.rawClient.getAndReturnListOfObjects(request).thenApply(response -> response.body());
  }

  public CompletableFuture<List<ObjectWithRequiredField>> getAndReturnListOfObjects(
      List<ObjectWithRequiredField> request, RequestOptions requestOptions) {
    return this.rawClient.getAndReturnListOfObjects(request, requestOptions).thenApply(response -> response.body());
  }

  public CompletableFuture<Set<String>> getAndReturnSetOfPrimitives(Set<String> request) {
    return this.rawClient.getAndReturnSetOfPrimitives(request).thenApply(response -> response.body());
  }

  public CompletableFuture<Set<String>> getAndReturnSetOfPrimitives(Set<String> request,
      RequestOptions requestOptions) {
    return this.rawClient.getAndReturnSetOfPrimitives(request, requestOptions).thenApply(response -> response.body());
  }

  public CompletableFuture<Set<ObjectWithRequiredField>> getAndReturnSetOfObjects(
      Set<ObjectWithRequiredField> request) {
    return this.rawClient.getAndReturnSetOfObjects(request).thenApply(response -> response.body());
  }

  public CompletableFuture<Set<ObjectWithRequiredField>> getAndReturnSetOfObjects(
      Set<ObjectWithRequiredField> request, RequestOptions requestOptions) {
    return this.rawClient.getAndReturnSetOfObjects(request, requestOptions).thenApply(response -> response.body());
  }

  public CompletableFuture<Map<String, String>> getAndReturnMapPrimToPrim(
      Map<String, String> request) {
    return this.rawClient.getAndReturnMapPrimToPrim(request).thenApply(response -> response.body());
  }

  public CompletableFuture<Map<String, String>> getAndReturnMapPrimToPrim(
      Map<String, String> request, RequestOptions requestOptions) {
    return this.rawClient.getAndReturnMapPrimToPrim(request, requestOptions).thenApply(response -> response.body());
  }

  public CompletableFuture<Map<String, ObjectWithRequiredField>> getAndReturnMapOfPrimToObject(
      Map<String, ObjectWithRequiredField> request) {
    return this.rawClient.getAndReturnMapOfPrimToObject(request).thenApply(response -> response.body());
  }

  public CompletableFuture<Map<String, ObjectWithRequiredField>> getAndReturnMapOfPrimToObject(
      Map<String, ObjectWithRequiredField> request, RequestOptions requestOptions) {
    return this.rawClient.getAndReturnMapOfPrimToObject(request, requestOptions).thenApply(response -> response.body());
  }

  public CompletableFuture<Optional<ObjectWithRequiredField>> getAndReturnOptional() {
    return this.rawClient.getAndReturnOptional().thenApply(response -> response.body());
  }

  public CompletableFuture<Optional<ObjectWithRequiredField>> getAndReturnOptional(
      Optional<ObjectWithRequiredField> request) {
    return this.rawClient.getAndReturnOptional(request).thenApply(response -> response.body());
  }

  public CompletableFuture<Optional<ObjectWithRequiredField>> getAndReturnOptional(
      Optional<ObjectWithRequiredField> request, RequestOptions requestOptions) {
    return this.rawClient.getAndReturnOptional(request, requestOptions).thenApply(response -> response.body());
  }
}
