/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.fern.sdk.resources.endpoints;

import com.fern.sdk.core.ClientOptions;
import com.fern.sdk.core.Suppliers;
import com.fern.sdk.resources.endpoints.container.ContainerClient;
import com.fern.sdk.resources.endpoints.contenttype.ContentTypeClient;
import com.fern.sdk.resources.endpoints.enum_.EnumClient;
import com.fern.sdk.resources.endpoints.httpmethods.HttpMethodsClient;
import com.fern.sdk.resources.endpoints.object.ObjectClient;
import com.fern.sdk.resources.endpoints.params.ParamsClient;
import com.fern.sdk.resources.endpoints.primitive.PrimitiveClient;
import com.fern.sdk.resources.endpoints.put.PutClient;
import com.fern.sdk.resources.endpoints.union.UnionClient;
import java.util.function.Supplier;

public class EndpointsClient {
  protected final ClientOptions clientOptions;

  protected final Supplier<ContainerClient> containerClient;

  protected final Supplier<ContentTypeClient> contentTypeClient;

  protected final Supplier<EnumClient> enumClient;

  protected final Supplier<HttpMethodsClient> httpMethodsClient;

  protected final Supplier<ObjectClient> objectClient;

  protected final Supplier<ParamsClient> paramsClient;

  protected final Supplier<PrimitiveClient> primitiveClient;

  protected final Supplier<PutClient> putClient;

  protected final Supplier<UnionClient> unionClient;

  public EndpointsClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
    this.containerClient = Suppliers.memoize(() -> new ContainerClient(clientOptions));
    this.contentTypeClient = Suppliers.memoize(() -> new ContentTypeClient(clientOptions));
    this.enumClient = Suppliers.memoize(() -> new EnumClient(clientOptions));
    this.httpMethodsClient = Suppliers.memoize(() -> new HttpMethodsClient(clientOptions));
    this.objectClient = Suppliers.memoize(() -> new ObjectClient(clientOptions));
    this.paramsClient = Suppliers.memoize(() -> new ParamsClient(clientOptions));
    this.primitiveClient = Suppliers.memoize(() -> new PrimitiveClient(clientOptions));
    this.putClient = Suppliers.memoize(() -> new PutClient(clientOptions));
    this.unionClient = Suppliers.memoize(() -> new UnionClient(clientOptions));
  }

  public ContainerClient container() {
    return this.containerClient.get();
  }

  public ContentTypeClient contentType() {
    return this.contentTypeClient.get();
  }

  public EnumClient enum_() {
    return this.enumClient.get();
  }

  public HttpMethodsClient httpMethods() {
    return this.httpMethodsClient.get();
  }

  public ObjectClient object() {
    return this.objectClient.get();
  }

  public ParamsClient params() {
    return this.paramsClient.get();
  }

  public PrimitiveClient primitive() {
    return this.primitiveClient.get();
  }

  public PutClient put() {
    return this.putClient.get();
  }

  public UnionClient union() {
    return this.unionClient.get();
  }
}
