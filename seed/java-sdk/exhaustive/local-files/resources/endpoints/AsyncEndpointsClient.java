/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.fern.sdk.resources.endpoints;

import com.fern.sdk.core.ClientOptions;
import com.fern.sdk.core.Suppliers;
import com.fern.sdk.resources.endpoints.container.AsyncContainerClient;
import com.fern.sdk.resources.endpoints.contenttype.AsyncContentTypeClient;
import com.fern.sdk.resources.endpoints.enum_.AsyncEnumClient;
import com.fern.sdk.resources.endpoints.httpmethods.AsyncHttpMethodsClient;
import com.fern.sdk.resources.endpoints.object.AsyncObjectClient;
import com.fern.sdk.resources.endpoints.params.AsyncParamsClient;
import com.fern.sdk.resources.endpoints.primitive.AsyncPrimitiveClient;
import com.fern.sdk.resources.endpoints.union.AsyncUnionClient;
import java.util.function.Supplier;

public class AsyncEndpointsClient {
  protected final ClientOptions clientOptions;

  protected final Supplier<AsyncContainerClient> containerClient;

  protected final Supplier<AsyncContentTypeClient> contentTypeClient;

  protected final Supplier<AsyncEnumClient> enumClient;

  protected final Supplier<AsyncHttpMethodsClient> httpMethodsClient;

  protected final Supplier<AsyncObjectClient> objectClient;

  protected final Supplier<AsyncParamsClient> paramsClient;

  protected final Supplier<AsyncPrimitiveClient> primitiveClient;

  protected final Supplier<AsyncUnionClient> unionClient;

  public AsyncEndpointsClient(ClientOptions clientOptions) {
    this.clientOptions = clientOptions;
    this.containerClient = Suppliers.memoize(() -> new AsyncContainerClient(clientOptions));
    this.contentTypeClient = Suppliers.memoize(() -> new AsyncContentTypeClient(clientOptions));
    this.enumClient = Suppliers.memoize(() -> new AsyncEnumClient(clientOptions));
    this.httpMethodsClient = Suppliers.memoize(() -> new AsyncHttpMethodsClient(clientOptions));
    this.objectClient = Suppliers.memoize(() -> new AsyncObjectClient(clientOptions));
    this.paramsClient = Suppliers.memoize(() -> new AsyncParamsClient(clientOptions));
    this.primitiveClient = Suppliers.memoize(() -> new AsyncPrimitiveClient(clientOptions));
    this.unionClient = Suppliers.memoize(() -> new AsyncUnionClient(clientOptions));
  }

  public AsyncContainerClient container() {
    return this.containerClient.get();
  }

  public AsyncContentTypeClient contentType() {
    return this.contentTypeClient.get();
  }

  public AsyncEnumClient enum_() {
    return this.enumClient.get();
  }

  public AsyncHttpMethodsClient httpMethods() {
    return this.httpMethodsClient.get();
  }

  public AsyncObjectClient object() {
    return this.objectClient.get();
  }

  public AsyncParamsClient params() {
    return this.paramsClient.get();
  }

  public AsyncPrimitiveClient primitive() {
    return this.primitiveClient.get();
  }

  public AsyncUnionClient union() {
    return this.unionClient.get();
  }
}
