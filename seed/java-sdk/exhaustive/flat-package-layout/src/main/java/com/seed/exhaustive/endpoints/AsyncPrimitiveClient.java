/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.exhaustive.endpoints;

import com.seed.exhaustive.core.ClientOptions;
import com.seed.exhaustive.core.RequestOptions;
import java.time.OffsetDateTime;
import java.util.UUID;
import java.util.concurrent.CompletableFuture;

public class AsyncPrimitiveClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawPrimitiveClient rawClient;

    public AsyncPrimitiveClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawPrimitiveClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawPrimitiveClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<String> getAndReturnString(String request) {
        return this.rawClient.getAndReturnString(request).thenApply(response -> response.body());
    }

    public CompletableFuture<String> getAndReturnString(String request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnString(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Integer> getAndReturnInt(int request) {
        return this.rawClient.getAndReturnInt(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Integer> getAndReturnInt(int request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnInt(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Long> getAndReturnLong(long request) {
        return this.rawClient.getAndReturnLong(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Long> getAndReturnLong(long request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnLong(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Double> getAndReturnDouble(double request) {
        return this.rawClient.getAndReturnDouble(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Double> getAndReturnDouble(double request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnDouble(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Boolean> getAndReturnBool(boolean request) {
        return this.rawClient.getAndReturnBool(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Boolean> getAndReturnBool(boolean request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnBool(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<OffsetDateTime> getAndReturnDatetime(OffsetDateTime request) {
        return this.rawClient.getAndReturnDatetime(request).thenApply(response -> response.body());
    }

    public CompletableFuture<OffsetDateTime> getAndReturnDatetime(
            OffsetDateTime request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnDatetime(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<String> getAndReturnDate(String request) {
        return this.rawClient.getAndReturnDate(request).thenApply(response -> response.body());
    }

    public CompletableFuture<String> getAndReturnDate(String request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnDate(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<UUID> getAndReturnUuid(UUID request) {
        return this.rawClient.getAndReturnUuid(request).thenApply(response -> response.body());
    }

    public CompletableFuture<UUID> getAndReturnUuid(UUID request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnUuid(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<byte[]> getAndReturnBase64(byte[] request) {
        return this.rawClient.getAndReturnBase64(request).thenApply(response -> response.body());
    }

    public CompletableFuture<byte[]> getAndReturnBase64(byte[] request, RequestOptions requestOptions) {
        return this.rawClient.getAndReturnBase64(request, requestOptions).thenApply(response -> response.body());
    }
}
