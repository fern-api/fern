/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.exhaustive.endpoints;

import com.seed.exhaustive.core.ClientOptions;
import com.seed.exhaustive.core.RequestOptions;
import com.seed.exhaustive.types.types.ObjectWithOptionalField;
import com.seed.exhaustive.types.types.ObjectWithRequiredField;
import java.util.concurrent.CompletableFuture;

public class AsyncHttpMethodsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawHttpMethodsClient rawClient;

    public AsyncHttpMethodsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawHttpMethodsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawHttpMethodsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<String> testGet(String id) {
        return this.rawClient.testGet(id).thenApply(response -> response.body());
    }

    public CompletableFuture<String> testGet(String id, RequestOptions requestOptions) {
        return this.rawClient.testGet(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ObjectWithOptionalField> testPost(ObjectWithRequiredField request) {
        return this.rawClient.testPost(request).thenApply(response -> response.body());
    }

    public CompletableFuture<ObjectWithOptionalField> testPost(
            ObjectWithRequiredField request, RequestOptions requestOptions) {
        return this.rawClient.testPost(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ObjectWithOptionalField> testPut(String id, ObjectWithRequiredField request) {
        return this.rawClient.testPut(id, request).thenApply(response -> response.body());
    }

    public CompletableFuture<ObjectWithOptionalField> testPut(
            String id, ObjectWithRequiredField request, RequestOptions requestOptions) {
        return this.rawClient.testPut(id, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<ObjectWithOptionalField> testPatch(String id) {
        return this.rawClient.testPatch(id).thenApply(response -> response.body());
    }

    public CompletableFuture<ObjectWithOptionalField> testPatch(String id, ObjectWithOptionalField request) {
        return this.rawClient.testPatch(id, request).thenApply(response -> response.body());
    }

    public CompletableFuture<ObjectWithOptionalField> testPatch(
            String id, ObjectWithOptionalField request, RequestOptions requestOptions) {
        return this.rawClient.testPatch(id, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Boolean> testDelete(String id) {
        return this.rawClient.testDelete(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Boolean> testDelete(String id, RequestOptions requestOptions) {
        return this.rawClient.testDelete(id, requestOptions).thenApply(response -> response.body());
    }
}
