/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api.resources.ast.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = Dog.Builder.class)
public final class Dog {
    private final Fruit fruit;

    private final Map<String, Object> additionalProperties;

    private Dog(Fruit fruit, Map<String, Object> additionalProperties) {
        this.fruit = fruit;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("fruit")
    public Fruit getFruit() {
        return fruit;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Dog && equalTo((Dog) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Dog other) {
        return fruit.equals(other.fruit);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.fruit);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static FruitStage builder() {
        return new Builder();
    }

    public interface FruitStage {
        _FinalStage fruit(@NotNull Fruit fruit);

        Builder from(Dog other);
    }

    public interface _FinalStage {
        Dog build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements FruitStage, _FinalStage {
        private Fruit fruit;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Dog other) {
            fruit(other.getFruit());
            return this;
        }

        @java.lang.Override
        @JsonSetter("fruit")
        public _FinalStage fruit(@NotNull Fruit fruit) {
            this.fruit = Objects.requireNonNull(fruit, "fruit must not be null");
            return this;
        }

        @java.lang.Override
        public Dog build() {
            return new Dog(fruit, additionalProperties);
        }
    }
}
