/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.pathParameters.resources.organizations;

import com.seed.pathParameters.core.ClientOptions;
import com.seed.pathParameters.core.RequestOptions;
import com.seed.pathParameters.resources.organizations.requests.GetOrganizationUserRequest;
import com.seed.pathParameters.resources.organizations.requests.SearchOrganizationsRequest;
import com.seed.pathParameters.resources.organizations.types.Organization;
import com.seed.pathParameters.resources.user.types.User;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncOrganizationsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawOrganizationsClient rawClient;

    public AsyncOrganizationsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawOrganizationsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawOrganizationsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Organization> getOrganization(String organizationId) {
        return this.rawClient.getOrganization(organizationId).thenApply(response -> response.body());
    }

    public CompletableFuture<Organization> getOrganization(String organizationId, RequestOptions requestOptions) {
        return this.rawClient.getOrganization(organizationId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<User> getOrganizationUser(String organizationId, String userId) {
        return this.rawClient.getOrganizationUser(organizationId, userId).thenApply(response -> response.body());
    }

    public CompletableFuture<User> getOrganizationUser(
            String organizationId, String userId, GetOrganizationUserRequest request) {
        return this.rawClient
                .getOrganizationUser(organizationId, userId, request)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<User> getOrganizationUser(
            String organizationId, String userId, GetOrganizationUserRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .getOrganizationUser(organizationId, userId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<List<Organization>> searchOrganizations(String organizationId) {
        return this.rawClient.searchOrganizations(organizationId).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Organization>> searchOrganizations(
            String organizationId, SearchOrganizationsRequest request) {
        return this.rawClient.searchOrganizations(organizationId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Organization>> searchOrganizations(
            String organizationId, SearchOrganizationsRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .searchOrganizations(organizationId, request, requestOptions)
                .thenApply(response -> response.body());
    }
}
