/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.pathParameters.resources.user;

import com.seed.pathParameters.core.ClientOptions;
import com.seed.pathParameters.core.RequestOptions;
import com.seed.pathParameters.resources.user.requests.GetUsersRequest;
import com.seed.pathParameters.resources.user.requests.SearchUsersRequest;
import com.seed.pathParameters.resources.user.requests.UpdateUserRequest;
import com.seed.pathParameters.resources.user.types.User;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncUserClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawUserClient rawClient;

    public AsyncUserClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawUserClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawUserClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<User> getUser(String userId) {
        return this.rawClient.getUser(userId).thenApply(response -> response.body());
    }

    public CompletableFuture<User> getUser(String userId, GetUsersRequest request) {
        return this.rawClient.getUser(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<User> getUser(String userId, GetUsersRequest request, RequestOptions requestOptions) {
        return this.rawClient.getUser(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<User> createUser(User request) {
        return this.rawClient.createUser(request).thenApply(response -> response.body());
    }

    public CompletableFuture<User> createUser(User request, RequestOptions requestOptions) {
        return this.rawClient.createUser(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<User> updateUser(String userId, UpdateUserRequest request) {
        return this.rawClient.updateUser(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<User> updateUser(String userId, UpdateUserRequest request, RequestOptions requestOptions) {
        return this.rawClient.updateUser(userId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<User>> searchUsers(String userId) {
        return this.rawClient.searchUsers(userId).thenApply(response -> response.body());
    }

    public CompletableFuture<List<User>> searchUsers(String userId, SearchUsersRequest request) {
        return this.rawClient.searchUsers(userId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<User>> searchUsers(
            String userId, SearchUsersRequest request, RequestOptions requestOptions) {
        return this.rawClient.searchUsers(userId, request, requestOptions).thenApply(response -> response.body());
    }
}
