/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.seed.enum.core;

import java.lang.Integer;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Optional;
import java.util.concurrent.TimeUnit;

public final class RequestOptions {
  private final Optional<Integer> timeout;

  private final TimeUnit timeoutTimeUnit;

  private RequestOptions(Optional<Integer> timeout, TimeUnit timeoutTimeUnit) {
    this.timeout = timeout;
    this.timeoutTimeUnit = timeoutTimeUnit;
  }

  public Optional<Integer> getTimeout() {
    return timeout;
  }

  public TimeUnit getTimeoutTimeUnit() {
    return timeoutTimeUnit;
  }

  public Map<String, String> getHeaders() {
    Map<String, String> headers = new HashMap<>();
    return headers;
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private Optional<Integer> timeout = null;

    private TimeUnit timeoutTimeUnit = TimeUnit.SECONDS;

    public Builder timeout(Optional<Integer> timeout) {
      this.timeout = timeout;
      return this;
    }

    public Builder timeoutTimeUnit(TimeUnit timeoutTimeUnit) {
      this.timeoutTimeUnit = timeoutTimeUnit;
      return this;
    }

    public RequestOptions build() {
      return new RequestOptions(timeout, timeoutTimeUnit);
    }
  }
}
