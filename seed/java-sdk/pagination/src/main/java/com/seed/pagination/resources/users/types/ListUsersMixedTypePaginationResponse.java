/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.pagination.resources.users.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.pagination.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ListUsersMixedTypePaginationResponse.Builder.class)
public final class ListUsersMixedTypePaginationResponse {
    private final String next;

    private final List<User> data;

    private final Map<String, Object> additionalProperties;

    private ListUsersMixedTypePaginationResponse(
            String next, List<User> data, Map<String, Object> additionalProperties) {
        this.next = next;
        this.data = data;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("next")
    public String getNext() {
        return next;
    }

    @JsonProperty("data")
    public List<User> getData() {
        return data;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ListUsersMixedTypePaginationResponse
                && equalTo((ListUsersMixedTypePaginationResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ListUsersMixedTypePaginationResponse other) {
        return next.equals(other.next) && data.equals(other.data);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.next, this.data);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NextStage builder() {
        return new Builder();
    }

    public interface NextStage {
        _FinalStage next(@NotNull String next);

        Builder from(ListUsersMixedTypePaginationResponse other);
    }

    public interface _FinalStage {
        ListUsersMixedTypePaginationResponse build();

        _FinalStage data(List<User> data);

        _FinalStage addData(User data);

        _FinalStage addAllData(List<User> data);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NextStage, _FinalStage {
        private String next;

        private List<User> data = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ListUsersMixedTypePaginationResponse other) {
            next(other.getNext());
            data(other.getData());
            return this;
        }

        @java.lang.Override
        @JsonSetter("next")
        public _FinalStage next(@NotNull String next) {
            this.next = Objects.requireNonNull(next, "next must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllData(List<User> data) {
            this.data.addAll(data);
            return this;
        }

        @java.lang.Override
        public _FinalStage addData(User data) {
            this.data.add(data);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "data", nulls = Nulls.SKIP)
        public _FinalStage data(List<User> data) {
            this.data.clear();
            this.data.addAll(data);
            return this;
        }

        @java.lang.Override
        public ListUsersMixedTypePaginationResponse build() {
            return new ListUsersMixedTypePaginationResponse(next, data, additionalProperties);
        }
    }
}
