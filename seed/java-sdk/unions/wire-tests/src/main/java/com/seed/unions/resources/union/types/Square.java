/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.unions.resources.union.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.unions.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = Square.Builder.class)
public final class Square {
    private final double length;

    private final Map<String, Object> additionalProperties;

    private Square(double length, Map<String, Object> additionalProperties) {
        this.length = length;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("length")
    public double getLength() {
        return length;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Square && equalTo((Square) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Square other) {
        return length == other.length;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.length);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static LengthStage builder() {
        return new Builder();
    }

    public interface LengthStage {
        _FinalStage length(double length);

        Builder from(Square other);
    }

    public interface _FinalStage {
        Square build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements LengthStage, _FinalStage {
        private double length;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Square other) {
            length(other.getLength());
            return this;
        }

        @java.lang.Override
        @JsonSetter("length")
        public _FinalStage length(double length) {
            this.length = length;
            return this;
        }

        @java.lang.Override
        public Square build() {
            return new Square(length, additionalProperties);
        }
    }
}
