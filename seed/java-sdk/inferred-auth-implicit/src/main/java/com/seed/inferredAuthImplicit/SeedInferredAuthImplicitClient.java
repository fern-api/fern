/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.inferredAuthImplicit;

import com.seed.inferredAuthImplicit.core.ClientOptions;
import com.seed.inferredAuthImplicit.core.Suppliers;
import com.seed.inferredAuthImplicit.resources.auth.AuthClient;
import com.seed.inferredAuthImplicit.resources.nested.NestedClient;
import com.seed.inferredAuthImplicit.resources.nestednoauth.NestedNoAuthClient;
import com.seed.inferredAuthImplicit.resources.simple.SimpleClient;
import java.util.function.Supplier;

public class SeedInferredAuthImplicitClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<AuthClient> authClient;

    protected final Supplier<NestedNoAuthClient> nestedNoAuthClient;

    protected final Supplier<NestedClient> nestedClient;

    protected final Supplier<SimpleClient> simpleClient;

    public SeedInferredAuthImplicitClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.authClient = Suppliers.memoize(() -> new AuthClient(clientOptions));
        this.nestedNoAuthClient = Suppliers.memoize(() -> new NestedNoAuthClient(clientOptions));
        this.nestedClient = Suppliers.memoize(() -> new NestedClient(clientOptions));
        this.simpleClient = Suppliers.memoize(() -> new SimpleClient(clientOptions));
    }

    public AuthClient auth() {
        return this.authClient.get();
    }

    public NestedNoAuthClient nestedNoAuth() {
        return this.nestedNoAuthClient.get();
    }

    public NestedClient nested() {
        return this.nestedClient.get();
    }

    public SimpleClient simple() {
        return this.simpleClient.get();
    }

    public static SeedInferredAuthImplicitClientBuilder builder() {
        return new SeedInferredAuthImplicitClientBuilder();
    }
}
