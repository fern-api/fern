/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api;

import com.seed.api.core.ClientOptions;
import com.seed.api.core.RequestOptions;
import com.seed.api.requests.NonNullableObject;
import com.seed.api.requests.PostWithNullableNamedRequestBodyTypeRequest;
import com.seed.api.types.ResponseBody;
import java.util.concurrent.CompletableFuture;

public class AsyncFoo {
    protected final ClientOptions clientOptions;

    private final AsyncRawFoo rawClient;

    public AsyncFoo(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawFoo(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawFoo withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<ResponseBody> postWithNullableNamedRequestBodyType(
            PostWithNullableNamedRequestBodyTypeRequest request) {
        return this.rawClient.postWithNullableNamedRequestBodyType(request).thenApply(response -> response.body());
    }

    public CompletableFuture<ResponseBody> postWithNullableNamedRequestBodyType(
            PostWithNullableNamedRequestBodyTypeRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .postWithNullableNamedRequestBodyType(request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<ResponseBody> postWithNonNullableNamedRequestBodyType(NonNullableObject request) {
        return this.rawClient.postWithNonNullableNamedRequestBodyType(request).thenApply(response -> response.body());
    }

    public CompletableFuture<ResponseBody> postWithNonNullableNamedRequestBodyType(
            NonNullableObject request, RequestOptions requestOptions) {
        return this.rawClient
                .postWithNonNullableNamedRequestBodyType(request, requestOptions)
                .thenApply(response -> response.body());
    }

    public static AsyncFooBuilder builder() {
        return new AsyncFooBuilder();
    }
}
