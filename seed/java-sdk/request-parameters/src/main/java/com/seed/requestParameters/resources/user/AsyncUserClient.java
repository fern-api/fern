/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.requestParameters.resources.user;

import com.seed.requestParameters.core.ClientOptions;
import com.seed.requestParameters.core.RequestOptions;
import com.seed.requestParameters.resources.user.requests.CreateUsernameReferencedRequest;
import com.seed.requestParameters.resources.user.requests.CreateUsernameRequest;
import com.seed.requestParameters.resources.user.requests.GetUsersRequest;
import com.seed.requestParameters.resources.user.types.User;
import java.util.concurrent.CompletableFuture;

public class AsyncUserClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawUserClient rawClient;

    public AsyncUserClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawUserClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawUserClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Void> createUsername(CreateUsernameRequest request) {
        return this.rawClient.createUsername(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> createUsername(CreateUsernameRequest request, RequestOptions requestOptions) {
        return this.rawClient.createUsername(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> createUsernameWithReferencedType(CreateUsernameReferencedRequest request) {
        return this.rawClient.createUsernameWithReferencedType(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> createUsernameWithReferencedType(
            CreateUsernameReferencedRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .createUsernameWithReferencedType(request, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<User> getUsername(GetUsersRequest request) {
        return this.rawClient.getUsername(request).thenApply(response -> response.body());
    }

    public CompletableFuture<User> getUsername(GetUsersRequest request, RequestOptions requestOptions) {
        return this.rawClient.getUsername(request, requestOptions).thenApply(response -> response.body());
    }
}
