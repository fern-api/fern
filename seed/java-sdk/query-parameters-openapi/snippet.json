{
    "endpoints": [
        {
            "example_identifier": "d2279c7b",
            "id": {
                "method": "GET",
                "path": "/user/getUsername",
                "identifier_override": "endpoint_.search"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.api.SeedApiClient;\nimport com.seed.api.requests.SearchRequest;\nimport com.seed.api.types.NestedUser;\nimport com.seed.api.types.SearchRequestNeighborRequired;\nimport com.seed.api.types.User;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Optional;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedApiClient client = SeedApiClient\n            .builder()\n            .build();\n\n        client.search(\n            SearchRequest\n                .builder()\n                .limit(1)\n                .id(\"id\")\n                .date(\"date\")\n                .deadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .bytes(\"bytes\")\n                .user(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .userList(\n                    new ArrayList<Optional<User>>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .excludeUser(\n                    new ArrayList<Optional<User>>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .filter(\n                    new ArrayList<Optional<String>>(\n                        Arrays.asList(\"filter\")\n                    )\n                )\n                .neighborRequired(\n                    SearchRequestNeighborRequired.ofUser(\n                        User\n                            .builder()\n                            .name(\"name\")\n                            .tags(\n                                new ArrayList<String>(\n                                    Arrays.asList(\"tags\", \"tags\")\n                                )\n                            )\n                            .build()\n                    )\n                )\n                .optionalDeadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .keyValue(\n                    new HashMap<String, Optional<String>>() {{\n                        put(\"keyValue\", Optional.of(\"keyValue\"));\n                    }}\n                )\n                .optionalString(\"optionalString\")\n                .nestedUser(\n                    NestedUser\n                        .builder()\n                        .name(\"name\")\n                        .user(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                        .build()\n                )\n                .optionalUser(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .neighbor(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.api.SeedApiClient;\nimport com.seed.api.requests.SearchRequest;\nimport com.seed.api.types.NestedUser;\nimport com.seed.api.types.SearchRequestNeighborRequired;\nimport com.seed.api.types.User;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Optional;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedApiClient client = SeedApiClient\n            .builder()\n            .build();\n\n        client.search(\n            SearchRequest\n                .builder()\n                .limit(1)\n                .id(\"id\")\n                .date(\"date\")\n                .deadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .bytes(\"bytes\")\n                .user(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .userList(\n                    new ArrayList<Optional<User>>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .excludeUser(\n                    new ArrayList<Optional<User>>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .filter(\n                    new ArrayList<Optional<String>>(\n                        Arrays.asList(\"filter\")\n                    )\n                )\n                .neighborRequired(\n                    SearchRequestNeighborRequired.ofUser(\n                        User\n                            .builder()\n                            .name(\"name\")\n                            .tags(\n                                new ArrayList<String>(\n                                    Arrays.asList(\"tags\", \"tags\")\n                                )\n                            )\n                            .build()\n                    )\n                )\n                .optionalDeadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .keyValue(\n                    new HashMap<String, Optional<String>>() {{\n                        put(\"keyValue\", Optional.of(\"keyValue\"));\n                    }}\n                )\n                .optionalString(\"optionalString\")\n                .nestedUser(\n                    NestedUser\n                        .builder()\n                        .name(\"name\")\n                        .user(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                        .build()\n                )\n                .optionalUser(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .neighbor(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n"
            }
        }
    ],
    "types": {}
}