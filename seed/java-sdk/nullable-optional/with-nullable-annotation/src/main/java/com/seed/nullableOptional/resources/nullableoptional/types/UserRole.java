/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.nullableOptional.resources.nullableoptional.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class UserRole {
    public static final UserRole MODERATOR = new UserRole(Value.MODERATOR, "MODERATOR");

    public static final UserRole USER = new UserRole(Value.USER, "USER");

    public static final UserRole GUEST = new UserRole(Value.GUEST, "GUEST");

    public static final UserRole ADMIN = new UserRole(Value.ADMIN, "ADMIN");

    private final Value value;

    private final String string;

    UserRole(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other) || (other instanceof UserRole && this.string.equals(((UserRole) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case MODERATOR:
                return visitor.visitModerator();
            case USER:
                return visitor.visitUser();
            case GUEST:
                return visitor.visitGuest();
            case ADMIN:
                return visitor.visitAdmin();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static UserRole valueOf(String value) {
        switch (value) {
            case "MODERATOR":
                return MODERATOR;
            case "USER":
                return USER;
            case "GUEST":
                return GUEST;
            case "ADMIN":
                return ADMIN;
            default:
                return new UserRole(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        ADMIN,

        USER,

        GUEST,

        MODERATOR,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitAdmin();

        T visitUser();

        T visitGuest();

        T visitModerator();

        T visitUnknown(String unknownType);
    }
}
