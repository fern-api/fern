/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.nullableOptional.resources.nullableoptional.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.nullableOptional.core.NullableNonemptyFilter;
import com.seed.nullableOptional.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = DeserializationTestRequest.Builder.class)
public final class DeserializationTestRequest {
    private final String requiredString;

    private final String nullableString;

    private final Optional<String> optionalString;

    private final Optional<String> optionalNullableString;

    private final UserRole nullableEnum;

    private final Optional<UserStatus> optionalEnum;

    private final NotificationMethod nullableUnion;

    private final Optional<SearchResult> optionalUnion;

    private final List<String> nullableList;

    private final Map<String, Integer> nullableMap;

    private final Address nullableObject;

    private final Optional<Organization> optionalObject;

    private final Map<String, Object> additionalProperties;

    private DeserializationTestRequest(
            String requiredString,
            String nullableString,
            Optional<String> optionalString,
            Optional<String> optionalNullableString,
            UserRole nullableEnum,
            Optional<UserStatus> optionalEnum,
            NotificationMethod nullableUnion,
            Optional<SearchResult> optionalUnion,
            List<String> nullableList,
            Map<String, Integer> nullableMap,
            Address nullableObject,
            Optional<Organization> optionalObject,
            Map<String, Object> additionalProperties) {
        this.requiredString = requiredString;
        this.nullableString = nullableString;
        this.optionalString = optionalString;
        this.optionalNullableString = optionalNullableString;
        this.nullableEnum = nullableEnum;
        this.optionalEnum = optionalEnum;
        this.nullableUnion = nullableUnion;
        this.optionalUnion = optionalUnion;
        this.nullableList = nullableList;
        this.nullableMap = nullableMap;
        this.nullableObject = nullableObject;
        this.optionalObject = optionalObject;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("requiredString")
    public String getRequiredString() {
        return requiredString;
    }

    @Nullable
    @JsonIgnore
    public String getNullableString() {
        return nullableString;
    }

    @JsonProperty("optionalString")
    public Optional<String> getOptionalString() {
        return optionalString;
    }

    @JsonIgnore
    public Optional<String> getOptionalNullableString() {
        if (optionalNullableString == null) {
            return Optional.empty();
        }
        return optionalNullableString;
    }

    @Nullable
    @JsonIgnore
    public UserRole getNullableEnum() {
        return nullableEnum;
    }

    @JsonProperty("optionalEnum")
    public Optional<UserStatus> getOptionalEnum() {
        return optionalEnum;
    }

    @Nullable
    @JsonIgnore
    public NotificationMethod getNullableUnion() {
        return nullableUnion;
    }

    @JsonProperty("optionalUnion")
    public Optional<SearchResult> getOptionalUnion() {
        return optionalUnion;
    }

    @Nullable
    @JsonIgnore
    public List<String> getNullableList() {
        return nullableList;
    }

    @Nullable
    @JsonIgnore
    public Map<String, Integer> getNullableMap() {
        return nullableMap;
    }

    @Nullable
    @JsonIgnore
    public Address getNullableObject() {
        return nullableObject;
    }

    @JsonProperty("optionalObject")
    public Optional<Organization> getOptionalObject() {
        return optionalObject;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("nullableString")
    private String _getNullableString() {
        return nullableString;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("optionalNullableString")
    private Optional<String> _getOptionalNullableString() {
        return optionalNullableString;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("nullableEnum")
    private UserRole _getNullableEnum() {
        return nullableEnum;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("nullableUnion")
    private NotificationMethod _getNullableUnion() {
        return nullableUnion;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("nullableList")
    private List<String> _getNullableList() {
        return nullableList;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("nullableMap")
    private Map<String, Integer> _getNullableMap() {
        return nullableMap;
    }

    @JsonInclude(value = JsonInclude.Include.CUSTOM, valueFilter = NullableNonemptyFilter.class)
    @JsonProperty("nullableObject")
    private Address _getNullableObject() {
        return nullableObject;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof DeserializationTestRequest && equalTo((DeserializationTestRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(DeserializationTestRequest other) {
        return requiredString.equals(other.requiredString)
                && nullableString.equals(other.nullableString)
                && optionalString.equals(other.optionalString)
                && optionalNullableString.equals(other.optionalNullableString)
                && nullableEnum.equals(other.nullableEnum)
                && optionalEnum.equals(other.optionalEnum)
                && nullableUnion.equals(other.nullableUnion)
                && optionalUnion.equals(other.optionalUnion)
                && nullableList.equals(other.nullableList)
                && nullableMap.equals(other.nullableMap)
                && nullableObject.equals(other.nullableObject)
                && optionalObject.equals(other.optionalObject);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.requiredString,
                this.nullableString,
                this.optionalString,
                this.optionalNullableString,
                this.nullableEnum,
                this.optionalEnum,
                this.nullableUnion,
                this.optionalUnion,
                this.nullableList,
                this.nullableMap,
                this.nullableObject,
                this.optionalObject);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static RequiredStringStage builder() {
        return new Builder();
    }

    public interface RequiredStringStage {
        _FinalStage requiredString(@NotNull String requiredString);

        Builder from(DeserializationTestRequest other);
    }

    public interface _FinalStage {
        DeserializationTestRequest build();

        _FinalStage nullableString(@com.seed.nullableOptional.core.Nullable String nullableString);

        _FinalStage optionalString(Optional<String> optionalString);

        _FinalStage optionalString(String optionalString);

        _FinalStage optionalNullableString(Optional<String> optionalNullableString);

        _FinalStage optionalNullableString(String optionalNullableString);

        _FinalStage optionalNullableString(com.seed.nullableOptional.core.Nullable<String> optionalNullableString);

        _FinalStage nullableEnum(@com.seed.nullableOptional.core.Nullable UserRole nullableEnum);

        _FinalStage optionalEnum(Optional<UserStatus> optionalEnum);

        _FinalStage optionalEnum(UserStatus optionalEnum);

        _FinalStage nullableUnion(@com.seed.nullableOptional.core.Nullable NotificationMethod nullableUnion);

        _FinalStage optionalUnion(Optional<SearchResult> optionalUnion);

        _FinalStage optionalUnion(SearchResult optionalUnion);

        _FinalStage nullableList(List<String> nullableList);

        _FinalStage addNullableList(String nullableList);

        _FinalStage addAllNullableList(List<String> nullableList);

        _FinalStage nullableMap(Map<String, Integer> nullableMap);

        _FinalStage putAllNullableMap(Map<String, Integer> nullableMap);

        _FinalStage nullableMap(String key, Integer value);

        _FinalStage nullableObject(@com.seed.nullableOptional.core.Nullable Address nullableObject);

        _FinalStage optionalObject(Optional<Organization> optionalObject);

        _FinalStage optionalObject(Organization optionalObject);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements RequiredStringStage, _FinalStage {
        private String requiredString;

        private Optional<Organization> optionalObject = Optional.empty();

        private Address nullableObject;

        private Map<String, Integer> nullableMap = new LinkedHashMap<>();

        private List<String> nullableList = new ArrayList<>();

        private Optional<SearchResult> optionalUnion = Optional.empty();

        private NotificationMethod nullableUnion;

        private Optional<UserStatus> optionalEnum = Optional.empty();

        private UserRole nullableEnum;

        private Optional<String> optionalNullableString = Optional.empty();

        private Optional<String> optionalString = Optional.empty();

        private String nullableString;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(DeserializationTestRequest other) {
            requiredString(other.getRequiredString());
            nullableString(other.getNullableString());
            optionalString(other.getOptionalString());
            optionalNullableString(other.getOptionalNullableString());
            nullableEnum(other.getNullableEnum());
            optionalEnum(other.getOptionalEnum());
            nullableUnion(other.getNullableUnion());
            optionalUnion(other.getOptionalUnion());
            nullableList(other.getNullableList());
            nullableMap(other.getNullableMap());
            nullableObject(other.getNullableObject());
            optionalObject(other.getOptionalObject());
            return this;
        }

        @java.lang.Override
        @JsonSetter("requiredString")
        public _FinalStage requiredString(@NotNull String requiredString) {
            this.requiredString = Objects.requireNonNull(requiredString, "requiredString must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage optionalObject(Organization optionalObject) {
            this.optionalObject = Optional.ofNullable(optionalObject);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "optionalObject", nulls = Nulls.SKIP)
        public _FinalStage optionalObject(Optional<Organization> optionalObject) {
            this.optionalObject = optionalObject;
            return this;
        }

        @java.lang.Override
        @JsonSetter("nullableObject")
        public _FinalStage nullableObject(@com.seed.nullableOptional.core.Nullable Address nullableObject) {
            this.nullableObject = nullableObject;
            return this;
        }

        @java.lang.Override
        public _FinalStage nullableMap(String key, Integer value) {
            this.nullableMap.put(key, value);
            return this;
        }

        @java.lang.Override
        public _FinalStage putAllNullableMap(Map<String, Integer> nullableMap) {
            if (nullableMap != null) {
                this.nullableMap.putAll(nullableMap);
            }
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "nullableMap", nulls = Nulls.SKIP)
        public _FinalStage nullableMap(Map<String, Integer> nullableMap) {
            this.nullableMap.clear();
            this.nullableMap.putAll(nullableMap);
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllNullableList(List<String> nullableList) {
            if (nullableList != null) {
                this.nullableList.addAll(nullableList);
            }
            return this;
        }

        @java.lang.Override
        public _FinalStage addNullableList(String nullableList) {
            this.nullableList.add(nullableList);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "nullableList", nulls = Nulls.SKIP)
        public _FinalStage nullableList(List<String> nullableList) {
            this.nullableList.clear();
            this.nullableList.addAll(nullableList);
            return this;
        }

        @java.lang.Override
        public _FinalStage optionalUnion(SearchResult optionalUnion) {
            this.optionalUnion = Optional.ofNullable(optionalUnion);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "optionalUnion", nulls = Nulls.SKIP)
        public _FinalStage optionalUnion(Optional<SearchResult> optionalUnion) {
            this.optionalUnion = optionalUnion;
            return this;
        }

        @java.lang.Override
        @JsonSetter("nullableUnion")
        public _FinalStage nullableUnion(@com.seed.nullableOptional.core.Nullable NotificationMethod nullableUnion) {
            this.nullableUnion = nullableUnion;
            return this;
        }

        @java.lang.Override
        public _FinalStage optionalEnum(UserStatus optionalEnum) {
            this.optionalEnum = Optional.ofNullable(optionalEnum);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "optionalEnum", nulls = Nulls.SKIP)
        public _FinalStage optionalEnum(Optional<UserStatus> optionalEnum) {
            this.optionalEnum = optionalEnum;
            return this;
        }

        @java.lang.Override
        @JsonSetter("nullableEnum")
        public _FinalStage nullableEnum(@com.seed.nullableOptional.core.Nullable UserRole nullableEnum) {
            this.nullableEnum = nullableEnum;
            return this;
        }

        @java.lang.Override
        public _FinalStage optionalNullableString(
                com.seed.nullableOptional.core.Nullable<String> optionalNullableString) {
            if (optionalNullableString.isNull()) {
                this.optionalNullableString = null;
            } else if (optionalNullableString.isEmpty()) {
                this.optionalNullableString = Optional.empty();
            } else {
                this.optionalNullableString = Optional.of(optionalNullableString.get());
            }
            return this;
        }

        @java.lang.Override
        public _FinalStage optionalNullableString(String optionalNullableString) {
            this.optionalNullableString = Optional.ofNullable(optionalNullableString);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "optionalNullableString", nulls = Nulls.SKIP)
        public _FinalStage optionalNullableString(Optional<String> optionalNullableString) {
            this.optionalNullableString = optionalNullableString;
            return this;
        }

        @java.lang.Override
        public _FinalStage optionalString(String optionalString) {
            this.optionalString = Optional.ofNullable(optionalString);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "optionalString", nulls = Nulls.SKIP)
        public _FinalStage optionalString(Optional<String> optionalString) {
            this.optionalString = optionalString;
            return this;
        }

        @java.lang.Override
        @JsonSetter("nullableString")
        public _FinalStage nullableString(@com.seed.nullableOptional.core.Nullable String nullableString) {
            this.nullableString = nullableString;
            return this;
        }

        @java.lang.Override
        public DeserializationTestRequest build() {
            return new DeserializationTestRequest(
                    requiredString,
                    nullableString,
                    optionalString,
                    optionalNullableString,
                    nullableEnum,
                    optionalEnum,
                    nullableUnion,
                    optionalUnion,
                    nullableList,
                    nullableMap,
                    nullableObject,
                    optionalObject,
                    additionalProperties);
        }
    }
}
