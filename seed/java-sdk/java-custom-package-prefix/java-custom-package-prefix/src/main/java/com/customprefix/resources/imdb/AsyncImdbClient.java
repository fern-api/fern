/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.customprefix.resources.imdb;

import com.customprefix.core.ClientOptions;
import com.customprefix.core.RequestOptions;
import com.customprefix.resources.imdb.types.CreateMovieRequest;
import com.customprefix.resources.imdb.types.Movie;
import java.util.concurrent.CompletableFuture;

public class AsyncImdbClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawImdbClient rawClient;

    public AsyncImdbClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawImdbClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawImdbClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Add a movie to the database
     */
    public CompletableFuture<String> createMovie(CreateMovieRequest request) {
        return this.rawClient.createMovie(request).thenApply(response -> response.body());
    }

    /**
     * Add a movie to the database
     */
    public CompletableFuture<String> createMovie(CreateMovieRequest request, RequestOptions requestOptions) {
        return this.rawClient.createMovie(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Movie> getMovie(String movieId) {
        return this.rawClient.getMovie(movieId).thenApply(response -> response.body());
    }

    public CompletableFuture<Movie> getMovie(String movieId, RequestOptions requestOptions) {
        return this.rawClient.getMovie(movieId, requestOptions).thenApply(response -> response.body());
    }
}
