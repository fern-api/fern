/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.examples.resources.types.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.examples.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = RefreshTokenRequest.Builder.class)
public final class RefreshTokenRequest {
    private final int ttl;

    private final Map<String, Object> additionalProperties;

    private RefreshTokenRequest(int ttl, Map<String, Object> additionalProperties) {
        this.ttl = ttl;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("ttl")
    public int getTtl() {
        return ttl;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof RefreshTokenRequest && equalTo((RefreshTokenRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(RefreshTokenRequest other) {
        return ttl == other.ttl;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.ttl);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TtlStage builder() {
        return new Builder();
    }

    public interface TtlStage {
        _FinalStage ttl(int ttl);

        Builder from(RefreshTokenRequest other);
    }

    public interface _FinalStage {
        RefreshTokenRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TtlStage, _FinalStage {
        private int ttl;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(RefreshTokenRequest other) {
            ttl(other.getTtl());
            return this;
        }

        @java.lang.Override
        @JsonSetter("ttl")
        public _FinalStage ttl(int ttl) {
            this.ttl = ttl;
            return this;
        }

        @java.lang.Override
        public RefreshTokenRequest build() {
            return new RefreshTokenRequest(ttl, additionalProperties);
        }
    }
}
