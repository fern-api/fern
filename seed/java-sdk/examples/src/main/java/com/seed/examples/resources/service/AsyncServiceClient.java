/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.examples.resources.service;

import com.seed.examples.core.ClientOptions;
import com.seed.examples.core.RequestOptions;
import com.seed.examples.resources.service.requests.GetMetadataRequest;
import com.seed.examples.resources.types.types.BigEntity;
import com.seed.examples.resources.types.types.Metadata;
import com.seed.examples.resources.types.types.Movie;
import com.seed.examples.resources.types.types.Response;
import java.util.concurrent.CompletableFuture;

public class AsyncServiceClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawServiceClient rawClient;

    public AsyncServiceClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawServiceClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawServiceClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Movie> getMovie(String movieId) {
        return this.rawClient.getMovie(movieId).thenApply(response -> response.body());
    }

    public CompletableFuture<Movie> getMovie(String movieId, RequestOptions requestOptions) {
        return this.rawClient.getMovie(movieId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<String> createMovie(Movie request) {
        return this.rawClient.createMovie(request).thenApply(response -> response.body());
    }

    public CompletableFuture<String> createMovie(Movie request, RequestOptions requestOptions) {
        return this.rawClient.createMovie(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Metadata> getMetadata(GetMetadataRequest request) {
        return this.rawClient.getMetadata(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Metadata> getMetadata(GetMetadataRequest request, RequestOptions requestOptions) {
        return this.rawClient.getMetadata(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Response> createBigEntity() {
        return this.rawClient.createBigEntity().thenApply(response -> response.body());
    }

    public CompletableFuture<Response> createBigEntity(BigEntity request) {
        return this.rawClient.createBigEntity(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Response> createBigEntity(BigEntity request, RequestOptions requestOptions) {
        return this.rawClient.createBigEntity(request, requestOptions).thenApply(response -> response.body());
    }
}
