/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.examples.resources.file.service;

import com.seed.examples.core.ClientOptions;
import com.seed.examples.core.RequestOptions;
import com.seed.examples.resources.file.service.requests.GetFileRequest;
import com.seed.examples.resources.types.types.File;
import java.util.concurrent.CompletableFuture;

public class AsyncServiceClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawServiceClient rawClient;

    public AsyncServiceClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawServiceClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawServiceClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * This endpoint returns a file by its name.
     */
    public CompletableFuture<File> getFile(String filename) {
        return this.rawClient.getFile(filename).thenApply(response -> response.body());
    }

    /**
     * This endpoint returns a file by its name.
     */
    public CompletableFuture<File> getFile(String filename, GetFileRequest request) {
        return this.rawClient.getFile(filename, request).thenApply(response -> response.body());
    }

    /**
     * This endpoint returns a file by its name.
     */
    public CompletableFuture<File> getFile(String filename, GetFileRequest request, RequestOptions requestOptions) {
        return this.rawClient.getFile(filename, request, requestOptions).thenApply(response -> response.body());
    }
}
