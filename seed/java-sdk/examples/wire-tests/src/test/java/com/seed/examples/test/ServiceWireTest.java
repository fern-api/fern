/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.examples.test;

import static org.junit.jupiter.api.Assertions.*;
import static org.junit.jupiter.api.Assertions.assertThrows;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.seed.examples.SeedClientSideParamsClient;
import com.seed.examples.core.SeedExamplesApiException;
import java.io.IOException;
import okhttp3.mockwebserver.MockResponse;
import okhttp3.mockwebserver.MockWebServer;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

public final class ServiceWireTest {
    private MockWebServer server;

    private SeedClientSideParamsClient client;

    private ObjectMapper objectMapper = new ObjectMapper();

    @BeforeEach
    public void setup() throws IOException {
        server = new MockWebServer();
        server.start();
        client = SeedClientSideParamsClient.builder()
                .url(server.url("/").toString())
                .token("test-token")
                .maxRetries(0)
                .build();
    }

    @AfterEach
    public void teardown() throws IOException {
        server.shutdown();
    }

    @Test
    @Disabled
    public void testGetMovie_Manual() throws Exception {
        // Manual test implementation required
        // Endpoint: GET /movie/
        // Path parameters: 1
        // TODO: Implement test;
        // 1. Setup mock response;
        // 2. Create request with required fields;
        // 3. Execute client call;
        // 4. Verify HTTP interaction;
    }

    @Test
    @Disabled
    public void testCreateMovie_Manual() throws Exception {
        // Manual test implementation required
        // Endpoint: POST /movie
        // Has request body
        // TODO: Implement test;
        // 1. Setup mock response;
        // 2. Create request with required fields;
        // 3. Execute client call;
        // 4. Verify HTTP interaction;
    }

    @Test
    public void testGetMetadata_SuccessResponse() throws Exception {
        server.enqueue(new MockResponse().setResponseCode(200).setBody("{}"));
        // This endpoint requires manual customization:
        // - Path parameters, request bodies, or query parameters need to be set
        // - Response shape cannot be guaranteed
        // Example client call:
        // client.service().getMetadata(com.seed.examples.resources.service.requests.GetMetadataRequest.builder().build())
        // Test skipped - requires manual implementation;
    }

    @Test
    public void testGetMetadata_404Error() {
        server.enqueue(new MockResponse()
                .setResponseCode(404)
                .setBody("{\"error\":\"not_found\",\"message\":\"Resource not found\"}"));
        SeedExamplesApiException exception = assertThrows(SeedExamplesApiException.class, () -> {
            client.service()
                    .getMetadata(com.seed.examples.resources.service.requests.GetMetadataRequest.builder()
                            .build());
        });
        assertEquals(404, exception.statusCode());
    }

    @Test
    public void testGetMetadata_500Error() {
        server.enqueue(new MockResponse()
                .setResponseCode(500)
                .setBody("{\"error\":\"internal_error\",\"message\":\"Internal server error\"}"));
        SeedExamplesApiException exception = assertThrows(SeedExamplesApiException.class, () -> {
            client.service()
                    .getMetadata(com.seed.examples.resources.service.requests.GetMetadataRequest.builder()
                            .build());
        });
        assertEquals(500, exception.statusCode());
    }

    @Test
    @Disabled
    public void testCreateBigEntity_Manual() throws Exception {
        // Manual test implementation required
        // Endpoint: POST /big-entity
        // Has request body
        // TODO: Implement test;
        // 1. Setup mock response;
        // 2. Create request with required fields;
        // 3. Execute client call;
        // 4. Verify HTTP interaction;
    }

    @Test
    @Disabled
    public void testRefreshToken_Manual() throws Exception {
        // Manual test implementation required
        // Endpoint: POST /refresh-token
        // Has request body
        // TODO: Implement test;
        // 1. Setup mock response;
        // 2. Create request with required fields;
        // 3. Execute client call;
        // 4. Verify HTTP interaction;
    }
}
