{
    "endpoints": [
        {
            "example_identifier": "d4534e50",
            "id": {
                "method": "GET",
                "path": "/user",
                "identifier_override": "endpoint_user.getUsername"
            },
            "snippet": {
                "type": "java",
                "sync_client": "package com.example.usage;\n\nimport com.seed.queryParameters.SeedQueryParametersClient;\nimport com.seed.queryParameters.resources.user.requests.GetUsersRequest;\nimport com.seed.queryParameters.resources.user.types.NestedUser;\nimport com.seed.queryParameters.resources.user.types.User;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedQueryParametersClient client = SeedQueryParametersClient\n            .builder()\n            .build();\n\n        client.user().getUsername(\n            GetUsersRequest\n                .builder()\n                .limit(1)\n                .id(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .date(\"2023-01-15\")\n                .deadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .bytes(\"SGVsbG8gd29ybGQh\".getBytes())\n                .user(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .userList(\n                    new ArrayList<User>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build(),\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .keyValue(\n                    new HashMap<String, String>() {{\n                        put(\"keyValue\", \"keyValue\");\n                    }}\n                )\n                .nestedUser(\n                    NestedUser\n                        .builder()\n                        .name(\"name\")\n                        .user(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                        .build()\n                )\n                .excludeUser(\n                    new ArrayList<User>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .filter(\n                    new ArrayList<String>(\n                        Arrays.asList(\"filter\")\n                    )\n                )\n                .optionalDeadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .optionalString(\"optionalString\")\n                .optionalUser(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n",
                "async_client": "package com.example.usage;\n\nimport com.seed.queryParameters.SeedQueryParametersClient;\nimport com.seed.queryParameters.resources.user.requests.GetUsersRequest;\nimport com.seed.queryParameters.resources.user.types.NestedUser;\nimport com.seed.queryParameters.resources.user.types.User;\nimport java.time.OffsetDateTime;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.UUID;\n\npublic class Example {\n    public static void main(String[] args) {\n        SeedQueryParametersClient client = SeedQueryParametersClient\n            .builder()\n            .build();\n\n        client.user().getUsername(\n            GetUsersRequest\n                .builder()\n                .limit(1)\n                .id(UUID.fromString(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\"))\n                .date(\"2023-01-15\")\n                .deadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .bytes(\"SGVsbG8gd29ybGQh\".getBytes())\n                .user(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .userList(\n                    new ArrayList<User>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build(),\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .keyValue(\n                    new HashMap<String, String>() {{\n                        put(\"keyValue\", \"keyValue\");\n                    }}\n                )\n                .nestedUser(\n                    NestedUser\n                        .builder()\n                        .name(\"name\")\n                        .user(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                        .build()\n                )\n                .excludeUser(\n                    new ArrayList<User>(\n                        Arrays.asList(\n                            User\n                                .builder()\n                                .name(\"name\")\n                                .tags(\n                                    new ArrayList<String>(\n                                        Arrays.asList(\"tags\", \"tags\")\n                                    )\n                                )\n                                .build()\n                        )\n                    )\n                )\n                .filter(\n                    new ArrayList<String>(\n                        Arrays.asList(\"filter\")\n                    )\n                )\n                .optionalDeadline(OffsetDateTime.parse(\"2024-01-15T09:30:00Z\"))\n                .optionalString(\"optionalString\")\n                .optionalUser(\n                    User\n                        .builder()\n                        .name(\"name\")\n                        .tags(\n                            new ArrayList<String>(\n                                Arrays.asList(\"tags\", \"tags\")\n                            )\n                        )\n                        .build()\n                )\n                .build()\n        );\n    }\n}\n"
            }
        }
    ],
    "types": {}
}