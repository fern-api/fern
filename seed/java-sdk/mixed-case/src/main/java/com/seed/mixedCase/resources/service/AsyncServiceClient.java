/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.mixedCase.resources.service;

import com.seed.mixedCase.core.ClientOptions;
import com.seed.mixedCase.core.RequestOptions;
import com.seed.mixedCase.resources.service.requests.ListResourcesRequest;
import com.seed.mixedCase.resources.service.types.Resource;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncServiceClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawServiceClient rawClient;

    public AsyncServiceClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawServiceClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawServiceClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Resource> getResource(String resourceId) {
        return this.rawClient.getResource(resourceId).thenApply(response -> response.body());
    }

    public CompletableFuture<Resource> getResource(String resourceId, RequestOptions requestOptions) {
        return this.rawClient.getResource(resourceId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Resource>> listResources(ListResourcesRequest request) {
        return this.rawClient.listResources(request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Resource>> listResources(
            ListResourcesRequest request, RequestOptions requestOptions) {
        return this.rawClient.listResources(request, requestOptions).thenApply(response -> response.body());
    }
}
