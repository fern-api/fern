/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.trace.resources.problem;

import com.seed.trace.core.ClientOptions;
import com.seed.trace.core.RequestOptions;
import com.seed.trace.resources.problem.requests.GetDefaultStarterFilesRequest;
import com.seed.trace.resources.problem.types.CreateProblemRequest;
import com.seed.trace.resources.problem.types.CreateProblemResponse;
import com.seed.trace.resources.problem.types.GetDefaultStarterFilesResponse;
import com.seed.trace.resources.problem.types.UpdateProblemResponse;

public class ProblemClient {
    protected final ClientOptions clientOptions;

    private final RawProblemClient rawClient;

    public ProblemClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawProblemClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawProblemClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates a problem
     */
    public CreateProblemResponse createProblem(CreateProblemRequest request) {
        return this.rawClient.createProblem(request).body();
    }

    /**
     * Creates a problem
     */
    public CreateProblemResponse createProblem(CreateProblemRequest request, RequestOptions requestOptions) {
        return this.rawClient.createProblem(request, requestOptions).body();
    }

    /**
     * Updates a problem
     */
    public UpdateProblemResponse updateProblem(String problemId, CreateProblemRequest request) {
        return this.rawClient.updateProblem(problemId, request).body();
    }

    /**
     * Updates a problem
     */
    public UpdateProblemResponse updateProblem(
            String problemId, CreateProblemRequest request, RequestOptions requestOptions) {
        return this.rawClient.updateProblem(problemId, request, requestOptions).body();
    }

    /**
     * Soft deletes a problem
     */
    public void deleteProblem(String problemId) {
        this.rawClient.deleteProblem(problemId).body();
    }

    /**
     * Soft deletes a problem
     */
    public void deleteProblem(String problemId, RequestOptions requestOptions) {
        this.rawClient.deleteProblem(problemId, requestOptions).body();
    }

    /**
     * Returns default starter files for problem
     */
    public GetDefaultStarterFilesResponse getDefaultStarterFiles(GetDefaultStarterFilesRequest request) {
        return this.rawClient.getDefaultStarterFiles(request).body();
    }

    /**
     * Returns default starter files for problem
     */
    public GetDefaultStarterFilesResponse getDefaultStarterFiles(
            GetDefaultStarterFilesRequest request, RequestOptions requestOptions) {
        return this.rawClient.getDefaultStarterFiles(request, requestOptions).body();
    }
}
