/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.trace;

import com.seed.trace.core.ClientOptions;
import com.seed.trace.core.Environment;
import okhttp3.OkHttpClient;

public final class AsyncSeedTraceClientBuilder {
    private ClientOptions.Builder clientOptionsBuilder = ClientOptions.builder();

    private String token = null;

    private String xRandomHeader = null;

    private Environment environment = Environment.PROD;

    /**
     * Sets token
     */
    public AsyncSeedTraceClientBuilder token(String token) {
        this.token = token;
        return this;
    }

    /**
     * Sets xRandomHeader
     */
    public AsyncSeedTraceClientBuilder xRandomHeader(String xRandomHeader) {
        this.xRandomHeader = xRandomHeader;
        return this;
    }

    public AsyncSeedTraceClientBuilder environment(Environment environment) {
        this.environment = environment;
        return this;
    }

    public AsyncSeedTraceClientBuilder url(String url) {
        this.environment = Environment.custom(url);
        return this;
    }

    /**
     * Sets the timeout (in seconds) for the client
     */
    public AsyncSeedTraceClientBuilder timeout(int timeout) {
        this.clientOptionsBuilder.timeout(timeout);
        return this;
    }

    /**
     * Sets the underlying OkHttp client
     */
    public AsyncSeedTraceClientBuilder httpClient(OkHttpClient httpClient) {
        this.clientOptionsBuilder.httpClient(httpClient);
        return this;
    }

    public AsyncSeedTraceClient build() {
        this.clientOptionsBuilder.addHeader("Authorization", "Bearer " + this.token);
        if (xRandomHeader != null) {
            this.clientOptionsBuilder.addHeader("X-Random-Header", this.xRandomHeader);
        }
        clientOptionsBuilder.environment(this.environment);
        return new AsyncSeedTraceClient(clientOptionsBuilder.build());
    }
}
