/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.trace.resources.submission;

import com.seed.trace.core.ClientOptions;
import com.seed.trace.core.RequestOptions;
import com.seed.trace.resources.commons.types.Language;
import com.seed.trace.resources.submission.types.ExecutionSessionResponse;
import com.seed.trace.resources.submission.types.GetExecutionSessionStateResponse;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class AsyncSubmissionClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSubmissionClient rawClient;

    public AsyncSubmissionClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSubmissionClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSubmissionClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Returns sessionId and execution server URL for session. Spins up server.
     */
    public CompletableFuture<ExecutionSessionResponse> createExecutionSession(Language language) {
        return this.rawClient.createExecutionSession(language).thenApply(response -> response.body());
    }

    /**
     * Returns sessionId and execution server URL for session. Spins up server.
     */
    public CompletableFuture<ExecutionSessionResponse> createExecutionSession(
            Language language, RequestOptions requestOptions) {
        return this.rawClient.createExecutionSession(language, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns execution server URL for session. Returns empty if session isn't registered.
     */
    public CompletableFuture<Optional<ExecutionSessionResponse>> getExecutionSession(String sessionId) {
        return this.rawClient.getExecutionSession(sessionId).thenApply(response -> response.body());
    }

    /**
     * Returns execution server URL for session. Returns empty if session isn't registered.
     */
    public CompletableFuture<Optional<ExecutionSessionResponse>> getExecutionSession(
            String sessionId, RequestOptions requestOptions) {
        return this.rawClient.getExecutionSession(sessionId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Stops execution session.
     */
    public CompletableFuture<Void> stopExecutionSession(String sessionId) {
        return this.rawClient.stopExecutionSession(sessionId).thenApply(response -> response.body());
    }

    /**
     * Stops execution session.
     */
    public CompletableFuture<Void> stopExecutionSession(String sessionId, RequestOptions requestOptions) {
        return this.rawClient.stopExecutionSession(sessionId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<GetExecutionSessionStateResponse> getExecutionSessionsState() {
        return this.rawClient.getExecutionSessionsState().thenApply(response -> response.body());
    }

    public CompletableFuture<GetExecutionSessionStateResponse> getExecutionSessionsState(
            RequestOptions requestOptions) {
        return this.rawClient.getExecutionSessionsState(requestOptions).thenApply(response -> response.body());
    }
}
