/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.trace.resources.v2;

import com.seed.trace.core.ClientOptions;
import com.seed.trace.core.RequestOptions;
import com.seed.trace.core.Suppliers;
import com.seed.trace.resources.v2.problem.AsyncProblemClient;
import com.seed.trace.resources.v2.v3.AsyncV3Client;
import java.util.concurrent.CompletableFuture;
import java.util.function.Supplier;

public class AsyncV2Client {
    protected final ClientOptions clientOptions;

    private final AsyncRawV2Client rawClient;

    protected final Supplier<AsyncProblemClient> problemClient;

    protected final Supplier<AsyncV3Client> v3Client;

    public AsyncV2Client(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawV2Client(clientOptions);
        this.problemClient = Suppliers.memoize(() -> new AsyncProblemClient(clientOptions));
        this.v3Client = Suppliers.memoize(() -> new AsyncV3Client(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawV2Client withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Void> test() {
        return this.rawClient.test().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> test(RequestOptions requestOptions) {
        return this.rawClient.test(requestOptions).thenApply(response -> response.body());
    }

    public AsyncProblemClient problem() {
        return this.problemClient.get();
    }

    public AsyncV3Client v3() {
        return this.v3Client.get();
    }
}
