/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.trace.resources.submission.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class SubmissionTypeEnum {
    public static final SubmissionTypeEnum TEST = new SubmissionTypeEnum(Value.TEST, "TEST");

    private final Value value;

    private final String string;

    SubmissionTypeEnum(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof SubmissionTypeEnum && this.string.equals(((SubmissionTypeEnum) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case TEST:
                return visitor.visitTest();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static SubmissionTypeEnum valueOf(String value) {
        switch (value) {
            case "TEST":
                return TEST;
            default:
                return new SubmissionTypeEnum(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        TEST,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitTest();

        T visitUnknown(String unknownType);
    }
}
