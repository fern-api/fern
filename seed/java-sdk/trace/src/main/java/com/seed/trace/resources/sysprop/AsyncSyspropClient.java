/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.trace.resources.sysprop;

import com.seed.trace.core.ClientOptions;
import com.seed.trace.core.RequestOptions;
import com.seed.trace.resources.commons.types.Language;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

public class AsyncSyspropClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSyspropClient rawClient;

    public AsyncSyspropClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSyspropClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSyspropClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Void> setNumWarmInstances(Language language, int numWarmInstances) {
        return this.rawClient.setNumWarmInstances(language, numWarmInstances).thenApply(response -> response.body());
    }

    public CompletableFuture<Void> setNumWarmInstances(
            Language language, int numWarmInstances, RequestOptions requestOptions) {
        return this.rawClient
                .setNumWarmInstances(language, numWarmInstances, requestOptions)
                .thenApply(response -> response.body());
    }

    public CompletableFuture<Map<Language, Integer>> getNumWarmInstances() {
        return this.rawClient.getNumWarmInstances().thenApply(response -> response.body());
    }

    public CompletableFuture<Map<Language, Integer>> getNumWarmInstances(RequestOptions requestOptions) {
        return this.rawClient.getNumWarmInstances(requestOptions).thenApply(response -> response.body());
    }
}
