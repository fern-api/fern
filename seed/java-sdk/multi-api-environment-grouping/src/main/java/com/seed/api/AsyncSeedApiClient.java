/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api;

import com.seed.api.core.ClientOptions;
import com.seed.api.core.RequestOptions;
import com.seed.api.requests.PaymentRequest;
import com.seed.api.requests.RefundRequest;
import com.seed.api.types.Account;
import com.seed.api.types.Balance;
import com.seed.api.types.PaymentResponse;
import com.seed.api.types.Refund;
import com.seed.api.types.RefundResponse;
import com.seed.api.types.Transaction;
import com.seed.api.types.Wallet;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncSeedApiClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSeedApiClient rawClient;

    public AsyncSeedApiClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSeedApiClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSeedApiClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<List<Wallet>> listWallets() {
        return this.rawClient.listWallets().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Wallet>> listWallets(RequestOptions requestOptions) {
        return this.rawClient.listWallets(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Wallet> getWallet(String walletId) {
        return this.rawClient.getWallet(walletId).thenApply(response -> response.body());
    }

    public CompletableFuture<Wallet> getWallet(String walletId, RequestOptions requestOptions) {
        return this.rawClient.getWallet(walletId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Balance> getWalletBalance(String walletId) {
        return this.rawClient.getWalletBalance(walletId).thenApply(response -> response.body());
    }

    public CompletableFuture<Balance> getWalletBalance(String walletId, RequestOptions requestOptions) {
        return this.rawClient.getWalletBalance(walletId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Account>> listAccounts() {
        return this.rawClient.listAccounts().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Account>> listAccounts(RequestOptions requestOptions) {
        return this.rawClient.listAccounts(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Transaction>> listTransactions() {
        return this.rawClient.listTransactions().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Transaction>> listTransactions(RequestOptions requestOptions) {
        return this.rawClient.listTransactions(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Transaction> getTransaction(String transactionId) {
        return this.rawClient.getTransaction(transactionId).thenApply(response -> response.body());
    }

    public CompletableFuture<Transaction> getTransaction(String transactionId, RequestOptions requestOptions) {
        return this.rawClient.getTransaction(transactionId, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<PaymentResponse> createPayment(PaymentRequest request) {
        return this.rawClient.createPayment(request).thenApply(response -> response.body());
    }

    public CompletableFuture<PaymentResponse> createPayment(PaymentRequest request, RequestOptions requestOptions) {
        return this.rawClient.createPayment(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<RefundResponse> refundPayment(String paymentId, RefundRequest request) {
        return this.rawClient.refundPayment(paymentId, request).thenApply(response -> response.body());
    }

    public CompletableFuture<RefundResponse> refundPayment(
            String paymentId, RefundRequest request, RequestOptions requestOptions) {
        return this.rawClient.refundPayment(paymentId, request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<Refund>> listRefunds() {
        return this.rawClient.listRefunds().thenApply(response -> response.body());
    }

    public CompletableFuture<List<Refund>> listRefunds(RequestOptions requestOptions) {
        return this.rawClient.listRefunds(requestOptions).thenApply(response -> response.body());
    }

    public static AsyncSeedApiClientBuilder builder() {
        return new AsyncSeedApiClientBuilder();
    }
}
