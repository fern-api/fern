/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = Wallet.Builder.class)
public final class Wallet {
    private final String id;

    private final double balance;

    private final String currency;

    private final OffsetDateTime createdAt;

    private final Map<String, Object> additionalProperties;

    private Wallet(
            String id,
            double balance,
            String currency,
            OffsetDateTime createdAt,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.balance = balance;
        this.currency = currency;
        this.createdAt = createdAt;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("id")
    public String getId() {
        return id;
    }

    @JsonProperty("balance")
    public double getBalance() {
        return balance;
    }

    @JsonProperty("currency")
    public String getCurrency() {
        return currency;
    }

    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Wallet && equalTo((Wallet) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Wallet other) {
        return id.equals(other.id)
                && balance == other.balance
                && currency.equals(other.currency)
                && createdAt.equals(other.createdAt);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.balance, this.currency, this.createdAt);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        BalanceStage id(@NotNull String id);

        Builder from(Wallet other);
    }

    public interface BalanceStage {
        CurrencyStage balance(double balance);
    }

    public interface CurrencyStage {
        CreatedAtStage currency(@NotNull String currency);
    }

    public interface CreatedAtStage {
        _FinalStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface _FinalStage {
        Wallet build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, BalanceStage, CurrencyStage, CreatedAtStage, _FinalStage {
        private String id;

        private double balance;

        private String currency;

        private OffsetDateTime createdAt;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Wallet other) {
            id(other.getId());
            balance(other.getBalance());
            currency(other.getCurrency());
            createdAt(other.getCreatedAt());
            return this;
        }

        @java.lang.Override
        @JsonSetter("id")
        public BalanceStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("balance")
        public CurrencyStage balance(double balance) {
            this.balance = balance;
            return this;
        }

        @java.lang.Override
        @JsonSetter("currency")
        public CreatedAtStage currency(@NotNull String currency) {
            this.currency = Objects.requireNonNull(currency, "currency must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("createdAt")
        public _FinalStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        @java.lang.Override
        public Wallet build() {
            return new Wallet(id, balance, currency, createdAt, additionalProperties);
        }
    }
}
