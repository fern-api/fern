/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.objectsWithImports.resources.optional;

import com.seed.objectsWithImports.core.ClientOptions;
import com.seed.objectsWithImports.core.RequestOptions;
import java.util.Map;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class AsyncOptionalClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawOptionalClient rawClient;

    public AsyncOptionalClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawOptionalClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawOptionalClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<String> sendOptionalBody() {
        return this.rawClient.sendOptionalBody().thenApply(response -> response.body());
    }

    public CompletableFuture<String> sendOptionalBody(Optional<Map<String, Object>> request) {
        return this.rawClient.sendOptionalBody(request).thenApply(response -> response.body());
    }

    public CompletableFuture<String> sendOptionalBody(
            Optional<Map<String, Object>> request, RequestOptions requestOptions) {
        return this.rawClient.sendOptionalBody(request, requestOptions).thenApply(response -> response.body());
    }
}
