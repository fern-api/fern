/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.httpHead.resources.user;

import com.seed.httpHead.core.ClientOptions;
import com.seed.httpHead.core.RequestOptions;
import com.seed.httpHead.resources.user.requests.ListUsersRequest;
import com.seed.httpHead.resources.user.types.User;
import java.util.List;
import java.util.concurrent.CompletableFuture;

public class AsyncUserClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawUserClient rawClient;

    public AsyncUserClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawUserClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawUserClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Void> head() {
        return this.rawClient.head().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> head(RequestOptions requestOptions) {
        return this.rawClient.head(requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<List<User>> list(ListUsersRequest request) {
        return this.rawClient.list(request).thenApply(response -> response.body());
    }

    public CompletableFuture<List<User>> list(ListUsersRequest request, RequestOptions requestOptions) {
        return this.rawClient.list(request, requestOptions).thenApply(response -> response.body());
    }
}
