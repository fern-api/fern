/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api;

import com.seed.api.core.ClientOptions;
import com.seed.api.core.RequestOptions;
import com.seed.api.core.Suppliers;
import com.seed.api.resources.a.AsyncAClient;
import com.seed.api.resources.folder.AsyncFolderClient;
import java.util.concurrent.CompletableFuture;
import java.util.function.Supplier;

public class AsyncSeedApiClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSeedApiClient rawClient;

    protected final Supplier<AsyncAClient> aClient;

    protected final Supplier<AsyncFolderClient> folderClient;

    public AsyncSeedApiClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSeedApiClient(clientOptions);
        this.aClient = Suppliers.memoize(() -> new AsyncAClient(clientOptions));
        this.folderClient = Suppliers.memoize(() -> new AsyncFolderClient(clientOptions));
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSeedApiClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<Void> foo() {
        return this.rawClient.foo().thenApply(response -> response.body());
    }

    public CompletableFuture<Void> foo(RequestOptions requestOptions) {
        return this.rawClient.foo(requestOptions).thenApply(response -> response.body());
    }

    public AsyncAClient a() {
        return this.aClient.get();
    }

    public AsyncFolderClient folder() {
        return this.folderClient.get();
    }

    public static AsyncSeedApiClientBuilder builder() {
        return new AsyncSeedApiClientBuilder();
    }
}
