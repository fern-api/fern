/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.literal;

import com.seed.literal.core.ClientOptions;
import com.seed.literal.core.Suppliers;
import com.seed.literal.resources.headers.AsyncHeadersClient;
import com.seed.literal.resources.inlined.AsyncInlinedClient;
import com.seed.literal.resources.path.AsyncPathClient;
import com.seed.literal.resources.query.AsyncQueryClient;
import com.seed.literal.resources.reference.AsyncReferenceClient;
import java.util.function.Supplier;

public class AsyncSeedLiteralClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncHeadersClient> headersClient;

    protected final Supplier<AsyncInlinedClient> inlinedClient;

    protected final Supplier<AsyncPathClient> pathClient;

    protected final Supplier<AsyncQueryClient> queryClient;

    protected final Supplier<AsyncReferenceClient> referenceClient;

    public AsyncSeedLiteralClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.headersClient = Suppliers.memoize(() -> new AsyncHeadersClient(clientOptions));
        this.inlinedClient = Suppliers.memoize(() -> new AsyncInlinedClient(clientOptions));
        this.pathClient = Suppliers.memoize(() -> new AsyncPathClient(clientOptions));
        this.queryClient = Suppliers.memoize(() -> new AsyncQueryClient(clientOptions));
        this.referenceClient = Suppliers.memoize(() -> new AsyncReferenceClient(clientOptions));
    }

    public AsyncHeadersClient headers() {
        return this.headersClient.get();
    }

    public AsyncInlinedClient inlined() {
        return this.inlinedClient.get();
    }

    public AsyncPathClient path() {
        return this.pathClient.get();
    }

    public AsyncQueryClient query() {
        return this.queryClient.get();
    }

    public AsyncReferenceClient reference() {
        return this.referenceClient.get();
    }

    public static SeedLiteralClientBuilder builder() {
        return new SeedLiteralClientBuilder();
    }
}
