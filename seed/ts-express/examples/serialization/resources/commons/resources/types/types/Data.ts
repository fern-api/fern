// This file was auto-generated by Fern from our API Definition.

import type * as SeedExamples from "../../../../../../api/index";
import * as core from "../../../../../../core";
import type * as serializers from "../../../../../index";

export const Data: core.serialization.Schema<serializers.commons.Data.Raw, SeedExamples.commons.Data> =
    core.serialization
        .union("type", {
            string: core.serialization.object({
                value: core.serialization.string(),
            }),
            base64: core.serialization.object({
                value: core.serialization.string(),
            }),
        })
        .transform<SeedExamples.commons.Data>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace Data {
    export type Raw = Data.String | Data.Base64;

    export interface String {
        type: "string";
        value: string;
    }

    export interface Base64 {
        type: "base64";
        value: string;
    }
}
