/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";

export const UnionWithSameStringTypes: core.serialization.Schema<
    serializers.UnionWithSameStringTypes.Raw,
    SeedUnions.UnionWithSameStringTypes
> = core.serialization
    .union("type", {
        customFormat: core.serialization.object({
            value: core.serialization.string(),
        }),
        regularString: core.serialization.object({
            value: core.serialization.string(),
        }),
        patternString: core.serialization.object({
            value: core.serialization.string(),
        }),
    })
    .transform<SeedUnions.UnionWithSameStringTypes>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UnionWithSameStringTypes {
    export type Raw =
        | UnionWithSameStringTypes.CustomFormat
        | UnionWithSameStringTypes.RegularString
        | UnionWithSameStringTypes.PatternString;

    export interface CustomFormat {
        type: "customFormat";
        value: string;
    }

    export interface RegularString {
        type: "regularString";
        value: string;
    }

    export interface PatternString {
        type: "patternString";
        value: string;
    }
}
