/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";

export const UnionWithSameNumberTypes: core.serialization.Schema<
    serializers.UnionWithSameNumberTypes.Raw,
    SeedUnions.UnionWithSameNumberTypes
> = core.serialization
    .union("type", {
        positiveInt: core.serialization.object({
            value: core.serialization.number(),
        }),
        negativeInt: core.serialization.object({
            value: core.serialization.number(),
        }),
        anyNumber: core.serialization.object({
            value: core.serialization.number(),
        }),
    })
    .transform<SeedUnions.UnionWithSameNumberTypes>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UnionWithSameNumberTypes {
    export type Raw =
        | UnionWithSameNumberTypes.PositiveInt
        | UnionWithSameNumberTypes.NegativeInt
        | UnionWithSameNumberTypes.AnyNumber;

    export interface PositiveInt {
        type: "positiveInt";
        value: number;
    }

    export interface NegativeInt {
        type: "negativeInt";
        value: number;
    }

    export interface AnyNumber {
        type: "anyNumber";
        value: number;
    }
}
