// This file was auto-generated by Fern from our API Definition.

import type * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";
import * as serializers from "../../../index";

export const UnionWithSubTypes: core.serialization.Schema<
    serializers.UnionWithSubTypes.Raw,
    SeedUnions.UnionWithSubTypes
> = core.serialization
    .union("type", {
        foo: core.serialization.lazyObject(() => serializers.Foo),
        fooExtended: core.serialization.lazyObject(() => serializers.FooExtended),
    })
    .transform<SeedUnions.UnionWithSubTypes>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UnionWithSubTypes {
    export type Raw = UnionWithSubTypes.Foo | UnionWithSubTypes.FooExtended;

    export interface Foo extends serializers.Foo.Raw {
        type: "foo";
    }

    export interface FooExtended extends serializers.FooExtended.Raw {
        type: "fooExtended";
    }
}
