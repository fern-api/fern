// This file was auto-generated by Fern from our API Definition.

import type * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";
import type * as serializers from "../../../index";

export const UnionWithOptionalTime: core.serialization.Schema<
    serializers.UnionWithOptionalTime.Raw,
    SeedUnions.UnionWithOptionalTime
> = core.serialization
    .union("type", {
        date: core.serialization.object({
            value: core.serialization.string().optional(),
        }),
        datetime: core.serialization.object({
            value: core.serialization.date().optional(),
        }),
    })
    .transform<SeedUnions.UnionWithOptionalTime>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UnionWithOptionalTime {
    export type Raw = UnionWithOptionalTime.Date | UnionWithOptionalTime.Datetime;

    export interface Date {
        type: "date";
        value?: string | null;
    }

    export interface Datetime {
        type: "datetime";
        value?: string | null;
    }
}
