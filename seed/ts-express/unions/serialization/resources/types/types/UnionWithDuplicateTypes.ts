// This file was auto-generated by Fern from our API Definition.

import type * as SeedUnions from "../../../../api/index";
import * as core from "../../../../core";
import * as serializers from "../../../index";

export const UnionWithDuplicateTypes: core.serialization.Schema<
    serializers.UnionWithDuplicateTypes.Raw,
    SeedUnions.UnionWithDuplicateTypes
> = core.serialization
    .union("type", {
        foo1: core.serialization.lazyObject(() => serializers.Foo),
        foo2: core.serialization.lazyObject(() => serializers.Foo),
    })
    .transform<SeedUnions.UnionWithDuplicateTypes>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace UnionWithDuplicateTypes {
    export type Raw = UnionWithDuplicateTypes.Foo1 | UnionWithDuplicateTypes.Foo2;

    export interface Foo1 extends serializers.Foo.Raw {
        type: "foo1";
    }

    export interface Foo2 extends serializers.Foo.Raw {
        type: "foo2";
    }
}
