/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedNullableOptional from "../../../../api/index";
import * as core from "../../../../core";

export const UserResponse: core.serialization.ObjectSchema<
    serializers.UserResponse.Raw,
    SeedNullableOptional.UserResponse
> = core.serialization.object({
    id: core.serialization.string(),
    username: core.serialization.string(),
    email: core.serialization.string().nullable(),
    phone: core.serialization.string().optional(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date().nullable(),
    address: core.serialization.lazyObject(() => serializers.Address).optional(),
});

export declare namespace UserResponse {
    export interface Raw {
        id: string;
        username: string;
        email: string | null;
        phone?: string | null;
        createdAt: string;
        updatedAt: string | null;
        address?: serializers.Address.Raw | null;
    }
}
