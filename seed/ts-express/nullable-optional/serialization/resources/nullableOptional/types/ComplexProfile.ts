/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedNullableOptional from "../../../../api/index";
import * as core from "../../../../core";

export const ComplexProfile: core.serialization.ObjectSchema<
    serializers.ComplexProfile.Raw,
    SeedNullableOptional.ComplexProfile
> = core.serialization.object({
    id: core.serialization.string(),
    nullableRole: core.serialization.lazy(() => serializers.UserRole).nullable(),
    optionalRole: core.serialization.lazy(() => serializers.UserRole).optional(),
    optionalNullableRole: core.serialization.lazy(() => serializers.UserRole).optionalNullable(),
    nullableStatus: core.serialization.lazy(() => serializers.UserStatus).nullable(),
    optionalStatus: core.serialization.lazy(() => serializers.UserStatus).optional(),
    optionalNullableStatus: core.serialization.lazy(() => serializers.UserStatus).optionalNullable(),
    nullableNotification: core.serialization.lazy(() => serializers.NotificationMethod).nullable(),
    optionalNotification: core.serialization.lazy(() => serializers.NotificationMethod).optional(),
    optionalNullableNotification: core.serialization.lazy(() => serializers.NotificationMethod).optionalNullable(),
    nullableSearchResult: core.serialization.lazy(() => serializers.SearchResult).nullable(),
    optionalSearchResult: core.serialization.lazy(() => serializers.SearchResult).optional(),
    nullableArray: core.serialization.list(core.serialization.string()).nullable(),
    optionalArray: core.serialization.list(core.serialization.string()).optional(),
    optionalNullableArray: core.serialization.list(core.serialization.string()).optionalNullable(),
    nullableListOfNullables: core.serialization.list(core.serialization.string().nullable()).nullable(),
    nullableMapOfNullables: core.serialization
        .record(core.serialization.string(), core.serialization.lazyObject(() => serializers.Address).nullable())
        .nullable(),
    nullableListOfUnions: core.serialization
        .list(core.serialization.lazy(() => serializers.NotificationMethod))
        .nullable(),
    optionalMapOfEnums: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.lazy(() => serializers.UserRole),
        )
        .optional(),
});

export declare namespace ComplexProfile {
    export interface Raw {
        id: string;
        nullableRole: serializers.UserRole.Raw | null;
        optionalRole?: serializers.UserRole.Raw | null;
        optionalNullableRole?: (serializers.UserRole.Raw | null) | null;
        nullableStatus: serializers.UserStatus.Raw | null;
        optionalStatus?: serializers.UserStatus.Raw | null;
        optionalNullableStatus?: (serializers.UserStatus.Raw | null) | null;
        nullableNotification: serializers.NotificationMethod.Raw | null;
        optionalNotification?: serializers.NotificationMethod.Raw | null;
        optionalNullableNotification?: (serializers.NotificationMethod.Raw | null) | null;
        nullableSearchResult: serializers.SearchResult.Raw | null;
        optionalSearchResult?: serializers.SearchResult.Raw | null;
        nullableArray: string[] | null;
        optionalArray?: string[] | null;
        optionalNullableArray?: (string[] | null) | null;
        nullableListOfNullables: (string | null)[] | null;
        nullableMapOfNullables: Record<string, serializers.Address.Raw | null> | null;
        nullableListOfUnions: serializers.NotificationMethod.Raw[] | null;
        optionalMapOfEnums?: Record<string, serializers.UserRole.Raw> | null;
    }
}
