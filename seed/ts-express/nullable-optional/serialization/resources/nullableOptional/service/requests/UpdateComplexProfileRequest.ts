/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as SeedNullableOptional from "../../../../../api/index";
import * as core from "../../../../../core";

export const UpdateComplexProfileRequest: core.serialization.Schema<
    serializers.UpdateComplexProfileRequest.Raw,
    SeedNullableOptional.UpdateComplexProfileRequest
> = core.serialization.object({
    nullableRole: core.serialization.lazy(() => serializers.UserRole).optionalNullable(),
    nullableStatus: core.serialization.lazy(() => serializers.UserStatus).optionalNullable(),
    nullableNotification: core.serialization.lazy(() => serializers.NotificationMethod).optionalNullable(),
    nullableSearchResult: core.serialization.lazy(() => serializers.SearchResult).optionalNullable(),
    nullableArray: core.serialization.list(core.serialization.string()).optionalNullable(),
});

export declare namespace UpdateComplexProfileRequest {
    export interface Raw {
        nullableRole?: (serializers.UserRole.Raw | null) | null;
        nullableStatus?: (serializers.UserStatus.Raw | null) | null;
        nullableNotification?: (serializers.NotificationMethod.Raw | null) | null;
        nullableSearchResult?: (serializers.SearchResult.Raw | null) | null;
        nullableArray?: (string[] | null) | null;
    }
}
