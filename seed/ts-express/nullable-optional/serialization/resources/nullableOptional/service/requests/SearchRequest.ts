/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as SeedNullableOptional from "../../../../../api/index";
import * as core from "../../../../../core";

export const SearchRequest: core.serialization.Schema<
    serializers.SearchRequest.Raw,
    SeedNullableOptional.SearchRequest
> = core.serialization.object({
    query: core.serialization.string(),
    filters: core.serialization.record(core.serialization.string(), core.serialization.string().nullable()).optional(),
    includeTypes: core.serialization.list(core.serialization.string()).nullable(),
});

export declare namespace SearchRequest {
    export interface Raw {
        query: string;
        filters?: Record<string, string | null> | null;
        includeTypes: string[] | null;
    }
}
