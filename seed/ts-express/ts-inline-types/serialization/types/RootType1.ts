/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as SeedObject from "../../api/index";
import * as core from "../../core";

export const RootType1: core.serialization.ObjectSchema<serializers.RootType1.Raw, SeedObject.RootType1> =
    core.serialization.object({
        foo: core.serialization.string(),
        bar: core.serialization.lazyObject(() => serializers.RootType1InlineType1),
        fooMap: core.serialization.record(
            core.serialization.string(),
            core.serialization.lazyObject(() => serializers.RootType1FooMapValue),
        ),
        fooList: core.serialization.list(core.serialization.lazyObject(() => serializers.RootType1FooListItem)),
        fooSet: core.serialization.list(core.serialization.lazyObject(() => serializers.RootType1FooSetItem)),
        ref: core.serialization.lazyObject(() => serializers.ReferenceType),
    });

export declare namespace RootType1 {
    export interface Raw {
        foo: string;
        bar: serializers.RootType1InlineType1.Raw;
        fooMap: Record<string, serializers.RootType1FooMapValue.Raw>;
        fooList: serializers.RootType1FooListItem.Raw[];
        fooSet: serializers.RootType1FooSetItem.Raw[];
        ref: serializers.ReferenceType.Raw;
    }
}
