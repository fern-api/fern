/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../serialization";
import express from "express";
export interface PathParamServiceMethods {
    send(req: express.Request<{
        operand: serializers.Operand.Raw;
        maybeOperand?: serializers.Operand.Raw | null;
        operandOrColor: serializers.ColorOrOperand.Raw;
        maybeOperandOrColor?: serializers.ColorOrOperand.Raw | null;
    }, never, never, never>, res: {
        send: () => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }): void | Promise<void>;
}
export declare class PathParamService {
    private readonly methods;
    private router;
    constructor(methods: PathParamServiceMethods, middleware?: express.RequestHandler[]);
    addMiddleware(handler: express.RequestHandler): this;
    toRouter(): express.Router;
}
