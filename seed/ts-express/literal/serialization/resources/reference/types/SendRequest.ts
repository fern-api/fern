/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedLiteral from "../../../../api/index";
import * as core from "../../../../core";

export const SendRequest: core.serialization.ObjectSchema<serializers.SendRequest.Raw, SeedLiteral.SendRequest> =
    core.serialization.object({
        prompt: core.serialization.stringLiteral("You are a helpful assistant"),
        query: core.serialization.string(),
        stream: core.serialization.booleanLiteral(false),
        ending: core.serialization.stringLiteral("$ending"),
        context: core.serialization.lazy(() => serializers.SomeLiteral),
        maybeContext: core.serialization.lazy(() => serializers.SomeLiteral).optional(),
        containerObject: core.serialization.lazyObject(() => serializers.ContainerObject),
    });

export declare namespace SendRequest {
    export interface Raw {
        prompt: "You are a helpful assistant";
        query: string;
        stream: false;
        ending: "$ending";
        context: serializers.SomeLiteral.Raw;
        maybeContext?: serializers.SomeLiteral.Raw | null;
        containerObject: serializers.ContainerObject.Raw;
    }
}
