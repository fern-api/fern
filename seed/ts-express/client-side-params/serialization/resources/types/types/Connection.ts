/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedClientSideParams from "../../../../api/index";
import * as core from "../../../../core";

export const Connection: core.serialization.ObjectSchema<serializers.Connection.Raw, SeedClientSideParams.Connection> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
        strategy: core.serialization.string(),
        options: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        enabledClients: core.serialization.property(
            "enabled_clients",
            core.serialization.list(core.serialization.string()).optional(),
        ),
        realms: core.serialization.list(core.serialization.string()).optional(),
        isDomainConnection: core.serialization.property(
            "is_domain_connection",
            core.serialization.boolean().optional(),
        ),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    });

export declare namespace Connection {
    export interface Raw {
        id: string;
        name: string;
        display_name?: string | null;
        strategy: string;
        options?: Record<string, unknown> | null;
        enabled_clients?: string[] | null;
        realms?: string[] | null;
        is_domain_connection?: boolean | null;
        metadata?: Record<string, unknown> | null;
    }
}
