/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as SeedApi from "../../api/index";
import * as core from "../../core";

export const Account: core.serialization.ObjectSchema<serializers.Account.Raw, SeedApi.Account> = core.serialization
    .object({
        resourceType: core.serialization.property("resource_type", core.serialization.stringLiteral("Account")),
        name: core.serialization.string(),
        patient: core.serialization.lazyObject(() => serializers.Patient).optional(),
        practitioner: core.serialization.lazyObject(() => serializers.Practitioner).optional(),
    })
    .extend(core.serialization.lazyObject(() => serializers.BaseResource));

export declare namespace Account {
    export interface Raw extends serializers.BaseResource.Raw {
        resource_type: "Account";
        name: string;
        patient?: serializers.Patient.Raw | null;
        practitioner?: serializers.Practitioner.Raw | null;
    }
}
