/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as SeedExhaustive from "../../../../..";
export declare type Animal = SeedExhaustive.types.Animal.Dog | SeedExhaustive.types.Animal.Cat | SeedExhaustive.types.Animal._Unknown;
export declare namespace Animal {
    interface Dog extends SeedExhaustive.types.Dog, _Utils {
        animal: "dog";
    }
    interface Cat extends SeedExhaustive.types.Cat, _Utils {
        animal: "cat";
    }
    interface _Unknown extends _Utils {
        animal: void;
    }
    interface _Utils {
        _visit: <_Result>(visitor: SeedExhaustive.types.Animal._Visitor<_Result>) => _Result;
    }
    interface _Visitor<_Result> {
        dog: (value: SeedExhaustive.types.Dog) => _Result;
        cat: (value: SeedExhaustive.types.Cat) => _Result;
        _other: (value: {
            animal: string;
        }) => _Result;
    }
}
export declare const Animal: {
    readonly dog: (value: SeedExhaustive.types.Dog) => SeedExhaustive.types.Animal.Dog;
    readonly cat: (value: SeedExhaustive.types.Cat) => SeedExhaustive.types.Animal.Cat;
    readonly _unknown: (value: {
        animal: string;
    }) => SeedExhaustive.types.Animal._Unknown;
    readonly _visit: <_Result>(value: SeedExhaustive.types.Animal, visitor: SeedExhaustive.types.Animal._Visitor<_Result>) => _Result;
};
