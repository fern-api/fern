/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as SeedExhaustive from "../../../../..";
import express from "express";
export interface ObjectServiceMethods {
    getAndReturnWithOptionalField(req: express.Request<never, SeedExhaustive.types.ObjectWithOptionalField, SeedExhaustive.types.ObjectWithOptionalField, never>, res: {
        send: (responseBody: SeedExhaustive.types.ObjectWithOptionalField) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }): void | Promise<void>;
    getAndReturnWithRequiredField(req: express.Request<never, SeedExhaustive.types.ObjectWithRequiredField, SeedExhaustive.types.ObjectWithRequiredField, never>, res: {
        send: (responseBody: SeedExhaustive.types.ObjectWithRequiredField) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }): void | Promise<void>;
    getAndReturnWithMapOfMap(req: express.Request<never, SeedExhaustive.types.ObjectWithMapOfMap, SeedExhaustive.types.ObjectWithMapOfMap, never>, res: {
        send: (responseBody: SeedExhaustive.types.ObjectWithMapOfMap) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }): void | Promise<void>;
    getAndReturnNestedWithOptionalField(req: express.Request<never, SeedExhaustive.types.NestedObjectWithOptionalField, SeedExhaustive.types.NestedObjectWithOptionalField, never>, res: {
        send: (responseBody: SeedExhaustive.types.NestedObjectWithOptionalField) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }): void | Promise<void>;
    getAndReturnNestedWithRequiredField(req: express.Request<never, SeedExhaustive.types.NestedObjectWithRequiredField, SeedExhaustive.types.NestedObjectWithRequiredField, never>, res: {
        send: (responseBody: SeedExhaustive.types.NestedObjectWithRequiredField) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }): void | Promise<void>;
    getAndReturnNestedWithRequiredFieldAsList(req: express.Request<never, SeedExhaustive.types.NestedObjectWithRequiredField, SeedExhaustive.types.NestedObjectWithRequiredField[], never>, res: {
        send: (responseBody: SeedExhaustive.types.NestedObjectWithRequiredField) => Promise<void>;
        cookie: (cookie: string, value: string, options?: express.CookieOptions) => void;
        locals: any;
    }): void | Promise<void>;
}
export declare class ObjectService {
    private readonly methods;
    private router;
    constructor(methods: ObjectServiceMethods, middleware?: express.RequestHandler[]);
    addMiddleware(handler: express.RequestHandler): this;
    toRouter(): express.Router;
}
