/**
 * This file was auto-generated by Fern from our API Definition.
 */

import express from "express";
import { InlinedRequestsService } from "./api/resources/inlinedRequests/service/InlinedRequestsService";
import { NoAuthService } from "./api/resources/noAuth/service/NoAuthService";
import { NoReqBodyService } from "./api/resources/noReqBody/service/NoReqBodyService";
import { ReqWithHeadersService } from "./api/resources/reqWithHeaders/service/ReqWithHeadersService";
import { ContainerService as endpoints_ContainerService } from "./api/resources/endpoints/resources/container/service/ContainerService";
import { ContentTypeService as endpoints_ContentTypeService } from "./api/resources/endpoints/resources/contentType/service/ContentTypeService";
import { EnumService as endpoints_EnumService } from "./api/resources/endpoints/resources/enum/service/EnumService";
import { HttpMethodsService as endpoints_HttpMethodsService } from "./api/resources/endpoints/resources/httpMethods/service/HttpMethodsService";
import { ObjectService as endpoints_ObjectService } from "./api/resources/endpoints/resources/object/service/ObjectService";
import { ParamsService as endpoints_ParamsService } from "./api/resources/endpoints/resources/params/service/ParamsService";
import { PrimitiveService as endpoints_PrimitiveService } from "./api/resources/endpoints/resources/primitive/service/PrimitiveService";
import { PutService as endpoints_PutService } from "./api/resources/endpoints/resources/put/service/PutService";
import { UnionService as endpoints_UnionService } from "./api/resources/endpoints/resources/union/service/UnionService";

export function register(
    expressApp: express.Express | express.Router,
    services: {
        inlinedRequests: InlinedRequestsService;
        noAuth: NoAuthService;
        noReqBody: NoReqBodyService;
        reqWithHeaders: ReqWithHeadersService;
        endpoints: {
            container: endpoints_ContainerService;
            contentType: endpoints_ContentTypeService;
            enum: endpoints_EnumService;
            httpMethods: endpoints_HttpMethodsService;
            object: endpoints_ObjectService;
            params: endpoints_ParamsService;
            primitive: endpoints_PrimitiveService;
            put: endpoints_PutService;
            union: endpoints_UnionService;
        };
    },
): void {
    (expressApp as any).use("/container", services.endpoints.container.toRouter());
    (expressApp as any).use("/foo", services.endpoints.contentType.toRouter());
    (expressApp as any).use("/enum", services.endpoints.enum.toRouter());
    (expressApp as any).use("/http-methods", services.endpoints.httpMethods.toRouter());
    (expressApp as any).use("/object", services.endpoints.object.toRouter());
    (expressApp as any).use("/params", services.endpoints.params.toRouter());
    (expressApp as any).use("/primitive", services.endpoints.primitive.toRouter());
    (expressApp as any).use("", services.endpoints.put.toRouter());
    (expressApp as any).use("/union", services.endpoints.union.toRouter());
    (expressApp as any).use("/req-bodies", services.inlinedRequests.toRouter());
    (expressApp as any).use("/no-auth", services.noAuth.toRouter());
    (expressApp as any).use("/no-req-body", services.noReqBody.toRouter());
    (expressApp as any).use("/test-headers", services.reqWithHeaders.toRouter());
}
