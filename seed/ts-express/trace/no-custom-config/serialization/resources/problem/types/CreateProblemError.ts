/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedTrace from "../../../../api/index";
import * as core from "../../../../core";

export const CreateProblemError: core.serialization.Schema<
    serializers.CreateProblemError.Raw,
    SeedTrace.CreateProblemError
> = core.serialization
    .union(core.serialization.discriminant("errorType", "_type"), {
        generic: core.serialization.lazyObject(() => serializers.GenericCreateProblemError),
    })
    .transform<SeedTrace.CreateProblemError>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace CreateProblemError {
    export type Raw = CreateProblemError.Generic;

    export interface Generic extends serializers.GenericCreateProblemError.Raw {
        _type: "generic";
    }
}
