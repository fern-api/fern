/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedTrace from "../../../../api/index";
import * as core from "../../../../core";

export const ProblemDescriptionBoard: core.serialization.Schema<
    serializers.ProblemDescriptionBoard.Raw,
    SeedTrace.ProblemDescriptionBoard
> = core.serialization
    .union("type", {
        html: core.serialization.object({
            value: core.serialization.string(),
        }),
        variable: core.serialization.object({
            value: core.serialization.lazy(() => serializers.VariableValue),
        }),
        testCaseId: core.serialization.object({
            value: core.serialization.string(),
        }),
    })
    .transform<SeedTrace.ProblemDescriptionBoard>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ProblemDescriptionBoard {
    export type Raw =
        | ProblemDescriptionBoard.Html
        | ProblemDescriptionBoard.Variable
        | ProblemDescriptionBoard.TestCaseId;

    export interface Html {
        type: "html";
        value: string;
    }

    export interface Variable {
        type: "variable";
        value: serializers.VariableValue.Raw;
    }

    export interface TestCaseId {
        type: "testCaseId";
        value: string;
    }
}
