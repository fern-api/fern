/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as SeedTrace from "../../../../api";
import * as core from "../../../../core";
export declare const TestSubmissionUpdateInfo: core.serialization.Schema<serializers.TestSubmissionUpdateInfo.Raw, SeedTrace.TestSubmissionUpdateInfo>;
export declare namespace TestSubmissionUpdateInfo {
    type Raw = TestSubmissionUpdateInfo.Running | TestSubmissionUpdateInfo.Stopped | TestSubmissionUpdateInfo.Errored | TestSubmissionUpdateInfo.GradedTestCase | TestSubmissionUpdateInfo.RecordedTestCase | TestSubmissionUpdateInfo.Finished;
    interface Running {
        type: "running";
        value: serializers.RunningSubmissionState.Raw;
    }
    interface Stopped {
        type: "stopped";
    }
    interface Errored {
        type: "errored";
        value: serializers.ErrorInfo.Raw;
    }
    interface GradedTestCase extends serializers.GradedTestCaseUpdate.Raw {
        type: "gradedTestCase";
    }
    interface RecordedTestCase extends serializers.RecordedTestCaseUpdate.Raw {
        type: "recordedTestCase";
    }
    interface Finished {
        type: "finished";
    }
}
