/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../..";
import * as SeedTrace from "../../../../api";
import * as core from "../../../../core";
export declare const WorkspaceSubmissionUpdateInfo: core.serialization.Schema<serializers.WorkspaceSubmissionUpdateInfo.Raw, SeedTrace.WorkspaceSubmissionUpdateInfo>;
export declare namespace WorkspaceSubmissionUpdateInfo {
    type Raw = WorkspaceSubmissionUpdateInfo.Running | WorkspaceSubmissionUpdateInfo.Ran | WorkspaceSubmissionUpdateInfo.Stopped | WorkspaceSubmissionUpdateInfo.Traced | WorkspaceSubmissionUpdateInfo.TracedV2 | WorkspaceSubmissionUpdateInfo.Errored | WorkspaceSubmissionUpdateInfo.Finished;
    interface Running {
        type: "running";
        value: serializers.RunningSubmissionState.Raw;
    }
    interface Ran extends serializers.WorkspaceRunDetails.Raw {
        type: "ran";
    }
    interface Stopped {
        type: "stopped";
    }
    interface Traced {
        type: "traced";
    }
    interface TracedV2 extends serializers.WorkspaceTracedUpdate.Raw {
        type: "tracedV2";
    }
    interface Errored {
        type: "errored";
        value: serializers.ErrorInfo.Raw;
    }
    interface Finished {
        type: "finished";
    }
}
