/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as SeedTrace from "../../../../api/index";
import * as core from "../../../../core";

export const TestCaseGrade: core.serialization.Schema<serializers.TestCaseGrade.Raw, SeedTrace.TestCaseGrade> =
    core.serialization
        .union("type", {
            hidden: core.serialization.lazyObject(() => serializers.TestCaseHiddenGrade),
            nonHidden: core.serialization.lazyObject(() => serializers.TestCaseNonHiddenGrade),
        })
        .transform<SeedTrace.TestCaseGrade>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace TestCaseGrade {
    export type Raw = TestCaseGrade.Hidden | TestCaseGrade.NonHidden;

    export interface Hidden extends serializers.TestCaseHiddenGrade.Raw {
        type: "hidden";
    }

    export interface NonHidden extends serializers.TestCaseNonHiddenGrade.Raw {
        type: "nonHidden";
    }
}
