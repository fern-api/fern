# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class NestedObjectWithLiterals(UniversalBaseModel):
    literal_1: typing.Literal["literal1"] = pydantic.Field(alias="literal1", default="literal1")
    literal_2: typing.Literal["literal2"] = pydantic.Field(alias="literal2", default="literal2")
    str_prop: str = pydantic.Field(alias="strProp")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
