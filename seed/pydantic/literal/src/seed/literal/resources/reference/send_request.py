# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .some_literal import SomeLiteral
import pydantic
from .container_object import ContainerObject
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class SendRequest(UniversalBaseModel):
    prompt: typing.Literal["You are a helpful assistant"] = "You are a helpful assistant"
    query: str
    stream: typing.Literal[False] = False
    ending: typing.Literal["$ending"] = "$ending"
    context: SomeLiteral = "You're super wise"
    maybe_context: typing.Optional[SomeLiteral] = pydantic.Field(alias="maybeContext", default=None)
    container_object: ContainerObject = pydantic.Field(alias="containerObject")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow
