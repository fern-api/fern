# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from .error_info import ErrorInfo
from .running_submission_state import RunningSubmissionState
from .workspace_run_details import WorkspaceRunDetails
from .workspace_traced_update import WorkspaceTracedUpdate

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class WorkspaceSubmissionUpdateInfo_Running(pydantic.BaseModel):
    type: typing.Literal["running"]
    value: RunningSubmissionState


class WorkspaceSubmissionUpdateInfo_Ran(WorkspaceRunDetails):
    type: typing.Literal["ran"]

    class Config:
        allow_population_by_field_name = True


class WorkspaceSubmissionUpdateInfo_Stopped(pydantic.BaseModel):
    type: typing.Literal["stopped"]


class WorkspaceSubmissionUpdateInfo_Traced(pydantic.BaseModel):
    type: typing.Literal["traced"]


class WorkspaceSubmissionUpdateInfo_TracedV2(WorkspaceTracedUpdate):
    type: typing.Literal["tracedV2"]

    class Config:
        allow_population_by_field_name = True


class WorkspaceSubmissionUpdateInfo_Errored(pydantic.BaseModel):
    type: typing.Literal["errored"]
    value: ErrorInfo


class WorkspaceSubmissionUpdateInfo_Finished(pydantic.BaseModel):
    type: typing.Literal["finished"]


WorkspaceSubmissionUpdateInfo = typing.Union[
    WorkspaceSubmissionUpdateInfo_Running,
    WorkspaceSubmissionUpdateInfo_Ran,
    WorkspaceSubmissionUpdateInfo_Stopped,
    WorkspaceSubmissionUpdateInfo_Traced,
    WorkspaceSubmissionUpdateInfo_TracedV2,
    WorkspaceSubmissionUpdateInfo_Errored,
    WorkspaceSubmissionUpdateInfo_Finished,
]
