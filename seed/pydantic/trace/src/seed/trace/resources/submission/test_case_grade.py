# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from ..commons.variable_value import VariableValue
from .exception_v_2 import ExceptionV2


class TestCaseGrade_Hidden(UniversalBaseModel):
    type: typing.Literal["hidden"] = "hidden"
    passed: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


class TestCaseGrade_NonHidden(UniversalBaseModel):
    type: typing.Literal["nonHidden"] = "nonHidden"
    passed: bool
    actual_result: typing.Optional[VariableValue] = pydantic.Field(alias="actualResult", default=None)
    exception: typing.Optional[ExceptionV2] = None
    stdout: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


TestCaseGrade = typing.Union[TestCaseGrade_Hidden, TestCaseGrade_NonHidden]
