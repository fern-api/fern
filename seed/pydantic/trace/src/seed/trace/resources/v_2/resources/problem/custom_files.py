# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ....commons.language import Language
from .basic_test_case_template import BasicTestCaseTemplate
from .files import Files
from .non_void_function_signature import NonVoidFunctionSignature


class CustomFiles_Basic(UniversalBaseModel):
    type: typing.Literal["basic"] = "basic"
    method_name: str = pydantic.Field(alias="methodName")
    signature: NonVoidFunctionSignature
    additional_files: typing.Dict[Language, Files] = pydantic.Field(alias="additionalFiles")
    basic_test_case_template: BasicTestCaseTemplate = pydantic.Field(alias="basicTestCaseTemplate")

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


from ....commons.list_type import ListType  # noqa: E402, F401, I001
from ....commons.map_type import MapType  # noqa: E402, F401, I001


class CustomFiles_Custom(UniversalBaseModel):
    value: typing.Dict[Language, Files]
    type: typing.Literal["custom"] = "custom"


CustomFiles = typing.Union[CustomFiles_Basic, CustomFiles_Custom]
update_forward_refs(CustomFiles_Basic)
