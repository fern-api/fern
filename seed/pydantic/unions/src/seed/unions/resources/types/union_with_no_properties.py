# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class UnionWithNoProperties_Foo(UniversalBaseModel):
    """
    Examples
    --------
    from seed.unions.resources import UnionWithNoProperties_Foo

    UnionWithNoProperties_Foo(
        name="example",
    )
    """

    type: typing.Literal["foo"] = "foo"
    name: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


class UnionWithNoProperties_Empty(UniversalBaseModel):
    """
    Examples
    --------
    from seed.unions.resources import UnionWithNoProperties_Foo

    UnionWithNoProperties_Foo(
        name="example",
    )
    """

    type: typing.Literal["empty"] = "empty"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


"""
from seed.unions.resources import UnionWithNoProperties_Foo

UnionWithNoProperties_Foo(
    name="example",
)
"""
UnionWithNoProperties = typing.Union[UnionWithNoProperties_Foo, UnionWithNoProperties_Empty]
