# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class UnionWithDuplicateTypes_Foo1(UniversalBaseModel):
    """
    Examples
    --------
    from seed.unions.resources import UnionWithDuplicateTypes_Foo1

    UnionWithDuplicateTypes_Foo1(
        name="example1",
    )
    """

    type: typing.Literal["foo1"] = "foo1"
    name: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


class UnionWithDuplicateTypes_Foo2(UniversalBaseModel):
    """
    Examples
    --------
    from seed.unions.resources import UnionWithDuplicateTypes_Foo1

    UnionWithDuplicateTypes_Foo1(
        name="example1",
    )
    """

    type: typing.Literal["foo2"] = "foo2"
    name: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow")  # type: ignore # Pydantic v2
    else:

        class Config:
            extra = pydantic.Extra.allow


"""
from seed.unions.resources import UnionWithDuplicateTypes_Foo1

UnionWithDuplicateTypes_Foo1(
    name="example1",
)
"""
UnionWithDuplicateTypes = typing.Union[UnionWithDuplicateTypes_Foo1, UnionWithDuplicateTypes_Foo2]
