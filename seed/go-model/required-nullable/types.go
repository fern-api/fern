// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/required-nullable/fern/internal"
)

type Foo struct {
	Bar                 *string `json:"bar,omitempty" url:"bar,omitempty"`
	NullableBar         *string `json:"nullable_bar,omitempty" url:"nullable_bar,omitempty"`
	NullableRequiredBar *string `json:"nullable_required_bar" url:"nullable_required_bar"`
	RequiredBar         string  `json:"required_bar" url:"required_bar"`

	extraProperties map[string]any
	rawJSON         json.RawMessage
}

func (f *Foo) GetBar() *string {
	if f == nil {
		return nil
	}
	return f.Bar
}

func (f *Foo) GetNullableBar() *string {
	if f == nil {
		return nil
	}
	return f.NullableBar
}

func (f *Foo) GetNullableRequiredBar() *string {
	if f == nil {
		return nil
	}
	return f.NullableRequiredBar
}

func (f *Foo) GetRequiredBar() string {
	if f == nil {
		return ""
	}
	return f.RequiredBar
}

func (f *Foo) GetExtraProperties() map[string]any {
	if f == nil {
		return nil
	}
	return f.extraProperties
}

func (f *Foo) UnmarshalJSON(
	data []byte,
) error {
	type unmarshaler Foo
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*f = Foo(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *f)
	if err != nil {
		return err
	}
	f.extraProperties = extraProperties
	f.rawJSON = json.RawMessage(data)
	return nil
}

func (f *Foo) String() string {
	if len(f.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(f.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(f); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", f)
}
