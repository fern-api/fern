// Code generated by Fern. DO NOT EDIT.

package mixedcase

import (
	fmt "fmt"
)

type Organization struct {
	Name string `json:"name" url:"name"`
}

type User struct {
	UserName        string            `json:"userName" url:"userName"`
	MetadataTags    []string          `json:"metadata_tags" url:"metadata_tags"`
	ExtraProperties map[string]string `json:"EXTRA_PROPERTIES" url:"EXTRA_PROPERTIES"`
}

type NestedUser struct {
	Name       string `json:"Name" url:"Name"`
	NestedUser *User  `json:"NestedUser" url:"NestedUser"`
}

type ResourceStatus string

const (
	ResourceStatusActive   = "ACTIVE"
	ResourceStatusInactive = "INACTIVE"
)

func NewResourceStatusFromString(s string) (ResourceStatus, error) {
	switch s {
	case "ACTIVE":
		return ResourceStatusActive, nil
	case "INACTIVE":
		return ResourceStatusInactive, nil
	}
	var t ResourceStatus
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (r ResourceStatus) Ptr() *ResourceStatus {
	return &r
}

type Resource struct {
	ResourceType string
	Status       *ResourceStatus
	User         User
	Organization Organization
}
