// Code generated by Fern. DO NOT EDIT.

package exhaustive

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/exhaustive/fern/internal"
)

type BadObjectRequestInfo struct {
	Message string `json:"message" url:"message"`

	extraProperties map[string]any
	rawJSON         json.RawMessage
}

func (b *BadObjectRequestInfo) GetMessage() string {
	if b == nil {
		return ""
	}
	return b.Message
}

func (b *BadObjectRequestInfo) GetExtraProperties() map[string]any {
	if b == nil {
		return nil
	}
	return b.extraProperties
}

func (b *BadObjectRequestInfo) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}
