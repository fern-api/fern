// Code generated by Fern. DO NOT EDIT.

package types

import (
	uuid "github.com/google/uuid"
	time "time"
)

type ObjectWithOptionalField struct {
	// This is a rather long descriptor of this single field in a more complex type. If you ask me I think this is a pretty good description for this field all things considered.
	String   *string        `json:"string,undefined" url:"string,undefined"`
	Integer  *int           `json:"integer,undefined" url:"integer,undefined"`
	Long     *int64         `json:"long,undefined" url:"long,undefined"`
	Double   *float64       `json:"double,undefined" url:"double,undefined"`
	Bool     *bool          `json:"bool,undefined" url:"bool,undefined"`
	Datetime *time.Time     `json:"datetime,undefined" url:"datetime,undefined"`
	Date     *time.Time     `json:"date,undefined" url:"date,undefined"`
	Uuid     *uuid.UUID     `json:"uuid,undefined" url:"uuid,undefined"`
	Base64   []byte         `json:"base64,undefined" url:"base64,undefined"`
	List     []string       `json:"list,undefined" url:"list,undefined"`
	Set      []string       `json:"set,undefined" url:"set,undefined"`
	Map      map[int]string `json:"map,undefined" url:"map,undefined"`
	Bigint   *string        `json:"bigint,undefined" url:"bigint,undefined"`
}

type ObjectWithRequiredField struct {
	String string `json:"string" url:"string"`
}

type ObjectWithMapOfMap struct {
	Map map[string]map[string]string `json:"map" url:"map"`
}

type NestedObjectWithOptionalField struct {
	String       *string                  `json:"string,undefined" url:"string,undefined"`
	NestedObject *ObjectWithOptionalField `json:"NestedObject,undefined" url:"NestedObject,undefined"`
}

type NestedObjectWithRequiredField struct {
	String       string                   `json:"string" url:"string"`
	NestedObject *ObjectWithOptionalField `json:"NestedObject" url:"NestedObject"`
}

type DoubleOptional struct {
	OptionalAlias *OptionalAlias `json:"optionalAlias,undefined" url:"optionalAlias,undefined"`
}

type OptionalAlias = *string
