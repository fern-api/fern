// Code generated by Fern. DO NOT EDIT.

package errors

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/errors/fern/internal"
)

type ErrorBody struct {
	Message string `json:"message" url:"message"`
	Code    int    `json:"code" url:"code"`

	extraProperties map[string]any
	rawJSON         json.RawMessage
}

func (e *ErrorBody) GetMessage() string {
	if e == nil {
		return ""
	}
	return e.Message
}

func (e *ErrorBody) GetCode() int {
	if e == nil {
		return 0
	}
	return e.Code
}

func (e *ErrorBody) GetExtraProperties() map[string]any {
	if e == nil {
		return nil
	}
	return e.extraProperties
}

func (e *ErrorBody) UnmarshalJSON(
	data []byte,
) error {
	type unmarshaler ErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*e = ErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *e)
	if err != nil {
		return err
	}
	e.extraProperties = extraProperties
	e.rawJSON = json.RawMessage(data)
	return nil
}

func (e *ErrorBody) String() string {
	if len(e.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(e.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(e); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", e)
}
