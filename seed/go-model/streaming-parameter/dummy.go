// Code generated by Fern. DO NOT EDIT.

package streaming

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/streaming-parameter/fern/internal"
)

type RegularResponse struct {
	Id   string  `json:"id" url:"id"`
	Name *string `json:"name,omitempty" url:"name,omitempty"`

	extraProperties map[string]any
	rawJSON         json.RawMessage
}

func (r *RegularResponse) GetId() string {
	if r == nil {
		return ""
	}
	return r.Id
}

func (r *RegularResponse) GetName() *string {
	if r == nil {
		return nil
	}
	return r.Name
}

func (r *RegularResponse) GetExtraProperties() map[string]any {
	if r == nil {
		return nil
	}
	return r.extraProperties
}

func (r *RegularResponse) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}

type StreamResponse struct {
	Id   string  `json:"id" url:"id"`
	Name *string `json:"name,omitempty" url:"name,omitempty"`

	extraProperties map[string]any
	rawJSON         json.RawMessage
}

func (s *StreamResponse) GetId() string {
	if s == nil {
		return ""
	}
	return s.Id
}

func (s *StreamResponse) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *StreamResponse) GetExtraProperties() map[string]any {
	if s == nil {
		return nil
	}
	return s.extraProperties
}

func (s *StreamResponse) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}
