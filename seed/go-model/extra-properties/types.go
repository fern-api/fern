// Code generated by Fern. DO NOT EDIT.

package extraproperties

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/extra-properties/fern/internal"
)

type Failure struct {
	ExtraProperties map[string]any `json:"-" url:"-"`

	status  string
	rawJSON json.RawMessage
}

func (f *Failure) GetStatus() string {
	if f == nil {
		return ""
	}
	return f.status
}

func (f *Failure) GetExtraProperties() map[string]any {
	if f == nil {
		return nil
	}
	return f.ExtraProperties
}

func (f *Failure) MarshalJSON() ([]byte, error) {
	type embed Failure
	var marshaler = struct {
		embed
		Status string `json:"status"`
	}{
		embed:  embed(*f),
		Status: "failure",
	}
	return internal.MarshalJSONWithExtraProperties(marshaler, f.ExtraProperties)
}

func (f *Failure) String() string {
	if len(f.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(f.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(f); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", f)
}
