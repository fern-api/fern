// Code generated by Fern. DO NOT EDIT.

package license

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/license/fern/internal"
)

// A simple type with just a name.
type Type struct {
	Name string `json:"name" url:"name"`

	extraProperties map[string]any
	rawJSON         json.RawMessage
}

func (t *Type) GetName() string {
	if t == nil {
		return ""
	}
	return t.Name
}

func (t *Type) GetExtraProperties() map[string]any {
	if t == nil {
		return nil
	}
	return t.extraProperties
}

func (t *Type) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}
