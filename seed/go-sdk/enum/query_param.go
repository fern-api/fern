// Code generated by Fern. DO NOT EDIT.

package enum

import (
	big "math/big"
)

var (
	sendEnumAsQueryParamRequestFieldOperand             = big.NewInt(1 << 0)
	sendEnumAsQueryParamRequestFieldMaybeOperand        = big.NewInt(1 << 1)
	sendEnumAsQueryParamRequestFieldOperandOrColor      = big.NewInt(1 << 2)
	sendEnumAsQueryParamRequestFieldMaybeOperandOrColor = big.NewInt(1 << 3)
)

type SendEnumAsQueryParamRequest struct {
	Operand             Operand         `json:"-" url:"operand"`
	MaybeOperand        *Operand        `json:"-" url:"maybeOperand,omitempty"`
	OperandOrColor      *ColorOrOperand `json:"-" url:"operandOrColor"`
	MaybeOperandOrColor *ColorOrOperand `json:"-" url:"maybeOperandOrColor,omitempty"`

	// Private bitmask of fields set to an explicit value and therefore not to be omitted
	explicitFields *big.Int `json:"-" url:"-"`
}

func (s *SendEnumAsQueryParamRequest) require(field *big.Int) {
	if s.explicitFields == nil {
		s.explicitFields = big.NewInt(0)
	}
	s.explicitFields.Or(s.explicitFields, field)
}

func (s *SendEnumAsQueryParamRequest) SetOperand(operand Operand) {
	s.Operand = operand
	s.require(sendEnumAsQueryParamRequestFieldOperand)
}

func (s *SendEnumAsQueryParamRequest) SetMaybeOperand(maybeOperand *Operand) {
	s.MaybeOperand = maybeOperand
	s.require(sendEnumAsQueryParamRequestFieldMaybeOperand)
}

func (s *SendEnumAsQueryParamRequest) SetOperandOrColor(operandOrColor *ColorOrOperand) {
	s.OperandOrColor = operandOrColor
	s.require(sendEnumAsQueryParamRequestFieldOperandOrColor)
}

func (s *SendEnumAsQueryParamRequest) SetMaybeOperandOrColor(maybeOperandOrColor *ColorOrOperand) {
	s.MaybeOperandOrColor = maybeOperandOrColor
	s.require(sendEnumAsQueryParamRequestFieldMaybeOperandOrColor)
}

var (
	sendEnumListAsQueryParamRequestFieldOperand             = big.NewInt(1 << 0)
	sendEnumListAsQueryParamRequestFieldMaybeOperand        = big.NewInt(1 << 1)
	sendEnumListAsQueryParamRequestFieldOperandOrColor      = big.NewInt(1 << 2)
	sendEnumListAsQueryParamRequestFieldMaybeOperandOrColor = big.NewInt(1 << 3)
)

type SendEnumListAsQueryParamRequest struct {
	Operand             []Operand         `json:"-" url:"operand"`
	MaybeOperand        []*Operand        `json:"-" url:"maybeOperand,omitempty"`
	OperandOrColor      []*ColorOrOperand `json:"-" url:"operandOrColor"`
	MaybeOperandOrColor []*ColorOrOperand `json:"-" url:"maybeOperandOrColor,omitempty"`

	// Private bitmask of fields set to an explicit value and therefore not to be omitted
	explicitFields *big.Int `json:"-" url:"-"`
}

func (s *SendEnumListAsQueryParamRequest) require(field *big.Int) {
	if s.explicitFields == nil {
		s.explicitFields = big.NewInt(0)
	}
	s.explicitFields.Or(s.explicitFields, field)
}

func (s *SendEnumListAsQueryParamRequest) SetOperand(operand []Operand) {
	s.Operand = operand
	s.require(sendEnumListAsQueryParamRequestFieldOperand)
}

func (s *SendEnumListAsQueryParamRequest) SetMaybeOperand(maybeOperand []*Operand) {
	s.MaybeOperand = maybeOperand
	s.require(sendEnumListAsQueryParamRequestFieldMaybeOperand)
}

func (s *SendEnumListAsQueryParamRequest) SetOperandOrColor(operandOrColor []*ColorOrOperand) {
	s.OperandOrColor = operandOrColor
	s.require(sendEnumListAsQueryParamRequestFieldOperandOrColor)
}

func (s *SendEnumListAsQueryParamRequest) SetMaybeOperandOrColor(maybeOperandOrColor []*ColorOrOperand) {
	s.MaybeOperandOrColor = maybeOperandOrColor
	s.require(sendEnumListAsQueryParamRequestFieldMaybeOperandOrColor)
}
