// Code generated by Fern. DO NOT EDIT.

package client

import (
	context "context"
	fern "github.com/mixed-file-directory/fern"
	core "github.com/mixed-file-directory/fern/core"
	option "github.com/mixed-file-directory/fern/option"
	user "github.com/mixed-file-directory/fern/user"
	metadata "github.com/mixed-file-directory/fern/user/events/metadata"
)

type Client struct {
	WithRawResponse *RawClient
	Metadata        *metadata.Client

	options *core.RequestOptions
	baseURL string
	caller  *fern.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		Metadata:        metadata.NewClient(options),
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: fern.NewCaller(
			&fern.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

// List all user events.
func (c *Client) ListEvents(
	ctx context.Context,
	request *user.ListUserEventsRequest,
	opts ...option.RequestOption,
) ([]*user.Event, error) {
	response, err := c.WithRawResponse.ListEvents(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
