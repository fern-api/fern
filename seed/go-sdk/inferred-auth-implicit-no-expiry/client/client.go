// Code generated by Fern. DO NOT EDIT.

package client

import (
	auth "github.com/inferred-auth-implicit-no-expiry/fern/auth"
	core "github.com/inferred-auth-implicit-no-expiry/fern/core"
	internal "github.com/inferred-auth-implicit-no-expiry/fern/internal"
	nestedclient "github.com/inferred-auth-implicit-no-expiry/fern/nested/client"
	client "github.com/inferred-auth-implicit-no-expiry/fern/nestednoauth/client"
	option "github.com/inferred-auth-implicit-no-expiry/fern/option"
	simple "github.com/inferred-auth-implicit-no-expiry/fern/simple"
)

type Client struct {
	Auth         *auth.Client
	NestedNoAuth *client.Client
	Nested       *nestedclient.Client
	Simple       *simple.Client

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		Auth:         auth.NewClient(options),
		NestedNoAuth: client.NewClient(options),
		Nested:       nestedclient.NewClient(options),
		Simple:       simple.NewClient(options),
		options:      options,
		baseURL:      options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}
