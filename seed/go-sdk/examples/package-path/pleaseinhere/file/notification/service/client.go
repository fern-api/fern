// Code generated by Fern. DO NOT EDIT.

package service

import (
	context "context"
	pleaseinhere "github.com/examples/fern/pleaseinhere"
	core "github.com/examples/fern/pleaseinhere/core"
	internal "github.com/examples/fern/pleaseinhere/internal"
	option "github.com/examples/fern/pleaseinhere/option"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

func (c *Client) GetException(
	ctx context.Context,
	notificationId string,
	opts ...option.RequestOption,
) (*pleaseinhere.Exception, error) {
	response, err := c.WithRawResponse.GetException(
		ctx,
		notificationId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
